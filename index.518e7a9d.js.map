{"mappings":"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","sources":["node_modules/@vue/shared/dist/shared.esm-bundler.js","node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","src/components/App.vue","src/components/Version.vue","src/components/SequenceViewer.vue","src/components/lib/sequence.js","node_modules/d3-selection/src/matcher.js","node_modules/d3-selection/src/mouse.js","node_modules/d3-selection/src/sourceEvent.js","node_modules/d3-selection/src/selection/on.js","node_modules/d3-selection/src/point.js","node_modules/d3-selection/src/namespace.js","node_modules/d3-selection/src/namespaces.js","node_modules/d3-selection/src/select.js","node_modules/d3-selection/src/selection/index.js","node_modules/d3-selection/src/selection/select.js","node_modules/d3-selection/src/selector.js","node_modules/d3-selection/src/selection/selectAll.js","node_modules/d3-selection/src/selectorAll.js","node_modules/d3-selection/src/selection/filter.js","node_modules/d3-selection/src/selection/data.js","node_modules/d3-selection/src/selection/enter.js","node_modules/d3-selection/src/selection/sparse.js","node_modules/d3-selection/src/constant.js","node_modules/d3-selection/src/selection/exit.js","node_modules/d3-selection/src/selection/join.js","node_modules/d3-selection/src/selection/merge.js","node_modules/d3-selection/src/selection/order.js","node_modules/d3-selection/src/selection/sort.js","node_modules/d3-selection/src/selection/call.js","node_modules/d3-selection/src/selection/nodes.js","node_modules/d3-selection/src/selection/node.js","node_modules/d3-selection/src/selection/size.js","node_modules/d3-selection/src/selection/empty.js","node_modules/d3-selection/src/selection/each.js","node_modules/d3-selection/src/selection/attr.js","node_modules/d3-selection/src/selection/style.js","node_modules/d3-selection/src/window.js","node_modules/d3-selection/src/selection/property.js","node_modules/d3-selection/src/selection/classed.js","node_modules/d3-selection/src/selection/text.js","node_modules/d3-selection/src/selection/html.js","node_modules/d3-selection/src/selection/raise.js","node_modules/d3-selection/src/selection/lower.js","node_modules/d3-selection/src/selection/append.js","node_modules/d3-selection/src/creator.js","node_modules/d3-selection/src/selection/insert.js","node_modules/d3-selection/src/selection/remove.js","node_modules/d3-selection/src/selection/clone.js","node_modules/d3-selection/src/selection/datum.js","node_modules/d3-selection/src/selection/dispatch.js","node_modules/d3-selection/src/touch.js","node_modules/d3-force/src/center.js","node_modules/d3-force/src/constant.js","node_modules/d3-force/src/jiggle.js","node_modules/d3-quadtree/src/quadtree.js","node_modules/d3-quadtree/src/add.js","node_modules/d3-quadtree/src/cover.js","node_modules/d3-quadtree/src/data.js","node_modules/d3-quadtree/src/extent.js","node_modules/d3-quadtree/src/find.js","node_modules/d3-quadtree/src/quad.js","node_modules/d3-quadtree/src/remove.js","node_modules/d3-quadtree/src/root.js","node_modules/d3-quadtree/src/size.js","node_modules/d3-quadtree/src/visit.js","node_modules/d3-quadtree/src/visitAfter.js","node_modules/d3-quadtree/src/x.js","node_modules/d3-quadtree/src/y.js","node_modules/d3-force/src/link.js","node_modules/d3-collection/src/map.js","node_modules/d3-collection/src/set.js","node_modules/d3-force/src/manyBody.js","node_modules/d3-force/src/simulation.js","node_modules/d3-dispatch/src/dispatch.js","node_modules/d3-timer/src/timer.js","node_modules/d3-timer/src/timeout.js","node_modules/d3-force/src/x.js","node_modules/d3-force/src/y.js","node_modules/d3-drag/src/drag.js","node_modules/d3-drag/src/nodrag.js","node_modules/d3-drag/src/noevent.js","node_modules/d3-drag/src/constant.js","node_modules/d3-drag/src/event.js","node_modules/lodash/lodash.js","src/components/results/Milton.vue","src/components/lib/scatter.js","node_modules/d3-array/src/bisect.js","node_modules/d3-array/src/ascending.js","node_modules/d3-array/src/bisector.js","node_modules/d3-array/src/pairs.js","node_modules/d3-array/src/deviation.js","node_modules/d3-array/src/variance.js","node_modules/d3-array/src/number.js","node_modules/d3-array/src/extent.js","node_modules/d3-array/src/array.js","node_modules/d3-array/src/constant.js","node_modules/d3-array/src/identity.js","node_modules/d3-array/src/range.js","node_modules/d3-array/src/ticks.js","node_modules/d3-array/src/threshold/sturges.js","node_modules/d3-array/src/quantile.js","node_modules/d3-array/src/max.js","node_modules/d3-array/src/min.js","node_modules/d3-array/src/transpose.js","node_modules/d3-scale/src/init.js","node_modules/d3-scale/src/ordinal.js","node_modules/d3-scale/src/array.js","node_modules/d3-scale/src/linear.js","node_modules/d3-scale/src/continuous.js","node_modules/d3-interpolate/src/value.js","node_modules/d3-color/src/color.js","node_modules/d3-color/src/define.js","node_modules/d3-interpolate/src/rgb.js","node_modules/d3-interpolate/src/basis.js","node_modules/d3-interpolate/src/basisClosed.js","node_modules/d3-interpolate/src/color.js","node_modules/d3-interpolate/src/constant.js","node_modules/d3-interpolate/src/array.js","node_modules/d3-interpolate/src/numberArray.js","node_modules/d3-interpolate/src/date.js","node_modules/d3-interpolate/src/number.js","node_modules/d3-interpolate/src/object.js","node_modules/d3-interpolate/src/string.js","node_modules/d3-interpolate/src/round.js","node_modules/d3-interpolate/src/transform/index.js","node_modules/d3-interpolate/src/transform/parse.js","node_modules/d3-interpolate/src/transform/decompose.js","node_modules/d3-scale/src/constant.js","node_modules/d3-scale/src/number.js","node_modules/d3-scale/src/tickFormat.js","node_modules/d3-format/src/defaultLocale.js","node_modules/d3-format/src/locale.js","node_modules/d3-format/src/exponent.js","node_modules/d3-format/src/formatDecimal.js","node_modules/d3-format/src/formatGroup.js","node_modules/d3-format/src/formatNumerals.js","node_modules/d3-format/src/formatSpecifier.js","node_modules/d3-format/src/formatTrim.js","node_modules/d3-format/src/formatTypes.js","node_modules/d3-format/src/formatPrefixAuto.js","node_modules/d3-format/src/formatRounded.js","node_modules/d3-format/src/identity.js","node_modules/d3-format/src/precisionFixed.js","node_modules/d3-format/src/precisionPrefix.js","node_modules/d3-format/src/precisionRound.js","node_modules/d3-scale/src/log.js","node_modules/d3-scale/src/nice.js","node_modules/d3-scale/src/symlog.js","node_modules/d3-scale/src/pow.js","node_modules/d3-scale/src/time.js","node_modules/d3-time/src/millisecond.js","node_modules/d3-time/src/interval.js","node_modules/d3-time/src/second.js","node_modules/d3-time/src/duration.js","node_modules/d3-time/src/minute.js","node_modules/d3-time/src/hour.js","node_modules/d3-time/src/day.js","node_modules/d3-time/src/week.js","node_modules/d3-time/src/month.js","node_modules/d3-time/src/year.js","node_modules/d3-time/src/utcMinute.js","node_modules/d3-time/src/utcHour.js","node_modules/d3-time/src/utcDay.js","node_modules/d3-time/src/utcWeek.js","node_modules/d3-time/src/utcMonth.js","node_modules/d3-time/src/utcYear.js","node_modules/d3-time-format/src/defaultLocale.js","node_modules/d3-time-format/src/locale.js","node_modules/d3-scale/src/sequential.js","node_modules/d3-axis/src/axis.js","node_modules/d3-axis/src/array.js","node_modules/d3-axis/src/identity.js","node_modules/d3-shape/src/area.js","node_modules/d3-path/src/path.js","node_modules/d3-shape/src/constant.js","node_modules/d3-shape/src/curve/linear.js","node_modules/d3-shape/src/line.js","node_modules/d3-shape/src/point.js","node_modules/d3-transition/src/selection/index.js","node_modules/d3-transition/src/selection/interrupt.js","node_modules/d3-transition/src/interrupt.js","node_modules/d3-transition/src/transition/schedule.js","node_modules/d3-transition/src/selection/transition.js","node_modules/d3-transition/src/transition/index.js","node_modules/d3-transition/src/transition/attr.js","node_modules/d3-transition/src/transition/tween.js","node_modules/d3-transition/src/transition/interpolate.js","node_modules/d3-transition/src/transition/attrTween.js","node_modules/d3-transition/src/transition/delay.js","node_modules/d3-transition/src/transition/duration.js","node_modules/d3-transition/src/transition/ease.js","node_modules/d3-transition/src/transition/filter.js","node_modules/d3-transition/src/transition/merge.js","node_modules/d3-transition/src/transition/on.js","node_modules/d3-transition/src/transition/remove.js","node_modules/d3-transition/src/transition/select.js","node_modules/d3-transition/src/transition/selectAll.js","node_modules/d3-transition/src/transition/selection.js","node_modules/d3-transition/src/transition/style.js","node_modules/d3-transition/src/transition/styleTween.js","node_modules/d3-transition/src/transition/text.js","node_modules/d3-transition/src/transition/textTween.js","node_modules/d3-transition/src/transition/transition.js","node_modules/d3-transition/src/transition/end.js","node_modules/d3-ease/src/cubic.js","src/components/lib/milton.json","src/components/SequenceInput.vue","src/components/results/TfPrediction.vue","src/components/results/TfResult.vue","src/components/lib/rnn.js","../tfjs-core/src/io/browser_files.ts","../tfjs-core/src/environment.ts","../tfjs-core/src/util_base.ts","../tfjs-core/src/io/io_utils.ts","../tfjs-core/src/ops/complex.ts","../tfjs-core/src/engine.ts","../tfjs-core/src/backends/backend.ts","../tfjs-core/src/global_util.ts","node_modules/process/browser.js","../tfjs-core/src/kernel_names.ts","../tfjs-core/src/kernel_registry.ts","../tfjs-core/src/log.ts","../tfjs-core/src/profiler.ts","../tfjs-core/src/util.ts","../tfjs-core/src/hash_util.ts","node_modules/long/src/long.js","../tfjs-core/src/tape.ts","../tfjs-core/src/tensor.ts","../tfjs-core/src/tensor_format.ts","../tfjs-core/src/tensor_util.ts","../tfjs-core/src/types.ts","../tfjs-core/src/tensor_util_env.ts","../tfjs-core/src/ops/operation.ts","../tfjs-core/src/ops/tensor.ts","../tfjs-core/src/ops/tensor_ops_util.ts","../tfjs-core/src/io/types.ts","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","../tfjs-core/src/io/router_registry.ts","../tfjs-core/src/io/http.ts","../tfjs-core/src/io/weights_loader.ts","../tfjs-core/src/io/progress.ts","../tfjs-core/src/io/passthrough.ts","../tfjs-core/src/io/model_management.ts","../tfjs-core/src/serialization.ts","../tfjs-core/src/optimizers/optimizer.ts","../tfjs-core/src/globals.ts","../tfjs-core/src/gradients.ts","../tfjs-core/src/ops/ops.ts","../tfjs-core/src/ops/abs.ts","../tfjs-core/src/ops/add.ts","../tfjs-core/src/ops/all.ts","../tfjs-core/src/ops/any.ts","../tfjs-core/src/ops/arg_max.ts","../tfjs-core/src/ops/avg_pool.ts","../tfjs-core/src/ops/cast.ts","../tfjs-core/src/ops/conv_util.ts","../tfjs-core/src/ops/reshape.ts","../tfjs-core/src/ops/avg_pool_3d.ts","../tfjs-core/src/ops/batchnorm2d.ts","../tfjs-core/src/ops/batchnorm.ts","../tfjs-core/src/ops/batchnorm_util.ts","../tfjs-core/src/ops/batchnorm3d.ts","../tfjs-core/src/ops/batchnorm4d.ts","../tfjs-core/src/ops/clip_by_value.ts","../tfjs-core/src/ops/clone.ts","../tfjs-core/src/ops/concat.ts","../tfjs-core/src/ops/concat_1d.ts","../tfjs-core/src/ops/concat_2d.ts","../tfjs-core/src/ops/concat_3d.ts","../tfjs-core/src/ops/concat_4d.ts","../tfjs-core/src/ops/conv1d.ts","../tfjs-core/src/ops/conv2d.ts","../tfjs-core/src/ops/conv2d_transpose.ts","../tfjs-core/src/ops/conv2d_backprop_input.ts","../tfjs-core/src/ops/conv3d.ts","../tfjs-core/src/ops/conv3d_transpose.ts","../tfjs-core/src/ops/conv3d_backprop_input.ts","../tfjs-core/src/ops/depthwise_conv2d.ts","../tfjs-core/src/ops/div.ts","../tfjs-core/src/ops/floorDiv.ts","../tfjs-core/src/ops/elu.ts","../tfjs-core/src/ops/equal.ts","../tfjs-core/src/ops/broadcast_util.ts","../tfjs-core/src/ops/exp.ts","../tfjs-core/src/ops/expand_dims.ts","../tfjs-core/src/ops/eye.ts","../tfjs-core/src/ops/buffer.ts","../tfjs-core/src/ops/tile.ts","../tfjs-core/src/ops/fill.ts","../tfjs-core/src/ops/floor.ts","../tfjs-core/src/ops/gather.ts","../tfjs-core/src/ops/greater.ts","../tfjs-core/src/ops/greater_equal.ts","../tfjs-core/src/ops/leaky_relu.ts","../tfjs-core/src/ops/log.ts","../tfjs-core/src/ops/log1p.ts","../tfjs-core/src/ops/log_softmax.ts","../tfjs-core/src/ops/max.ts","../tfjs-core/src/ops/mul.ts","../tfjs-core/src/ops/sub.ts","../tfjs-core/src/ops/sum.ts","../tfjs-core/src/ops/logical_and.ts","../tfjs-core/src/ops/mat_mul.ts","../tfjs-core/src/ops/max_pool.ts","../tfjs-core/src/ops/max_pool_3d.ts","../tfjs-core/src/ops/maximum.ts","../tfjs-core/src/ops/mean.ts","../tfjs-core/src/ops/minimum.ts","../tfjs-core/src/ops/moments.ts","../tfjs-core/src/ops/axis_util.ts","../tfjs-core/src/ops/square.ts","../tfjs-core/src/ops/multinomial.ts","../tfjs-core/src/ops/neg.ts","../tfjs-core/src/ops/not_equal.ts","../tfjs-core/src/ops/one_hot.ts","../tfjs-core/src/ops/ones.ts","../tfjs-core/src/ops/zeros.ts","../tfjs-core/src/ops/ones_like.ts","../tfjs-core/src/ops/pad.ts","../tfjs-core/src/ops/pow.ts","../tfjs-core/src/ops/prelu.ts","../tfjs-core/src/ops/random_normal.ts","../tfjs-core/src/ops/rand_util.ts","node_modules/seedrandom/index.js","node_modules/seedrandom/lib/alea.js","node_modules/seedrandom/lib/xor128.js","node_modules/seedrandom/lib/xorwow.js","node_modules/seedrandom/lib/xorshift7.js","node_modules/seedrandom/lib/xor4096.js","node_modules/seedrandom/lib/tychei.js","node_modules/seedrandom/seedrandom.js","../tfjs-core/src/test_util.ts","../tfjs-core/src/ops/random_uniform.ts","../tfjs-core/src/ops/relu.ts","../tfjs-core/src/ops/reverse.ts","../tfjs-core/src/ops/scalar.ts","../tfjs-core/src/ops/selu.ts","../tfjs-core/src/ops/separable_conv2d.ts","../tfjs-core/src/ops/sigmoid.ts","../tfjs-core/src/ops/slice.ts","../tfjs-core/src/ops/slice1d.ts","../tfjs-core/src/ops/slice2d.ts","../tfjs-core/src/ops/slice3d.ts","../tfjs-core/src/ops/slice4d.ts","../tfjs-core/src/ops/softmax.ts","../tfjs-core/src/ops/softplus.ts","../tfjs-core/src/ops/spectral/fft.ts","../tfjs-core/src/ops/spectral/ifft.ts","../tfjs-core/src/ops/spectral/irfft.ts","../tfjs-core/src/ops/imag.ts","../tfjs-core/src/ops/real.ts","../tfjs-core/src/ops/spectral/rfft.ts","../tfjs-core/src/ops/split.ts","../tfjs-core/src/ops/zeros_like.ts","../tfjs-core/src/ops/sqrt.ts","../tfjs-core/src/ops/squeeze.ts","../tfjs-core/src/ops/stack.ts","../tfjs-core/src/ops/tanh.ts","../tfjs-core/src/ops/tensor1d.ts","../tfjs-core/src/ops/truncated_normal.ts","../tfjs-core/src/ops/unstack.ts","../tfjs-core/src/ops/variable.ts","../tfjs-core/src/ops/where.ts","../tfjs-core/src/ops/broadcast_to.ts","../tfjs-core/src/ops/transpose.ts","../tfjs-core/src/ops/dropout.ts","../tfjs-core/src/ops/dropout_util.ts","../tfjs-core/src/ops/fused/conv2d.ts","../tfjs-core/src/ops/conv2d_backprop_filter.ts","../tfjs-core/src/ops/fused_util.ts","../tfjs-core/src/ops/relu6.ts","../tfjs-core/src/ops/step.ts","../tfjs-core/src/ops/fused/depthwise_conv2d.ts","../tfjs-core/src/ops/depthwise_conv2d_native_backprop_filter.ts","../tfjs-core/src/ops/depthwise_conv2d_native_backprop_input.ts","../tfjs-core/src/ops/fused/mat_mul.ts","../tfjs-core/src/ops/signal/hamming_window.ts","../tfjs-core/src/ops/signal_ops_util.ts","../tfjs-core/src/ops/signal/hann_window.ts","../tfjs-core/src/ops/signal/frame.ts","../tfjs-core/src/ops/tensor2d.ts","../tfjs-core/src/ops/signal/stft.ts","../tfjs-core/src/ops/image/crop_and_resize.ts","../tfjs-core/src/ops/image/flip_left_right.ts","../tfjs-core/src/ops/image/grayscale_to_rgb.ts","../tfjs-core/src/ops/image/rotate_with_offset.ts","../tfjs-core/src/ops/image/non_max_suppression.ts","../tfjs-core/src/ops/nonmax_util.ts","../tfjs-core/src/ops/image/non_max_suppression_async.ts","../tfjs-core/src/backends/non_max_suppression_impl.ts","../tfjs-core/src/backends/non_max_suppression_util.ts","../tfjs-core/src/ops/image/non_max_suppression_with_score.ts","../tfjs-core/src/ops/image/non_max_suppression_with_score_async.ts","../tfjs-core/src/ops/image/non_max_suppression_padded.ts","../tfjs-core/src/ops/image/non_max_suppression_padded_async.ts","../tfjs-core/src/ops/image/resize_bilinear.ts","../tfjs-core/src/ops/image/resize_nearest_neighbor.ts","../tfjs-core/src/ops/image/threshold.ts","../tfjs-core/src/ops/bincount.ts","../tfjs-core/src/ops/less_equal.ts","../tfjs-core/src/ops/round.ts","../tfjs-core/src/ops/range.ts","../tfjs-core/src/ops/image/transform.ts","../tfjs-core/src/ops/linalg/band_part.ts","../tfjs-core/src/ops/linalg/gram_schmidt.ts","../tfjs-core/src/ops/norm.ts","../tfjs-core/src/ops/min.ts","../tfjs-core/src/ops/linalg/qr.ts","../tfjs-core/src/ops/losses/absolute_difference.ts","../tfjs-core/src/ops/loss_ops_utils.ts","../tfjs-core/src/ops/losses/compute_weighted_loss.ts","../tfjs-core/src/ops/losses/cosine_distance.ts","../tfjs-core/src/ops/losses/hinge_loss.ts","../tfjs-core/src/ops/losses/huber_loss.ts","../tfjs-core/src/ops/losses/log_loss.ts","../tfjs-core/src/ops/losses/mean_squared_error.ts","../tfjs-core/src/ops/squared_difference.ts","../tfjs-core/src/ops/losses/sigmoid_cross_entropy.ts","../tfjs-core/src/ops/losses/softmax_cross_entropy.ts","../tfjs-core/src/ops/log_sum_exp.ts","../tfjs-core/src/ops/sparse/sparse_fill_empty_rows.ts","../tfjs-core/src/ops/sparse/sparse_reshape.ts","../tfjs-core/src/ops/sparse/sparse_segment_mean.ts","../tfjs-core/src/ops/sparse/sparse_segment_sum.ts","../tfjs-core/src/ops/string/string_n_grams.ts","../tfjs-core/src/ops/string/string_split.ts","../tfjs-core/src/ops/string/string_to_hash_bucket_fast.ts","../tfjs-core/src/train.ts","../tfjs-core/src/optimizers/optimizer_constructors.ts","../tfjs-core/src/optimizers/adadelta_optimizer.ts","../tfjs-core/src/optimizers/adagrad_optimizer.ts","../tfjs-core/src/optimizers/adam_optimizer.ts","../tfjs-core/src/optimizers/adamax_optimizer.ts","../tfjs-core/src/optimizers/momentum_optimizer.ts","../tfjs-core/src/optimizers/sgd_optimizer.ts","../tfjs-core/src/optimizers/rmsprop_optimizer.ts","../tfjs-core/src/browser_util.ts","../tfjs-layers/src/constraints.ts","../tfjs-layers/src/backend/common.ts","../tfjs-layers/src/utils/generic_utils.ts","../tfjs-layers/src/errors.ts","../tfjs-layers/src/initializers.ts","../tfjs-layers/src/backend/tfjs_backend.ts","../tfjs-layers/src/common.ts","../tfjs-layers/src/keras_format/common.ts","../tfjs-layers/src/utils/math_utils.ts","../tfjs-layers/src/keras_format/initializer_config.ts","../tfjs-layers/src/engine/input_layer.ts","../tfjs-layers/src/backend/state.ts","../tfjs-layers/src/engine/topology.ts","../tfjs-layers/src/utils/types_utils.ts","../tfjs-layers/src/utils/variable_utils.ts","../tfjs-layers/src/variables.ts","../tfjs-layers/src/exports.ts","../tfjs-layers/src/base_callbacks.ts","../tfjs-layers/src/logs.ts","../tfjs-layers/src/engine/training.ts","../tfjs-layers/src/layers/serialization.ts","../tfjs-layers/src/losses.ts","../tfjs-layers/src/metrics.ts","../tfjs-layers/src/optimizers.ts","../tfjs-layers/src/user_defined_metadata.ts","../tfjs-layers/src/utils/layer_utils.ts","../tfjs-layers/src/utils/serialization_utils.ts","../tfjs-layers/src/version.ts","../tfjs-layers/src/engine/container.ts","../tfjs-layers/src/engine/executor.ts","../tfjs-layers/src/engine/training_dataset.ts","../tfjs-layers/src/engine/training_utils.ts","../tfjs-layers/src/engine/training_tensors.ts","../tfjs-layers/src/models.ts","../tfjs-layers/src/layers/advanced_activations.ts","../tfjs-layers/src/activations.ts","../tfjs-layers/src/regularizers.ts","../tfjs-layers/src/layers/convolutional.ts","../tfjs-layers/src/utils/conv_utils.ts","../tfjs-layers/src/layers/convolutional_depthwise.ts","../tfjs-layers/src/layers/convolutional_recurrent.ts","../tfjs-layers/src/layers/recurrent.ts","../tfjs-layers/src/layers/core.ts","../tfjs-layers/src/layers/embeddings.ts","../tfjs-layers/src/layers/merge.ts","../tfjs-layers/src/layers/noise.ts","../tfjs-layers/src/layers/normalization.ts","../tfjs-layers/src/layers/padding.ts","../tfjs-layers/src/layers/pooling.ts","../tfjs-layers/src/layers/wrappers.ts","../tfjs-layers/src/callbacks.ts","src/components/results/ModelCard.vue","src/components/Reference.vue","package.json","src/app.js"],"sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    // Split the content into individual lines but capture the newline sequence\r\n    // that separated each line. This is important because the actual sequence is\r\n    // needed to properly take into account the full line length for offset\r\n    // comparison\r\n    let lines = source.split(/(\\r?\\n)/);\r\n    // Separate the lines and newline sequences into separate arrays for easier referencing\r\n    const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\r\n    lines = lines.filter((_, idx) => idx % 2 === 0);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count +=\r\n            lines[i].length +\r\n                ((newlineSequences[i] && newlineSequences[i].length) || 0);\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                const newLineSeqLength = (newlineSequences[j] && newlineSequences[j].length) || 0;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - (lineLength + newLineSeqLength));\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + newLineSeqLength;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\n/**\r\n * Boolean attributes should be included if the value is truthy or ''.\r\n * e.g. <select multiple> compiles to { multiple: '' }\r\n */\r\nfunction includeBooleanAttr(value) {\r\n    return !!value || value === '';\r\n}\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownHtmlAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\r\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\r\nconst isKnownSvgAttr = /*#__PURE__*/ makeMap(`xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\r\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\r\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\r\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\r\n    `color-interpolation-filters,color-profile,color-rendering,` +\r\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\r\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\r\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\r\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\r\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\r\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\r\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\r\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\r\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\r\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\r\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\r\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\r\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\r\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\r\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\r\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\r\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\r\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\r\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\r\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\r\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\r\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\r\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\r\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\r\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\r\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\r\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\r\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\r\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\r\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\r\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\r\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\r\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = isString(item)\r\n                ? parseStringStyle(item)\r\n                : normalizeStyle(item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isString(value)) {\r\n        return value;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles || isString(styles)) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\r\nfunction normalizeProps(props) {\r\n    if (!props)\r\n        return null;\r\n    let { class: klass, style } = props;\r\n    if (klass && !isString(klass)) {\r\n        props.class = normalizeClass(klass);\r\n    }\r\n    if (style) {\r\n        props.style = normalizeStyle(style);\r\n    }\r\n    return props;\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.slice(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isArray(val) ||\r\n            (isObject(val) &&\r\n                (val.toString === objectToString || !isFunction(val.toString)))\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    // can't use isRef here since @vue/shared has no deps\r\n    if (val && val.__v_isRef) {\r\n        return replacer(_key, val.value);\r\n    }\r\n    else if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => str ? `on${capitalize(str)}` : ``);\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, includeBooleanAttr, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownHtmlAttr, isKnownSvgAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeProps, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","import { extend, isArray, isMap, isIntegerKey, isSymbol, hasOwn, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nfunction warn(msg, ...args) {\r\n    console.warn(`[Vue warn] ${msg}`, ...args);\r\n}\n\nlet activeEffectScope;\r\nconst effectScopeStack = [];\r\nclass EffectScope {\r\n    constructor(detached = false) {\r\n        this.active = true;\r\n        this.effects = [];\r\n        this.cleanups = [];\r\n        if (!detached && activeEffectScope) {\r\n            this.parent = activeEffectScope;\r\n            this.index =\r\n                (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(this) - 1;\r\n        }\r\n    }\r\n    run(fn) {\r\n        if (this.active) {\r\n            try {\r\n                this.on();\r\n                return fn();\r\n            }\r\n            finally {\r\n                this.off();\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`cannot run an inactive effect scope.`);\r\n        }\r\n    }\r\n    on() {\r\n        if (this.active) {\r\n            effectScopeStack.push(this);\r\n            activeEffectScope = this;\r\n        }\r\n    }\r\n    off() {\r\n        if (this.active) {\r\n            effectScopeStack.pop();\r\n            activeEffectScope = effectScopeStack[effectScopeStack.length - 1];\r\n        }\r\n    }\r\n    stop(fromParent) {\r\n        if (this.active) {\r\n            this.effects.forEach(e => e.stop());\r\n            this.cleanups.forEach(cleanup => cleanup());\r\n            if (this.scopes) {\r\n                this.scopes.forEach(e => e.stop(true));\r\n            }\r\n            // nested scope, dereference from parent to avoid memory leaks\r\n            if (this.parent && !fromParent) {\r\n                // optimized O(1) removal\r\n                const last = this.parent.scopes.pop();\r\n                if (last && last !== this) {\r\n                    this.parent.scopes[this.index] = last;\r\n                    last.index = this.index;\r\n                }\r\n            }\r\n            this.active = false;\r\n        }\r\n    }\r\n}\r\nfunction effectScope(detached) {\r\n    return new EffectScope(detached);\r\n}\r\nfunction recordEffectScope(effect, scope) {\r\n    scope = scope || activeEffectScope;\r\n    if (scope && scope.active) {\r\n        scope.effects.push(effect);\r\n    }\r\n}\r\nfunction getCurrentScope() {\r\n    return activeEffectScope;\r\n}\r\nfunction onScopeDispose(fn) {\r\n    if (activeEffectScope) {\r\n        activeEffectScope.cleanups.push(fn);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`onScopeDispose() is called when there is no active effect scope` +\r\n            ` to be associated with.`);\r\n    }\r\n}\n\nconst createDep = (effects) => {\r\n    const dep = new Set(effects);\r\n    dep.w = 0;\r\n    dep.n = 0;\r\n    return dep;\r\n};\r\nconst wasTracked = (dep) => (dep.w & trackOpBit) > 0;\r\nconst newTracked = (dep) => (dep.n & trackOpBit) > 0;\r\nconst initDepMarkers = ({ deps }) => {\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].w |= trackOpBit; // set was tracked\r\n        }\r\n    }\r\n};\r\nconst finalizeDepMarkers = (effect) => {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        let ptr = 0;\r\n        for (let i = 0; i < deps.length; i++) {\r\n            const dep = deps[i];\r\n            if (wasTracked(dep) && !newTracked(dep)) {\r\n                dep.delete(effect);\r\n            }\r\n            else {\r\n                deps[ptr++] = dep;\r\n            }\r\n            // clear bits\r\n            dep.w &= ~trackOpBit;\r\n            dep.n &= ~trackOpBit;\r\n        }\r\n        deps.length = ptr;\r\n    }\r\n};\n\nconst targetMap = new WeakMap();\r\n// The number of effects currently being tracked recursively.\r\nlet effectTrackDepth = 0;\r\nlet trackOpBit = 1;\r\n/**\r\n * The bitwise track markers support at most 30 levels of recursion.\r\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\r\n * When recursion depth is greater, fall back to using a full cleanup.\r\n */\r\nconst maxMarkerBits = 30;\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nclass ReactiveEffect {\r\n    constructor(fn, scheduler = null, scope) {\r\n        this.fn = fn;\r\n        this.scheduler = scheduler;\r\n        this.active = true;\r\n        this.deps = [];\r\n        recordEffectScope(this, scope);\r\n    }\r\n    run() {\r\n        if (!this.active) {\r\n            return this.fn();\r\n        }\r\n        if (!effectStack.includes(this)) {\r\n            try {\r\n                effectStack.push((activeEffect = this));\r\n                enableTracking();\r\n                trackOpBit = 1 << ++effectTrackDepth;\r\n                if (effectTrackDepth <= maxMarkerBits) {\r\n                    initDepMarkers(this);\r\n                }\r\n                else {\r\n                    cleanupEffect(this);\r\n                }\r\n                return this.fn();\r\n            }\r\n            finally {\r\n                if (effectTrackDepth <= maxMarkerBits) {\r\n                    finalizeDepMarkers(this);\r\n                }\r\n                trackOpBit = 1 << --effectTrackDepth;\r\n                resetTracking();\r\n                effectStack.pop();\r\n                const n = effectStack.length;\r\n                activeEffect = n > 0 ? effectStack[n - 1] : undefined;\r\n            }\r\n        }\r\n    }\r\n    stop() {\r\n        if (this.active) {\r\n            cleanupEffect(this);\r\n            if (this.onStop) {\r\n                this.onStop();\r\n            }\r\n            this.active = false;\r\n        }\r\n    }\r\n}\r\nfunction cleanupEffect(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nfunction effect(fn, options) {\r\n    if (fn.effect) {\r\n        fn = fn.effect.fn;\r\n    }\r\n    const _effect = new ReactiveEffect(fn);\r\n    if (options) {\r\n        extend(_effect, options);\r\n        if (options.scope)\r\n            recordEffectScope(_effect, options.scope);\r\n    }\r\n    if (!options || !options.lazy) {\r\n        _effect.run();\r\n    }\r\n    const runner = _effect.run.bind(_effect);\r\n    runner.effect = _effect;\r\n    return runner;\r\n}\r\nfunction stop(runner) {\r\n    runner.effect.stop();\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!isTracking()) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = createDep()));\r\n    }\r\n    const eventInfo = (process.env.NODE_ENV !== 'production')\r\n        ? { effect: activeEffect, target, type, key }\r\n        : undefined;\r\n    trackEffects(dep, eventInfo);\r\n}\r\nfunction isTracking() {\r\n    return shouldTrack && activeEffect !== undefined;\r\n}\r\nfunction trackEffects(dep, debuggerEventExtraInfo) {\r\n    let shouldTrack = false;\r\n    if (effectTrackDepth <= maxMarkerBits) {\r\n        if (!newTracked(dep)) {\r\n            dep.n |= trackOpBit; // set newly tracked\r\n            shouldTrack = !wasTracked(dep);\r\n        }\r\n    }\r\n    else {\r\n        // Full cleanup mode.\r\n        shouldTrack = !dep.has(activeEffect);\r\n    }\r\n    if (shouldTrack) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.onTrack) {\r\n            activeEffect.onTrack(Object.assign({\r\n                effect: activeEffect\r\n            }, debuggerEventExtraInfo));\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    let deps = [];\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        deps = [...depsMap.values()];\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                deps.push(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            deps.push(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    deps.push(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const eventInfo = (process.env.NODE_ENV !== 'production')\r\n        ? { target, type, key, newValue, oldValue, oldTarget }\r\n        : undefined;\r\n    if (deps.length === 1) {\r\n        if (deps[0]) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                triggerEffects(deps[0], eventInfo);\r\n            }\r\n            else {\r\n                triggerEffects(deps[0]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const effects = [];\r\n        for (const dep of deps) {\r\n            if (dep) {\r\n                effects.push(...dep);\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            triggerEffects(createDep(effects), eventInfo);\r\n        }\r\n        else {\r\n            triggerEffects(createDep(effects));\r\n        }\r\n    }\r\n}\r\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\r\n    // spread into array for stabilization\r\n    for (const effect of isArray(dep) ? dep : [...dep]) {\r\n        if (effect !== activeEffect || effect.allowRecurse) {\r\n            if ((process.env.NODE_ENV !== 'production') && effect.onTrigger) {\r\n                effect.onTrigger(extend({ effect }, debuggerEventExtraInfo));\r\n            }\r\n            if (effect.scheduler) {\r\n                effect.scheduler();\r\n            }\r\n            else {\r\n                effect.run();\r\n            }\r\n        }\r\n    }\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations();\r\nfunction createArrayInstrumentations() {\r\n    const instrumentations = {};\r\n    ['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            const arr = toRaw(this);\r\n            for (let i = 0, l = this.length; i < l; i++) {\r\n                track(arr, \"get\" /* GET */, i + '');\r\n            }\r\n            // we run the method using the original args first (which may be reactive)\r\n            const res = arr[key](...args);\r\n            if (res === -1 || res === false) {\r\n                // if that didn't work, run it again using raw values.\r\n                return arr[key](...args.map(toRaw));\r\n            }\r\n            else {\r\n                return res;\r\n            }\r\n        };\r\n    });\r\n    ['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            pauseTracking();\r\n            const res = toRaw(this)[key].apply(this, args);\r\n            resetTracking();\r\n            return res;\r\n        };\r\n    });\r\n    return instrumentations;\r\n}\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver ===\r\n                (isReadonly\r\n                    ? shallow\r\n                        ? shallowReadonlyMap\r\n                        : readonlyMap\r\n                    : shallow\r\n                        ? shallowReactiveMap\r\n                        : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        let oldValue = target[key];\r\n        if (!shallow && !isReadonly(value)) {\r\n            value = toRaw(value);\r\n            oldValue = toRaw(oldValue);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = /*#__PURE__*/ extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = /*#__PURE__*/ extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n    else if (target !== rawTarget) {\r\n        // #3602 readonly(reactive(Map))\r\n        // ensure that the nested reactive `Map` can do tracking for itself\r\n        target.get(key);\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nfunction createInstrumentations() {\r\n    const mutableInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, false)\r\n    };\r\n    const shallowInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, false, true);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, true)\r\n    };\r\n    const readonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* ADD */),\r\n        set: createReadonlyMethod(\"set\" /* SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n        forEach: createForEach(true, false)\r\n    };\r\n    const shallowReadonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* ADD */),\r\n        set: createReadonlyMethod(\"set\" /* SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n        forEach: createForEach(true, true)\r\n    };\r\n    const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\n    iteratorMethods.forEach(method => {\r\n        mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n        readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n        shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n        shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\r\n    });\r\n    return [\r\n        mutableInstrumentations,\r\n        readonlyInstrumentations,\r\n        shallowInstrumentations,\r\n        shallowReadonlyInstrumentations\r\n    ];\r\n}\r\nconst [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* #__PURE__*/ createInstrumentations();\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? isReadonly\r\n            ? shallowReadonlyInstrumentations\r\n            : shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, false)\r\n};\r\nconst shallowReadonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst shallowReactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nconst shallowReadonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    const raw = observed && observed[\"__v_raw\" /* RAW */];\r\n    return raw ? toRaw(raw) : observed;\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\r\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref) {\r\n    if (isTracking()) {\r\n        ref = toRaw(ref);\r\n        if (!ref.dep) {\r\n            ref.dep = createDep();\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            trackEffects(ref.dep, {\r\n                target: ref,\r\n                type: \"get\" /* GET */,\r\n                key: 'value'\r\n            });\r\n        }\r\n        else {\r\n            trackEffects(ref.dep);\r\n        }\r\n    }\r\n}\r\nfunction triggerRefValue(ref, newVal) {\r\n    ref = toRaw(ref);\r\n    if (ref.dep) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            triggerEffects(ref.dep, {\r\n                target: ref,\r\n                type: \"set\" /* SET */,\r\n                key: 'value',\r\n                newValue: newVal\r\n            });\r\n        }\r\n        else {\r\n            triggerEffects(ref.dep);\r\n        }\r\n    }\r\n}\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value, false);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nfunction createRef(rawValue, shallow) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nclass RefImpl {\r\n    constructor(value, _shallow) {\r\n        this._shallow = _shallow;\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        this._rawValue = _shallow ? value : toRaw(value);\r\n        this._value = _shallow ? value : toReactive(value);\r\n    }\r\n    get value() {\r\n        trackRefValue(this);\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        newVal = this._shallow ? newVal : toRaw(newVal);\r\n        if (hasChanged(newVal, this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : toReactive(newVal);\r\n            triggerRefValue(this, newVal);\r\n        }\r\n    }\r\n}\r\nfunction triggerRef(ref) {\r\n    triggerRefValue(ref, (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => trackRefValue(this), () => triggerRefValue(this));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    const val = object[key];\r\n    return isRef(val) ? val : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this.dep = undefined;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = new ReactiveEffect(getter, () => {\r\n            if (!this._dirty) {\r\n                this._dirty = true;\r\n                triggerRefValue(this);\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        const self = toRaw(this);\r\n        trackRefValue(self);\r\n        if (self._dirty) {\r\n            self._dirty = false;\r\n            self._value = self.effect.run();\r\n        }\r\n        return self._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions, debugOptions) {\r\n    let getter;\r\n    let setter;\r\n    const onlyGetter = isFunction(getterOrOptions);\r\n    if (onlyGetter) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter);\r\n    if ((process.env.NODE_ENV !== 'production') && debugOptions) {\r\n        cRef.effect.onTrack = debugOptions.onTrack;\r\n        cRef.effect.onTrigger = debugOptions.onTrigger;\r\n    }\r\n    return cRef;\r\n}\n\nvar _a;\r\nconst tick = Promise.resolve();\r\nconst queue = [];\r\nlet queued = false;\r\nconst scheduler = (fn) => {\r\n    queue.push(fn);\r\n    if (!queued) {\r\n        queued = true;\r\n        tick.then(flush);\r\n    }\r\n};\r\nconst flush = () => {\r\n    for (let i = 0; i < queue.length; i++) {\r\n        queue[i]();\r\n    }\r\n    queue.length = 0;\r\n    queued = false;\r\n};\r\nclass DeferredComputedRefImpl {\r\n    constructor(getter) {\r\n        this.dep = undefined;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this[_a] = true;\r\n        let compareTarget;\r\n        let hasCompareTarget = false;\r\n        let scheduled = false;\r\n        this.effect = new ReactiveEffect(getter, (computedTrigger) => {\r\n            if (this.dep) {\r\n                if (computedTrigger) {\r\n                    compareTarget = this._value;\r\n                    hasCompareTarget = true;\r\n                }\r\n                else if (!scheduled) {\r\n                    const valueToCompare = hasCompareTarget ? compareTarget : this._value;\r\n                    scheduled = true;\r\n                    hasCompareTarget = false;\r\n                    scheduler(() => {\r\n                        if (this.effect.active && this._get() !== valueToCompare) {\r\n                            triggerRefValue(this);\r\n                        }\r\n                        scheduled = false;\r\n                    });\r\n                }\r\n                // chained upstream computeds are notified synchronously to ensure\r\n                // value invalidation in case of sync access; normal effects are\r\n                // deferred to be triggered in scheduler.\r\n                for (const e of this.dep) {\r\n                    if (e.computed) {\r\n                        e.scheduler(true /* computedTrigger */);\r\n                    }\r\n                }\r\n            }\r\n            this._dirty = true;\r\n        });\r\n        this.effect.computed = true;\r\n    }\r\n    _get() {\r\n        if (this._dirty) {\r\n            this._dirty = false;\r\n            return (this._value = this.effect.run());\r\n        }\r\n        return this._value;\r\n    }\r\n    get value() {\r\n        trackRefValue(this);\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        return toRaw(this)._get();\r\n    }\r\n}\r\n_a = \"__v_isReadonly\" /* IS_READONLY */;\r\nfunction deferredComputed(getter) {\r\n    return new DeferredComputedRefImpl(getter);\r\n}\n\nexport { EffectScope, ITERATE_KEY, ReactiveEffect, computed, customRef, deferredComputed, effect, effectScope, enableTracking, getCurrentScope, isProxy, isReactive, isReadonly, isRef, markRaw, onScopeDispose, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { toRaw, ref, pauseTracking, resetTracking, reactive, computed, isRef, shallowReactive, trigger, ReactiveEffect, isProxy, shallowReadonly, track, EffectScope, markRaw, proxyRefs, isReactive, isReadonly } from '@vue/reactivity';\nexport { EffectScope, ReactiveEffect, computed, customRef, effect, effectScope, getCurrentScope, isProxy, isReactive, isReadonly, isRef, markRaw, onScopeDispose, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { getGlobalThis, extend, EMPTY_OBJ, toHandlerKey, isFunction, toNumber, hyphenate, camelize, isArray, isOn, hasOwn, isModelListener, isObject, remove, isString, invokeArrayFns, isPromise, NOOP, def, isReservedProp, EMPTY_ARR, capitalize, toRawType, makeMap, NO, normalizeClass, normalizeStyle, isGloballyWhitelisted, hasChanged, isSet, isMap, isPlainObject } from '@vue/shared';\nexport { camelize, capitalize, normalizeClass, normalizeProps, normalizeStyle, toDisplayString, toHandlerKey } from '@vue/shared';\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    getGlobalThis().__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, initialDef) {\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        initialDef: normalizeClassComponent(initialDef),\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction normalizeClassComponent(component) {\r\n    return isClassComponent(component) ? component.__vccOpts : component;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record) {\r\n        return;\r\n    }\r\n    // update initial record (for not-yet-rendered component)\r\n    record.initialDef.render = newRender;\r\n    [...record.instances].forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n            normalizeClassComponent(instance.type).render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    newComp = normalizeClassComponent(newComp);\r\n    // update initial def (for not-yet-rendered components)\r\n    updateComponentDef(record.initialDef, newComp);\r\n    // create a snapshot which avoids the set being mutated during updates\r\n    const instances = [...record.instances];\r\n    for (const instance of instances) {\r\n        const oldComp = normalizeClassComponent(instance.type);\r\n        if (!hmrDirtyComponents.has(oldComp)) {\r\n            // 1. Update existing comp definition to match new one\r\n            if (oldComp !== record.initialDef) {\r\n                updateComponentDef(oldComp, newComp);\r\n            }\r\n            // 2. mark definition dirty. This forces the renderer to replace the\r\n            // component on patch.\r\n            hmrDirtyComponents.add(oldComp);\r\n        }\r\n        // 3. invalidate options resolution cache\r\n        instance.appContext.optionsCache.delete(instance.type);\r\n        // 4. actually update\r\n        if (instance.ceReload) {\r\n            // custom element\r\n            hmrDirtyComponents.add(oldComp);\r\n            instance.ceReload(newComp.styles);\r\n            hmrDirtyComponents.delete(oldComp);\r\n        }\r\n        else if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n            // instance is the inner component of an async custom element\r\n            // invoke to reset styles\r\n            if (instance.parent.type.__asyncLoader &&\r\n                instance.parent.ceReload) {\r\n                instance.parent.ceReload(newComp.styles);\r\n            }\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    }\r\n    // 5. make sure to cleanup dirty hmr components after update\r\n    queuePostFlushCb(() => {\r\n        for (const instance of instances) {\r\n            hmrDirtyComponents.delete(normalizeClassComponent(instance.type));\r\n        }\r\n    });\r\n}\r\nfunction updateComponentDef(oldComp, newComp) {\r\n    extend(oldComp, newComp);\r\n    for (const key in oldComp) {\r\n        if (key !== '__file' && !(key in newComp)) {\r\n            delete oldComp[key];\r\n        }\r\n    }\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nlet buffer = [];\r\nlet devtoolsNotInstalled = false;\r\nfunction emit(event, ...args) {\r\n    if (devtools) {\r\n        devtools.emit(event, ...args);\r\n    }\r\n    else if (!devtoolsNotInstalled) {\r\n        buffer.push({ event, args });\r\n    }\r\n}\r\nfunction setDevtoolsHook(hook, target) {\r\n    var _a, _b;\r\n    devtools = hook;\r\n    if (devtools) {\r\n        devtools.enabled = true;\r\n        buffer.forEach(({ event, args }) => devtools.emit(event, ...args));\r\n        buffer = [];\r\n    }\r\n    else if (\r\n    // handle late devtools injection - only do this if we are in an actual\r\n    // browser environment to avoid the timer handle stalling test runner exit\r\n    // (#4815)\r\n    // eslint-disable-next-line no-restricted-globals\r\n    typeof window !== 'undefined' &&\r\n        // some envs mock window but not fully\r\n        window.HTMLElement &&\r\n        // also exclude jsdom\r\n        !((_b = (_a = window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) === null || _b === void 0 ? void 0 : _b.includes('jsdom'))) {\r\n        const replay = (target.__VUE_DEVTOOLS_HOOK_REPLAY__ =\r\n            target.__VUE_DEVTOOLS_HOOK_REPLAY__ || []);\r\n        replay.push((newHook) => {\r\n            setDevtoolsHook(newHook, target);\r\n        });\r\n        // clear buffer after 3s - the user probably doesn't have devtools installed\r\n        // at all, and keeping the buffer will cause memory leaks (#4738)\r\n        setTimeout(() => {\r\n            if (!devtools) {\r\n                target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;\r\n                devtoolsNotInstalled = true;\r\n                buffer = [];\r\n            }\r\n        }, 3000);\r\n    }\r\n    else {\r\n        // non-browser env, assume not installed\r\n        devtoolsNotInstalled = true;\r\n        buffer = [];\r\n    }\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = \r\n/*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = \r\n/*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nconst devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:start\" /* PERFORMANCE_START */);\r\nconst devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:end\" /* PERFORMANCE_END */);\r\nfunction createDevtoolsPerformanceHook(hook) {\r\n    return (component, type, time) => {\r\n        emit(hook, component.appContext.app, component.uid, component, type, time);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit$1(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions) &&\r\n                !(false )) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    let handlerName;\r\n    let handler = props[(handlerName = toHandlerKey(event))] ||\r\n        // also try camelCase event handler (#2249)\r\n        props[(handlerName = toHandlerKey(camelize(event)))];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handler = props[(handlerName = toHandlerKey(hyphenate(event)))];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            instance.emitted = {};\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        instance.emitted[handlerName] = true;\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.emitsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached !== undefined) {\r\n        return cached;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\r\n            if (normalizedFromExtend) {\r\n                hasExtends = true;\r\n                extend(normalized, normalizedFromExtend);\r\n            }\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        cache.set(comp, null);\r\n        return null;\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    cache.set(comp, normalized);\r\n    return normalized;\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nlet currentScopeId = null;\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nfunction setCurrentRenderingInstance(instance) {\r\n    const prev = currentRenderingInstance;\r\n    currentRenderingInstance = instance;\r\n    currentScopeId = (instance && instance.type.__scopeId) || null;\r\n    return prev;\r\n}\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nfunction pushScopeId(id) {\r\n    currentScopeId = id;\r\n}\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    currentScopeId = null;\r\n}\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nconst withScopeId = (_id) => withCtx;\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot // false only\r\n) {\r\n    if (!ctx)\r\n        return fn;\r\n    // already normalized\r\n    if (fn._n) {\r\n        return fn;\r\n    }\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we disable block tracking and\r\n        // force bail out when invoking a compiled slot (indicated by the ._d flag).\r\n        // This isn't necessary if rendering a compiled `<slot>`, so we flip the\r\n        // ._d flag off when invoking the wrapped fn inside `renderSlot`.\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(-1);\r\n        }\r\n        const prevInstance = setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(prevInstance);\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(1);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentUpdated(ctx);\r\n        }\r\n        return res;\r\n    };\r\n    // mark normalized to avoid duplicated wrapping\r\n    renderFnWithContext._n = true;\r\n    // mark this as compiled by default\r\n    // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n    // rendering flag.\r\n    renderFnWithContext._c = true;\r\n    // disable block tracking by default\r\n    renderFnWithContext._d = true;\r\n    return renderFnWithContext;\r\n}\n\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx, inheritAttrs } = instance;\r\n    let result;\r\n    let fallthroughAttrs;\r\n    const prev = setCurrentRenderingInstance(instance);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n    }\r\n    catch (err) {\r\n        blockStack.length = 0;\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    // attr merging\r\n    // in dev mode, comments are preserved, and it's possible for a template\r\n    // to have comments along side the root element which makes it a fragment\r\n    let root = result;\r\n    let setRoot = undefined;\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        result.patchFlag > 0 &&\r\n        result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n        [root, setRoot] = getChildRoot(result);\r\n    }\r\n    if (fallthroughAttrs && inheritAttrs !== false) {\r\n        const keys = Object.keys(fallthroughAttrs);\r\n        const { shapeFlag } = root;\r\n        if (keys.length) {\r\n            if (shapeFlag & (1 /* ELEMENT */ | 6 /* COMPONENT */)) {\r\n                if (propsOptions && keys.some(isModelListener)) {\r\n                    // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                    // prop, it indicates this component expects to handle v-model and\r\n                    // it should not fallthrough.\r\n                    // related: #1543, #1643, #1989\r\n                    fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                }\r\n                root = cloneVNode(root, fallthroughAttrs);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                const allAttrs = Object.keys(attrs);\r\n                const eventAttrs = [];\r\n                const extraAttrs = [];\r\n                for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                    const key = allAttrs[i];\r\n                    if (isOn(key)) {\r\n                        // ignore v-model handlers when they fail to fallthrough\r\n                        if (!isModelListener(key)) {\r\n                            // remove `on`, lowercase first letter to reflect event casing\r\n                            // accurately\r\n                            eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                        }\r\n                    }\r\n                    else {\r\n                        extraAttrs.push(key);\r\n                    }\r\n                }\r\n                if (extraAttrs.length) {\r\n                    warn(`Extraneous non-props attributes (` +\r\n                        `${extraAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes.`);\r\n                }\r\n                if (eventAttrs.length) {\r\n                    warn(`Extraneous non-emits event listeners (` +\r\n                        `${eventAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes. ` +\r\n                        `If the listener is intended to be a component custom event listener only, ` +\r\n                        `declare it using the \"emits\" option.`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // inherit directives\r\n    if (vnode.dirs) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n            warn(`Runtime directive used on component with non-element root node. ` +\r\n                `The directives will not function as intended.`);\r\n        }\r\n        root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n    }\r\n    // inherit transition data\r\n    if (vnode.transition) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n            warn(`Component inside <Transition> renders non-element root node ` +\r\n                `that cannot be animated.`);\r\n        }\r\n        root.transition = vnode.transition;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n        setRoot(root);\r\n    }\r\n    else {\r\n        result = root;\r\n    }\r\n    setCurrentRenderingInstance(prev);\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & (6 /* COMPONENT */ | 1 /* ELEMENT */) ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    name: 'Suspense',\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary,\r\n    normalize: normalizeSuspenseChildren\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl );\r\nfunction triggerEvent(vnode, name) {\r\n    const eventListener = vnode.props && vnode.props[name];\r\n    if (isFunction(eventListener)) {\r\n        eventListener();\r\n    }\r\n}\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // invoke @fallback event\r\n        triggerEvent(vnode, 'onPending');\r\n        triggerEvent(vnode, 'onFallback');\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, slotScopeIds);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG, slotScopeIds, optimized);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            triggerEvent(n2, 'onPending');\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            triggerEvent(vnode, 'onResolve');\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            triggerEvent(vnode, 'onFallback');\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            suspense.isInFallback = true;\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult, false);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, slotScopeIds, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    const isSlotChildren = shapeFlag & 32 /* SLOTS_CHILDREN */;\r\n    vnode.ssContent = normalizeSuspenseSlot(isSlotChildren ? children.default : children);\r\n    vnode.ssFallback = isSlotChildren\r\n        ? normalizeSuspenseSlot(children.fallback)\r\n        : createVNode(Comment);\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    let block;\r\n    if (isFunction(s)) {\r\n        const trackBlock = isBlockTreeEnabled && s._c;\r\n        if (trackBlock) {\r\n            // disableTracking: false\r\n            // allow block tracking for compiled slots\r\n            // (see ./componentRenderContext.ts)\r\n            s._d = false;\r\n            openBlock();\r\n        }\r\n        s = s();\r\n        if (trackBlock) {\r\n            s._d = true;\r\n            block = currentBlock;\r\n            closeBlock();\r\n        }\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    s = normalizeVNode(s);\r\n    if (block && !s.dynamicChildren) {\r\n        s.dynamicChildren = block.filter(c => c !== s);\r\n    }\r\n    return s;\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue.call(instance.proxy)\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                mode &&\r\n                mode !== 'in-out' && mode !== 'out-in' && mode !== 'default') {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest =\r\n                loader()\r\n                    .catch(err => {\r\n                    err = err instanceof Error ? err : new Error(String(err));\r\n                    if (userOnError) {\r\n                        return new Promise((resolve, reject) => {\r\n                            const userRetry = () => resolve(retry());\r\n                            const userFail = () => reject(err);\r\n                            userOnError(err, userRetry, userFail, retries + 1);\r\n                        });\r\n                    }\r\n                    else {\r\n                        throw err;\r\n                    }\r\n                })\r\n                    .then((comp) => {\r\n                    if (thisRequest !== pendingRequest && pendingRequest) {\r\n                        return pendingRequest;\r\n                    }\r\n                    if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                        warn(`Async component loader resolved to undefined. ` +\r\n                            `If you are using retry(), make sure to return its return value.`);\r\n                    }\r\n                    // interop module default\r\n                    if (comp &&\r\n                        (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                        comp = comp.default;\r\n                    }\r\n                    if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                        throw new Error(`Invalid async component load result: ${comp}`);\r\n                    }\r\n                    resolvedComp = comp;\r\n                    return comp;\r\n                })));\r\n    };\r\n    return defineComponent({\r\n        name: 'AsyncComponentWrapper',\r\n        __asyncLoader: load,\r\n        get __asyncResolved() {\r\n            return resolvedComp;\r\n        },\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (isInSSRComponentSetup)) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n                if (instance.parent && isKeepAlive(instance.parent.vnode)) {\r\n                    // parent is keep-alive, force update so the loaded component's\r\n                    // name is taken into account\r\n                    queueJob(instance.parent.update);\r\n                }\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n        // for KeepAlive, we just need to render its children\r\n        if (!sharedContext.renderer) {\r\n            return slots.default;\r\n        }\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.__v_cache = cache;\r\n        }\r\n        const parentSuspense = instance.suspense;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            // for async components, name check should be based in its loaded\r\n            // inner component if available\r\n            const name = getComponentName(isAsyncWrapper(vnode)\r\n                ? vnode.type.__asyncResolved || {}\r\n                : comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            return hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                unsetCurrentInstance();\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            (` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\r\n(!isInSSRComponentSetup || lifecycle === \"sp\" /* SERVER_PREFETCH */) &&\r\n    injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onServerPrefetch = createHook(\"sp\" /* SERVER_PREFETCH */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nfunction onErrorCaptured(hook, target = currentInstance) {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet shouldCacheAccess = true;\r\nfunction applyOptions(instance) {\r\n    const options = resolveMergedOptions(instance);\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    // do not cache property access on public proxy during state initialization\r\n    shouldCacheAccess = false;\r\n    // call beforeCreate first before accessing other options since\r\n    // the hook may mutate resolved options (#2791)\r\n    if (options.beforeCreate) {\r\n        callHook(options.beforeCreate, instance, \"bc\" /* BEFORE_CREATE */);\r\n    }\r\n    const { \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // lifecycle\r\n    created, beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, serverPrefetch, \r\n    // public API\r\n    expose, inheritAttrs, \r\n    // assets\r\n    components, directives, filters } = options;\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        resolveInjections(injectOptions, ctx, checkDuplicateProperties, instance.appContext.config.unwrapInjectedRef);\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define\r\n                // methods to the proxy target, and those are read-only but\r\n                // reconfigurable, so it needs to be redefined here\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    Object.defineProperty(ctx, key, {\r\n                        value: methodHandler.bind(publicThis),\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        writable: true\r\n                    });\r\n                }\r\n                else {\r\n                    ctx[key] = methodHandler.bind(publicThis);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (dataOptions) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isFunction(dataOptions)) {\r\n            warn(`The data option must be a function. ` +\r\n                `Plain object usage is no longer supported.`);\r\n        }\r\n        const data = dataOptions.call(publicThis, publicThis);\r\n        if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n            warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n                `intend to perform data fetching before component renders, use ` +\r\n                `async setup() + <Suspense>.`);\r\n        }\r\n        if (!isObject(data)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n        }\r\n        else {\r\n            instance.data = reactive(data);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                for (const key in data) {\r\n                    checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                    // expose data on ctx during dev\r\n                    if (key[0] !== '$' && key[0] !== '_') {\r\n                        Object.defineProperty(ctx, key, {\r\n                            configurable: true,\r\n                            enumerable: true,\r\n                            get: () => data[key],\r\n                            set: NOOP\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // state initialization complete at this point - start caching access\r\n    shouldCacheAccess = true;\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        for (const key in watchOptions) {\r\n            createWatcher(watchOptions[key], ctx, publicThis, key);\r\n        }\r\n    }\r\n    if (provideOptions) {\r\n        const provides = isFunction(provideOptions)\r\n            ? provideOptions.call(publicThis)\r\n            : provideOptions;\r\n        Reflect.ownKeys(provides).forEach(key => {\r\n            provide(key, provides[key]);\r\n        });\r\n    }\r\n    if (created) {\r\n        callHook(created, instance, \"c\" /* CREATED */);\r\n    }\r\n    function registerLifecycleHook(register, hook) {\r\n        if (isArray(hook)) {\r\n            hook.forEach(_hook => register(_hook.bind(publicThis)));\r\n        }\r\n        else if (hook) {\r\n            register(hook.bind(publicThis));\r\n        }\r\n    }\r\n    registerLifecycleHook(onBeforeMount, beforeMount);\r\n    registerLifecycleHook(onMounted, mounted);\r\n    registerLifecycleHook(onBeforeUpdate, beforeUpdate);\r\n    registerLifecycleHook(onUpdated, updated);\r\n    registerLifecycleHook(onActivated, activated);\r\n    registerLifecycleHook(onDeactivated, deactivated);\r\n    registerLifecycleHook(onErrorCaptured, errorCaptured);\r\n    registerLifecycleHook(onRenderTracked, renderTracked);\r\n    registerLifecycleHook(onRenderTriggered, renderTriggered);\r\n    registerLifecycleHook(onBeforeUnmount, beforeUnmount);\r\n    registerLifecycleHook(onUnmounted, unmounted);\r\n    registerLifecycleHook(onServerPrefetch, serverPrefetch);\r\n    if (isArray(expose)) {\r\n        if (expose.length) {\r\n            const exposed = instance.exposed || (instance.exposed = {});\r\n            expose.forEach(key => {\r\n                Object.defineProperty(exposed, key, {\r\n                    get: () => publicThis[key],\r\n                    set: val => (publicThis[key] = val)\r\n                });\r\n            });\r\n        }\r\n        else if (!instance.exposed) {\r\n            instance.exposed = {};\r\n        }\r\n    }\r\n    // options that are handled when creating the instance but also need to be\r\n    // applied from mixins\r\n    if (render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    if (inheritAttrs != null) {\r\n        instance.inheritAttrs = inheritAttrs;\r\n    }\r\n    // asset options.\r\n    if (components)\r\n        instance.components = components;\r\n    if (directives)\r\n        instance.directives = directives;\r\n}\r\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP, unwrapRef = false) {\r\n    if (isArray(injectOptions)) {\r\n        injectOptions = normalizeInject(injectOptions);\r\n    }\r\n    for (const key in injectOptions) {\r\n        const opt = injectOptions[key];\r\n        let injected;\r\n        if (isObject(opt)) {\r\n            if ('default' in opt) {\r\n                injected = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n            }\r\n            else {\r\n                injected = inject(opt.from || key);\r\n            }\r\n        }\r\n        else {\r\n            injected = inject(opt);\r\n        }\r\n        if (isRef(injected)) {\r\n            // TODO remove the check in 3.3\r\n            if (unwrapRef) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    get: () => injected.value,\r\n                    set: v => (injected.value = v)\r\n                });\r\n            }\r\n            else {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`injected property \"${key}\" is a ref and will be auto-unwrapped ` +\r\n                        `and no longer needs \\`.value\\` in the next minor release. ` +\r\n                        `To opt-in to the new behavior now, ` +\r\n                        `set \\`app.config.unwrapInjectedRef = true\\` (this config is ` +\r\n                        `temporary and will not be needed in the future.)`);\r\n                }\r\n                ctx[key] = injected;\r\n            }\r\n        }\r\n        else {\r\n            ctx[key] = injected;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n        }\r\n    }\r\n}\r\nfunction callHook(hook, instance, type) {\r\n    callWithAsyncErrorHandling(isArray(hook)\r\n        ? hook.map(h => h.bind(instance.proxy))\r\n        : hook.bind(instance.proxy), instance, type);\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\r\nfunction resolveMergedOptions(instance) {\r\n    const base = instance.type;\r\n    const { mixins, extends: extendsOptions } = base;\r\n    const { mixins: globalMixins, optionsCache: cache, config: { optionMergeStrategies } } = instance.appContext;\r\n    const cached = cache.get(base);\r\n    let resolved;\r\n    if (cached) {\r\n        resolved = cached;\r\n    }\r\n    else if (!globalMixins.length && !mixins && !extendsOptions) {\r\n        {\r\n            resolved = base;\r\n        }\r\n    }\r\n    else {\r\n        resolved = {};\r\n        if (globalMixins.length) {\r\n            globalMixins.forEach(m => mergeOptions(resolved, m, optionMergeStrategies, true));\r\n        }\r\n        mergeOptions(resolved, base, optionMergeStrategies);\r\n    }\r\n    cache.set(base, resolved);\r\n    return resolved;\r\n}\r\nfunction mergeOptions(to, from, strats, asMixin = false) {\r\n    const { mixins, extends: extendsOptions } = from;\r\n    if (extendsOptions) {\r\n        mergeOptions(to, extendsOptions, strats, true);\r\n    }\r\n    if (mixins) {\r\n        mixins.forEach((m) => mergeOptions(to, m, strats, true));\r\n    }\r\n    for (const key in from) {\r\n        if (asMixin && key === 'expose') {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`\"expose\" option is ignored when declared in mixins or extends. ` +\r\n                    `It should only be declared in the base component itself.`);\r\n        }\r\n        else {\r\n            const strat = internalOptionMergeStrats[key] || (strats && strats[key]);\r\n            to[key] = strat ? strat(to[key], from[key]) : from[key];\r\n        }\r\n    }\r\n    return to;\r\n}\r\nconst internalOptionMergeStrats = {\r\n    data: mergeDataFn,\r\n    props: mergeObjectOptions,\r\n    emits: mergeObjectOptions,\r\n    // objects\r\n    methods: mergeObjectOptions,\r\n    computed: mergeObjectOptions,\r\n    // lifecycle\r\n    beforeCreate: mergeAsArray,\r\n    created: mergeAsArray,\r\n    beforeMount: mergeAsArray,\r\n    mounted: mergeAsArray,\r\n    beforeUpdate: mergeAsArray,\r\n    updated: mergeAsArray,\r\n    beforeDestroy: mergeAsArray,\r\n    beforeUnmount: mergeAsArray,\r\n    destroyed: mergeAsArray,\r\n    unmounted: mergeAsArray,\r\n    activated: mergeAsArray,\r\n    deactivated: mergeAsArray,\r\n    errorCaptured: mergeAsArray,\r\n    serverPrefetch: mergeAsArray,\r\n    // assets\r\n    components: mergeObjectOptions,\r\n    directives: mergeObjectOptions,\r\n    // watch\r\n    watch: mergeWatchOptions,\r\n    // provide / inject\r\n    provide: mergeDataFn,\r\n    inject: mergeInject\r\n};\r\nfunction mergeDataFn(to, from) {\r\n    if (!from) {\r\n        return to;\r\n    }\r\n    if (!to) {\r\n        return from;\r\n    }\r\n    return function mergedDataFn() {\r\n        return (extend)(isFunction(to) ? to.call(this, this) : to, isFunction(from) ? from.call(this, this) : from);\r\n    };\r\n}\r\nfunction mergeInject(to, from) {\r\n    return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\r\n}\r\nfunction normalizeInject(raw) {\r\n    if (isArray(raw)) {\r\n        const res = {};\r\n        for (let i = 0; i < raw.length; i++) {\r\n            res[raw[i]] = raw[i];\r\n        }\r\n        return res;\r\n    }\r\n    return raw;\r\n}\r\nfunction mergeAsArray(to, from) {\r\n    return to ? [...new Set([].concat(to, from))] : from;\r\n}\r\nfunction mergeObjectOptions(to, from) {\r\n    return to ? extend(extend(Object.create(null), to), from) : from;\r\n}\r\nfunction mergeWatchOptions(to, from) {\r\n    if (!to)\r\n        return from;\r\n    if (!from)\r\n        return to;\r\n    const merged = extend(Object.create(null), to);\r\n    for (const key in from) {\r\n        merged[key] = mergeAsArray(to[key], from[key]);\r\n    }\r\n    return merged;\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    instance.propsDefaults = Object.create(null);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // ensure all declared prop keys are present\r\n    for (const key in instance.propsOptions[0]) {\r\n        if (!(key in props)) {\r\n            props[key] = undefined;\r\n        }\r\n    }\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                let key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        if (value !== attrs[key]) {\r\n                            attrs[key] = value;\r\n                            hasAttrsChanged = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance, false /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    if (value !== attrs[key]) {\r\n                        attrs[key] = value;\r\n                        hasAttrsChanged = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        if (setFullProps(instance, rawProps, props, attrs)) {\r\n            hasAttrsChanged = true;\r\n        }\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawCurrentProps, key, undefined, instance, true /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    if (hasAttrsChanged) {\r\n        trigger(instance, \"set\" /* SET */, '$attrs');\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    let rawCastValues;\r\n    if (rawProps) {\r\n        for (let key in rawProps) {\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            const value = rawProps[key];\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n                    props[camelKey] = value;\r\n                }\r\n                else {\r\n                    (rawCastValues || (rawCastValues = {}))[camelKey] = value;\r\n                }\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                if (value !== attrs[key]) {\r\n                    attrs[key] = value;\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        const castValues = rawCastValues || EMPTY_OBJ;\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, castValues[key], instance, !hasOwn(castValues, key));\r\n        }\r\n    }\r\n    return hasAttrsChanged;\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                const { propsDefaults } = instance;\r\n                if (key in propsDefaults) {\r\n                    value = propsDefaults[key];\r\n                }\r\n                else {\r\n                    setCurrentInstance(instance);\r\n                    value = propsDefaults[key] = defaultValue.call(null, props);\r\n                    unsetCurrentInstance();\r\n                }\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (isAbsent && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.propsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        cache.set(comp, EMPTY_ARR);\r\n        return EMPTY_ARR;\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const res = [normalized, needCastKeys];\r\n    cache.set(comp, res);\r\n    return res;\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : ctor === null ? 'null' : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        return expectedTypes.findIndex(t => isSameType(t, type));\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(rawProps, props, instance) {\r\n    const resolvedValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, resolvedValues[key], opt, !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key)));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else if (expectedType === 'null') {\r\n        valid = value === null;\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(' | ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => {\r\n    const normalized = withCtx((...args) => {\r\n        if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n            warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n                `this will not track dependencies used in the slot. ` +\r\n                `Invoke the slot function inside the render function instead.`);\r\n        }\r\n        return normalizeSlotValue(rawSlot(...args));\r\n    }, ctx);\r\n    normalized._c = false;\r\n    return normalized;\r\n};\r\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !(false )) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        !isKeepAlive(instance.vnode) &&\r\n        !(false )) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // users can get the shallow readonly version of the slots object through `this.$slots`,\r\n            // we should avoid the proxy object polluting the slots of the internal instance\r\n            instance.slots = toRaw(children);\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children, optimized) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (optimized && type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n                // #2893\r\n                // when rendering the optimized slots by manually written render function,\r\n                // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n                // i.e. let the `renderSlot` create the bailed Fragment\r\n                if (!optimized && type === 1 /* STABLE */) {\r\n                    delete slots._;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        if (dir.deep) {\r\n            traverse(value);\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        let hook = binding.dir[name];\r\n        if (hook) {\r\n            // disable tracking inside all lifecycle hooks\r\n            // since they can potentially be called inside effects.\r\n            pauseTracking();\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n            resetTracking();\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            errorHandler: undefined,\r\n            warnHandler: undefined,\r\n            compilerOptions: {}\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null),\r\n        optionsCache: new WeakMap(),\r\n        propsCache: new WeakMap(),\r\n        emitsCache: new WeakMap()\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            _instance: null,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate, isSVG) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer, isSVG);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer, isSVG);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        app._instance = vnode.component;\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return getExposeProxy(vnode.component) || vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        app._instance = null;\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                    delete app._container.__vue_app__;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if (!container.hasChildNodes()) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                    `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            flushPostFlushCbs();\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type.toLowerCase() !==\r\n                            node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    vnode.slotScopeIds = slotScopeIds;\r\n                    const container = parentNode(node);\r\n                    mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                    // #3787\r\n                    // if component is async, it may get moved / unmounted before its\r\n                    // inner component is loaded, so we need to give it a placeholder\r\n                    // vnode that matches its adopted DOM.\r\n                    if (isAsyncWrapper(vnode)) {\r\n                        let subTree;\r\n                        if (isFragmentStart) {\r\n                            subTree = createVNode(Fragment);\r\n                            subTree.anchor = nextNode\r\n                                ? nextNode.previousSibling\r\n                                : container.lastChild;\r\n                        }\r\n                        else {\r\n                            subTree =\r\n                                node.nodeType === 3 ? createTextVNode('') : createVNode('div');\r\n                        }\r\n                        subTree.el = node;\r\n                        vnode.component.subTree = subTree;\r\n                    }\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { type, props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // #4006 for form elements with non-string v-model value bindings\r\n        // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\r\n        const forcePatchValue = (type === 'input' && dirs) || type === 'option';\r\n        // skip props & children if this is hoisted static nodes\r\n        if (forcePatchValue || patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (forcePatchValue ||\r\n                    !optimized ||\r\n                    patchFlag & (16 /* FULL_PROPS */ | 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if ((forcePatchValue && key.endsWith('value')) ||\r\n                            (isOn(key) && !isReservedProp(key))) {\r\n                            patchProp(el, key, null, props[key], false, undefined, parentComponent);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick, false, undefined, parentComponent);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            else if (vnode.type === Text && !vnode.children) {\r\n                continue;\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        const { slotScopeIds: fragmentSlotScopeIds } = vnode;\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsPerfStart(instance, type, supported ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsPerfEnd(instance, type, supported ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    const needWarn = [];\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        (process.env.NODE_ENV !== 'production') && needWarn.push(`__VUE_OPTIONS_API__`);\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        (process.env.NODE_ENV !== 'production') && needWarn.push(`__VUE_PROD_DEVTOOLS__`);\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn.length) {\r\n        const multi = needWarn.length > 1;\r\n        console.warn(`Feature flag${multi ? `s` : ``} ${needWarn.join(', ')} ${multi ? `are` : `is`} not explicitly defined. You are running the esm-bundler build of Vue, ` +\r\n            `which expects these compile-time feature flags to be globally injected ` +\r\n            `via the bundler config in order to get better tree-shaking in the ` +\r\n            `production bundle.\\n\\n` +\r\n            `For more details, see http://link.vuejs.org/feature-flags.`);\r\n    }\r\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    const target = getGlobalThis();\r\n    target.__VUE__ = true;\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = (process.env.NODE_ENV !== 'production') && isHmrUpdating ? false : !!n2.dynamicChildren) => {\r\n        if (n1 === n2) {\r\n            return;\r\n        }\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (key !== 'value' && !isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                /**\r\n                 * Special case for setting value on DOM elements:\r\n                 * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\r\n                 * - it needs to be forced (#1471)\r\n                 * #2353 proposes adding another renderer option to configure this, but\r\n                 * the properties affects are so finite it is worth special casing it\r\n                 * here to reduce the complexity. (Special casing it also should not\r\n                 * affect non-DOM renderers)\r\n                 */\r\n                if ('value' in props) {\r\n                    hostPatchProp(el, 'value', null, props.value);\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (slotScopeIds) {\r\n            for (let i = 0; i < slotScopeIds.length; i++) {\r\n                hostSetScopeId(el, slotScopeIds[i]);\r\n            }\r\n        }\r\n        if (parentComponent) {\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                subTree.patchFlag > 0 &&\r\n                subTree.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                const parentVNode = parentComponent.vnode;\r\n                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        // #1471 force patch value\r\n                        if (next !== prev || key === 'value') {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // oldVNode may be an errored async setup() component inside Suspense\r\n            // which will not have a mounted element\r\n            oldVNode.el &&\r\n                // - In the case of a Fragment, we need to provide the actual parent\r\n                // of the Fragment itself so it can move its children.\r\n                (oldVNode.type === Fragment ||\r\n                    // - In the case of different nodes, there is going to be a replacement\r\n                    // which also requires the correct parent container\r\n                    !isSameVNodeType(oldVNode, newVNode) ||\r\n                    // - In the case of a component, it could contain anything.\r\n                    oldVNode.shapeFlag & (6 /* COMPONENT */ | 64 /* TELEPORT */))\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                // defer patching value\r\n                if (next !== prev && key !== 'value') {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n            if ('value' in newProps) {\r\n                hostPatchProp(el, 'value', oldProps.value, newProps.value);\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        // check if this is a slot fragment with :slotted scope ids\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        n2.slotScopeIds = slotScopeIds;\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `init`);\r\n            }\r\n            setupComponent(instance);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `init`);\r\n            }\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        const componentUpdateFn = () => {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\r\n                effect.allowRecurse = false;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if (!isAsyncWrapperVNode &&\r\n                    (vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                effect.allowRecurse = true;\r\n                if (el && hydrateNode) {\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    const hydrateSubTree = () => {\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            startMeasure(instance, `render`);\r\n                        }\r\n                        instance.subTree = renderComponentRoot(instance);\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            endMeasure(instance, `render`);\r\n                        }\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            startMeasure(instance, `hydrate`);\r\n                        }\r\n                        hydrateNode(el, instance.subTree, instance, parentSuspense, null);\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            endMeasure(instance, `hydrate`);\r\n                        }\r\n                    };\r\n                    if (isAsyncWrapperVNode) {\r\n                        initialVNode.type.__asyncLoader().then(\r\n                        // note: we are moving the render call into an async callback,\r\n                        // which means it won't track dependencies - but it's ok because\r\n                        // a server-rendered async wrapper is already in resolved state\r\n                        // and it will never need to change.\r\n                        () => !instance.isUnmounted && hydrateSubTree());\r\n                    }\r\n                    else {\r\n                        hydrateSubTree();\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `render`);\r\n                    }\r\n                    const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `render`);\r\n                    }\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if (!isAsyncWrapperVNode &&\r\n                    (vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode), parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                if (initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    instance.a && queuePostRenderEffect(instance.a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentAdded(instance);\r\n                }\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                // Disallow component effect recursion during pre-lifecycle hooks.\r\n                effect.allowRecurse = false;\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                effect.allowRecurse = true;\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, next, vnode), parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        };\r\n        // create reactive effect for rendering\r\n        const effect = new ReactiveEffect(componentUpdateFn, () => queueJob(instance.update), instance.scope // track it in component's effect scope\r\n        );\r\n        const update = (instance.update = effect.run.bind(effect));\r\n        update.id = instance.uid;\r\n        // allowRecurse\r\n        // #1801, #2043 component render effects should allow recursive updates\r\n        effect.allowRecurse = update.allowRecurse = true;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            effect.onTrack = instance.rtc\r\n                ? e => invokeArrayFns(instance.rtc, e)\r\n                : void 0;\r\n            effect.onTrigger = instance.rtg\r\n                ? e => invokeArrayFns(instance.rtg, e)\r\n                : void 0;\r\n            // @ts-ignore (for scheduler)\r\n            update.ownerInstance = instance;\r\n        }\r\n        update();\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children, optimized);\r\n        pauseTracking();\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n        resetTracking();\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode, true);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\r\n        let vnodeHook;\r\n        if (shouldInvokeVnodeHook &&\r\n            (vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\r\n            }\r\n            else if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                patchFlag &\r\n                    (128 /* KEYED_FRAGMENT */ | 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((shouldInvokeVnodeHook &&\r\n            (vnodeHook = props && props.onVnodeUnmounted)) ||\r\n            shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, scope, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        // stop effects in component scope\r\n        scope.stop();\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            // so that scheduler will no longer invoke it\r\n            update.active = false;\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container, isSVG) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container, null, null, null, isSVG);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode, isUnmount));\r\n        return;\r\n    }\r\n    if (isAsyncWrapper(vnode) && !isUnmount) {\r\n        // when mounting async components, nothing needs to be done,\r\n        // because the template ref is forwarded to inner component\r\n        return;\r\n    }\r\n    const refValue = vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */\r\n        ? getExposeProxy(vnode.component) || vnode.component.proxy\r\n        : vnode.el;\r\n    const value = isUnmount ? null : refValue;\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // dynamic ref changed. unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            {\r\n                refs[ref] = value;\r\n            }\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always be moved. Therefore, in order to ensure correct move\r\n * position, el should be inherited from previous nodes.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = (u + v) >> 1;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        let { shapeFlag, children, dynamicChildren } = n2;\r\n        // #3302\r\n        // HMR updated, force full diff\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\r\n        const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\r\n        if (target) {\r\n            hostRemove(targetAnchor);\r\n        }\r\n        // an unmounted teleport should always remove its children if not disabled\r\n        if (doRemove || !isTeleportDisabled(props)) {\r\n            hostRemove(anchor);\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    const child = children[i];\r\n                    unmount(child, parentComponent, parentSuspense, true, !!child.dynamicChildren);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name, maybeSelfReference) {\r\n    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // explicit self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first which is resolved for options API\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if (!res && maybeSelfReference) {\r\n            // fallback to implicit self-reference\r\n            return Component;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            const extra = type === COMPONENTS\r\n                ? `\\nIf this is a native custom element, make sure to exclude it from ` +\r\n                    `component resolution via compilerOptions.isCustomElement.`\r\n                : ``;\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet isBlockTreeEnabled = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    isBlockTreeEnabled += value;\r\n}\r\nfunction setupBlock(vnode) {\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren =\r\n        isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (isBlockTreeEnabled > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\r\n    return setupBlock(createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, true /* isBlock */));\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    return setupBlock(createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */));\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1 /* ELEMENT */, isBlockNode = false, needFullChildrenNormalization = false) {\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        slotScopeIds: null,\r\n        children,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    if (needFullChildrenNormalization) {\r\n        normalizeChildren(vnode, children);\r\n        // normalize suspense children\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            type.normalize(vnode);\r\n        }\r\n    }\r\n    else if (children) {\r\n        // compiled element vnode - if children is passed, only possible types are\r\n        // string or Array.\r\n        vnode.shapeFlag |= isString(children)\r\n            ? 8 /* TEXT_CHILDREN */\r\n            : 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    // track vnode for block tree\r\n    if (isBlockTreeEnabled > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (vnode.patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        vnode.patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nconst createVNode = ((process.env.NODE_ENV !== 'production') ? createVNodeWithArgsTransform : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        props = guardReactiveProps(props);\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    return createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, isBlockNode, true);\r\n}\r\nfunction guardReactiveProps(props) {\r\n    if (!props)\r\n        return null;\r\n    return isProxy(props) || InternalObjectKey in props\r\n        ? extend({}, props)\r\n        : props;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    const cloned = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        slotScopeIds: vnode.slotScopeIds,\r\n        children: (process.env.NODE_ENV !== 'production') && patchFlag === -1 /* HOISTED */ && isArray(children)\r\n            ? children.map(deepCloneVNode)\r\n            : children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n    return cloned;\r\n}\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode) {\r\n    const cloned = cloneVNode(vnode);\r\n    if (isArray(vnode.children)) {\r\n        cloned.children = vnode.children.map(deepCloneVNode);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, \r\n        // #3666, avoid reference pollution when reusing vnode\r\n        child.slice());\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return cloneIfMounted(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null || child.memo ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & (1 /* ELEMENT */ | 64 /* TELEPORT */)) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && (slot._d = false);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && (slot._d = true);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.slots._ === 1 /* STABLE */) {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n                else {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = {};\r\n    for (let i = 0; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming &&\r\n                    !(isArray(existing) && existing.includes(incoming))) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, incoming)\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem, cache, index) {\r\n    let ret;\r\n    const cached = (cache && cache[index]);\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i, undefined, cached && cached[i]);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i, undefined, cached && cached[i]);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, (item, i) => renderItem(item, i, undefined, cached && cached[i]));\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i, cached && cached[i]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    if (cache) {\r\n        cache[index] = ret;\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback, noSlotted) {\r\n    if (currentRenderingInstance.isCE) {\r\n        return createVNode('slot', name === 'default' ? null : { name }, fallback && fallback());\r\n    }\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    if (slot && slot._c) {\r\n        slot._d = false;\r\n    }\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    if (!noSlotted && rendered.scopeId) {\r\n        rendered.slotScopeIds = [rendered.scopeId + '-s'];\r\n    }\r\n    if (slot && slot._c) {\r\n        slot._d = true;\r\n    }\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return getExposeProxy(i) || i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // prioritize <script setup> bindings during dev.\r\n        // this allows even properties that start with _ or $ to be used - so that\r\n        // it aligns with the production behavior where the render fn is inlined and\r\n        // indeed has access to all declared variables.\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            setupState !== EMPTY_OBJ &&\r\n            setupState.__isScriptSetup &&\r\n            hasOwn(setupState, key)) {\r\n            return setupState[key];\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 1 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 2 /* DATA */:\r\n                        return data[key];\r\n                    case 4 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 3 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 1 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 2 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 3 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 4 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\r\n                accessCache[key] = 0 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 4 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            {\r\n                return globalProperties[key];\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else if (instance === currentRenderingInstance) {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (hasOwn(instance.props, key)) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (!!accessCache[key] ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/ extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// dev only\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createDevRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (!setupState.__isScriptSetup) {\r\n            if (key[0] === '$' || key[0] === '_') {\r\n                warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                    `which are reserved prefixes for Vue internals.`);\r\n                return;\r\n            }\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => setupState[key],\r\n                set: NOOP\r\n            });\r\n        }\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        scope: new EffectScope(true /* detached */),\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        exposeProxy: null,\r\n        withProxy: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // props default value\r\n        propsDefaults: EMPTY_OBJ,\r\n        // inheritAttrs\r\n        inheritAttrs: type.inheritAttrs,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null,\r\n        sp: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createDevRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit$1.bind(null, instance);\r\n    // apply custom element special handling\r\n    if (vnode.ce) {\r\n        vnode.ce(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n    instance.scope.on();\r\n};\r\nconst unsetCurrentInstance = () => {\r\n    currentInstance && currentInstance.scope.off();\r\n    currentInstance = null;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n        if (Component.compilerOptions && isRuntimeOnly()) {\r\n            warn(`\"compilerOptions\" is only supported when using a build of Vue that ` +\r\n                `includes the runtime compiler. Since you are using a runtime-only ` +\r\n                `build, the options should be passed via your build tool config instead.`);\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        setCurrentInstance(instance);\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        unsetCurrentInstance();\r\n        if (isPromise(setupResult)) {\r\n            setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult\r\n                    .then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult, isSSR);\r\n                })\r\n                    .catch(e => {\r\n                    handleError(e, instance, 0 /* SETUP_FUNCTION */);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult, isSSR);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance, isSSR);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        if (instance.type.__ssrInlineRender) {\r\n            // when the function's name is `ssrRender` (compiled by SFC inline mode),\r\n            // set it as ssrRender instead.\r\n            instance.ssrRender = setupResult;\r\n        }\r\n        else {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance, isSSR);\r\n}\r\nlet compile;\r\nlet installWithProxy;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n    installWithProxy = i => {\r\n        if (i.render._rc) {\r\n            i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    };\r\n}\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    // could be already set when returned from setup()\r\n    if (!instance.render) {\r\n        // only do on-the-fly compile if not in SSR - SSR on-the-fly compliation\r\n        // is done by server-renderer\r\n        if (!isSSR && compile && !Component.render) {\r\n            const template = Component.template;\r\n            if (template) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `compile`);\r\n                }\r\n                const { isCustomElement, compilerOptions } = instance.appContext.config;\r\n                const { delimiters, compilerOptions: componentCompilerOptions } = Component;\r\n                const finalCompilerOptions = extend(extend({\r\n                    isCustomElement,\r\n                    delimiters\r\n                }, compilerOptions), componentCompilerOptions);\r\n                Component.render = compile(template, finalCompilerOptions);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `compile`);\r\n                }\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (installWithProxy) {\r\n            installWithProxy(instance);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__ && !(false )) {\r\n        setCurrentInstance(instance);\r\n        pauseTracking();\r\n        applyOptions(instance);\r\n        resetTracking();\r\n        unsetCurrentInstance();\r\n    }\r\n    // warn missing template/render\r\n    // the runtime compilation of template in SSR is done by server-render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP && !isSSR) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nfunction createAttrsProxy(instance) {\r\n    return new Proxy(instance.attrs, (process.env.NODE_ENV !== 'production')\r\n        ? {\r\n            get(target, key) {\r\n                markAttrsAccessed();\r\n                track(instance, \"get\" /* GET */, '$attrs');\r\n                return target[key];\r\n            },\r\n            set() {\r\n                warn(`setupContext.attrs is readonly.`);\r\n                return false;\r\n            },\r\n            deleteProperty() {\r\n                warn(`setupContext.attrs is readonly.`);\r\n                return false;\r\n            }\r\n        }\r\n        : {\r\n            get(target, key) {\r\n                track(instance, \"get\" /* GET */, '$attrs');\r\n                return target[key];\r\n            }\r\n        });\r\n}\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = exposed || {};\r\n    };\r\n    let attrs;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return attrs || (attrs = createAttrsProxy(instance));\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            get attrs() {\r\n                return attrs || (attrs = createAttrsProxy(instance));\r\n            },\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\nfunction getExposeProxy(instance) {\r\n    if (instance.exposed) {\r\n        return (instance.exposeProxy ||\r\n            (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\r\n                get(target, key) {\r\n                    if (key in target) {\r\n                        return target[key];\r\n                    }\r\n                    else if (key in publicPropertiesMap) {\r\n                        return publicPropertiesMap[key](instance);\r\n                    }\r\n                }\r\n            })));\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"sp\" /* SERVER_PREFETCH */]: 'serverPrefetch hook',\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(id) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < id ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        if (job.id == null) {\r\n            queue.push(job);\r\n        }\r\n        else {\r\n            queue.splice(findInsertionIndex(job.id), 0, job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > flushIndex) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex])) {\r\n                continue;\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex])) {\r\n                continue;\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    // conditional usage of checkRecursiveUpdate must be determined out of\r\n    // try ... catch block since Rollup by default de-optimizes treeshaking\r\n    // inside try-catch. This can leave all warning code unshaked. Although\r\n    // they would get eventually shaken by a minifier like terser, some minifiers\r\n    // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\r\n    const check = (process.env.NODE_ENV !== 'production')\r\n        ? (job) => checkRecursiveUpdates(seen, job)\r\n        : NOOP;\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job && job.active !== false) {\r\n                if ((process.env.NODE_ENV !== 'production') && check(job)) {\r\n                    continue;\r\n                }\r\n                // console.log(`running:`, job.id)\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length ||\r\n            pendingPreFlushCbs.length ||\r\n            pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            const instance = fn.ownerInstance;\r\n            const componentName = instance && getComponentName(instance.type);\r\n            warn(`Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n            return true;\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\nfunction watchPostEffect(effect, options) {\r\n    return doWatch(effect, null, ((process.env.NODE_ENV !== 'production')\r\n        ? Object.assign(options || {}, { flush: 'post' })\r\n        : { flush: 'post' }));\r\n}\r\nfunction watchSyncEffect(effect, options) {\r\n    return doWatch(effect, null, ((process.env.NODE_ENV !== 'production')\r\n        ? Object.assign(options || {}, { flush: 'sync' })\r\n        : { flush: 'sync' }));\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    const instance = currentInstance;\r\n    let getter;\r\n    let forceTrigger = false;\r\n    let isMultiSource = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        isMultiSource = true;\r\n        forceTrigger = source.some(isReactive);\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithAsyncErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    let onInvalidate = (fn) => {\r\n        cleanup = effect.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    // in SSR there is no need to setup an actual effect, and it should be noop\r\n    // unless it's eager\r\n    if (isInSSRComponentSetup) {\r\n        // we will also not call the invalidate callback (+ runner is not set up)\r\n        onInvalidate = NOOP;\r\n        if (!cb) {\r\n            getter();\r\n        }\r\n        else if (immediate) {\r\n            callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                getter(),\r\n                isMultiSource ? [] : undefined,\r\n                onInvalidate\r\n            ]);\r\n        }\r\n        return NOOP;\r\n    }\r\n    let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!effect.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = effect.run();\r\n            if (deep ||\r\n                forceTrigger ||\r\n                (isMultiSource\r\n                    ? newValue.some((v, i) => hasChanged(v, oldValue[i]))\r\n                    : hasChanged(newValue, oldValue)) ||\r\n                (false  )) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            effect.run();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job; // the scheduler function gets called directly\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const effect = new ReactiveEffect(getter, scheduler);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        effect.onTrack = onTrack;\r\n        effect.onTrigger = onTrigger;\r\n    }\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = effect.run();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(effect.run.bind(effect), instance && instance.suspense);\r\n    }\r\n    else {\r\n        effect.run();\r\n    }\r\n    return () => {\r\n        effect.stop();\r\n        if (instance && instance.scope) {\r\n            remove(instance.scope.effects, effect);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, value, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? source.includes('.')\r\n            ? createPathGetter(publicThis, source)\r\n            : () => publicThis[source]\r\n        : source.bind(publicThis, publicThis);\r\n    let cb;\r\n    if (isFunction(value)) {\r\n        cb = value;\r\n    }\r\n    else {\r\n        cb = value.handler;\r\n        options = value;\r\n    }\r\n    const cur = currentInstance;\r\n    setCurrentInstance(this);\r\n    const res = doWatch(getter, cb.bind(publicThis), options);\r\n    if (cur) {\r\n        setCurrentInstance(cur);\r\n    }\r\n    else {\r\n        unsetCurrentInstance();\r\n    }\r\n    return res;\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction traverse(value, seen) {\r\n    if (!isObject(value) || value[\"__v_skip\" /* SKIP */]) {\r\n        return value;\r\n    }\r\n    seen = seen || new Set();\r\n    if (seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else if (isPlainObject(value)) {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\n// dev only\r\nconst warnRuntimeUsage = (method) => warn(`${method}() is a compiler-hint helper that is only usable inside ` +\r\n    `<script setup> of a single file component. Its arguments should be ` +\r\n    `compiled away and passing it at runtime has no effect.`);\r\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineProps`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmits() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineEmits`);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. varaibles inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\nfunction defineExpose(exposed) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineExpose`);\r\n    }\r\n}\r\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` declaration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\r\nfunction withDefaults(props, defaults) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`withDefaults`);\r\n    }\r\n    return null;\r\n}\r\nfunction useSlots() {\r\n    return getContext().slots;\r\n}\r\nfunction useAttrs() {\r\n    return getContext().attrs;\r\n}\r\nfunction getContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\r\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\r\nfunction mergeDefaults(raw, defaults) {\r\n    const props = isArray(raw)\r\n        ? raw.reduce((normalized, p) => ((normalized[p] = {}), normalized), {})\r\n        : raw;\r\n    for (const key in defaults) {\r\n        const opt = props[key];\r\n        if (opt) {\r\n            if (isArray(opt) || isFunction(opt)) {\r\n                props[key] = { type: opt, default: defaults[key] };\r\n            }\r\n            else {\r\n                opt.default = defaults[key];\r\n            }\r\n        }\r\n        else if (opt === null) {\r\n            props[key] = { default: defaults[key] };\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`props default key \"${key}\" has no corresponding declaration.`);\r\n        }\r\n    }\r\n    return props;\r\n}\r\n/**\r\n * Used to create a proxy for the rest element when destructuring props with\r\n * defineProps().\r\n * @internal\r\n */\r\nfunction createPropsRestProxy(props, excludedKeys) {\r\n    const ret = {};\r\n    for (const key in props) {\r\n        if (!excludedKeys.includes(key)) {\r\n            Object.defineProperty(ret, key, {\r\n                enumerable: true,\r\n                get: () => props[key]\r\n            });\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\r\nfunction withAsyncContext(getAwaitable) {\r\n    const ctx = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !ctx) {\r\n        warn(`withAsyncContext called without active current instance. ` +\r\n            `This is likely a bug.`);\r\n    }\r\n    let awaitable = getAwaitable();\r\n    unsetCurrentInstance();\r\n    if (isPromise(awaitable)) {\r\n        awaitable = awaitable.catch(e => {\r\n            setCurrentInstance(ctx);\r\n            throw e;\r\n        });\r\n    }\r\n    return [awaitable, () => setCurrentInstance(ctx)];\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\nfunction withMemo(memo, render, cache, index) {\r\n    const cached = cache[index];\r\n    if (cached && isMemoSame(cached, memo)) {\r\n        return cached;\r\n    }\r\n    const ret = render();\r\n    // shallow clone\r\n    ret.memo = memo.slice();\r\n    return (cache[index] = ret);\r\n}\r\nfunction isMemoSame(cached, memo) {\r\n    const prev = cached.memo;\r\n    if (prev.length != memo.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < prev.length; i++) {\r\n        if (prev[i] !== memo[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    // make sure to let parent block track it when returning cached\r\n    if (isBlockTreeEnabled > 0 && currentBlock) {\r\n        currentBlock.push(cached);\r\n    }\r\n    return true;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.2.23\";\r\nconst _ssrUtils = {\r\n    createComponentInstance,\r\n    setupComponent,\r\n    renderComponentRoot,\r\n    setCurrentRenderingInstance,\r\n    isVNode,\r\n    normalizeVNode\r\n};\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (_ssrUtils );\r\n/**\r\n * @internal only exposed in compat builds\r\n */\r\nconst resolveFilter = null;\r\n/**\r\n * @internal only exposed in compat builds.\r\n */\r\nconst compatUtils = (null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, compatUtils, createBlock, createCommentVNode, createElementBlock, createBaseVNode as createElementVNode, createHydrationRenderer, createPropsRestProxy, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmits, defineExpose, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, guardReactiveProps, h, handleError, initCustomFormatter, inject, isMemoSame, isRuntimeOnly, isVNode, mergeDefaults, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onServerPrefetch, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveFilter, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useAttrs, useSSRContext, useSlots, useTransitionState, version, warn, watch, watchEffect, watchPostEffect, watchSyncEffect, withAsyncContext, withCtx, withDefaults, withDirectives, withMemo, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, defineComponent, nextTick, createVNode, getCurrentInstance, watchPostEffect, onMounted, onUnmounted, Fragment, Static, h, BaseTransition, useTransitionState, onUpdated, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createRenderer, isRuntimeOnly, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, includeBooleanAttr, isOn, isModelListener, isFunction, toNumber, camelize as camelize$1, extend, EMPTY_OBJ, isObject, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nconst staticTemplateCache = new Map();\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is, props) => {\r\n        const el = isSVG\r\n            ? doc.createElementNS(svgNS, tag)\r\n            : doc.createElement(tag, is ? { is } : undefined);\r\n        if (tag === 'select' && props && props.multiple != null) {\r\n            el.setAttribute('multiple', props.multiple);\r\n        }\r\n        return el;\r\n    },\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        const cloned = el.cloneNode(true);\r\n        // #3072\r\n        // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n        // - normally, elements using `:value` bindings will not be hoisted, but if\r\n        //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n        //   hoisted.\r\n        // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n        //   cloneNode() does not copy the custom property we attached.\r\n        // - This may need to account for other custom DOM properties we attach to\r\n        //   elements in addition to `_value` in the future.\r\n        if (`_value` in el) {\r\n            cloned._value = el._value;\r\n        }\r\n        return cloned;\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        // <parent> before | first ... last | anchor </parent>\r\n        const before = anchor ? anchor.previousSibling : parent.lastChild;\r\n        let template = staticTemplateCache.get(content);\r\n        if (!template) {\r\n            const t = doc.createElement('template');\r\n            t.innerHTML = isSVG ? `<svg>${content}</svg>` : content;\r\n            template = t.content;\r\n            if (isSVG) {\r\n                // remove outer svg wrapper\r\n                const wrapper = template.firstChild;\r\n                while (wrapper.firstChild) {\r\n                    template.appendChild(wrapper.firstChild);\r\n                }\r\n                template.removeChild(wrapper);\r\n            }\r\n            staticTemplateCache.set(content, template);\r\n        }\r\n        parent.insertBefore(template.cloneNode(true), anchor);\r\n        return [\r\n            // first\r\n            before ? before.nextSibling : parent.firstChild,\r\n            // last\r\n            anchor ? anchor.previousSibling : parent.lastChild\r\n        ];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    // directly setting className should be faster than setAttribute in theory\r\n    // if this is an element during a transition, take the temporary transition\r\n    // classes into account.\r\n    const transitionClasses = el._vtc;\r\n    if (transitionClasses) {\r\n        value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(' ');\r\n    }\r\n    if (value == null) {\r\n        el.removeAttribute('class');\r\n    }\r\n    else if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    const isCssString = isString(next);\r\n    if (next && !isCssString) {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const currentDisplay = style.display;\r\n        if (isCssString) {\r\n            if (prev !== next) {\r\n                style.cssText = next;\r\n            }\r\n        }\r\n        else if (prev) {\r\n            el.removeAttribute('style');\r\n        }\r\n        // indicates that the `display` of the element is controlled by `v-show`,\r\n        // so we always keep the current `display` value regardless of the `style`\r\n        // value, thus handing over control to `v-show`.\r\n        if ('_vod' in el) {\r\n            style.display = currentDisplay;\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG, instance) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && !includeBooleanAttr(value))) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' &&\r\n        el.tagName !== 'PROGRESS' &&\r\n        // custom elements may use _value internally\r\n        !el.tagName.includes('-')) {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue ||\r\n            // #4956: always set for OPTION elements because its value falls back to\r\n            // textContent if no value attribute is present. And setting .value for\r\n            // OPTION has no side effect\r\n            el.tagName === 'OPTION') {\r\n            el.value = newValue;\r\n        }\r\n        if (value == null) {\r\n            el.removeAttribute(key);\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = includeBooleanAttr(value);\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            // the value of some IDL attr must be greater than 0, e.g. input.size = 0 -> error\r\n            try {\r\n                el[key] = 0;\r\n            }\r\n            catch (_a) { }\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\nlet skipTimestampCheck = false;\r\nif (typeof window !== 'undefined') {\r\n    // Determine what event timestamp the browser is using. Annoyingly, the\r\n    // timestamp can either be hi-res (relative to page load) or low-res\r\n    // (relative to UNIX epoch), so in order to compare time we have to use the\r\n    // same timestamp type when saving the flush timestamp.\r\n    if (_getNow() > document.createEvent('Event').timeStamp) {\r\n        // if the low-res timestamp which is bigger than the event timestamp\r\n        // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n        // and we need to use the hi-res version for event listeners as well.\r\n        _getNow = () => performance.now();\r\n    }\r\n    // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n    // and does not fire microtasks in between event propagation, so safe to exclude.\r\n    const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i);\r\n    skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53);\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [hyphenate(name.slice(2)), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    if (key === 'class') {\r\n        patchClass(el, nextValue, isSVG);\r\n    }\r\n    else if (key === 'style') {\r\n        patchStyle(el, prevValue, nextValue);\r\n    }\r\n    else if (isOn(key)) {\r\n        // ignore v-model listeners\r\n        if (!isModelListener(key)) {\r\n            patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n        }\r\n    }\r\n    else if (key[0] === '.'\r\n        ? ((key = key.slice(1)), true)\r\n        : key[0] === '^'\r\n            ? ((key = key.slice(1)), false)\r\n            : shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n        patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n    }\r\n    else {\r\n        // special case for <input v-model type=\"checkbox\"> with\r\n        // :true-value & :false-value\r\n        // store value as dom properties since non-string values will be\r\n        // stringified.\r\n        if (key === 'true-value') {\r\n            el._trueValue = nextValue;\r\n        }\r\n        else if (key === 'false-value') {\r\n            el._falseValue = nextValue;\r\n        }\r\n        patchAttr(el, key, nextValue, isSVG);\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML & textContent\r\n        if (key === 'innerHTML' || key === 'textContent') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787, #2840 form property on form elements is readonly and must be set as\r\n    // attribute.\r\n    if (key === 'form') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // #2766 <textarea type> must be set as attribute\r\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction defineCustomElement(options, hydate) {\r\n    const Comp = defineComponent(options);\r\n    class VueCustomElement extends VueElement {\r\n        constructor(initialProps) {\r\n            super(Comp, initialProps, hydate);\r\n        }\r\n    }\r\n    VueCustomElement.def = Comp;\r\n    return VueCustomElement;\r\n}\r\nconst defineSSRCustomElement = ((options) => {\r\n    // @ts-ignore\r\n    return defineCustomElement(options, hydrate);\r\n});\r\nconst BaseClass = (typeof HTMLElement !== 'undefined' ? HTMLElement : class {\r\n});\r\nclass VueElement extends BaseClass {\r\n    constructor(_def, _props = {}, hydrate) {\r\n        super();\r\n        this._def = _def;\r\n        this._props = _props;\r\n        /**\r\n         * @internal\r\n         */\r\n        this._instance = null;\r\n        this._connected = false;\r\n        this._resolved = false;\r\n        this._numberProps = null;\r\n        if (this.shadowRoot && hydrate) {\r\n            hydrate(this._createVNode(), this.shadowRoot);\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && this.shadowRoot) {\r\n                warn(`Custom element has pre-rendered declarative shadow root but is not ` +\r\n                    `defined as hydratable. Use \\`defineSSRCustomElement\\`.`);\r\n            }\r\n            this.attachShadow({ mode: 'open' });\r\n        }\r\n    }\r\n    connectedCallback() {\r\n        this._connected = true;\r\n        if (!this._instance) {\r\n            this._resolveDef();\r\n        }\r\n    }\r\n    disconnectedCallback() {\r\n        this._connected = false;\r\n        nextTick(() => {\r\n            if (!this._connected) {\r\n                render(null, this.shadowRoot);\r\n                this._instance = null;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * resolve inner component definition (handle possible async component)\r\n     */\r\n    _resolveDef() {\r\n        if (this._resolved) {\r\n            return;\r\n        }\r\n        this._resolved = true;\r\n        // set initial attrs\r\n        for (let i = 0; i < this.attributes.length; i++) {\r\n            this._setAttr(this.attributes[i].name);\r\n        }\r\n        // watch future attr changes\r\n        new MutationObserver(mutations => {\r\n            for (const m of mutations) {\r\n                this._setAttr(m.attributeName);\r\n            }\r\n        }).observe(this, { attributes: true });\r\n        const resolve = (def) => {\r\n            const { props, styles } = def;\r\n            const hasOptions = !isArray(props);\r\n            const rawKeys = props ? (hasOptions ? Object.keys(props) : props) : [];\r\n            // cast Number-type props set before resolve\r\n            let numberProps;\r\n            if (hasOptions) {\r\n                for (const key in this._props) {\r\n                    const opt = props[key];\r\n                    if (opt === Number || (opt && opt.type === Number)) {\r\n                        this._props[key] = toNumber(this._props[key]);\r\n                        (numberProps || (numberProps = Object.create(null)))[key] = true;\r\n                    }\r\n                }\r\n            }\r\n            this._numberProps = numberProps;\r\n            // check if there are props set pre-upgrade or connect\r\n            for (const key of Object.keys(this)) {\r\n                if (key[0] !== '_') {\r\n                    this._setProp(key, this[key], true, false);\r\n                }\r\n            }\r\n            // defining getter/setters on prototype\r\n            for (const key of rawKeys.map(camelize$1)) {\r\n                Object.defineProperty(this, key, {\r\n                    get() {\r\n                        return this._getProp(key);\r\n                    },\r\n                    set(val) {\r\n                        this._setProp(key, val);\r\n                    }\r\n                });\r\n            }\r\n            // apply CSS\r\n            this._applyStyles(styles);\r\n            // initial render\r\n            this._update();\r\n        };\r\n        const asyncDef = this._def.__asyncLoader;\r\n        if (asyncDef) {\r\n            asyncDef().then(resolve);\r\n        }\r\n        else {\r\n            resolve(this._def);\r\n        }\r\n    }\r\n    _setAttr(key) {\r\n        let value = this.getAttribute(key);\r\n        if (this._numberProps && this._numberProps[key]) {\r\n            value = toNumber(value);\r\n        }\r\n        this._setProp(camelize$1(key), value, false);\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _getProp(key) {\r\n        return this._props[key];\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _setProp(key, val, shouldReflect = true, shouldUpdate = true) {\r\n        if (val !== this._props[key]) {\r\n            this._props[key] = val;\r\n            if (shouldUpdate && this._instance) {\r\n                this._update();\r\n            }\r\n            // reflect\r\n            if (shouldReflect) {\r\n                if (val === true) {\r\n                    this.setAttribute(hyphenate(key), '');\r\n                }\r\n                else if (typeof val === 'string' || typeof val === 'number') {\r\n                    this.setAttribute(hyphenate(key), val + '');\r\n                }\r\n                else if (!val) {\r\n                    this.removeAttribute(hyphenate(key));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _update() {\r\n        render(this._createVNode(), this.shadowRoot);\r\n    }\r\n    _createVNode() {\r\n        const vnode = createVNode(this._def, extend({}, this._props));\r\n        if (!this._instance) {\r\n            vnode.ce = instance => {\r\n                this._instance = instance;\r\n                instance.isCE = true;\r\n                // HMR\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    instance.ceReload = newStyles => {\r\n                        // alawys reset styles\r\n                        if (this._styles) {\r\n                            this._styles.forEach(s => this.shadowRoot.removeChild(s));\r\n                            this._styles.length = 0;\r\n                        }\r\n                        this._applyStyles(newStyles);\r\n                        // if this is an async component, ceReload is called from the inner\r\n                        // component so no need to reload the async wrapper\r\n                        if (!this._def.__asyncLoader) {\r\n                            // reload\r\n                            this._instance = null;\r\n                            this._update();\r\n                        }\r\n                    };\r\n                }\r\n                // intercept emit\r\n                instance.emit = (event, ...args) => {\r\n                    this.dispatchEvent(new CustomEvent(event, {\r\n                        detail: args\r\n                    }));\r\n                };\r\n                // locate nearest Vue custom element parent for provide/inject\r\n                let parent = this;\r\n                while ((parent =\r\n                    parent && (parent.parentNode || parent.host))) {\r\n                    if (parent instanceof VueElement) {\r\n                        instance.parent = parent._instance;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        return vnode;\r\n    }\r\n    _applyStyles(styles) {\r\n        if (styles) {\r\n            styles.forEach(css => {\r\n                const s = document.createElement('style');\r\n                s.textContent = css;\r\n                this.shadowRoot.appendChild(s);\r\n                // record for HMR\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    (this._styles || (this._styles = [])).push(s);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    watchPostEffect(setVars);\r\n    onMounted(() => {\r\n        const ob = new MutationObserver(setVars);\r\n        ob.observe(instance.subTree.el.parentNode, { childList: true });\r\n        onUnmounted(() => ob.disconnect());\r\n    });\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        setVarsOnNode(vnode.el, vars);\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n    else if (vnode.type === Static) {\r\n        let { el, anchor } = vnode;\r\n        while (el) {\r\n            setVarsOnNode(el, vars);\r\n            if (el === anchor)\r\n                break;\r\n            el = el.nextSibling;\r\n        }\r\n    }\r\n}\r\nfunction setVarsOnNode(el, vars) {\r\n    if (el.nodeType === 1) {\r\n        const style = el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props =\r\n    /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\n/**\r\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\r\n * with custom HOCs.\r\n */\r\nconst callHook = (hook, args = []) => {\r\n    if (isArray(hook)) {\r\n        hook.forEach(h => h(...args));\r\n    }\r\n    else if (hook) {\r\n        hook(...args);\r\n    }\r\n};\r\n/**\r\n * Check if a hook expects a callback (2nd arg), which means the user\r\n * intends to explicitly control the end of the transition.\r\n */\r\nconst hasExplicitCallback = (hook) => {\r\n    return hook\r\n        ? isArray(hook)\r\n            ? hook.some(h => h.length > 1)\r\n            : hook.length > 1\r\n        : false;\r\n};\r\nfunction resolveTransitionProps(rawProps) {\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (rawProps.css === false) {\r\n        return baseProps;\r\n    }\r\n    const { name = 'v', type, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            callHook(hook, [el, resolve]);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!hasExplicitCallback(hook)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            callHook(onBeforeEnter, [el]);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            callHook(onBeforeAppear, [el]);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!hasExplicitCallback(onLeave)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            callHook(onLeave, [el, resolve]);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            callHook(onEnterCancelled, [el]);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            callHook(onAppearCancelled, [el]);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            callHook(onLeaveCancelled, [el]);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            let tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1 ? root : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || (vnode.props && vnode.props.type === 'number');\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (lazy) {\r\n                return;\r\n            }\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    // #4096 array checkboxes need to be deep traversed\r\n    deep: true,\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    // <select multiple> value need to be deep traversed\r\n    deep: true,\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                if (el.selectedIndex !== i)\r\n                    el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple && el.selectedIndex !== -1) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nfunction initVModelForSSR() {\r\n    vModelText.getSSRProps = ({ value }) => ({ value });\r\n    vModelRadio.getSSRProps = ({ value }, vnode) => {\r\n        if (vnode.props && looseEqual(vnode.props.value, value)) {\r\n            return { checked: true };\r\n        }\r\n    };\r\n    vModelCheckbox.getSSRProps = ({ value }, vnode) => {\r\n        if (isArray(value)) {\r\n            if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\r\n                return { checked: true };\r\n            }\r\n        }\r\n        else if (isSet(value)) {\r\n            if (vnode.props && value.has(vnode.props.value)) {\r\n                return { checked: true };\r\n            }\r\n        }\r\n        else if (value) {\r\n            return { checked: true };\r\n        }\r\n    };\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event)) {\r\n            return;\r\n        }\r\n        const eventKey = hyphenate(event.key);\r\n        if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return fn(event);\r\n        }\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nfunction initVShowForSSR() {\r\n    vShow.getSSRProps = ({ value }) => {\r\n        if (!value) {\r\n            return { style: { display: 'none' } };\r\n        }\r\n    };\r\n}\n\nconst rendererOptions = extend({ patchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return (renderer ||\r\n        (renderer = createRenderer(rendererOptions)));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCompilerOptionsCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            // __UNSAFE__\r\n            // Reason: potential execution of JS expressions in in-DOM template.\r\n            // The user must make sure the in-DOM template is trusted. If it's\r\n            // rendered by the server, the template should not contain any user data.\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container, false, container instanceof SVGElement);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCompilerOptionsCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true, container instanceof SVGElement);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\n// dev only\r\nfunction injectCompilerOptionsCheck(app) {\r\n    if (isRuntimeOnly()) {\r\n        const isCustomElement = app.config.isCustomElement;\r\n        Object.defineProperty(app.config, 'isCustomElement', {\r\n            get() {\r\n                return isCustomElement;\r\n            },\r\n            set() {\r\n                warn(`The \\`isCustomElement\\` config option is deprecated. Use ` +\r\n                    `\\`compilerOptions.isCustomElement\\` instead.`);\r\n            }\r\n        });\r\n        const compilerOptions = app.config.compilerOptions;\r\n        const msg = `The \\`compilerOptions\\` config option is only respected when using ` +\r\n            `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\r\n            `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\r\n            `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\r\n            `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\r\n            `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\r\n            `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`;\r\n        Object.defineProperty(app.config, 'compilerOptions', {\r\n            get() {\r\n                warn(msg);\r\n                return compilerOptions;\r\n            },\r\n            set() {\r\n                warn(msg);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        window.ShadowRoot &&\r\n        container instanceof window.ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\r\nlet ssrDirectiveInitialized = false;\r\n/**\r\n * @internal\r\n */\r\nconst initDirectivesForSSR = () => {\r\n        if (!ssrDirectiveInitialized) {\r\n            ssrDirectiveInitialized = true;\r\n            initVModelForSSR();\r\n            initVShowForSSR();\r\n        }\r\n    }\r\n    ;\n\nexport { Transition, TransitionGroup, VueElement, createApp, createSSRApp, defineCustomElement, defineSSRCustomElement, hydrate, initDirectivesForSSR, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","<template>\n  <div>\n    <section class=\"hero is-primary is-bold\">\n      <div class=\"hero-body\" style=\"padding: 0px\">\n        <div class=\"container\">\n          <div class=\"floating-hero\">\n            <span class=\"title\">Peptide Dashboard</span><br />\n            <span class=\"subtitle\">\n              <a href=\"https://thewhitelab.org\">thewhitelab.org</a>\n            </span>\n          </div>\n          <sequence-viewer\n            :sequence=\"sequence\"\n            :view-width=\"viewWidth\"\n            v-on:selection-update=\"selectedIndex = $event\"\n          ></sequence-viewer>\n          <div class=\"container\"></div>\n        </div>\n      </div>\n    </section>\n    <section>\n      <version :version=\"version\"></version>\n    </section>\n    <section>\n      <div class=\"container\">\n        <div class=\"columns is-centered\">\n          <div class=\"column\">\n            <h1 class=\"is-size-4 is-spaced bd-anchor-title\">Enter Sequence</h1>\n            <div class=\"field has-addons\">\n              <div ref=\"sequencecontainer\" class=\"control is-expanded\">\n                <sequence-input v-on:sequence-update=\"sequence = $event\">\n                </sequence-input>\n              </div>\n              <div class=\"control\">\n                <a class=\"button is-info\"> Enter </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <section>\n      <div class=\"container\">\n        <div class=\"tile is-ancestor\">\n          <div class=\"tile is-6 is-parent\">\n            <div class=\"card tile is-child\">\n              <header class=\"card-header\">\n                <h3\n                  class=\"card-header-title is-size-4 is-spaced bd-anchor-title\"\n                >\n                  Milton Coupling Efficiency\n                </h3>\n                <a href=\"#\" class=\"card-header-icon\" aria-label=\"more options\">\n                  <span class=\"icon\">\n                    <i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>\n                  </span>\n                </a>\n              </header>\n              <div class=\"card-content\">\n                <milton\n                  :sequence=\"sequence\"\n                  :selectedIndex=\"selectedIndex\"\n                ></milton>\n              </div>\n              <footer class=\"card-footer\">\n                <reference\n                  reflink=\"https://pubs.acs.org/doi/abs/10.1021/ja00172a020\"\n                  reftitle=\"Prediction of difficult sequences in solid-phase peptide synthesis\"\n                  journal=\"J. Am. Chem. Soc.\"\n                  year=\"1990\"\n                  volume=\"112\"\n                  issue=\"16\"\n                  pages=\"6039-6046\"\n                  doi=\"10.1021/ja00172a020\"\n                ></reference>\n              </footer>\n            </div>\n          </div>\n          <div class=\"tile is-6 is-parent\">\n            <div class=\"card tile is-child\">\n              <header class=\"card-header\">\n                <h3 class=\"card-header-title is-size-4 is-spaced\">\n                  Solubility Prediction<sup>*</sup>\n                </h3>\n              </header>\n              <div class=\"card-content\">\n                <p class=\"card-header-subtitle is-size-5 is-spaced\">\n                  Predicted solubility of given sequence\n                </p>\n                <tf-prediction\n                  url=\"https://raw.githubusercontent.com/ur-whitelab/peptide-dashboard/master/models/sol-rnn/\"\n                  :sequence=\"sequence\"\n                ></tf-prediction>\n              </div>\n              <footer class=\"card-footer\">\n                <reference\n                  reflink=\"https://pubs.acs.org/doi/10.1021/acs.jcim.0c00946\"\n                  reftitle=\"Investigating Active Learning and Meta-Learning for Iterative Peptide Design\"\n                  journal=\"J. Chem. Inf. Model.\"\n                  year=\"2021\"\n                ></reference>\n              </footer>\n            </div>\n          </div>\n        </div>\n        <div class=\"tile\">\n          <footer>\n            <small\n              ><sup>*</sup>Datasets:\n              <a href=\"http://aps.unmc.edu/AP/main.php\"\n                >Antimicrobial Peptide Database</a\n              >,\n              <a\n                href=\"http://pubs.rsc.org/en/content/articlehtml/2012/sc/c2sc21135a\"\n                >Antifouling Dataset (White et al.)</a\n              ></small\n            >\n          </footer>\n          <!-- Add content or other tiles -->\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport Version from \"./Version.vue\";\nimport SequenceViewer from \"./SequenceViewer\";\nimport Milton from \"./results/Milton\";\nimport SequenceInput from \"./SequenceInput\";\nimport TfPrediction from \"./results/TfPrediction\";\nimport Reference from \"./Reference\";\nimport pjson from \"../../package.json\";\n\nexport default {\n  name: \"App\",\n  components: {\n    SequenceViewer,\n    Milton,\n    TfPrediction,\n    SequenceInput,\n    Reference,\n    Version,\n  },\n  data() {\n    return {\n      sequence: \"\",\n      viewWidth: 800,\n      selectedIndex: -1,\n      version: pjson[\"version\"],\n    };\n  },\n  mounted: function () {\n    this.viewWidth = this.$refs.sequencecontainer.offsetWidth;\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.floating-hero {\n  position: absolute;\n  left: 0px;\n  top: 0px;\n  padding: 0.75rem;\n  z-index: 2;\n}\n\nsection {\n  margin-bottom: 1.5em;\n}\n\n.tile {\n  padding: 0.38rem;\n}\n.card-footer {\n  position: absolute;\n  bottom: 0rem;\n}\nfooter {\n  position: absolute;\n  bottom: 0rem;\n}\n</style>\n","<template>\n  <div v-if=\"show\" class=\"container\">\n    <article class=\"message is-warning\">\n      <div class=\"message-header\">\n        <p>This is science in progress!</p>\n        <button\n          @click=\"show = false\"\n          class=\"delete\"\n          aria-label=\"delete\"\n        ></button>\n      </div>\n      <div class=\"message-body\">\n        <strong> Version: {{ version }}</strong> You are viewing an early\n        version of an upcoming research paper. The models and predictions shown\n        here should be viewed for entertainment purposes only. Come back often\n        for newer versions.\n      </div>\n    </article>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Version\",\n  props: {\n    version: String,\n  },\n  data() {\n    return {\n      show: true,\n    };\n  },\n};\n</script>","<template>\n  <canvas ref=\"sequenceGraph\" width=\"960\" height=\"200\"> </canvas>\n</template>\n\n<script>\nimport SequenceD3 from \"./lib/sequence.js\";\nimport _ from \"lodash\";\nexport default {\n  name: \"SequenceViewer\",\n  props: {\n    sequence: String,\n    viewWidth: Number,\n  },\n  data() {\n    return {\n      sd3: null,\n    };\n  },\n  mounted: function () {\n    this.updateCanvasSize();\n  },\n  watch: {\n    sequence: _.debounce(function () {\n      this.sd3.update(this.sequence);\n    }, 500),\n\n    viewWidth: function () {\n      this.updateCanvasSize();\n    },\n  },\n  methods: {\n    updateCanvasSize: function () {\n      if (this.$refs.sequenceGraph.width !== this.viewWidth) {\n        this.$refs.sequenceGraph.width = this.viewWidth;\n        let ctx = this.$refs.sequenceGraph.getContext(\"2d\");\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        if (!this.sd3)\n          this.sd3 = new SequenceD3(this.$refs.sequenceGraph, (index) => {\n            this.$emit(\"selection-update\", index);\n          });\n        else this.sd3.width = this.viewWidth;\n\n        this.sd3.update(this.sequence);\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n</style>\n","import {event, select} from 'd3-selection'\nimport {forceSimulation, forceManyBody, forceCenter, forceLink, forceX, forceY} from 'd3-force'\nimport {drag} from 'd3-drag'\n\nclass SequenceD3 {\n  constructor (canvas, selectionListener) {\n    this.canvas = canvas\n    this.context = canvas.getContext('2d')\n    this.width = canvas.width\n    this.height = canvas.height\n    this.selectionListener = selectionListener\n\n    this.simulation = forceSimulation()\n      .force('link', forceLink().distance(this.width / 20))\n      .force('charge', forceManyBody())\n      .force('repel', forceManyBody().strength(-150).distanceMax(5))\n      .force('x', forceX().strength(0.0))\n      .force('y', forceY().strength(0.0))\n      // set center a little low to prevent occluding title\n      .force('center', forceCenter(this.width / 2, this.height * 0.65))\n\n    select(canvas)\n      .call(drag()\n        .container(canvas)\n        .subject(() => this.simulation.find(event.x, event.y))\n        .on('start', () => {\n          if (!event.active) this.simulation.alphaTarget(0.3).restart()\n          event.subject.fx = event.subject.x\n          event.subject.fy = event.subject.y\n          this.selected = event.subject.id\n          this.selectionListener(event.subject.id)\n        })\n        .on('drag', () => {\n          event.subject.fx = event.x\n          event.subject.fy = event.y\n        })\n        .on('end', () => {\n          if (!event.active) this.simulation.alphaTarget(0)\n          event.subject.fx = null\n          event.subject.fy = null\n        }))\n\n    // default size\n    this.radius = 250\n    this.selected = -1\n\n    this.simulation.on('tick', this.ticked.bind(this))\n    this.update('')\n  }\n\n  update (sequence) {\n    this.nodes = sequence.split('').map((x, i) => { return {name: x, id: i, y: 0, x: i * this.width / sequence.length - this.width / 2} })\n    // keep data for existing nodes\n\n    // give new one a kick\n    if (this.nodes.length > 0)\n      this.nodes[this.nodes.length - 1].vx = 0.0\n\n    // adjust centering force\n    if (sequence.length > 10) {\n      this.simulation.force('x').strength(Math.min(0.05, this.nodes.length * 0.05 / 50))\n      this.simulation.force('y').strength(Math.min(0.1, this.nodes.length * 0.1 / 50))\n    }\n\n    // remove selection if too big\n\n    // adjust drawing properties\n    // Have upper/lower bound for sizes\n    this.radius = Math.min(50, Math.max(7, 250 / (this.nodes.length + 1)))\n    this.simulation.force('repel').distanceMax(this.radius * 2)\n    this.context.font = `${Math.round(Math.max(10, 72 / Math.sqrt(1 + this.nodes.length)))}px sans-serif`\n\n    // update forces\n    this.simulation.nodes(this.nodes)\n    this.simulation.force('center').x(this.width / 2)\n    this.links = this.simulation.nodes().slice(0, -1).map((n, i) => { return {source: i, target: i + 1} })\n    this.simulation.force('link').links(this.links)\n    this.simulation.force('link').distance(this.width / this.nodes.length)\n    this.simulation.alphaTarget(0.3).restart()\n  }\n\n  ticked () {\n    this.context.clearRect(0, 0, this.width, this.height)\n\n    this.context.beginPath()\n    this.nodes.slice(0, -1).forEach((d, i) => {\n      this.context.moveTo(d.x, d.y)\n      this.context.lineTo(this.nodes[i + 1].x, this.nodes[i + 1].y)\n    })\n    this.context.strokeStyle = '#aaa'\n    this.context.stroke()\n\n    this.context.beginPath()\n    this.nodes.forEach((d) => {\n      this.context.moveTo(d.x + this.radius, d.y)\n      this.context.arc(d.x, d.y, this.radius, 0, 2 * Math.PI)\n    })\n    // remove lines inside the cirlce\n    this.context.fillStyle = '#FFF'\n    this.context.fill()\n    this.context.strokeStyle = '#666'\n    this.context.stroke()\n\n    // hanlde selection\n    if (this.selected >= 0) {\n      this.context.beginPath()\n      this.context.fillStyle = '#FF3434'\n      this.context.moveTo(this.nodes[this.selected] + this.radius, this.nodes[this.selected].y)\n      this.context.arc(this.nodes[this.selected].x, this.nodes[this.selected].y, this.radius, 0, 2 * Math.PI)\n      this.context.fill()\n      this.context.strokeStyle = '#666'\n      this.context.stroke()\n    }\n\n    this.context.fillStyle = '#444'\n    this.context.textAlign = 'center'\n    this.context.textBaseline = 'middle'\n    this.nodes.forEach((d) => {\n      this.context.fillText(d.name.toUpperCase(), d.x, d.y)\n    })\n  }\n}\n\nexport default SequenceD3\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(update) {\n  return new Array(update.length);\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","export default function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {map} from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\nimport {x, y} from \"./simulation\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.each(function (force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import constant from \"./constant\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\nimport constant from \"./constant.js\";\nimport DragEvent from \"./event.js\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent.js\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","<template>\n  <div ref=\"parent\">\n    <div ref=\"scatter\"></div>\n  </div>\n</template>\n\n<script>\n\nimport Scatter from '../lib/scatter.js'\nimport _ from 'lodash'\nlet miltonData = require('../lib/milton.json')\n\nexport default {\n  name: 'Milton',\n  props: {\n    sequence: String,\n    selectedIndex: Number\n  },\n  data () {\n    return {\n      scatter: new Scatter(),\n      delay: 2\n    }\n  },\n  mounted: function () {\n    this.scatter.draw(this.$refs.scatter, this.$refs.parent.offsetWidth * 0.7, 400, 'Position', 'Relative Ease of Synthesis')\n  },\n  watch: {\n    sequence: _.debounce(function (s) {\n      this.scatter.plot(this.processSequence(this.sequence, miltonData), this.delay)\n    }, 1500)\n  },\n  methods: {\n    processSequence: function (str, data) {\n      var values = []\n      var sum = 0.0\n      for (var i = 0, len = str.length; i < len; i++) {\n        var c = str[i].toUpperCase()\n        if (data.hasOwnProperty(c))\n          sum += data[c]\n        else\n          sum += 1.0\n\n        values.push([i + 1, sum / (i + 1)])\n      }\n      return values\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n\n.line {\n  fill:none;\n  stroke: #3355FF;\n  stroke-width: 2px;\n}\n\n.line-area {\n  fill: #3355FF;\n  opacity: 0.2;\n}\n\n\n.axis {\n  shape-rendering: crispEdges;\n}\n\n.x.label, .y.label {\n  font-size: 100%;\n  font-weight: normal;\n}\n\n.x.axis .minor, .y.axis .minor {\n  stroke-opacity: .5;\n}\n\n\n.y.axis line, .y.axis path, .x.axis line, .x.axis path {\n  fill: none;\n  stroke: #222;\n}\n\n.circle {\n  fill: #FFF;\n  stroke: #3355FF;\n  stroke-width: 2px;\n}\n\n.selected-circle {\n  fill: #FF2255;\n  stroke: #FFF;\n}\n\n.margin {\n  fill:none;\n}\n\n.canvas {\n  fill:none;\n}\n\n</style>\n","import {scaleLinear} from 'd3-scale'\nimport {axisBottom, axisLeft} from 'd3-axis'\nimport {line, area} from 'd3-shape'\nimport {min, max} from 'd3-array'\nimport {select} from 'd3-selection'\nimport 'd3-transition'\n\nclass Scatter {\n  constructor () {\n    this.margin = 100\n    this.labelMargin = 50\n  }\n\n  draw (root, width, height, xlabel, ylabel) {\n    this.width -= this.margin + this.labelMargin\n    this.height -= this.margin + this.labelMargin\n    this.svg = select(root).append('svg')\n      .attr('width', width + this.margin + this.labelMargin)\n      .attr('height', height + this.margin + this.labelMargin)\n      .style('background', '#FFF')\n    this.width = width\n    this.height = height\n\n    this.svg.append('rect')\n      .attr('width', this.width + this.margin)\n      .attr('height', this.height + this.margin)\n      .classed('margin', true)\n\n    this.plot_group = this.svg.append('g')\n      .attr('transform',\n        'translate(' + (this.margin / 2 + this.labelMargin) +\n        ',' + (this.margin / 2) + ')')\n\n    this.plot_group.append('rect')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .classed('canvas', true)\n\n    this.xScale = scaleLinear().domain(\n      [1, 10])\n      .range([0, this.width])\n\n    this.yScale = scaleLinear().domain(\n      [0, 1])\n      .range([this.height, 25])\n\n    this.xAxis = axisBottom().scale(this.xScale)\n    this.yAxis = axisLeft().scale(this.yScale).ticks(4)\n\n    // Add the x-axis.\n    this.plot_group.append('g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0,' + this.height + ')')\n      .call(this.xAxis)\n\n    this.plot_group.append('text')\n      .attr('class', 'x label')\n      .attr('text-anchor', 'middle')\n      .attr('x', this.width / 2)\n      .attr('y', this.height + this.margin / 2)\n      .text(xlabel)\n\n    // Add the y-axis.\n    this.plot_group.append('g')\n      .attr('class', 'y axis')\n      .call(this.yAxis)\n\n    this.plot_group.append('text')\n      .attr('class', 'y label')\n      .attr('text-anchor', 'middle')\n      .attr('transform', 'translate(' + (-this.margin / 2) + ', ' + this.height / 2 + ') rotate(-90)')\n      .text(ylabel)\n\n    this.lineFxn = line()\n      .x((d) => {\n        return this.xScale(d[0])\n      })\n      .y((d) => {\n        return this.yScale(d[1])\n      })\n    this.plot_group.append('path').attr('d', this.lineFxn([])).classed('line', true)\n\n    this.areaFxn = area()\n      .x((d) => {\n        return this.xScale(d[0])\n      })\n      .y0(this.height)\n      .y1((d) => {\n        return this.yScale(d[1])\n      })\n    this.plot_group.append('path')\n      .attr('d', this.areaFxn([])).classed('line-area', true)\n  }\n\n  plot (data, delay) {\n    // this updates our plotting scale\n    this.xScale = scaleLinear().domain(\n      [min(data\n        .map(function (x) {\n          return x[0]\n        })),\n      max(data\n        .map(function (x) {\n          return x[0]\n        }))\n      ])\n      .range([0, this.width])\n\n    this.yScale = scaleLinear().domain(\n      [min(data\n        .map(function (x) {\n          return x[1]\n        })),\n      max(data\n        .map(function (x) {\n          return x[1]\n        }))\n      ])\n      .range([this.height, 25])\n\n      // recomputes ticks\n    this.xAxis = axisBottom().scale(this.xScale)\n    this.yAxis = axisLeft().scale(this.yScale).ticks(4)\n\n    // updates lines\n    this.plot_group.transition().select('.line').duration(delay).attr('d', this.lineFxn(data))\n\n    // update circles (see above for more notes)\n    let xScale = this.xScale\n    let yScale = this.yScale\n    let that = this\n    let updateSel = this.plot_group.selectAll('circle')\n      .data(data, (d) => { return d })\n    updateSel\n      .enter().append('circle')\n      .attr('cx', (d) => { return xScale(d[0]) })\n      .attr('cy', (d) => { return yScale(d[1]) })\n      .attr('r', 5)\n      .attr('opacity', 0)\n      .classed('circle', true)\n    updateSel\n      .exit().remove()\n\n    this.plot_group.transition()\n      .selectAll('circle')\n      .duration(delay / 4)\n      .attr('opacity', 0)\n      .on('end', function () {\n        updateSel\n          .attr('cx', (d) => { return xScale(d[0]) })\n          .attr('cy', (d) => { return yScale(d[1]) })\n        that.plot_group.transition().selectAll('circle').delay(delay / 4).duration(delay).attr('opacity', 1)\n      })\n\n    this.plot_group.transition().select('.line-area').duration(delay / 4).style('opacity', 0).on('end', function () {\n      that.plot_group.select('.line-area').attr('d', that.areaFxn(data))\n      that.plot_group.transition().select('.line-area').delay(delay / 4).duration(delay / 2).style('opacity', 0.2)\n    })\n\n    this.plot_group.transition().select('.y.axis').duration(delay).call(this.yAxis)\n    this.plot_group.transition().select('.x.axis').duration(delay).call(this.xAxis)\n  }\n\n  select (i) {\n    return null\n  }\n}\n\nexport default Scatter\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.interpolator(domain); break;\n    default: this.interpolator(interpolator).domain(domain); break;\n  }\n  return this;\n}\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal() {\n  var index = map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0], b = domain[domain.length - 1], t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","import number from \"../number.js\";\nimport {parseCss, parseSvg} from \"./parse.js\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","import decompose, {identity} from \"./decompose.js\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"],\n  minus: \"-\"\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"-\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": formatDecimal,\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport nice from \"./nice\";\nimport {copy, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport function loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {linearish} from \"./linear\";\nimport {copy, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {linearish} from \"./linear\";\nimport {copy, identity, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nexport function powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nexport default function pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nexport function sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n","import {bisector, tickStep} from \"d3-array\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(identity, identity),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return initRange.apply(calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n","import interval from \"./interval.js\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = function(date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval.js\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval.js\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval.js\";\nimport {durationMinute} from \"./duration.js\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval.js\";\nimport {durationHour} from \"./duration.js\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval.js\";\nimport {durationDay} from \"./duration.js\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval.js\";\nimport {durationWeek} from \"./duration.js\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval.js\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval.js\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newDate(y, m, d) {\n  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"g\": formatYearISO,\n    \"G\": formatFullYearISO,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"q\": formatQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"g\": formatUTCYearISO,\n    \"G\": formatUTCFullYearISO,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"q\": formatUTCQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"g\": parseYear,\n    \"G\": parseFullYear,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"q\": parseQuarter,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, Z) {\n    return function(string) {\n      var d = newDate(1900, undefined, 1),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n      if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0));\n\n      // If this is utcParse, never use the local timezone.\n      if (Z && !(\"Z\" in d)) d.Z = 0;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // If the month was not specified, inherit from the quarter.\n      if (d.m === undefined) d.m = \"q\" in d ? d.q : 0;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return localDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", false);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier += \"\", true);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction dISO(d) {\n  var day = d.getDay();\n  return (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  d = dISO(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatYearISO(d, p) {\n  d = dISO(d);\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatFullYearISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction UTCdISO(d) {\n  var day = d.getUTCDay();\n  return (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  d = UTCdISO(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCYearISO(d, p) {\n  d = UTCdISO(d);\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCFullYearISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\nimport {linearish} from \"./linear\";\nimport {loggish} from \"./log\";\nimport {symlogish} from \"./symlog\";\nimport {powish} from \"./pow\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt.js\";\nimport selection_transition from \"./transition.js\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt.js\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule.js\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {Transition, newId} from \"../transition/index.js\";\nimport schedule from \"../transition/schedule.js\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr.js\";\nimport transition_attrTween from \"./attrTween.js\";\nimport transition_delay from \"./delay.js\";\nimport transition_duration from \"./duration.js\";\nimport transition_ease from \"./ease.js\";\nimport transition_filter from \"./filter.js\";\nimport transition_merge from \"./merge.js\";\nimport transition_on from \"./on.js\";\nimport transition_remove from \"./remove.js\";\nimport transition_select from \"./select.js\";\nimport transition_selectAll from \"./selectAll.js\";\nimport transition_selection from \"./selection.js\";\nimport transition_style from \"./style.js\";\nimport transition_styleTween from \"./styleTween.js\";\nimport transition_text from \"./text.js\";\nimport transition_textTween from \"./textTween.js\";\nimport transition_transition from \"./transition.js\";\nimport transition_tween from \"./tween.js\";\nimport transition_end from \"./end.js\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {get, init} from \"./schedule.js\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index.js\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {get, set, init} from \"./schedule.js\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule.js\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {tweenValue} from \"./tween.js\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","function textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n","import {Transition, newId} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {set} from \"./schedule.js\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","{\n  \"A\": 0.75,\n  \"R\": 0.96,\n  \"N\": 1.26,\n  \"D\": 1.07,\n  \"C\": 0.8,\n  \"Q\": 0.83,\n  \"E\": 0.80,\n  \"G\": 1.47,\n  \"H\": 0.96,\n  \"I\": 0.74,\n  \"L\": 0.75,\n  \"K\": 0.90,\n  \"M\": 0.70,\n  \"F\": 0.76,\n  \"P\": 1.64,\n  \"S\": 1.21,\n  \"T\": 0.98,\n  \"W\": 0.79,\n  \"Y\": 0.98,\n  \"V\": 0.73\n}","<template>\n  <input id=\"sequence\" class=\"input\" spellcheck=\"false\"\n  autocorrect=\"off\" type=\"text\" placeholder=\"Peptide Sequence\"\n  v-model=\"internalSequence\" @keydown=\"onKeyDown\" @keyup=\"lastKeyCode = 0\">\n</template>\n\n<script>\n// https://stackoverflow.com/questions/46289311/vue-limit-characters-in-text-area-input-truncate-filter\nexport default {\n  name: 'SequenceInput',\n  data () {\n    return {\n      sequence: '',\n      pattern: 'acdefghiklmnpqrstvwyACDEFGHIKLMNPQRSTVWY',\n      lastKeyCode: 0\n    }\n  },\n  mounted: function () {\n    // convert pattern to list of integers\n    this.pattern = this.pattern.split('').map((x) => { return x.charCodeAt(0) })\n  },\n  computed: {\n    internalSequence: {\n      get: function () { return this.sequence },\n      set: function (v) {\n        this.sequence = v\n        this.$emit('sequence-update', v)\n      }\n\n    }\n  },\n  methods: {\n    onKeyDown: function (evt) {\n      // do this instead of rex so it's faster\n      // check if it's a control character\n      if (evt.keyCode >= 48 && evt.keyCode <= 90) {\n        // check for ctrl, so we don't eat hot keys\n        if (this.lastKeyCode !== 17 && this.pattern.indexOf(evt.keyCode) < 0)\n          evt.preventDefault()\n      } else if (evt.keyCode >= 186 || evt.keyCode === 32) {\n        // punctuation and space\n        evt.preventDefault()\n      }\n      this.lastKeyCode = evt.keyCode\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n#sequence {\n  text-transform: uppercase;\n}\n</style>\n","<template>\n  <div>\n    <tf-result\n      id=\"sol-predict\"\n      title=\"sol\"\n      description=\"Prediction of solubility\"\n      v-bind:prediction=\"prediction.sol\"\n      v-bind:sequence=\"sequence\"\n      v-bind:name=\"prediction.sol.predict ? 'Soluble' : 'Not soluble.'\"\n    />\n    <hr />\n    <model-card :url=\"this.url + '/card.json'\"> </model-card>\n  </div>\n</template>\n\n<script>\nimport TfResult from \"./TfResult\";\nimport getModel from \"../lib/rnn\";\nimport ModelCard from \"./ModelCard.vue\";\nimport _ from \"lodash\";\nexport default {\n  name: \"TfPrediction\",\n  components: { TfResult, ModelCard },\n  props: {\n    sequence: String,\n    url: String,\n    width: {\n      type: Number,\n      default: 300,\n    },\n  },\n  data() {\n    return {\n      status: \"loading\",\n      rnn: null,\n    };\n  },\n  mounted: function () {\n    this.rnn = getModel();\n    this.rnn.startLoad(this.url + \"model.json\");\n  },\n  data: function () {\n    return {\n      prediction: { sol: { predict: null }, finished: false },\n    };\n  },\n  watch: {\n    sequence: _.debounce(function () {\n      this.makePrediction(this.sequence);\n    }, 1000),\n  },\n  methods: {\n    makePrediction: async function (str) {\n      this.status = this.rnn.model_loaded;\n      if (str.length >= 3 && this.status === \"loaded\") {\n        const x = this.rnn.seq2vec(str);\n        const yhat = await this.rnn.model(x).array();\n        if (yhat) {\n          this.prediction.sol.score = yhat;\n          this.prediction.sol.predict = true ? yhat > 0 : false;\n          this.prediction.finished = true;\n        } else {\n          this.prediction.sol = {};\n          this.prediction.finished = false;\n        }\n      }\n    },\n  },\n};\n</script>\n\n\n\n\n","<template>\n  <div class=\"prediction-table\">\n    <table v-if=\"sequence\" class=\"table\">\n      <tr :title=\"name\">\n        <td>Predicted activity?</td>\n        <td class=\"rightalign\">{{ prediction.predict ? \"Yes.\" : \"No.\" }}</td>\n      </tr>\n      <tr title=\"Fraction of cutoff likelihood.\">\n        <td>Probability of Active:</td>\n        <td class=\"rightalign\">\n          {{ parseFloat(prediction.score).toFixed(2) }}\n        </td>\n      </tr>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"TfResult\",\n  props: {\n    prediction: {\n      accuracy: { type: Number, default: 0.0 },\n      predict: { type: Boolean, default: false },\n      score: { type: Number, default: 0.0 },\n    },\n    sequence: String,\n    name: String,\n    title: String,\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.rightalign {\n  text-align: right;\n}\n.uppercase {\n  text-transform: uppercase;\n}\n.prediction-table {\n  overflow-x: auto;\n}\n</style>\n","import * as tf from '@tensorflow/tfjs-core';\nimport { loadLayersModel } from '@tensorflow/tfjs-layers';\nimport '@tensorflow/tfjs-backend-webgl';\nimport '@tensorflow/tfjs-backend-cpu';\n\n\n\nconst stoi = {\n    \"A\": 1, \"R\": 2, \"N\": 3, \"D\": 4, \"C\": 5, \"Q\": 6, \"E\": 7, \"G\": 8, \"H\": 9, \"I\": 10,\n    \"L\": 11, \"K\": 12, \"M\": 13, \"F\": 14, \"P\": 15, \"S\": 16, \"T\": 17, \"W\": 18, \"Y\": 19, \"V\": 20\n};\nconst vocab = ['-', 'A', 'R', 'N', 'D', 'C', 'Q', 'E', 'G', 'H', 'I', 'L', 'K', 'M', 'F', 'P', 'S', 'T', 'W', 'Y', 'V'];\n\nexport default function getModel() {\n\n    const rnn_mod = {\n        startLoad: (url) => {\n            const loader = loadLayersModel(url,\n                // not sure why, but seems to require this. It cannot\n                // determin which fetch to use otherwise\n                { fetchFunc: (path, rinit = RequestInit) => fetch(path, rinit) });\n            loader.then((model) => {\n                rnn_mod.model = (t) => {\n                    const yhat = model.predict(t);\n                    return yhat\n                }\n                rnn_mod.model_loaded = 'loaded';\n            }, (reason) => {\n                rnn_mod.model_loaded = 'failed';\n                console.log('Failed to load model!');\n                console.log(reason);\n            }).catch((reason) => {\n                console.log('Failed to load model!');\n                console.log(reason);\n            });\n        }\n    };\n\n    rnn_mod.model_loaded = 'not loading';\n\n    rnn_mod.resetStates = () => {\n        // placeholder, overwritten on load\n    }\n\n    rnn_mod.sample = (x, seed, T = 0.5, k = 1) => {\n        return tf.multinomial(\n            tf.mul(tf.scalar(1 / (T + 0.00001)), x), k, seed\n        );\n    }\n\n    rnn_mod.seq2vec = (s) => {\n        const result = Array()\n        const vec = tf.tensor(Array.from(s).map((e, i) => {\n            if (e)\n                parseInt(stoi[e]);\n        }));\n        return tf.reshape(vec, [1, -1]);\n    }\n\n    rnn_mod.initVec = () => {\n        return tf.tensor([0]);\n    }\n\n    rnn_mod.vec2seq = (v) => {\n        const out = v.array().then((x) => {\n            if (Array.isArray(x)) {\n                return x.map((e, i) => {\n                    return vocab[parseInt(e)];\n                });\n            } else {\n                return [vocab[parseInt(x)]];\n            }\n        });\n\n        return out;\n    }\n    return rnn_mod\n}\n\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * IOHandlers related to files, such as browser-triggered file downloads,\n * user-selected files in browser.\n */\n\nimport '../flags';\nimport {env} from '../environment';\n\nimport {basename, concatenateArrayBuffers, getModelArtifactsForJSON, getModelArtifactsInfoForJSON, getModelJSONForModelArtifacts} from './io_utils';\nimport {IORouter, IORouterRegistry} from './router_registry';\nimport {IOHandler, ModelArtifacts, ModelJSON, SaveResult, WeightsManifestConfig, WeightsManifestEntry} from './types';\n\nconst DEFAULT_FILE_NAME_PREFIX = 'model';\nconst DEFAULT_JSON_EXTENSION_NAME = '.json';\nconst DEFAULT_WEIGHT_DATA_EXTENSION_NAME = '.weights.bin';\n\nfunction defer<T>(f: () => T): Promise<T> {\n  return new Promise(resolve => setTimeout(resolve)).then(f);\n}\n\nexport class BrowserDownloads implements IOHandler {\n  private readonly modelJsonFileName: string;\n  private readonly weightDataFileName: string;\n  private readonly modelJsonAnchor: HTMLAnchorElement;\n  private readonly weightDataAnchor: HTMLAnchorElement;\n\n  static readonly URL_SCHEME = 'downloads://';\n\n  constructor(fileNamePrefix?: string) {\n    if (!env().getBool('IS_BROWSER')) {\n      // TODO(cais): Provide info on what IOHandlers are available under the\n      //   current environment.\n      throw new Error(\n          'browserDownloads() cannot proceed because the current environment ' +\n          'is not a browser.');\n    }\n\n    if (fileNamePrefix.startsWith(BrowserDownloads.URL_SCHEME)) {\n      fileNamePrefix = fileNamePrefix.slice(BrowserDownloads.URL_SCHEME.length);\n    }\n    if (fileNamePrefix == null || fileNamePrefix.length === 0) {\n      fileNamePrefix = DEFAULT_FILE_NAME_PREFIX;\n    }\n\n    this.modelJsonFileName = fileNamePrefix + DEFAULT_JSON_EXTENSION_NAME;\n    this.weightDataFileName =\n        fileNamePrefix + DEFAULT_WEIGHT_DATA_EXTENSION_NAME;\n  }\n\n  async save(modelArtifacts: ModelArtifacts): Promise<SaveResult> {\n    if (typeof (document) === 'undefined') {\n      throw new Error(\n          'Browser downloads are not supported in ' +\n          'this environment since `document` is not present');\n    }\n    const weightsURL = window.URL.createObjectURL(new Blob(\n        [modelArtifacts.weightData], {type: 'application/octet-stream'}));\n\n    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n      throw new Error(\n          'BrowserDownloads.save() does not support saving model topology ' +\n          'in binary formats yet.');\n    } else {\n      const weightsManifest: WeightsManifestConfig = [{\n        paths: ['./' + this.weightDataFileName],\n        weights: modelArtifacts.weightSpecs\n      }];\n      const modelJSON: ModelJSON =\n          getModelJSONForModelArtifacts(modelArtifacts, weightsManifest);\n\n      const modelJsonURL = window.URL.createObjectURL(\n          new Blob([JSON.stringify(modelJSON)], {type: 'application/json'}));\n\n      // If anchor elements are not provided, create them without attaching them\n      // to parents, so that the downloaded file names can be controlled.\n      const jsonAnchor = this.modelJsonAnchor == null ?\n          document.createElement('a') :\n          this.modelJsonAnchor;\n      jsonAnchor.download = this.modelJsonFileName;\n      jsonAnchor.href = modelJsonURL;\n      // Trigger downloads by evoking a click event on the download anchors.\n      // When multiple downloads are started synchronously, Firefox will only\n      // save the last one.\n      await defer(() => jsonAnchor.dispatchEvent(new MouseEvent('click')));\n\n      if (modelArtifacts.weightData != null) {\n        const weightDataAnchor = this.weightDataAnchor == null ?\n            document.createElement('a') :\n            this.weightDataAnchor;\n        weightDataAnchor.download = this.weightDataFileName;\n        weightDataAnchor.href = weightsURL;\n        await defer(\n            () => weightDataAnchor.dispatchEvent(new MouseEvent('click')));\n      }\n\n      return {modelArtifactsInfo: getModelArtifactsInfoForJSON(modelArtifacts)};\n    }\n  }\n}\n\nclass BrowserFiles implements IOHandler {\n  private readonly jsonFile: File;\n  private readonly weightsFiles: File[];\n\n  constructor(files: File[]) {\n    if (files == null || files.length < 1) {\n      throw new Error(\n          `When calling browserFiles, at least 1 file is required, ` +\n          `but received ${files}`);\n    }\n    this.jsonFile = files[0];\n    this.weightsFiles = files.slice(1);\n  }\n\n  async load(): Promise<ModelArtifacts> {\n    return new Promise((resolve, reject) => {\n      const jsonReader = new FileReader();\n      jsonReader.onload = (event: Event) => {\n        // tslint:disable-next-line:no-any\n        const modelJSON = JSON.parse((event.target as any).result) as ModelJSON;\n\n        const modelTopology = modelJSON.modelTopology;\n        if (modelTopology == null) {\n          reject(new Error(`modelTopology field is missing from file ${\n              this.jsonFile.name}`));\n          return;\n        }\n\n        const weightsManifest = modelJSON.weightsManifest;\n        if (weightsManifest == null) {\n          reject(new Error(`weightManifest field is missing from file ${\n              this.jsonFile.name}`));\n          return;\n        }\n\n        if (this.weightsFiles.length === 0) {\n          resolve({modelTopology});\n          return;\n        }\n\n        const modelArtifactsPromise = getModelArtifactsForJSON(\n            modelJSON, (weightsManifest) => this.loadWeights(weightsManifest));\n        resolve(modelArtifactsPromise);\n      };\n\n      jsonReader.onerror = error => reject(\n          `Failed to read model topology and weights manifest JSON ` +\n          `from file '${this.jsonFile.name}'. BrowserFiles supports loading ` +\n          `Keras-style tf.Model artifacts only.`);\n      jsonReader.readAsText(this.jsonFile);\n    });\n  }\n\n  private loadWeights(weightsManifest: WeightsManifestConfig): Promise<[\n    /* weightSpecs */ WeightsManifestEntry[], /* weightData */ ArrayBuffer\n  ]> {\n    const weightSpecs: WeightsManifestEntry[] = [];\n    const paths: string[] = [];\n    for (const entry of weightsManifest) {\n      weightSpecs.push(...entry.weights);\n      paths.push(...entry.paths);\n    }\n\n    const pathToFile: {[path: string]: File} =\n        this.checkManifestAndWeightFiles(weightsManifest);\n\n    const promises: Array<Promise<ArrayBuffer>> =\n        paths.map(path => this.loadWeightsFile(path, pathToFile[path]));\n\n    return Promise.all(promises).then(\n        buffers => [weightSpecs, concatenateArrayBuffers(buffers)]);\n  }\n\n  private loadWeightsFile(path: string, file: File): Promise<ArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const weightFileReader = new FileReader();\n      weightFileReader.onload = (event: Event) => {\n        // tslint:disable-next-line:no-any\n        const weightData = (event.target as any).result as ArrayBuffer;\n        resolve(weightData);\n      };\n      weightFileReader.onerror = error =>\n          reject(`Failed to weights data from file of path '${path}'.`);\n      weightFileReader.readAsArrayBuffer(file);\n    });\n  }\n\n  /**\n   * Check the compatibility between weights manifest and weight files.\n   */\n  private checkManifestAndWeightFiles(manifest: WeightsManifestConfig):\n      {[path: string]: File} {\n    const basenames: string[] = [];\n    const fileNames = this.weightsFiles.map(file => basename(file.name));\n    const pathToFile: {[path: string]: File} = {};\n    for (const group of manifest) {\n      group.paths.forEach(path => {\n        const pathBasename = basename(path);\n        if (basenames.indexOf(pathBasename) !== -1) {\n          throw new Error(\n              `Duplicate file basename found in weights manifest: ` +\n              `'${pathBasename}'`);\n        }\n        basenames.push(pathBasename);\n        if (fileNames.indexOf(pathBasename) === -1) {\n          throw new Error(\n              `Weight file with basename '${pathBasename}' is not provided.`);\n        } else {\n          pathToFile[path] = this.weightsFiles[fileNames.indexOf(pathBasename)];\n        }\n      });\n    }\n\n    if (basenames.length !== this.weightsFiles.length) {\n      throw new Error(\n          `Mismatch in the number of files in weights manifest ` +\n          `(${basenames.length}) and the number of weight files provided ` +\n          `(${this.weightsFiles.length}).`);\n    }\n    return pathToFile;\n  }\n}\n\nexport const browserDownloadsRouter: IORouter = (url: string|string[]) => {\n  if (!env().getBool('IS_BROWSER')) {\n    return null;\n  } else {\n    if (!Array.isArray(url) && url.startsWith(BrowserDownloads.URL_SCHEME)) {\n      return browserDownloads(url.slice(BrowserDownloads.URL_SCHEME.length));\n    } else {\n      return null;\n    }\n  }\n};\nIORouterRegistry.registerSaveRouter(browserDownloadsRouter);\n\n/**\n * Creates an IOHandler that triggers file downloads from the browser.\n *\n * The returned `IOHandler` instance can be used as model exporting methods such\n * as `tf.Model.save` and supports only saving.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * const saveResult = await model.save('downloads://mymodel');\n * // This will trigger downloading of two files:\n * //   'mymodel.json' and 'mymodel.weights.bin'.\n * console.log(saveResult);\n * ```\n *\n * @param fileNamePrefix Prefix name of the files to be downloaded. For use with\n *   `tf.Model`, `fileNamePrefix` should follow either of the following two\n *   formats:\n *   1. `null` or `undefined`, in which case the default file\n *      names will be used:\n *      - 'model.json' for the JSON file containing the model topology and\n *        weights manifest.\n *      - 'model.weights.bin' for the binary file containing the binary weight\n *        values.\n *   2. A single string or an Array of a single string, as the file name prefix.\n *      For example, if `'foo'` is provided, the downloaded JSON\n *      file and binary weights file will be named 'foo.json' and\n *      'foo.weights.bin', respectively.\n * @param config Additional configuration for triggering downloads.\n * @returns An instance of `BrowserDownloads` `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nexport function browserDownloads(fileNamePrefix = 'model'): IOHandler {\n  return new BrowserDownloads(fileNamePrefix);\n}\n\n/**\n * Creates an IOHandler that loads model artifacts from user-selected files.\n *\n * This method can be used for loading from files such as user-selected files\n * in the browser.\n * When used in conjunction with `tf.loadLayersModel`, an instance of\n * `tf.LayersModel` (Keras-style) can be constructed from the loaded artifacts.\n *\n * ```js\n * // Note: This code snippet won't run properly without the actual file input\n * //   elements in the HTML DOM.\n *\n * // Suppose there are two HTML file input (`<input type=\"file\" ...>`)\n * // elements.\n * const uploadJSONInput = document.getElementById('upload-json');\n * const uploadWeightsInput = document.getElementById('upload-weights');\n * const model = await tf.loadLayersModel(tf.io.browserFiles(\n *     [uploadJSONInput.files[0], uploadWeightsInput.files[0]]));\n * ```\n *\n * @param files `File`s to load from. Currently, this function supports only\n *   loading from files that contain Keras-style models (i.e., `tf.Model`s), for\n *   which an `Array` of `File`s is expected (in that order):\n *   - A JSON file containing the model topology and weight manifest.\n *   - Optionally, One or more binary files containing the binary weights.\n *     These files must have names that match the paths in the `weightsManifest`\n *     contained by the aforementioned JSON file, or errors will be thrown\n *     during loading. These weights files have the same format as the ones\n *     generated by `tensorflowjs_converter` that comes with the `tensorflowjs`\n *     Python PIP package. If no weights files are provided, only the model\n *     topology will be loaded from the JSON file above.\n * @returns An instance of `Files` `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nexport function browserFiles(files: File[]): IOHandler {\n  return new BrowserFiles(files);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Platform} from './platforms/platform';\nimport {isPromise} from './util_base';\n\n// Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.\nconst TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\n\ntype FlagValue = number|boolean;\ntype FlagEvaluationFn = (() => FlagValue)|(() => Promise<FlagValue>);\nexport type Flags = {\n  [featureName: string]: FlagValue\n};\nexport type FlagRegistryEntry = {\n  evaluationFn: FlagEvaluationFn;\n  setHook?: (value: FlagValue) => void;\n};\n\n/**\n * The environment contains evaluated flags as well as the registered platform.\n * This is always used as a global singleton and can be retrieved with\n * `tf.env()`.\n *\n * @doc {heading: 'Environment'}\n */\nexport class Environment {\n  private flags: Flags = {};\n  private flagRegistry: {[flagName: string]: FlagRegistryEntry} = {};\n\n  private urlFlags: Flags = {};\n\n  platformName: string;\n  platform: Platform;\n\n  // Jasmine spies on this in 'environment_test.ts'\n  getQueryParams = getQueryParams;\n\n  // tslint:disable-next-line: no-any\n  constructor(public global: any) {\n    this.populateURLFlags();\n  }\n\n  setPlatform(platformName: string, platform: Platform) {\n    if (this.platform != null) {\n      if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n        console.warn(\n            `Platform ${this.platformName} has already been set. ` +\n            `Overwriting the platform with ${platform}.`);\n      }\n    }\n    this.platformName = platformName;\n    this.platform = platform;\n  }\n\n  registerFlag(\n      flagName: string, evaluationFn: FlagEvaluationFn,\n      setHook?: (value: FlagValue) => void) {\n    this.flagRegistry[flagName] = {evaluationFn, setHook};\n\n    // Override the flag value from the URL. This has to happen here because\n    // the environment is initialized before flags get registered.\n    if (this.urlFlags[flagName] != null) {\n      const flagValue = this.urlFlags[flagName];\n      if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n        console.warn(\n            `Setting feature override from URL ${flagName}: ${flagValue}.`);\n      }\n      this.set(flagName, flagValue);\n    }\n  }\n\n  async getAsync(flagName: string): Promise<FlagValue> {\n    if (flagName in this.flags) {\n      return this.flags[flagName];\n    }\n\n    this.flags[flagName] = await this.evaluateFlag(flagName);\n    return this.flags[flagName];\n  }\n\n  get(flagName: string): FlagValue {\n    if (flagName in this.flags) {\n      return this.flags[flagName];\n    }\n\n    const flagValue = this.evaluateFlag(flagName);\n    if (isPromise(flagValue)) {\n      throw new Error(\n          `Flag ${flagName} cannot be synchronously evaluated. ` +\n          `Please use getAsync() instead.`);\n    }\n\n    this.flags[flagName] = flagValue;\n    return this.flags[flagName];\n  }\n\n  getNumber(flagName: string): number {\n    return this.get(flagName) as number;\n  }\n\n  getBool(flagName: string): boolean {\n    return this.get(flagName) as boolean;\n  }\n\n  getFlags(): Flags {\n    return this.flags;\n  }\n  // For backwards compatibility.\n  get features(): Flags {\n    return this.flags;\n  }\n\n  set(flagName: string, value: FlagValue): void {\n    if (this.flagRegistry[flagName] == null) {\n      throw new Error(\n          `Cannot set flag ${flagName} as it has not been registered.`);\n    }\n    this.flags[flagName] = value;\n    if (this.flagRegistry[flagName].setHook != null) {\n      this.flagRegistry[flagName].setHook(value);\n    }\n  }\n\n  private evaluateFlag(flagName: string): FlagValue|Promise<FlagValue> {\n    if (this.flagRegistry[flagName] == null) {\n      throw new Error(\n          `Cannot evaluate flag '${flagName}': no evaluation function found.`);\n    }\n    return this.flagRegistry[flagName].evaluationFn();\n  }\n\n  setFlags(flags: Flags) {\n    this.flags = Object.assign({}, flags);\n  }\n\n  reset() {\n    this.flags = {};\n    this.urlFlags = {};\n    this.populateURLFlags();\n  }\n\n  private populateURLFlags(): void {\n    if (typeof this.global === 'undefined' ||\n        typeof this.global.location === 'undefined' ||\n        typeof this.global.location.search === 'undefined') {\n      return;\n    }\n\n    const urlParams = this.getQueryParams(this.global.location.search);\n    if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n      const keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n      keyValues.forEach(keyValue => {\n        const [key, value] = keyValue.split(':') as [string, string];\n        this.urlFlags[key] = parseValue(key, value);\n      });\n    }\n  }\n}\n\nexport function getQueryParams(queryString: string): {[key: string]: string} {\n  const params = {};\n  queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, (s, ...t) => {\n    decodeParam(params, t[0], t[1]);\n    return t.join('=');\n  });\n  return params;\n}\n\nfunction decodeParam(\n    params: {[key: string]: string}, name: string, value?: string) {\n  params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\n\nfunction parseValue(flagName: string, value: string): FlagValue {\n  value = value.toLowerCase();\n  if (value === 'true' || value === 'false') {\n    return value === 'true';\n  } else if (`${+ value}` === value) {\n    return +value;\n  }\n  throw new Error(\n      `Could not parse value flag value ${value} for flag ${flagName}.`);\n}\n\n/**\n * Returns the current environment (a global singleton).\n *\n * The environment object contains the evaluated feature values as well as the\n * active platform.\n *\n * @doc {heading: 'Environment'}\n */\nexport function env() {\n  return ENV;\n}\n\nexport let ENV: Environment = null;\nexport function setEnvironmentGlobal(environment: Environment) {\n  ENV = environment;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, DataTypeMap, FlatVector, NumericDataType, RecursiveArray, TensorLike, TypedArray} from './types';\n\n/**\n * Shuffles the array in-place using Fisher-Yates algorithm.\n *\n * ```js\n * const a = [1, 2, 3, 4, 5];\n * tf.util.shuffle(a);\n * console.log(a);\n * ```\n *\n * @param array The array to shuffle in-place.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\n// tslint:disable-next-line:no-any\nexport function shuffle(array: any[]|Uint32Array|Int32Array|\n                        Float32Array): void {\n  let counter = array.length;\n  let index = 0;\n  // While there are elements in the array\n  while (counter > 0) {\n    // Pick a random index\n    index = (Math.random() * counter) | 0;\n    // Decrease counter by 1\n    counter--;\n    // And swap the last element with it\n    swap(array, counter, index);\n  }\n}\n\n/**\n * Shuffles two arrays in-place the same way using Fisher-Yates algorithm.\n *\n * ```js\n * const a = [1,2,3,4,5];\n * const b = [11,22,33,44,55];\n * tf.util.shuffleCombo(a, b);\n * console.log(a, b);\n * ```\n *\n * @param array The first array to shuffle in-place.\n * @param array2 The second array to shuffle in-place with the same permutation\n *     as the first array.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function shuffleCombo(\n    // tslint:disable-next-line:no-any\n    array: any[]|Uint32Array|Int32Array|Float32Array,\n    // tslint:disable-next-line:no-any\n    array2: any[]|Uint32Array|Int32Array|Float32Array): void {\n  if (array.length !== array2.length) {\n    throw new Error(\n        `Array sizes must match to be shuffled together ` +\n        `First array length was ${array.length}` +\n        `Second array length was ${array2.length}`);\n  }\n  let counter = array.length;\n  let index = 0;\n  // While there are elements in the array\n  while (counter > 0) {\n    // Pick a random index\n    index = (Math.random() * counter) | 0;\n    // Decrease counter by 1\n    counter--;\n    // And swap the last element of each array with it\n    swap(array, counter, index);\n    swap(array2, counter, index);\n  }\n}\n\n/** Clamps a value to a specified range. */\nexport function clamp(min: number, x: number, max: number): number {\n  return Math.max(min, Math.min(x, max));\n}\n\nexport function nearestLargerEven(val: number): number {\n  return val % 2 === 0 ? val : val + 1;\n}\n\nexport function swap<T>(\n    object: {[index: number]: T}, left: number, right: number) {\n  const temp = object[left];\n  object[left] = object[right];\n  object[right] = temp;\n}\n\nexport function sum(arr: number[]): number {\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\n/**\n * Returns a sample from a uniform [a, b) distribution.\n *\n * @param a The minimum support (inclusive).\n * @param b The maximum support (exclusive).\n * @return A pseudorandom number on the half-open interval [a,b).\n */\nexport function randUniform(a: number, b: number) {\n  const r = Math.random();\n  return (b * r) + (1 - r) * a;\n}\n\n/** Returns the squared Euclidean distance between two vectors. */\nexport function distSquared(a: FlatVector, b: FlatVector): number {\n  let result = 0;\n  for (let i = 0; i < a.length; i++) {\n    const diff = Number(a[i]) - Number(b[i]);\n    result += diff * diff;\n  }\n  return result;\n}\n\n/**\n * Asserts that the expression is true. Otherwise throws an error with the\n * provided message.\n *\n * ```js\n * const x = 2;\n * tf.util.assert(x === 2, 'x is not 2');\n * ```\n *\n * @param expr The expression to assert (as a boolean).\n * @param msg A function that returns the message to report when throwing an\n *     error. We use a function for performance reasons.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport function assertShapesMatch(\n    shapeA: number[], shapeB: number[], errorMessagePrefix = ''): void {\n  assert(\n      arraysEqual(shapeA, shapeB),\n      () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n}\n\nexport function assertNonNull(a: TensorLike): void {\n  assert(\n      a != null,\n      () => `The input to the tensor constructor must be a non-null value.`);\n}\n\n// NOTE: We explicitly type out what T extends instead of any so that\n// util.flatten on a nested array of number doesn't try to infer T as a\n// number[][], causing us to explicitly type util.flatten<number>().\n/**\n *  Flattens an arbitrarily nested array.\n *\n * ```js\n * const a = [[1, 2], [3, 4], [5, [6, [7]]]];\n * const flat = tf.util.flatten(a);\n * console.log(flat);\n * ```\n *\n *  @param arr The nested array to flatten.\n *  @param result The destination array which holds the elements.\n *  @param skipTypedArray If true, avoids flattening the typed arrays. Defaults\n *      to false.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function\nflatten<T extends number|boolean|string|Promise<number>|TypedArray>(\n    arr: T|RecursiveArray<T>, result: T[] = [], skipTypedArray = false): T[] {\n  if (result == null) {\n    result = [];\n  }\n  if (Array.isArray(arr) || isTypedArray(arr) && !skipTypedArray) {\n    for (let i = 0; i < arr.length; ++i) {\n      flatten(arr[i], result, skipTypedArray);\n    }\n  } else {\n    result.push(arr as T);\n  }\n  return result;\n}\n\n/**\n * Returns the size (number of elements) of the tensor given its shape.\n *\n * ```js\n * const shape = [3, 4, 2];\n * const size = tf.util.sizeFromShape(shape);\n * console.log(size);\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\n\nexport function isScalarShape(shape: number[]): boolean {\n  return shape.length === 0;\n}\n\nexport function arraysEqual(n1: FlatVector, n2: FlatVector) {\n  if (n1 === n2) {\n    return true;\n  }\n  if (n1 == null || n2 == null) {\n    return false;\n  }\n\n  if (n1.length !== n2.length) {\n    return false;\n  }\n  for (let i = 0; i < n1.length; i++) {\n    if (n1[i] !== n2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\n\nexport function tanh(x: number): number {\n  // tslint:disable-next-line:no-any\n  if ((Math as any).tanh != null) {\n    // tslint:disable-next-line:no-any\n    return (Math as any).tanh(x);\n  }\n  if (x === Infinity) {\n    return 1;\n  } else if (x === -Infinity) {\n    return -1;\n  } else {\n    const e2x = Math.exp(2 * x);\n    return (e2x - 1) / (e2x + 1);\n  }\n}\n\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\n\n/**\n * Creates a new array with randomized indicies to a given quantity.\n *\n * ```js\n * const randomTen = tf.util.createShuffledIndices(10);\n * console.log(randomTen);\n * ```\n *\n * @param number Quantity of how many shuffled indicies to create.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function createShuffledIndices(n: number): Uint32Array {\n  const shuffledIndices = new Uint32Array(n);\n  for (let i = 0; i < n; ++i) {\n    shuffledIndices[i] = i;\n  }\n  shuffle(shuffledIndices);\n  return shuffledIndices;\n}\n\nexport function rightPad(a: string, size: number): string {\n  if (size <= a.length) {\n    return a;\n  }\n  return a + ' '.repeat(size - a.length);\n}\n\nexport function repeatedTry(\n    checkFn: () => boolean, delayFn = (counter: number) => 0,\n    maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Given the full size of the array and a shape that may contain -1 as the\n * implicit dimension, returns the inferred shape where -1 is replaced.\n * E.g. For shape=[2, -1, 3] and size=24, it will return [2, 4, 3].\n *\n * @param shape The shape, which may contain -1 in some dimension.\n * @param size The full size (number of elements) of the array.\n * @return The inferred shape where -1 is replaced with the inferred size.\n */\nexport function inferFromImplicitShape(\n    shape: number[], size: number): number[] {\n  let shapeProd = 1;\n  let implicitIdx = -1;\n\n  for (let i = 0; i < shape.length; ++i) {\n    if (shape[i] >= 0) {\n      shapeProd *= shape[i];\n    } else if (shape[i] === -1) {\n      if (implicitIdx !== -1) {\n        throw Error(\n            `Shapes can only have 1 implicit size. ` +\n            `Found -1 at dim ${implicitIdx} and dim ${i}`);\n      }\n      implicitIdx = i;\n    } else if (shape[i] < 0) {\n      throw Error(`Shapes can not be < 0. Found ${shape[i]} at dim ${i}`);\n    }\n  }\n\n  if (implicitIdx === -1) {\n    if (size > 0 && size !== shapeProd) {\n      throw Error(`Size(${size}) must match the product of shape ${shape}`);\n    }\n    return shape;\n  }\n\n  if (shapeProd === 0) {\n    throw Error(\n        `Cannot infer the missing size in [${shape}] when ` +\n        `there are 0 elements`);\n  }\n  if (size % shapeProd !== 0) {\n    throw Error(\n        `The implicit shape can't be a fractional number. ` +\n        `Got ${size} / ${shapeProd}`);\n  }\n\n  const newShape = shape.slice();\n  newShape[implicitIdx] = size / shapeProd;\n  return newShape;\n}\n\nexport function parseAxisParam(\n    axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : [].concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () =>\n          `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(ax => isInt(ax)),\n      () => `All values in axis param must be integers but ` +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\n\n/** Reduces the shape by removing all dimensions of shape 1. */\nexport function squeezeShape(shape: number[], axis?: number[]):\n    {newShape: number[], keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ?\n      null :\n      parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(\n            `Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function getTypedArrayFromDType<D extends NumericDataType>(\n    dtype: D, size: number): DataTypeMap[D] {\n  let values = null;\n  if (dtype == null || dtype === 'float32') {\n    values = new Float32Array(size);\n  } else if (dtype === 'int32') {\n    values = new Int32Array(size);\n  } else if (dtype === 'bool') {\n    values = new Uint8Array(size);\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n  return values as DataTypeMap[D];\n}\n\nexport function getArrayFromDType<D extends DataType>(\n    dtype: D, size: number): DataTypeMap[D] {\n  let values = null;\n  if (dtype == null || dtype === 'float32') {\n    values = new Float32Array(size);\n  } else if (dtype === 'int32') {\n    values = new Int32Array(size);\n  } else if (dtype === 'bool') {\n    values = new Uint8Array(size);\n  } else if (dtype === 'string') {\n    values = new Array<'string'>(size);\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n  return values as DataTypeMap[D];\n}\n\nexport function checkConversionForErrors<D extends DataType>(\n    vals: DataTypeMap[D]|number[], dtype: D): void {\n  for (let i = 0; i < vals.length; i++) {\n    const num = vals[i] as number;\n    if (isNaN(num) || !isFinite(num)) {\n      throw Error(`A tensor of type ${dtype} being uploaded contains ${num}.`);\n    }\n  }\n}\n\n/** Returns true if the dtype is valid. */\nexport function isValidDtype(dtype: DataType): boolean {\n  return dtype === 'bool' || dtype === 'complex64' || dtype === 'float32' ||\n      dtype === 'int32' || dtype === 'string';\n}\n\n/**\n * Returns true if the new type can't encode the old type without loss of\n * precision.\n */\nexport function hasEncodingLoss(oldType: DataType, newType: DataType): boolean {\n  if (newType === 'complex64') {\n    return false;\n  }\n  if (newType === 'float32' && oldType !== 'complex64') {\n    return false;\n  }\n  if (newType === 'int32' && oldType !== 'float32' && oldType !== 'complex64') {\n    return false;\n  }\n  if (newType === 'bool' && oldType === 'bool') {\n    return false;\n  }\n  return true;\n}\n\nexport function isTypedArray(a: {}):\n  a is Float32Array|Int32Array|Uint8Array|Uint8ClampedArray {\n  return a instanceof Float32Array || a instanceof Int32Array ||\n      a instanceof Uint8Array || a instanceof Uint8ClampedArray;\n}\n\nexport function bytesPerElement(dtype: DataType): number {\n  if (dtype === 'float32' || dtype === 'int32') {\n    return 4;\n  } else if (dtype === 'complex64') {\n    return 8;\n  } else if (dtype === 'bool') {\n    return 1;\n  } else {\n    throw new Error(`Unknown dtype ${dtype}`);\n  }\n}\n\n/**\n * Returns the approximate number of bytes allocated in the string array - 2\n * bytes per character. Computing the exact bytes for a native string in JS is\n * not possible since it depends on the encoding of the html page that serves\n * the website.\n */\nexport function bytesFromStringArray(arr: Uint8Array[]): number {\n  if (arr == null) {\n    return 0;\n  }\n  let bytes = 0;\n  arr.forEach(x => bytes += x.length);\n  return bytes;\n}\n\n/** Returns true if the value is a string. */\nexport function isString(value: {}): value is string {\n  return typeof value === 'string' || value instanceof String;\n}\n\nexport function isBoolean(value: {}): boolean {\n  return typeof value === 'boolean';\n}\n\nexport function isNumber(value: {}): boolean {\n  return typeof value === 'number';\n}\n\nexport function inferDtype(values: TensorLike): DataType {\n  if (Array.isArray(values)) {\n    return inferDtype(values[0]);\n  }\n  if (values instanceof Float32Array) {\n    return 'float32';\n  } else if (values instanceof Int32Array\n             || values instanceof Uint8Array\n             || values instanceof Uint8ClampedArray) {\n    return 'int32';\n  } else if (isNumber(values)) {\n    return 'float32';\n  } else if (isString(values)) {\n    return 'string';\n  } else if (isBoolean(values)) {\n    return 'bool';\n  }\n  return 'float32';\n}\n\nexport function isFunction(f: Function) {\n  return !!(f && f.constructor && f.call && f.apply);\n}\n\nexport function nearestDivisor(size: number, start: number): number {\n  for (let i = start; i < size; ++i) {\n    if (size % i === 0) {\n      return i;\n    }\n  }\n  return size;\n}\n\nexport function computeStrides(shape: number[]): number[] {\n  const rank = shape.length;\n  if (rank < 2) {\n    return [];\n  }\n\n  // Last dimension has implicit stride of 1, thus having D-1 (instead of D)\n  // strides.\n  const strides = new Array(rank - 1);\n  strides[rank - 2] = shape[rank - 1];\n  for (let i = rank - 3; i >= 0; --i) {\n    strides[i] = strides[i + 1] * shape[i + 1];\n  }\n  return strides;\n}\n\nfunction createNestedArray(\n    offset: number, shape: number[], a: TypedArray, isComplex = false) {\n  const ret = new Array();\n  if (shape.length === 1) {\n    const d = shape[0] * (isComplex ? 2 : 1);\n    for (let i = 0; i < d; i++) {\n      ret[i] = a[offset + i];\n    }\n  } else {\n    const d = shape[0];\n    const rest = shape.slice(1);\n    const len = rest.reduce((acc, c) => acc * c) * (isComplex ? 2 : 1);\n    for (let i = 0; i < d; i++) {\n      ret[i] = createNestedArray(offset + i * len, rest, a, isComplex);\n    }\n  }\n  return ret;\n}\n\n// Provide a nested array of TypedArray in given shape.\nexport function toNestedArray(\n    shape: number[], a: TypedArray, isComplex = false) {\n  if (shape.length === 0) {\n    // Scalar type should return a single number.\n    return a[0];\n  }\n  const size = shape.reduce((acc, c) => acc * c) * (isComplex ? 2 : 1);\n  if (size === 0) {\n    // A tensor with shape zero should be turned into empty list.\n    return [];\n  }\n  if (size !== a.length) {\n    throw new Error(`[${shape}] does not match the input size ${a.length}${\n        isComplex ? ' for a complex tensor' : ''}.`);\n  }\n\n  return createNestedArray(0, shape, a, isComplex);\n}\n\nexport function makeOnesTypedArray<D extends DataType>(\n    size: number, dtype: D): DataTypeMap[D] {\n  const array = makeZerosTypedArray(size, dtype);\n  for (let i = 0; i < array.length; i++) {\n    array[i] = 1;\n  }\n  return array;\n}\n\nexport function makeZerosTypedArray<D extends DataType>(\n    size: number, dtype: D): DataTypeMap[D] {\n  if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n    return new Float32Array(size) as DataTypeMap[D];\n  } else if (dtype === 'int32') {\n    return new Int32Array(size) as DataTypeMap[D];\n  } else if (dtype === 'bool') {\n    return new Uint8Array(size) as DataTypeMap[D];\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n}\n\n/**\n * Make nested `TypedArray` filled with zeros.\n * @param shape The shape information for the nested array.\n * @param dtype dtype of the array element.\n */\nexport function makeZerosNestedTypedArray<D extends DataType>(\n    shape: number[], dtype: D) {\n  const size = shape.reduce((prev, curr) => prev * curr, 1);\n  if (dtype == null || dtype === 'float32') {\n    return toNestedArray(shape, new Float32Array(size));\n  } else if (dtype === 'int32') {\n    return toNestedArray(shape, new Int32Array(size));\n  } else if (dtype === 'bool') {\n    return toNestedArray(shape, new Uint8Array(size));\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n}\n\nexport function assertNonNegativeIntegerDimensions(shape: number[]) {\n  shape.forEach(dimSize => {\n    assert(\n        Number.isInteger(dimSize) && dimSize >= 0,\n        () =>\n            `Tensor must have a shape comprised of positive integers but got ` +\n            `shape [${shape}].`);\n  });\n}\n\n/**\n * Computes flat index for a given location (multidimentionsal index) in a\n * Tensor/multidimensional array.\n *\n * @param locs Location in the tensor.\n * @param rank Rank of the tensor.\n * @param strides Tensor strides.\n */\nexport function locToIndex(\n    locs: number[], rank: number, strides: number[]): number {\n  if (rank === 0) {\n    return 0;\n  } else if (rank === 1) {\n    return locs[0];\n  }\n  let index = locs[locs.length - 1];\n  for (let i = 0; i < locs.length - 1; ++i) {\n    index += strides[i] * locs[i];\n  }\n  return index;\n}\n\n/**\n * Computes the location (multidimensional index) in a tensor/multidimentional\n * array for a given flat index.\n *\n * @param index Index in flat array.\n * @param rank Rank of tensor.\n * @param strides Strides of tensor.\n */\nexport function indexToLoc(\n    index: number, rank: number, strides: number[]): number[] {\n  if (rank === 0) {\n    return [];\n  } else if (rank === 1) {\n    return [index];\n  }\n  const locs: number[] = new Array(rank);\n  for (let i = 0; i < locs.length - 1; ++i) {\n    locs[i] = Math.floor(index / strides[i]);\n    index -= locs[i] * strides[i];\n  }\n  locs[locs.length - 1] = index;\n  return locs;\n}\n\n/**\n * This method asserts whether an object is a Promise instance.\n * @param object\n */\n// tslint:disable-next-line: no-any\nexport function isPromise(object: any): object is Promise<unknown> {\n  //  We chose to not use 'obj instanceOf Promise' for two reasons:\n  //  1. It only reliably works for es6 Promise, not other Promise\n  //  implementations.\n  //  2. It doesn't work with framework that uses zone.js. zone.js monkey patch\n  //  the async calls, so it is possible the obj (patched) is comparing to a\n  //  pre-patched Promise.\n  return object && object.then && typeof object.then === 'function';\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {complex} from '../ops/complex';\nimport {tensor} from '../ops/tensor';\nimport {NamedTensor, NamedTensorMap} from '../tensor_types';\nimport {TypedArray} from '../types';\nimport {sizeFromShape} from '../util';\n\nimport {DTYPE_VALUE_SIZE_MAP, ModelArtifacts, ModelArtifactsInfo, ModelJSON, WeightGroup, WeightsManifestConfig, WeightsManifestEntry} from './types';\n\n/** Number of bytes reserved for the length of the string. (32bit integer). */\nconst NUM_BYTES_STRING_LENGTH = 4;\n\n/**\n * Encode a map from names to weight values as an ArrayBuffer, along with an\n * `Array` of `WeightsManifestEntry` as specification of the encoded weights.\n *\n * This function does not perform sharding.\n *\n * This function is the reverse of `decodeWeights`.\n *\n * @param tensors A map (\"dict\") from names to tensors.\n * @param group Group to which the weights belong (optional).\n * @returns A `Promise` of\n *   - A flat `ArrayBuffer` with all the binary values of the `Tensor`s\n *     concatenated.\n *   - An `Array` of `WeightManifestEntry`s, carrying information including\n *     tensor names, `dtype`s and shapes.\n * @throws Error: on unsupported tensor `dtype`.\n */\nexport async function encodeWeights(\n    tensors: NamedTensorMap|NamedTensor[], group?: WeightGroup):\n    Promise<{data: ArrayBuffer, specs: WeightsManifestEntry[]}> {\n  // TODO(adarob, cais): Support quantization.\n  const specs: WeightsManifestEntry[] = [];\n  const dataPromises: Array<Promise<TypedArray>> = [];\n\n  const names: string[] = Array.isArray(tensors) ?\n      tensors.map(tensor => tensor.name) :\n      Object.keys(tensors);\n\n  for (let i = 0; i < names.length; ++i) {\n    const name = names[i];\n    const t = Array.isArray(tensors) ? tensors[i].tensor : tensors[name];\n    if (t.dtype !== 'float32' && t.dtype !== 'int32' && t.dtype !== 'bool' &&\n        t.dtype !== 'string' && t.dtype !== 'complex64') {\n      throw new Error(`Unsupported dtype in weight '${name}': ${t.dtype}`);\n    }\n    const spec: WeightsManifestEntry = {name, shape: t.shape, dtype: t.dtype};\n    if (t.dtype === 'string') {\n      const utf8bytes = new Promise<TypedArray>(async resolve => {\n        const vals = await t.bytes() as Uint8Array[];\n        const totalNumBytes = vals.reduce((p, c) => p + c.length, 0) +\n            NUM_BYTES_STRING_LENGTH * vals.length;\n        const bytes = new Uint8Array(totalNumBytes);\n        let offset = 0;\n        for (let i = 0; i < vals.length; i++) {\n          const val = vals[i];\n          const bytesOfLength =\n              new Uint8Array(new Uint32Array([val.length]).buffer);\n          bytes.set(bytesOfLength, offset);\n          offset += NUM_BYTES_STRING_LENGTH;\n          bytes.set(val, offset);\n          offset += val.length;\n        }\n        resolve(bytes);\n      });\n      dataPromises.push(utf8bytes);\n    } else {\n      dataPromises.push(t.data());\n    }\n    if (group != null) {\n      spec.group = group;\n    }\n    specs.push(spec);\n  }\n\n  const tensorValues = await Promise.all(dataPromises);\n  return {data: concatenateTypedArrays(tensorValues), specs};\n}\n\n/**\n * Decode flat ArrayBuffer as weights.\n *\n * This function does not handle sharding.\n *\n * This function is the reverse of `encodeWeights`.\n *\n * @param buffer A flat ArrayBuffer carrying the binary values of the tensors\n *   concatenated in the order specified in `specs`.\n * @param specs Specifications of the names, dtypes and shapes of the tensors\n *   whose value are encoded by `buffer`.\n * @return A map from tensor name to tensor value, with the names corresponding\n *   to names in `specs`.\n * @throws Error, if any of the tensors has unsupported dtype.\n */\nexport function decodeWeights(\n    buffer: ArrayBuffer, specs: WeightsManifestEntry[]): NamedTensorMap {\n  // TODO(adarob, cais): Support quantization.\n  const out: NamedTensorMap = {};\n  let float16Decode: (buffer: Uint16Array) => Float32Array | undefined;\n  let offset = 0;\n  for (const spec of specs) {\n    const name = spec.name;\n    const dtype = spec.dtype;\n    const shape = spec.shape;\n    const size = sizeFromShape(shape);\n    let values: TypedArray|string[]|Uint8Array[];\n\n    if ('quantization' in spec) {\n      const quantization = spec.quantization;\n      if (quantization.dtype === 'uint8' || quantization.dtype === 'uint16') {\n        if (!('min' in quantization && 'scale' in quantization)) {\n          throw new Error(\n              `Weight ${spec.name} with quantization ${quantization.dtype} ` +\n              `doesn't have corresponding metadata min and scale.`);\n        }\n      } else if (quantization.dtype === 'float16') {\n        if (dtype !== 'float32') {\n          throw new Error(\n              `Weight ${spec.name} is quantized with ${quantization.dtype} ` +\n              `which only supports weights of type float32 not ${dtype}.`);\n        }\n      } else {\n        throw new Error(\n            `Weight ${spec.name} has unknown ` +\n            `quantization dtype ${quantization.dtype}. ` +\n            `Supported quantization dtypes are: ` +\n            `'uint8', 'uint16', and 'float16'.`);\n      }\n      const quantizationSizeFactor = DTYPE_VALUE_SIZE_MAP[quantization.dtype];\n      const byteBuffer =\n          buffer.slice(offset, offset + size * quantizationSizeFactor);\n      const quantizedArray = (quantization.dtype === 'uint8') ?\n          new Uint8Array(byteBuffer) :\n          new Uint16Array(byteBuffer);\n      if (dtype === 'float32') {\n        if (quantization.dtype === 'uint8' || quantization.dtype === 'uint16') {\n          values = new Float32Array(quantizedArray.length);\n          for (let i = 0; i < quantizedArray.length; i++) {\n            const v = quantizedArray[i];\n            values[i] = v * quantization.scale + quantization.min;\n          }\n        } else if (quantization.dtype === 'float16') {\n          if (float16Decode === undefined) {\n            float16Decode = getFloat16Decoder();\n          }\n          values = float16Decode(quantizedArray as Uint16Array);\n        } else {\n          throw new Error(\n              `Unsupported quantization type ${quantization.dtype} ` +\n              `for weight type float32.`);\n        }\n      } else if (dtype === 'int32') {\n        if (quantization.dtype !== 'uint8' && quantization.dtype !== 'uint16') {\n          throw new Error(\n              `Unsupported quantization type ${quantization.dtype} ` +\n              `for weight type int32.`);\n        }\n        values = new Int32Array(quantizedArray.length);\n        for (let i = 0; i < quantizedArray.length; i++) {\n          const v = quantizedArray[i];\n          values[i] = Math.round(v * quantization.scale + quantization.min);\n        }\n      } else {\n        throw new Error(`Unsupported dtype in weight '${name}': ${dtype}`);\n      }\n      offset += size * quantizationSizeFactor;\n    } else if (dtype === 'string') {\n      const size = sizeFromShape(spec.shape);\n      values = [];\n      for (let i = 0; i < size; i++) {\n        const byteLength = new Uint32Array(\n            buffer.slice(offset, offset + NUM_BYTES_STRING_LENGTH))[0];\n        offset += NUM_BYTES_STRING_LENGTH;\n        const bytes = new Uint8Array(buffer.slice(offset, offset + byteLength));\n        (values as Uint8Array[]).push(bytes);\n        offset += byteLength;\n      }\n    } else {\n      const dtypeFactor = DTYPE_VALUE_SIZE_MAP[dtype];\n      const byteBuffer = buffer.slice(offset, offset + size * dtypeFactor);\n\n      if (dtype === 'float32') {\n        values = new Float32Array(byteBuffer);\n      } else if (dtype === 'int32') {\n        values = new Int32Array(byteBuffer);\n      } else if (dtype === 'bool') {\n        values = new Uint8Array(byteBuffer);\n      } else if (dtype === 'complex64') {\n        values = new Float32Array(byteBuffer);\n        const real = new Float32Array(values.length / 2);\n        const image = new Float32Array(values.length / 2);\n        for (let i = 0; i < real.length; i++) {\n          real[i] = values[i * 2];\n          image[i] = values[i * 2 + 1];\n        }\n        const realTensor = tensor(real, shape, 'float32');\n        const imageTensor = tensor(image, shape, 'float32');\n        out[name] = complex(realTensor, imageTensor);\n        realTensor.dispose();\n        imageTensor.dispose();\n      } else {\n        throw new Error(`Unsupported dtype in weight '${name}': ${dtype}`);\n      }\n      offset += size * dtypeFactor;\n    }\n    if (dtype !== 'complex64') {\n      out[name] = tensor(values, shape, dtype);\n    }\n  }\n  return out;\n}\n\n/**\n * Concatenate TypedArrays into an ArrayBuffer.\n */\nexport function concatenateTypedArrays(xs: TypedArray[]): ArrayBuffer {\n  // TODO(adarob, cais): Support quantization.\n  if (xs === null) {\n    throw new Error(`Invalid input value: ${JSON.stringify(xs)}`);\n  }\n\n  let totalByteLength = 0;\n\n  // `normalizedXs` is here for this reason: a `TypedArray`'s `buffer'\n  // can have a different byte length from that of the `TypedArray` itself,\n  // for example, when the `TypedArray` is created from an offset in an\n  // `ArrayBuffer`. `normliazedXs` holds `TypedArray`s whose `buffer`s match\n  // the `TypedArray` in byte length. If an element of `xs` does not show\n  // this property, a new `TypedArray` that satisfy this property will be\n  // constructed and pushed into `normalizedXs`.\n  const normalizedXs: TypedArray[] = [];\n  xs.forEach((x: TypedArray) => {\n    totalByteLength += x.byteLength;\n    // tslint:disable:no-any\n    normalizedXs.push(\n        x.byteLength === x.buffer.byteLength ? x :\n                                               new (x.constructor as any)(x));\n    if (!(x as any instanceof Float32Array || x as any instanceof Int32Array ||\n          x as any instanceof Uint8Array)) {\n      throw new Error(`Unsupported TypedArray subtype: ${x.constructor.name}`);\n    }\n    // tslint:enable:no-any\n  });\n\n  const y = new Uint8Array(totalByteLength);\n  let offset = 0;\n  normalizedXs.forEach((x: TypedArray) => {\n    y.set(new Uint8Array(x.buffer), offset);\n    offset += x.byteLength;\n  });\n\n  return y.buffer;\n}\n\n// Use Buffer on Node.js instead of Blob/atob/btoa\nconst useNodeBuffer = typeof Buffer !== 'undefined' &&\n    (typeof Blob === 'undefined' || typeof atob === 'undefined' ||\n     typeof btoa === 'undefined');\n\n/**\n * Calculate the byte length of a JavaScript string.\n *\n * Note that a JavaScript string can contain wide characters, therefore the\n * length of the string is not necessarily equal to the byte length.\n *\n * @param str Input string.\n * @returns Byte length.\n */\nexport function stringByteLength(str: string): number {\n  if (useNodeBuffer) {\n    return Buffer.byteLength(str);\n  }\n  return new Blob([str]).size;\n}\n\n/**\n * Encode an ArrayBuffer as a base64 encoded string.\n *\n * @param buffer `ArrayBuffer` to be converted.\n * @returns A string that base64-encodes `buffer`.\n */\nexport function arrayBufferToBase64String(buffer: ArrayBuffer): string {\n  if (useNodeBuffer) {\n    return Buffer.from(buffer).toString('base64');\n  }\n  const buf = new Uint8Array(buffer);\n  let s = '';\n  for (let i = 0, l = buf.length; i < l; i++) {\n    s += String.fromCharCode(buf[i]);\n  }\n  return btoa(s);\n}\n\n/**\n * Decode a base64 string as an ArrayBuffer.\n *\n * @param str Base64 string.\n * @returns Decoded `ArrayBuffer`.\n */\nexport function base64StringToArrayBuffer(str: string): ArrayBuffer {\n  if (useNodeBuffer) {\n    const buf = Buffer.from(str, 'base64');\n    return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n  }\n  const s = atob(str);\n  const buffer = new Uint8Array(s.length);\n  for (let i = 0; i < s.length; ++i) {\n    buffer.set([s.charCodeAt(i)], i);\n  }\n  return buffer.buffer;\n}\n\n/**\n * Concatenate a number of ArrayBuffers into one.\n *\n * @param buffers A number of array buffers to concatenate.\n * @returns Result of concatenating `buffers` in order.\n */\nexport function concatenateArrayBuffers(buffers: ArrayBuffer[]): ArrayBuffer {\n  if (buffers.length === 1) {\n    return buffers[0];\n  }\n\n  let totalByteLength = 0;\n  buffers.forEach((buffer: ArrayBuffer) => {\n    totalByteLength += buffer.byteLength;\n  });\n\n  const temp = new Uint8Array(totalByteLength);\n  let offset = 0;\n  buffers.forEach((buffer: ArrayBuffer) => {\n    temp.set(new Uint8Array(buffer), offset);\n    offset += buffer.byteLength;\n  });\n  return temp.buffer;\n}\n\n/**\n * Get the basename of a path.\n *\n * Behaves in a way analogous to Linux's basename command.\n *\n * @param path\n */\nexport function basename(path: string): string {\n  const SEPARATOR = '/';\n  path = path.trim();\n  while (path.endsWith(SEPARATOR)) {\n    path = path.slice(0, path.length - 1);\n  }\n  const items = path.split(SEPARATOR);\n  return items[items.length - 1];\n}\n\n/**\n * Create `ModelJSON` from `ModelArtifacts`.\n *\n * @param artifacts Model artifacts, describing the model and its weights.\n * @param manifest Weight manifest, describing where the weights of the\n *     `ModelArtifacts` are stored, and some metadata about them.\n * @returns Object representing the `model.json` file describing the model\n *     artifacts and weights\n */\nexport function getModelJSONForModelArtifacts(\n    artifacts: ModelArtifacts, manifest: WeightsManifestConfig): ModelJSON {\n  const result: ModelJSON = {\n    modelTopology: artifacts.modelTopology,\n    format: artifacts.format,\n    generatedBy: artifacts.generatedBy,\n    convertedBy: artifacts.convertedBy,\n    weightsManifest: manifest\n  };\n  if (artifacts.signature != null) {\n    result.signature = artifacts.signature;\n  }\n  if (artifacts.userDefinedMetadata != null) {\n    result.userDefinedMetadata = artifacts.userDefinedMetadata;\n  }\n  if (artifacts.modelInitializer != null) {\n    result.modelInitializer = artifacts.modelInitializer;\n  }\n  if (artifacts.trainingConfig != null) {\n    result.trainingConfig = artifacts.trainingConfig;\n  }\n  return result;\n}\n\n/**\n * Create `ModelArtifacts` from a JSON file.\n *\n * @param modelJSON Object containing the parsed JSON of `model.json`\n * @param loadWeights Function that takes the JSON file's weights manifest,\n *     reads weights from the listed path(s), and returns a Promise of the\n *     weight manifest entries along with the weights data.\n * @returns A Promise of the `ModelArtifacts`, as described by the JSON file.\n */\nexport async function getModelArtifactsForJSON(\n    modelJSON: ModelJSON,\n    loadWeights: (weightsManifest: WeightsManifestConfig) => Promise<[\n      /* weightSpecs */ WeightsManifestEntry[], /* weightData */ ArrayBuffer\n    ]>): Promise<ModelArtifacts> {\n  const modelArtifacts: ModelArtifacts = {\n    modelTopology: modelJSON.modelTopology,\n    format: modelJSON.format,\n    generatedBy: modelJSON.generatedBy,\n    convertedBy: modelJSON.convertedBy\n  };\n\n  if (modelJSON.trainingConfig != null) {\n    modelArtifacts.trainingConfig = modelJSON.trainingConfig;\n  }\n  if (modelJSON.weightsManifest != null) {\n    const [weightSpecs, weightData] =\n        await loadWeights(modelJSON.weightsManifest);\n    modelArtifacts.weightSpecs = weightSpecs;\n    modelArtifacts.weightData = weightData;\n  }\n  if (modelJSON.signature != null) {\n    modelArtifacts.signature = modelJSON.signature;\n  }\n  if (modelJSON.userDefinedMetadata != null) {\n    modelArtifacts.userDefinedMetadata = modelJSON.userDefinedMetadata;\n  }\n  if (modelJSON.modelInitializer != null) {\n    modelArtifacts.modelInitializer = modelJSON.modelInitializer;\n  }\n\n  return modelArtifacts;\n}\n\n/**\n * Populate ModelArtifactsInfo fields for a model with JSON topology.\n * @param modelArtifacts\n * @returns A ModelArtifactsInfo object.\n */\nexport function getModelArtifactsInfoForJSON(modelArtifacts: ModelArtifacts):\n    ModelArtifactsInfo {\n  if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n    throw new Error('Expected JSON model topology, received ArrayBuffer.');\n  }\n\n  return {\n    dateSaved: new Date(),\n    modelTopologyType: 'JSON',\n    modelTopologyBytes: modelArtifacts.modelTopology == null ?\n        0 :\n        stringByteLength(JSON.stringify(modelArtifacts.modelTopology)),\n    weightSpecsBytes: modelArtifacts.weightSpecs == null ?\n        0 :\n        stringByteLength(JSON.stringify(modelArtifacts.weightSpecs)),\n    weightDataBytes: modelArtifacts.weightData == null ?\n        0 :\n        modelArtifacts.weightData.byteLength,\n  };\n}\n\n/**\n * Computes mantisa table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 2048 mantissa lookup values.\n */\nfunction computeFloat16MantisaTable(): Uint32Array {\n  const convertMantissa = (i: number): number => {\n    let m = i << 13;\n    let e = 0;\n\n    while ((m & 0x00800000) === 0) {\n      e -= 0x00800000;\n      m <<= 1;\n    }\n    m &= ~0x00800000;\n    e += 0x38800000;\n\n    return m | e;\n  };\n\n  const mantisaTable = new Uint32Array(2048);\n\n  mantisaTable[0] = 0;\n  for (let i = 1; i < 1024; i++) {\n    mantisaTable[i] = convertMantissa(i);\n  }\n  for (let i = 1024; i < 2048; i++) {\n    mantisaTable[i] = 0x38000000 + ((i - 1024) << 13);\n  }\n\n  return mantisaTable;\n}\n\n/**\n * Computes exponent table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 64 exponent lookup values.\n */\nfunction computeFloat16ExponentTable(): Uint32Array {\n  const exponentTable = new Uint32Array(64);\n\n  exponentTable[0] = 0;\n  exponentTable[31] = 0x47800000;\n  exponentTable[32] = 0x80000000;\n  exponentTable[63] = 0xc7800000;\n  for (let i = 1; i < 31; i++) {\n    exponentTable[i] = i << 23;\n  }\n  for (let i = 33; i < 63; i++) {\n    exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n  }\n\n  return exponentTable;\n}\n\n/**\n * Computes offset table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 6d offset values.\n */\nfunction computeFloat16OffsetTable(): Uint32Array {\n  const offsetTable = new Uint32Array(64);\n\n  for (let i = 0; i < 64; i++) {\n    offsetTable[i] = 1024;\n  }\n  offsetTable[0] = offsetTable[32] = 0;\n\n  return offsetTable;\n}\n\n/**\n * Retrieve a Float16 decoder which will decode a ByteArray of Float16 values\n * to a Float32Array.\n *\n * @returns Function (buffer: Uint16Array) => Float32Array which decodes\n *          the Uint16Array of Float16 bytes to a Float32Array.\n */\nexport function getFloat16Decoder(): (buffer: Uint16Array) => Float32Array {\n  // Algorithm is based off of\n  // http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\n  // Cache lookup tables\n  const mantisaTable = computeFloat16MantisaTable();\n  const exponentTable = computeFloat16ExponentTable();\n  const offsetTable = computeFloat16OffsetTable();\n\n  return (quantizedArray: Uint16Array) => {\n    const buffer = new ArrayBuffer(4 * quantizedArray.length);\n    const bufferUint32View = new Uint32Array(buffer);\n    for (let index = 0; index < quantizedArray.length; index++) {\n      const float16Bits = quantizedArray[index];\n      const float32Bits =\n          mantisaTable[offsetTable[float16Bits >> 10] + (float16Bits & 0x3ff)] +\n          exponentTable[float16Bits >> 10];\n      bufferUint32View[index] = float32Bits;\n    }\n    return new Float32Array(buffer);\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Complex, ComplexInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Converts two real numbers to a complex number.\n *\n * Given a tensor `real` representing the real part of a complex number, and a\n * tensor `imag` representing the imaginary part of a complex number, this\n * operation returns complex numbers elementwise of the form [r0, i0, r1, i1],\n * where r represents the real part and i represents the imag part.\n *\n * The input tensors real and imag must have the same shape.\n *\n * ```js\n * const real = tf.tensor1d([2.25, 3.25]);\n * const imag = tf.tensor1d([4.75, 5.75]);\n * const complex = tf.complex(real, imag);\n *\n * complex.print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction complex_<T extends Tensor>(real: T|TensorLike, imag: T|TensorLike): T {\n  const $real = convertToTensor(real, 'real', 'complex');\n  const $imag = convertToTensor(imag, 'imag', 'complex');\n  util.assertShapesMatch(\n      $real.shape, $imag.shape,\n      `real and imag shapes, ${$real.shape} and ${$imag.shape}, ` +\n          `must match in call to tf.complex().`);\n\n  const inputs: ComplexInputs = {real: $real, imag: $imag};\n  return ENGINE.runKernel(Complex, inputs as {} as NamedTensorMap);\n}\n\nexport const complex = op({complex_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendTimingInfo, DataMover, KernelBackend} from './backends/backend';\nimport {Environment, setEnvironmentGlobal} from './environment';\nimport {getGlobalNamespace} from './global_util';\nimport {Add, Cast, Identity} from './kernel_names';\nimport {getGradient, getKernel, getKernelsForBackend, GradFunc, NamedAttrMap, TensorInfo} from './kernel_registry';\nimport * as log from './log';\nimport {KernelProfile, Profiler} from './profiler';\nimport {backpropagateGradients, getFilteredNodesXToY, TapeNode} from './tape';\nimport {DataId, DataToGPUOptions, GPUData, setTensorTracker, Tensor, TensorTracker, Variable} from './tensor';\nimport {GradSaveFunc, NamedTensorMap, NamedVariableMap, TensorContainer} from './tensor_types';\nimport {getTensorsInContainer} from './tensor_util';\nimport {BackendValues, DataType, DataValues} from './types';\nimport * as util from './util';\nimport {bytesFromStringArray, makeOnesTypedArray, now, sizeFromShape} from './util';\n\n/**\n * A function that computes an output. The save function is for saving tensors\n * computed in the forward pass, that we need in the backward pass.\n */\nexport type ForwardFunc<T> = (backend: KernelBackend, save?: GradSaveFunc) => T;\n\n/**\n * @docalias (a: Tensor, b: Tensor,..., save?: Function) => {\n *   value: Tensor,\n *   gradFunc: (dy: Tensor, saved?: NamedTensorMap) => Tensor | Tensor[]\n * }\n */\nexport type CustomGradientFunc<T extends Tensor> =\n    (...inputs: Array<Tensor|GradSaveFunc>) => {\n      value: T;\n      gradFunc: (dy: T, saved: Tensor[]) => Tensor | Tensor[];\n    };\n\nexport type MemoryInfo = {\n  numTensors: number; numDataBuffers: number; numBytes: number;\n  unreliable?: boolean; reasons: string[];\n};\n\ntype KernelInfo = {\n  name: string; bytesAdded: number; totalBytesSnapshot: number;\n  tensorsAdded: number;\n  totalTensorsSnapshot: number;\n  inputShapes: number[][];\n  outputShapes: number[][];\n  kernelTimeMs: number | {error: string} | Promise<number|{error: string}>;\n  extraInfo: string | Promise<string>;\n};\n\nexport type ProfileInfo = {\n  newBytes: number; newTensors: number; peakBytes: number;\n  kernels: KernelInfo[];\n  result: TensorContainer;\n  kernelNames: string[];\n};\n\nexport interface TimingInfo extends BackendTimingInfo {\n  wallMs: number;\n}\n\n/** @docalias Function */\nexport type ScopeFn<T extends TensorContainer> = () => T;\n\ninterface ScopeState {\n  track: Tensor[];\n  name: string;\n  id: number;\n}\n\ninterface RegisteredKernelInvocation<I extends NamedTensorMap> {\n  kernelName: string;\n  inputs: I;\n  attrs?: NamedAttrMap;\n}\n\ninterface CustomGradKernelInvocation<T extends Tensor|Tensor[],\n                                               I extends NamedTensorMap> {\n  forwardFunc: ForwardFunc<T>;\n  backwardsFunc: (dy: T, saved: Tensor[]) => {\n    [P in keyof I]: () => I[P]\n  };\n  inputs: I;\n  attrs?: NamedAttrMap;\n}\n\nfunction isRegisteredKernelInvocation<T extends Tensor|Tensor[],\n                                                I extends NamedTensorMap>(\n    kernelInvocation: RegisteredKernelInvocation<I>|\n    CustomGradKernelInvocation<T, I>):\n    kernelInvocation is RegisteredKernelInvocation<I> {\n  return (kernelInvocation as RegisteredKernelInvocation<I>).kernelName != null;\n}\n\nclass EngineState {\n  // Public since optimizers will use it.\n  registeredVariables: NamedVariableMap = {};\n\n  nextTapeNodeId = 0;\n  numBytes = 0;\n  numTensors = 0;\n  numStringTensors = 0;\n  numDataBuffers = 0;\n\n  activeTape: TapeNode[];\n  // Number of nested tf.grad() statements when computing higher-order\n  // gradients. E.g. `1` for first-order gradients and `2` for second-order\n  // gradients. Used to track if the tape should be removed after a backprop.\n  gradientDepth = 0;\n  // Number of nested kernel calls. When kernel depth is greater than 1, we turn\n  // off the tape.\n  kernelDepth = 0;\n\n  // Keep Tensors that parallel the tapes.\n  activeScope: ScopeState;\n  scopeStack: ScopeState[] = [];\n  /**\n   * Keeps track of the number of data moves during a kernel execution. We\n   * maintain a stack since kernels can call other kernels, recursively.\n   */\n  numDataMovesStack: number[] = [];\n  nextScopeId = 0;\n\n  tensorInfo = new WeakMap<DataId, {\n    backend: KernelBackend,\n    bytes: number,\n    dtype: DataType,\n    shape: number[]\n  }>();\n\n  profiling = false;\n  activeProfile: ProfileInfo = {\n    newBytes: 0,\n    newTensors: 0,\n    peakBytes: 0,\n    kernels: [],\n    result: null,\n    get kernelNames():\n        string[] {\n          return Array.from(new Set(this.kernels.map(k => k.name)));\n        }\n  };\n\n  dispose() {\n    for (const variableName in this.registeredVariables) {\n      this.registeredVariables[variableName].dispose();\n    }\n  }\n}\n\nexport class Engine implements TensorTracker, DataMover {\n  state: EngineState;\n  backendName: string;\n  registry: {[id: string]: KernelBackend} = {};\n  registryFactory: {\n    [id: string]: {\n      factory: () => KernelBackend | Promise<KernelBackend>,\n      priority: number\n    }\n  } = {};\n\n  private profiler: Profiler;\n  private backendInstance: KernelBackend;\n  private pendingBackendInit: Promise<boolean>;\n  private pendingBackendInitId = 0;\n\n  constructor(public ENV: Environment) {\n    this.state = new EngineState();\n  }\n\n  async ready(): Promise<void> {\n    if (this.pendingBackendInit != null) {\n      return this.pendingBackendInit.then(() => {});\n    }\n    if (this.backendInstance != null) {\n      return;\n    }\n    const sortedBackends = this.getSortedBackends();\n\n    for (let i = 0; i < sortedBackends.length; i++) {\n      const backendName = sortedBackends[i];\n      const success = await this.initializeBackend(backendName).success;\n      if (success) {\n        await this.setBackend(backendName);\n        return;\n      }\n    }\n\n    throw new Error(\n        `Could not initialize any backends, all backend initializations ` +\n        `failed.`);\n  }\n\n  get backend(): KernelBackend {\n    if (this.pendingBackendInit != null) {\n      throw new Error(\n          `Backend '${this.backendName}' has not yet been initialized. Make ` +\n          `sure to await tf.ready() or await tf.setBackend() before calling ` +\n          `other methods`);\n    }\n    if (this.backendInstance == null) {\n      const {name, asyncInit} = this.initializeBackendsAndReturnBest();\n      if (asyncInit) {\n        throw new Error(\n            `The highest priority backend '${name}' has not yet been ` +\n            `initialized. Make sure to await tf.ready() or ` +\n            `await tf.setBackend() before calling other methods`);\n      }\n      this.setBackend(name);\n    }\n    return this.backendInstance;\n  }\n\n  backendNames(): string[] {\n    return Object.keys(this.registryFactory);\n  }\n\n  findBackend(backendName: string): KernelBackend {\n    if (!(backendName in this.registry)) {\n      // If the backend hasn't been initialized but we have a registry entry for\n      // it, initialize it and return it.\n      if (backendName in this.registryFactory) {\n        const {asyncInit} = this.initializeBackend(backendName);\n        if (asyncInit) {\n          // Backend is not ready yet.\n          return null;\n        }\n      } else {\n        return null;\n      }\n    }\n    return this.registry[backendName];\n  }\n\n  findBackendFactory(backendName: string):\n      () => KernelBackend | Promise<KernelBackend> {\n    if (!(backendName in this.registryFactory)) {\n      return null;\n    }\n    return this.registryFactory[backendName].factory;\n  }\n\n  registerBackend(\n      backendName: string,\n      factory: () => KernelBackend | Promise<KernelBackend>,\n      priority = 1): boolean {\n    if (backendName in this.registryFactory) {\n      log.warn(\n          `${backendName} backend was already registered. ` +\n          `Reusing existing backend factory.`);\n      return false;\n    }\n    this.registryFactory[backendName] = {factory, priority};\n    return true;\n  }\n\n  async setBackend(backendName: string): Promise<boolean> {\n    if (this.registryFactory[backendName] == null) {\n      throw new Error(`Backend name '${backendName}' not found in registry`);\n    }\n    this.backendName = backendName;\n    if (this.registry[backendName] == null) {\n      this.backendInstance = null;\n      const {success, asyncInit} = this.initializeBackend(backendName);\n      const result = asyncInit ? await success : success;\n      if (!result) {\n        return false;\n      }\n    }\n    this.backendInstance = this.registry[backendName];\n    this.setupRegisteredKernels();\n    // Reset the profiler.\n    this.profiler = new Profiler(this.backendInstance);\n\n    return true;\n  }\n\n  private setupRegisteredKernels(): void {\n    const kernels = getKernelsForBackend(this.backendName);\n    kernels.forEach(kernel => {\n      if (kernel.setupFunc != null) {\n        kernel.setupFunc(this.backendInstance);\n      }\n    });\n  }\n\n  private disposeRegisteredKernels(backendName: string): void {\n    const kernels = getKernelsForBackend(backendName);\n    kernels.forEach(kernel => {\n      if (kernel.disposeFunc != null) {\n        kernel.disposeFunc(this.registry[backendName]);\n      }\n    });\n  }\n\n  /**\n   * Initializes a backend by looking up the backend name in the factory\n   * registry and calling the factory method. Returns a boolean representing\n   * whether the initialization of the backend suceeded. Throws an error if\n   * there is no backend in the factory registry.\n   */\n  private initializeBackend(backendName: string):\n      {success: boolean|Promise<boolean>, asyncInit: boolean} {\n    const registryFactoryEntry = this.registryFactory[backendName];\n    if (registryFactoryEntry == null) {\n      throw new Error(\n          `Cannot initialize backend ${backendName}, no registration found.`);\n    }\n\n    try {\n      const backend = registryFactoryEntry.factory();\n      /* Test if the factory returns a promise.\n      Done in a more liberal way than\n      previous 'Promise.resolve(backend)===backend'\n      as we needed to account for custom Promise\n      implementations (e.g. Angular) */\n      if (backend && !(backend instanceof KernelBackend) &&\n          typeof backend.then === 'function') {\n        const promiseId = ++this.pendingBackendInitId;\n        const success =\n            backend\n                .then(backendInstance => {\n                  // Outdated promise. Another backend was set in the meantime.\n                  if (promiseId < this.pendingBackendInitId) {\n                    return false;\n                  }\n                  this.registry[backendName] = backendInstance;\n                  this.pendingBackendInit = null;\n                  return true;\n                })\n                .catch(err => {\n                  // Outdated promise. Another backend was set in the meantime.\n                  if (promiseId < this.pendingBackendInitId) {\n                    return false;\n                  }\n                  this.pendingBackendInit = null;\n                  log.warn(`Initialization of backend ${backendName} failed`);\n                  log.warn(err.stack || err.message);\n                  return false;\n                });\n        this.pendingBackendInit = success;\n        return {success, asyncInit: true};\n      } else {\n        this.registry[backendName] = backend as KernelBackend;\n        return {success: true, asyncInit: false};\n      }\n    } catch (err) {\n      log.warn(`Initialization of backend ${backendName} failed`);\n      log.warn(err.stack || err.message);\n      return {success: false, asyncInit: false};\n    }\n  }\n\n  removeBackend(backendName: string): void {\n    if (!(backendName in this.registryFactory)) {\n      throw new Error(`${backendName} backend not found in registry`);\n    }\n    if (this.backendName === backendName && this.pendingBackendInit != null) {\n      // There is a pending promise of the backend we want to remove. Make it\n      // obsolete.\n      this.pendingBackendInitId++;\n    }\n\n    if (backendName in this.registry) {\n      this.disposeRegisteredKernels(backendName);\n      this.registry[backendName].dispose();\n      delete this.registry[backendName];\n    }\n\n    delete this.registryFactory[backendName];\n\n    // Unset the backend if it is active.\n    if (this.backendName === backendName) {\n      this.pendingBackendInit = null;\n      this.backendName = null;\n      this.backendInstance = null;\n    }\n  }\n\n  private getSortedBackends(): string[] {\n    if (Object.keys(this.registryFactory).length === 0) {\n      throw new Error('No backend found in registry.');\n    }\n    return Object.keys(this.registryFactory).sort((a: string, b: string) => {\n      // Highest priority comes first.\n      return this.registryFactory[b].priority -\n          this.registryFactory[a].priority;\n    });\n  }\n\n  private initializeBackendsAndReturnBest():\n      {name: string, asyncInit: boolean} {\n    const sortedBackends = this.getSortedBackends();\n\n    for (let i = 0; i < sortedBackends.length; i++) {\n      const backendName = sortedBackends[i];\n      const {success, asyncInit} = this.initializeBackend(backendName);\n      if (asyncInit || success) {\n        return {name: backendName, asyncInit};\n      }\n    }\n    throw new Error(\n        `Could not initialize any backends, all backend initializations ` +\n        `failed.`);\n  }\n\n  moveData(backend: KernelBackend, dataId: DataId) {\n    const info = this.state.tensorInfo.get(dataId);\n    const srcBackend = info.backend;\n    const values = this.readSync(dataId);\n    const refCount = srcBackend.refCount(dataId);\n    // Delete the tensor from the old backend and move it to the new\n    // backend.\n    srcBackend.disposeData(dataId, true);\n    info.backend = backend;\n    backend.move(dataId, values, info.shape, info.dtype, refCount);\n    if (this.shouldCheckForMemLeaks()) {\n      // Track the number of moves during a kernel execution to correctly\n      // detect memory leaks.\n      this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1]++;\n    }\n  }\n\n  tidy<T extends TensorContainer>(nameOrFn: string|ScopeFn<T>, fn?: ScopeFn<T>):\n      T {\n    let name: string = null;\n    if (fn == null) {\n      // Called with only 1 argument.\n      if (typeof nameOrFn !== 'function') {\n        throw new Error('Please provide a function to tidy()');\n      }\n      fn = nameOrFn;\n    } else {\n      // Called with 2 arguments.\n      if (typeof nameOrFn !== 'string' && !(nameOrFn instanceof String)) {\n        throw new Error(\n            'When calling with two arguments, the first argument ' +\n            'to tidy() must be a string');\n      }\n      if (typeof fn !== 'function') {\n        throw new Error(\n            'When calling with two arguments, the 2nd argument ' +\n            'to tidy() must be a function');\n      }\n      name = nameOrFn as string;\n      // TODO(nsthorat,smilkov): Do operation logging and performance\n      // profiling.\n    }\n    let result: T;\n    return this.scopedRun(\n        () => this.startScope(name), () => this.endScope(result), () => {\n          result = fn();\n          if (result instanceof Promise) {\n            console.error('Cannot return a Promise inside of tidy.');\n          }\n          return result;\n        });\n  }\n\n  private scopedRun<T>(start: () => void, end: () => void, f: () => T): T {\n    start();\n    try {\n      const res = f();\n      end();\n      return res;\n    } catch (ex) {\n      end();\n      throw ex;\n    }\n  }\n\n  private static nextTensorId = 0;\n  private nextTensorId(): number {\n    return Engine.nextTensorId++;\n  }\n\n  private static nextVariableId = 0;\n  private nextVariableId(): number {\n    return Engine.nextVariableId++;\n  }\n\n  /**\n   * This method is called instead of the public-facing tensor.clone() when\n   * saving a tensor for backwards pass. It makes sure to add the clone\n   * operation to the tape regardless of being called inside a kernel\n   * execution.\n   */\n  private clone(x: Tensor): Tensor {\n    const y: Tensor = ENGINE.runKernel(Identity, {x} as {} as NamedTensorMap);\n    const inputs = {x};\n    const grad = (dy: Tensor) => ({\n      x: () => {\n        const dtype = 'float32';\n        const gradInputs = {x: dy};\n        const attrs = {dtype};\n\n        return ENGINE.runKernel(\n                   Cast, gradInputs as {} as NamedTensorMap,\n                   // tslint:disable-next-line: no-unnecessary-type-assertion\n                   attrs as {} as NamedAttrMap) as Tensor;\n      }\n    });\n    const saved: Tensor[] = [];\n    this.addTapeNode(this.state.activeScope.name, inputs, [y], grad, saved, {});\n    return y;\n  }\n\n  /**\n   * Execute a kernel with the given name and return the output tensor.\n   *\n   * @param kernelName The name of the kernel to execute.\n   * @param inputs A map of input names to tensors.\n   * @param attrs A map of attribute names to their values. An attribute is a\n   *     primitive (non-tensor) input to the kernel.\n   * @param inputsToSave A list of tensors, inputs to save for the backprop\n   *     computation.\n   * @param outputsToSave A list of booleans, specifying which output to save\n   *     for the backprop computation. These are booleans since the output\n   * tensors are not visible to the user.\n   */\n  runKernel<T extends Tensor|Tensor[]>(\n      kernelName: string, inputs: NamedTensorMap, attrs?: NamedAttrMap): T {\n    if (this.backendName == null) {\n      // backend has not been initialized yet (backend initialization is lazy\n      // can be deferred until an op/ kernel is run).\n      // The below getter has side effects that will try to initialize the\n      // backend and set properties like this.backendName\n      // tslint:disable-next-line: no-unused-expression\n      this.backend;\n    }\n    const hasKernel = getKernel(kernelName, this.backendName) != null;\n    if (!hasKernel) {\n      throw new Error(`Kernel '${kernelName}' not registered for backend '${\n          this.backendName}'`);\n    }\n    return this.runKernelFunc({kernelName, inputs, attrs});\n  }\n\n  private shouldCheckForMemLeaks(): boolean {\n    return this.ENV.getBool('IS_TEST');\n  }\n\n  private checkKernelForMemLeak(\n      kernelName: string, numDataIdsBefore: number,\n      outInfos: TensorInfo[]): void {\n    const numDataIdsAfter = this.backend.numDataIds();\n\n    // Count the number of data ids associated with the result of the kernel.\n    let numOutputDataIds = 0;\n    outInfos.forEach(info => {\n      // Complex numbers allocate 3 data ids, one for 'real', one for\n      // 'imaginary', and one for the container that holds the former two.\n      numOutputDataIds += (info.dtype === 'complex64' ? 3 : 1);\n    });\n\n    // Account for the number of moves during kernel execution. A \"data move\"\n    // can happen in the middle of a kernel execution, placing a new (key,value)\n    // pair in the data storage. Since data moves have net zero effect (we\n    // always remove the data from the old backend), we have to cancel them out\n    // when detecting memory leaks.\n    const numMoves =\n        this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1];\n    const dataIdsLeaked =\n        numDataIdsAfter - numDataIdsBefore - numOutputDataIds - numMoves;\n    if (dataIdsLeaked > 0) {\n      throw new Error(\n          `Backend '${this.backendName}' has an internal memory leak ` +\n          `(${dataIdsLeaked} data ids) after running '${kernelName}'`);\n    }\n  }\n\n  /**\n   * Internal helper method to execute a kernel Func\n   *\n   * Use `runKernel` to execute kernels from outside of engine.\n   */\n  private runKernelFunc<T extends Tensor|Tensor[], I extends NamedTensorMap>(\n      kernelParams: RegisteredKernelInvocation<I>|\n      CustomGradKernelInvocation<T, I>): T {\n    let outputs: Tensor[];\n    let saved: Tensor[] = [];\n    const isTapeOn = this.isTapeOn();\n\n    const startingBytecount = this.state.numBytes;\n    const startingNumTensors = this.state.numTensors;\n\n    if (this.shouldCheckForMemLeaks()) {\n      this.state.numDataMovesStack.push(0);\n    }\n\n    let kernelFunc: () => Tensor[];\n    if (this.backendName == null) {\n      // backend has not been initialized yet (backend initialization is lazy\n      // can be deferred until an op/ kernel is run).\n      // The below getter has side effects that will try to initialize the\n      // backend and set properties like this.backendName\n      // tslint:disable-next-line: no-unused-expression\n      this.backend;\n    }\n\n    let out: TensorInfo|TensorInfo[];\n\n    const kernelOrScopeName = isRegisteredKernelInvocation(kernelParams) ?\n        kernelParams.kernelName :\n        this.state.activeScope != null ? this.state.activeScope.name : '';\n\n    // Create the kernelFunc from either a registered kernel OR passed in\n    // forward/backward functions (used by custom grad). In this context a\n    // kernelFunc wraps a kernel implementation with some bookkeeping.\n\n    if (isRegisteredKernelInvocation(kernelParams)) {\n      const {kernelName, inputs, attrs} = kernelParams;\n      if (this.backendName == null) {\n        // backend has not been initialized yet (backend initialization is lazy\n        // can be deferred until an op/ kernel is run).\n        // The below getter has side effects that will try to initialize the\n        // backend and set properties like this.backendName\n        // tslint:disable-next-line: no-unused-expression\n        this.backend;\n      }\n      const kernel = getKernel(kernelName, this.backendName);\n      util.assert(\n          kernel != null,\n          () => `Cannot find registered kernel '${kernelName}' for backend '${\n              this.backendName}'`);\n\n      kernelFunc = () => {\n        const numDataIdsBefore = this.backend.numDataIds();\n        out = kernel.kernelFunc({inputs, attrs, backend: this.backend});\n        const outInfos = Array.isArray(out) ? out : [out];\n        if (this.shouldCheckForMemLeaks()) {\n          this.checkKernelForMemLeak(kernelName, numDataIdsBefore, outInfos);\n        }\n\n        const outTensors = outInfos.map((outInfo: TensorInfo|Tensor) => {\n          // todo (yassogba) remove this option (Tensor) when node backend\n          // methods have been modularized and they all return tensorInfo.\n          // TensorInfos do not have a rank attribute.\n          if ((outInfo as Tensor).rank != null) {\n            return outInfo as Tensor;\n          }\n          const {dataId, shape, dtype} = outInfo as TensorInfo;\n          return this.makeTensorFromDataId(dataId, shape, dtype);\n        });\n\n        // Save any required inputs and outputs.\n\n        // Do not save unless we are recording to the tape. Otherwise it would\n        // cause a mem leak since there would be no backprop for these tensors\n        // (which would otherwise dispose them).\n        if (isTapeOn) {\n          const tensorsToSave =\n              this.getTensorsForGradient(kernelName, inputs, outTensors);\n          saved = this.saveTensorsForBackwardMode(tensorsToSave);\n        }\n        return outTensors;\n      };\n    } else {\n      const {forwardFunc} = kernelParams;\n      // Running a customGrad op.\n      const saveFunc: GradSaveFunc = (tensors) => {\n        // Do not save unless we are recording to the tape. Otherwise it would\n        // cause a mem leak since we would never run backprop, which disposes\n        // the kept tensors.\n        if (!isTapeOn) {\n          return;\n        }\n        saved = tensors.map(tensor => this.keep(this.clone(tensor)));\n      };\n\n      kernelFunc = () => {\n        const numDataIdsBefore = this.backend.numDataIds();\n        out = this.tidy(() => forwardFunc(this.backend, saveFunc));\n        const outs = (Array.isArray(out) ? out : [out]) as Tensor[];\n        if (this.shouldCheckForMemLeaks()) {\n          // Scope name is used to print a more helpful error message if needed.\n          this.checkKernelForMemLeak(kernelOrScopeName, numDataIdsBefore, outs);\n        }\n        return outs;\n      };\n    }\n\n    //\n    // Run the kernelFunc. Optionally profiling it.\n    //\n    const {inputs, attrs} = kernelParams;\n    const backwardsFunc = isRegisteredKernelInvocation(kernelParams) ?\n        null :\n        kernelParams.backwardsFunc;\n\n    let kernelProfile: KernelProfile;\n    this.scopedRun(\n        // Stop recording to a tape when running a kernel.\n        () => this.state.kernelDepth++, () => this.state.kernelDepth--, () => {\n          if (!this.ENV.getBool('DEBUG') && !this.state.profiling) {\n            outputs = kernelFunc();\n          } else {\n            kernelProfile = this.profiler.profileKernel(\n                kernelOrScopeName, inputs, () => kernelFunc());\n            if (this.ENV.getBool('DEBUG')) {\n              this.profiler.logKernelProfile(kernelProfile);\n            }\n            outputs = kernelProfile.outputs;\n          }\n        });\n\n    if (isTapeOn) {\n      this.addTapeNode(\n          kernelOrScopeName, inputs, outputs, backwardsFunc, saved, attrs);\n    }\n\n    if (this.state.profiling) {\n      this.state.activeProfile.kernels.push({\n        name: kernelOrScopeName,\n        bytesAdded: this.state.numBytes - startingBytecount,\n        totalBytesSnapshot: this.state.numBytes,\n        tensorsAdded: this.state.numTensors - startingNumTensors,\n        totalTensorsSnapshot: this.state.numTensors,\n        inputShapes: Object.keys(inputs).map(\n            key => inputs[key] != null ? inputs[key].shape : null),\n        outputShapes: outputs.map(item => item.shape),\n        kernelTimeMs: kernelProfile.timeMs,\n        extraInfo: kernelProfile.extraInfo\n      });\n    }\n    return (Array.isArray(out) ? outputs : outputs[0]) as T;\n  }\n\n  /**\n   * Saves tensors used in forward mode for use in backward mode.\n   *\n   * @param tensors the list of tensors to save.\n   */\n  private saveTensorsForBackwardMode(tensors: Tensor[]): Tensor[] {\n    const saved = tensors.map(tensor => this.keep(this.clone(tensor)));\n    return saved;\n  }\n\n  /**\n   * Returns a list of tensors to save for a given gradient calculation.\n   *\n   * @param kernelName name of kernel to look up gradient for.\n   * @param inputs a map of input tensors.\n   * @param outputs an array of output tensors from forward mode of kernel.\n   */\n  private getTensorsForGradient(\n      kernelName: string, inputs: NamedTensorMap,\n      outputs: Tensor[]): Tensor[]|null {\n    const gradConfig = getGradient(kernelName);\n    if (gradConfig != null) {\n      const inputsToSave: string[] = gradConfig.inputsToSave || [];\n      const outputsToSave: boolean[] = gradConfig.outputsToSave || [];\n\n      // If saveAllInputs is true, all inputs will be saved. Otherwise, inputs\n      // specified in inputsToSave will be saved.\n      let inputTensorsToSave: Tensor[];\n      if (gradConfig.saveAllInputs) {\n        util.assert(\n            Array.isArray(inputs),\n            () => 'saveAllInputs is true, expected inputs to be an array.');\n\n        inputTensorsToSave = Object.keys(inputs).map((key) => inputs[key]);\n      } else {\n        inputTensorsToSave = inputsToSave.map((inputName) => inputs[inputName]);\n      }\n\n      const outputTensorsToSave: Tensor[] =\n          outputs.filter((_, i) => outputsToSave[i]);\n\n      return inputTensorsToSave.concat(outputTensorsToSave);\n    }\n    // We return an empty list rather than throw an error because the kernel we\n    // are looking up may not actually be relevant to backproping through the\n    // overall function\n    //\n    // See 'does not error if irrelevant (pruned) ops are missing grads' test\n    // in gradients_test.ts for an example.\n    return [];\n  }\n\n  /**\n   * Internal method used by public APIs for tensor creation. Makes a new\n   * tensor with the provided shape, dtype and values. It always\n   * creates a new data id and writes the values to the underlying backend.\n   */\n  makeTensor(\n      values: DataValues, shape: number[], dtype: DataType,\n      backend?: KernelBackend): Tensor {\n    if (values == null) {\n      throw new Error('Values passed to engine.makeTensor() are null');\n    }\n    dtype = dtype || 'float32';\n    backend = backend || this.backend;\n    let backendVals = values as BackendValues;\n    if (dtype === 'string' && util.isString(values[0])) {\n      backendVals = (values as string[]).map(d => util.encodeString(d));\n    }\n    const dataId = backend.write(backendVals, shape, dtype);\n    const t = new Tensor(shape, dtype, dataId, this.nextTensorId());\n    this.trackTensor(t, backend);\n\n    // Count bytes for string tensors.\n    if (dtype === 'string') {\n      const info = this.state.tensorInfo.get(dataId);\n      const newBytes = bytesFromStringArray(backendVals as Uint8Array[]);\n      this.state.numBytes += newBytes - info.bytes;\n      info.bytes = newBytes;\n    }\n    return t;\n  }\n\n  /**\n   * Internal method used by backends. Makes a new tensor\n   * that is a wrapper around an existing data id. It doesn't create\n   * a new data id, only increments the ref count used in memory tracking.\n   */\n  makeTensorFromDataId(\n      dataId: DataId, shape: number[], dtype: DataType,\n      backend?: KernelBackend): Tensor {\n    dtype = dtype || 'float32';\n    const t = new Tensor(shape, dtype, dataId, this.nextTensorId());\n    this.trackTensor(t, backend);\n    return t;\n  }\n\n  makeVariable(\n      initialValue: Tensor, trainable = true, name?: string,\n      dtype?: DataType): Variable {\n    name = name || this.nextVariableId().toString();\n    if (dtype != null && dtype !== initialValue.dtype) {\n      initialValue = initialValue.cast(dtype);\n    }\n    const v = new Variable(initialValue, trainable, name, this.nextTensorId());\n    if (this.state.registeredVariables[v.name] != null) {\n      throw new Error(`Variable with name ${v.name} was already registered`);\n    }\n    this.state.registeredVariables[v.name] = v;\n    this.incRef(v, this.backend);\n    return v;\n  }\n\n  trackTensor(a: Tensor, backend: KernelBackend): void {\n    this.state.numTensors++;\n    if (a.dtype === 'string') {\n      this.state.numStringTensors++;\n    }\n    // Bytes for complex numbers are counted by their components. Bytes for\n    // string tensors are counted when writing values.\n    let bytes = 0;\n    if (a.dtype !== 'complex64' && a.dtype !== 'string') {\n      bytes = a.size * util.bytesPerElement(a.dtype);\n    }\n    this.state.numBytes += bytes;\n\n    if (!this.state.tensorInfo.has(a.dataId)) {\n      this.state.numDataBuffers++;\n      this.state.tensorInfo.set(a.dataId, {\n        backend: backend || this.backend,\n        dtype: a.dtype,\n        shape: a.shape,\n        bytes\n      });\n    }\n\n    if (!(a instanceof Variable)) {\n      this.track(a);\n    }\n  }\n\n  // Track the tensor by dataId and increase the refCount for the dataId in the\n  // backend.\n  // TODO(pyu10055): This is currently used by makeVariable method, to increase\n  // refCount on the backend for the dataId. It can potentially be replaced with\n  // Identity op indead of calling backend directly.\n  incRef(a: Tensor, backend: KernelBackend): void {\n    this.trackTensor(a, backend);\n    this.backend.incRef(a.dataId);\n  }\n\n  removeDataId(dataId: DataId, backend: KernelBackend) {\n    if (this.state.tensorInfo.has(dataId) &&\n        this.state.tensorInfo.get(dataId).backend === backend) {\n      this.state.tensorInfo.delete(dataId);\n      this.state.numDataBuffers--;\n    }\n  }\n  disposeTensor(a: Tensor): void {\n    if (!this.state.tensorInfo.has(a.dataId)) {\n      return;\n    }\n    const info = this.state.tensorInfo.get(a.dataId);\n\n    this.state.numTensors--;\n    if (a.dtype === 'string') {\n      this.state.numStringTensors--;\n      this.state.numBytes -= info.bytes;\n    }\n    // Don't count bytes for complex numbers as they are counted by their\n    // components.\n    if (a.dtype !== 'complex64' && a.dtype !== 'string') {\n      const bytes = a.size * util.bytesPerElement(a.dtype);\n      this.state.numBytes -= bytes;\n    }\n\n    // Remove the reference to dataId if backend dispose the data successfully\n    if (info.backend.disposeData(a.dataId)) {\n      this.removeDataId(a.dataId, info.backend);\n    }\n\n    // TODO(nsthorat): Construct an error and save the stack trace for\n    // debugging when in debug mode. Creating a stack trace is too expensive\n    // to do unconditionally.\n  }\n\n  disposeVariables(): void {\n    for (const varName in this.state.registeredVariables) {\n      const v = this.state.registeredVariables[varName];\n      this.disposeVariable(v);\n    }\n  }\n\n  disposeVariable(v: Variable): void {\n    this.disposeTensor(v);\n    if (this.state.registeredVariables[v.name] != null) {\n      delete this.state.registeredVariables[v.name];\n    }\n  }\n\n  memory(): MemoryInfo {\n    const info = this.backend.memory() as MemoryInfo;\n    info.numTensors = this.state.numTensors;\n    info.numDataBuffers = this.state.numDataBuffers;\n    info.numBytes = this.state.numBytes;\n    if (this.state.numStringTensors > 0) {\n      info.unreliable = true;\n      if (info.reasons == null) {\n        info.reasons = [];\n      }\n      info.reasons.push(\n          'Memory usage by string tensors is approximate ' +\n          '(2 bytes per character)');\n    }\n    return info;\n  }\n\n  async profile(query: () => (TensorContainer | Promise<TensorContainer>)):\n      Promise<ProfileInfo> {\n    this.state.profiling = true;\n\n    const startBytes = this.state.numBytes;\n    const startNumTensors = this.state.numTensors;\n\n    this.state.activeProfile.kernels = [];\n    this.state.activeProfile.result = await query();\n\n    this.state.profiling = false;\n\n    this.state.activeProfile.peakBytes = Math.max(\n        ...this.state.activeProfile.kernels.map(d => d.totalBytesSnapshot));\n    this.state.activeProfile.newBytes = this.state.numBytes - startBytes;\n    this.state.activeProfile.newTensors =\n        this.state.numTensors - startNumTensors;\n    for (const kernel of this.state.activeProfile.kernels) {\n      kernel.kernelTimeMs = await kernel.kernelTimeMs;\n      kernel.extraInfo = await kernel.extraInfo;\n    }\n    return this.state.activeProfile;\n  }\n\n  isTapeOn(): boolean {\n    return this.state.gradientDepth > 0 && this.state.kernelDepth === 0;\n  }\n\n  private addTapeNode(\n      kernelName: string, inputs: NamedTensorMap, outputs: Tensor[],\n      gradientsFunc: GradFunc, saved: Tensor[], attrs: NamedAttrMap): void {\n    const tapeNode: TapeNode =\n        {id: this.state.nextTapeNodeId++, kernelName, inputs, outputs, saved};\n\n    const gradConfig = getGradient(kernelName);\n    if (gradConfig != null) {\n      gradientsFunc = gradConfig.gradFunc;\n    }\n    if (gradientsFunc != null) {\n      tapeNode.gradient = (dys: Tensor[]) => {\n        // TODO(smilkov): To optimize back-prop, pass dys that are not used in\n        // the backprop graph to the user as null instead of zeros\n        dys = dys.map((dy, i) => {\n          if (dy == null) {\n            const output = outputs[i];\n            const vals = util.makeZerosTypedArray(output.size, output.dtype);\n            return this.makeTensor(vals, output.shape, output.dtype);\n          }\n          return dy;\n        });\n        // Grad functions of ops with single outputs expect a dy, while ops\n        // with multiple outputs expect dys (array of dy).\n        return gradientsFunc(dys.length > 1 ? dys : dys[0], saved, attrs);\n      };\n    }\n    this.state.activeTape.push(tapeNode);\n  }\n\n  keep<T extends Tensor>(result: T): T {\n    result.kept = true;\n    return result;\n  }\n\n  private startTape() {\n    if (this.state.gradientDepth === 0) {\n      this.state.activeTape = [];\n    }\n    this.state.gradientDepth++;\n  }\n\n  private endTape() {\n    this.state.gradientDepth--;\n  }\n\n  /**\n   * Start a scope. Use this with endScope() to achieve the same functionality\n   * as scope() without the need for a function closure.\n   */\n  startScope(name?: string) {\n    const scopeInfo: ScopeState = {\n      track: [],\n      name: 'unnamed scope',\n      id: this.state.nextScopeId++\n    };\n    if (name) {\n      scopeInfo.name = name;\n    }\n    this.state.scopeStack.push(scopeInfo);\n    this.state.activeScope = scopeInfo;\n  }\n\n  /**\n   * End a scope. Use this with startScope() to achieve the same functionality\n   * as scope() without the need for a function closure.\n   */\n  endScope(result?: TensorContainer) {\n    const tensorsToTrackInParent = getTensorsInContainer(result);\n    const tensorsToTrackInParentSet =\n        new Set(tensorsToTrackInParent.map(t => t.id));\n\n    // Dispose the arrays tracked in this scope.\n    for (let i = 0; i < this.state.activeScope.track.length; i++) {\n      const tensor = this.state.activeScope.track[i];\n      if (!tensor.kept && !tensorsToTrackInParentSet.has(tensor.id)) {\n        tensor.dispose();\n      }\n    }\n\n    const oldScope = this.state.scopeStack.pop();\n    this.state.activeScope = this.state.scopeStack.length === 0 ?\n        null :\n        this.state.scopeStack[this.state.scopeStack.length - 1];\n\n    // Track the current result in the parent scope.\n    tensorsToTrackInParent.forEach(tensor => {\n      // Only track the tensor if was allocated in the inner scope and is not\n      // globally kept.\n      if (!tensor.kept && tensor.scopeId === oldScope.id) {\n        this.track(tensor);\n      }\n    });\n  }\n\n  /**\n   * Returns gradients of `f` with respect to each of the `xs`. The gradients\n   * returned are of the same length as `xs`, but some might be null if `f`\n   * was not a function of that `x`. It also takes optional dy to multiply the\n   * gradient, which defaults to `1`.\n   */\n  gradients<T extends Tensor>(\n      f: () => T, xs: Tensor[], dy?: T,\n      allowNoGradients = false): {value: T, grads: Tensor[]} {\n    util.assert(\n        xs.length > 0, () => 'gradients() received an empty list of xs.');\n    if (dy != null && dy.dtype !== 'float32') {\n      throw new Error(`dy must have 'float32' dtype, but has '${dy.dtype}'`);\n    }\n\n    const y = this.scopedRun(\n        () => this.startTape(), () => this.endTape(),\n        () => this.tidy('forward', f));\n\n    util.assert(\n        y instanceof Tensor,\n        () => 'The result y returned by f() must be a tensor.');\n    // Filter out the nodes that don't connect x => y.\n    const filteredTape = getFilteredNodesXToY(this.state.activeTape, xs, y);\n    if (!allowNoGradients && filteredTape.length === 0 && xs.length > 0) {\n      throw new Error(\n          'Cannot compute gradient of y=f(x) with respect to x. Make sure ' +\n          'that the f you passed encloses all operations that lead from x ' +\n          'to y.');\n    }\n\n    return this.tidy('backward', () => {\n      const accumulatedGradientMap: {[tensorId: number]: Tensor} = {};\n      accumulatedGradientMap[y.id] = (dy == null) ? ones(y.shape) : dy;\n\n      // Backprop gradients through the filtered nodes.\n      backpropagateGradients(\n          accumulatedGradientMap, filteredTape,\n          // Pass the tidy function to avoid circular dep with `tape.ts`.\n          f => this.tidy(f as ScopeFn<Tensor>),\n          // Pass an add function to avoide a circular dep with `tape.ts`.\n          add);\n      const grads = xs.map(x => accumulatedGradientMap[x.id]);\n\n      if (this.state.gradientDepth === 0) {\n        // This means that we are not computing higher-order gradients\n        // and can clean up the tape.\n        this.state.activeTape.forEach(node => {\n          for (const tensor of node.saved) {\n            tensor.dispose();\n          }\n        });\n        this.state.activeTape = null;\n      }\n      return {value: y, grads};\n    });\n  }\n\n  customGrad<T extends Tensor>(f: CustomGradientFunc<T>):\n      (...args: Array<Tensor|GradSaveFunc>) => T {\n    util.assert(\n        util.isFunction(f),\n        () => 'The f passed in customGrad(f) must be a function.');\n    return (...inputs: Tensor[]): T => {\n      util.assert(\n          inputs.every(t => t instanceof Tensor),\n          () => 'The args passed in customGrad(f)(x1, x2,...) must all be ' +\n              'tensors');\n\n      let res: {\n        value: T,\n        gradFunc: (dy: T, saved: Tensor[]) => Tensor | Tensor[],\n      };\n      const inputMap: NamedTensorMap = {};\n      inputs.forEach((input, i) => {\n        inputMap[i] = input;\n      });\n\n      const forwardFunc: ForwardFunc<T> = (_, save) => {\n        res = f(...[...inputs, save]);\n        util.assert(\n            res.value instanceof Tensor,\n            () => 'The function f passed in customGrad(f) must return an ' +\n                'object where `obj.value` is a tensor');\n        util.assert(\n            util.isFunction(res.gradFunc),\n            () => 'The function f passed in customGrad(f) must return an ' +\n                'object where `obj.gradFunc` is a function.');\n        return res.value;\n      };\n\n      const backwardsFunc = (dy: T, saved: Tensor[]) => {\n        const gradRes = res.gradFunc(dy, saved);\n        const grads: Tensor[] = Array.isArray(gradRes) ? gradRes : [gradRes];\n        util.assert(\n            grads.length === inputs.length,\n            () => 'The function f passed in customGrad(f) must return an ' +\n                'object where `obj.gradFunc` is a function that returns ' +\n                'the same number of tensors as inputs passed to f(...).');\n        util.assert(\n            grads.every(t => t instanceof Tensor),\n            () => 'The function f passed in customGrad(f) must return an ' +\n                'object where `obj.gradFunc` is a function that returns ' +\n                'a list of only tensors.');\n        const gradMap: {[key: string]: () => Tensor} = {};\n        grads.forEach((grad, i) => {\n          gradMap[i] = () => grad;\n        });\n        return gradMap;\n      };\n\n      return this.runKernelFunc({\n        forwardFunc,\n        backwardsFunc,\n        inputs: inputMap,\n      });\n    };\n  }\n\n  readSync(dataId: DataId): BackendValues {\n    // Route the read to the correct backend.\n    const info = this.state.tensorInfo.get(dataId);\n    return info.backend.readSync(dataId);\n  }\n  read(dataId: DataId): Promise<BackendValues> {\n    // Route the read to the correct backend.\n    const info = this.state.tensorInfo.get(dataId);\n    return info.backend.read(dataId);\n  }\n\n  readToGPU(dataId: DataId, options?: DataToGPUOptions): GPUData {\n    // Route the read to the correct backend.\n    const info = this.state.tensorInfo.get(dataId);\n    return info.backend.readToGPU(dataId, options);\n  }\n\n  async time(query: () => void): Promise<TimingInfo> {\n    const start = now();\n    const timingInfo = await this.backend.time(query) as TimingInfo;\n    timingInfo.wallMs = now() - start;\n    return timingInfo;\n  }\n\n  /**\n   * Tracks a Tensor in the current scope to be automatically cleaned up\n   * when the current scope ends, and returns the value.\n   *\n   * @param result The Tensor to track in the current scope.\n   */\n  private track<T extends Tensor>(result: T): T {\n    if (this.state.activeScope != null) {\n      result.scopeId = this.state.activeScope.id;\n      this.state.activeScope.track.push(result);\n    }\n\n    return result;\n  }\n\n  get registeredVariables(): NamedVariableMap {\n    return this.state.registeredVariables;\n  }\n\n  /**\n   * Resets the engine state. Removes all backends but does not remove\n   * registered backend factories.\n   */\n  reset(): void {\n    // Make any pending promise obsolete.\n    this.pendingBackendInitId++;\n\n    this.state.dispose();\n    this.ENV.reset();\n    this.state = new EngineState();\n\n    for (const backendName in this.registry) {\n      this.disposeRegisteredKernels(backendName);\n      this.registry[backendName].dispose();\n      delete this.registry[backendName];\n    }\n    this.backendName = null;\n    this.backendInstance = null;\n    this.pendingBackendInit = null;\n  }\n}\n\nfunction ones(shape: number[]): Tensor {\n  const values = makeOnesTypedArray(sizeFromShape(shape), 'float32');\n  return ENGINE.makeTensor(values, shape, 'float32');\n}\n\nexport function getOrMakeEngine(): Engine {\n  const ns = getGlobalNamespace() as {} as {_tfengine: Engine};\n  if (ns._tfengine == null) {\n    const environment = new Environment(ns);\n    ns._tfengine = new Engine(environment);\n  }\n  setEnvironmentGlobal(ns._tfengine.ENV);\n\n  // Tell the current tensor interface that the global engine is responsible\n  // for tracking.\n  setTensorTracker(() => ns._tfengine);\n  return ns._tfengine;\n}\n\nexport const ENGINE = getOrMakeEngine();\n\n/**\n * A implementation of the add op for use within engine and tape.\n *\n * This allows us to avoid a circular dependency between add.ts and engine.\n * It is exported to be available in tape tests.\n */\nexport function add(a: Tensor, b: Tensor): Tensor {\n  // We duplicate Add here to avoid a circular dependency with add.ts.\n  const inputs = {a, b};\n  return ENGINE.runKernel(Add, inputs as {} as NamedTensorMap);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Backend, DataId, DataToGPUOptions, GPUData} from '../tensor';\nimport {BackendValues, DataType} from '../types';\n\nexport const EPSILON_FLOAT32 = 1e-7;\nexport const EPSILON_FLOAT16 = 1e-4;\n\n// Required information for all backends.\nexport interface BackendTimingInfo {\n  kernelMs: number|{error: string};\n  getExtraProfileInfo?(): string;  // a field for additional timing information\n                                   // e.g. packing / unpacking for WebGL backend\n}\n\nexport interface TensorStorage {\n  read(dataId: DataId): Promise<BackendValues>;\n  readSync(dataId: DataId): BackendValues;\n  disposeData(dataId: DataId, force?: boolean): boolean;\n  write(values: BackendValues, shape: number[], dtype: DataType): DataId;\n  move(\n      dataId: DataId, values: BackendValues, shape: number[], dtype: DataType,\n      refCount: number): void;\n  memory(): {unreliable: boolean;};  // Backend-specific information.\n  /** Returns number of data ids currently in the storage. */\n  numDataIds(): number;\n  refCount(dataId: DataId): number;\n}\n\n/** Convenient class for storing tensor-related data. */\nexport class DataStorage<T> {\n  private data = new WeakMap<DataId, T>();\n  private dataIdsCount = 0;\n\n  constructor(private backend: KernelBackend, private dataMover: DataMover) {}\n\n  get(dataId: DataId) {\n    if (!this.data.has(dataId)) {\n      this.dataMover.moveData(this.backend, dataId);\n    }\n    return this.data.get(dataId);\n  }\n\n  set(dataId: DataId, value: T): void {\n    this.dataIdsCount++;\n    this.data.set(dataId, value);\n  }\n\n  has(dataId: DataId): boolean {\n    return this.data.has(dataId);\n  }\n\n  delete(dataId: DataId): boolean {\n    this.dataIdsCount--;\n    return this.data.delete(dataId);\n  }\n\n  numDataIds(): number {\n    return this.dataIdsCount;\n  }\n}\n\nexport interface DataMover {\n  /**\n   * To be called by backends whenever they see a dataId that they don't own.\n   * Upon calling this method, the mover will fetch the tensor from another\n   * backend and register it with the current active backend.\n   */\n  moveData(backend: KernelBackend, dataId: DataId): void;\n}\n\nexport interface BackendTimer {\n  // check if backend timer is available\n  timerAvailable(): boolean;\n  time(f: () => void): Promise<BackendTimingInfo>;\n}\n\n/**\n * The interface that defines the kernels that should be implemented when\n * adding a new backend. New backends don't need to implement every one of the\n * methods, this can be done gradually (throw an error for unimplemented\n * methods).\n */\nexport class KernelBackend implements TensorStorage, Backend, BackendTimer {\n  refCount(dataId: DataId): number {\n    return notYetImplemented('refCount');\n  }\n  incRef(dataId: DataId): void {\n    return notYetImplemented('incRef');\n  }\n  timerAvailable(): boolean {\n    return true;\n  }\n  time(f: () => void): Promise<BackendTimingInfo> {\n    return notYetImplemented('time');\n  }\n  read(dataId: object): Promise<BackendValues> {\n    return notYetImplemented('read');\n  }\n  readSync(dataId: object): BackendValues {\n    return notYetImplemented('readSync');\n  }\n  readToGPU(dataId: object, options?: DataToGPUOptions): GPUData {\n    return notYetImplemented('readToGPU');\n  }\n  numDataIds(): number {\n    return notYetImplemented('numDataIds');\n  }\n  disposeData(dataId: object, force?: boolean): boolean {\n    return notYetImplemented('disposeData');\n  }\n  write(values: BackendValues, shape: number[], dtype: DataType): DataId {\n    return notYetImplemented('write');\n  }\n  move(\n      dataId: DataId, values: BackendValues, shape: number[], dtype: DataType,\n      refCount: number): void {\n    return notYetImplemented('move');\n  }\n  memory(): {unreliable: boolean; reasons?: string[]} {\n    return notYetImplemented('memory');\n  }\n  /** Returns the highest precision for floats in bits (e.g. 16 or 32) */\n  floatPrecision(): 16|32 {\n    return notYetImplemented('floatPrecision');\n  }\n  /** Returns the smallest representable number.  */\n  epsilon(): number {\n    return this.floatPrecision() === 32 ? EPSILON_FLOAT32 : EPSILON_FLOAT16;\n  }\n  dispose(): void {\n    return notYetImplemented('dispose');\n  }\n}\n\nfunction notYetImplemented(kernelName: string): never {\n  throw new Error(\n      `'${kernelName}' not yet implemented or not found in the registry. ` +\n      `This kernel may not be supported by the tfjs backend you have chosen`);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Note that the identifier globalNameSpace is scoped to this module, but will\n// always resolve to the same global object regardless of how the module is\n// resolved.\n// tslint:disable-next-line:no-any\nlet globalNameSpace: {_tfGlobals: Map<string, any>};\n// tslint:disable-next-line:no-any\nexport function getGlobalNamespace(): {_tfGlobals: Map<string, any>} {\n  if (globalNameSpace == null) {\n    // tslint:disable-next-line:no-any\n    let ns: any;\n    if (typeof (window) !== 'undefined') {\n      ns = window;\n    } else if (typeof (global) !== 'undefined') {\n      ns = global;\n    } else if (typeof (process) !== 'undefined') {\n      ns = process;\n    } else if (typeof (self) !== 'undefined') {\n      ns = self;\n    } else {\n      throw new Error('Could not find a global object');\n    }\n    globalNameSpace = ns;\n  }\n  return globalNameSpace;\n}\n\n// tslint:disable-next-line:no-any\nfunction getGlobalMap(): Map<string, any> {\n  const ns = getGlobalNamespace();\n  if (ns._tfGlobals == null) {\n    ns._tfGlobals = new Map();\n  }\n  return ns._tfGlobals;\n}\n\n/**\n * Returns a globally accessible 'singleton' object.\n *\n * @param key the name of the object\n * @param init a function to initialize to initialize this object\n *             the first time it is fetched.\n */\nexport function getGlobal<T>(key: string, init: () => T): T {\n  const globalMap = getGlobalMap();\n  if (globalMap.has(key)) {\n    return globalMap.get(key);\n  } else {\n    const singleton = init();\n    globalMap.set(key, singleton);\n    return globalMap.get(key);\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Allow UpperCamelCase variable names\n// tslint:disable: variable-name\n// Unfortunately just enabling PascalCase per file (tslint:enable:\n// allow-pascal-case) doesn't work.\nimport {NamedTensorInfoMap, TensorInfo} from './kernel_registry';\nimport {ExplicitPadding} from './ops/conv_util';\nimport {Activation} from './ops/fused_types';\nimport {DataType, PixelData} from './types';\n\nexport const Abs = 'Abs';\nexport type AbsInputs = UnaryInputs;\n\nexport const Acos = 'Acos';\nexport type AcosInputs = UnaryInputs;\n\nexport const Acosh = 'Acosh';\nexport type AcoshInputs = UnaryInputs;\n\nexport const Add = 'Add';\nexport type AddInputs = BinaryInputs;\n\nexport const AddN = 'AddN';\nexport type AddNInputs = TensorInfo[];\n\nexport const All = 'All';\nexport type AllInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface AllAttrs {\n  axis: number|number[];\n  keepDims: boolean;\n}\n\nexport const Any = 'Any';\nexport type AnyInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface AnyAttrs {\n  axis: number|number[];\n  keepDims: boolean;\n}\n\nexport const ArgMax = 'ArgMax';\nexport type ArgMaxInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface ArgMaxAttrs {\n  axis: number;\n}\n\nexport const ArgMin = 'ArgMin';\nexport type ArgMinInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface ArgMinAttrs {\n  axis: number;\n}\n\nexport const Asin = 'Asin';\nexport type AsinInputs = UnaryInputs;\n\nexport const Asinh = 'Asinh';\nexport type AsinhInputs = UnaryInputs;\n\nexport const Atan = 'Atan';\nexport type AtanInputs = UnaryInputs;\n\nexport const Atanh = 'Atanh';\nexport type AtanhInputs = UnaryInputs;\n\nexport const Atan2 = 'Atan2';\nexport type Atan2Inputs = BinaryInputs;\n\nexport const AvgPool = 'AvgPool';\nexport type AvgPoolInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface AvgPoolAttrs {\n  filterSize: [number, number]|number;\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n}\n\nexport const AvgPoolGrad = 'AvgPoolGrad';\nexport type AvgPoolGradInputs = Pick<NamedTensorInfoMap, 'dy'|'input'>;\nexport interface AvgPoolGradAttrs {\n  filterSize: [number, number]|number;\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n}\n\nexport const AvgPool3D = 'AvgPool3D';\nexport type AvgPool3DInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface AvgPool3DAttrs {\n  filterSize: [number, number, number]|number;\n  strides: [number, number, number]|number;\n  pad: 'valid'|'same'|number;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n  dataFormat: 'NDHWC'|'NCDHW';\n}\n\nexport const AvgPool3DGrad = 'AvgPool3DGrad';\nexport type AvgPool3DGradInputs = Pick<NamedTensorInfoMap, 'dy'|'input'>;\nexport interface AvgPool3DGradAttrs {\n  filterSize: [number, number, number]|number;\n  strides: [number, number, number]|number;\n  pad: 'valid'|'same'|number;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n}\n\nexport const BatchMatMul = 'BatchMatMul';\nexport type BatchMatMulInputs = Pick<NamedTensorInfoMap, 'a'|'b'>;\nexport interface BatchMatMulAttrs {\n  transposeA: boolean;\n  transposeB: boolean;\n}\n\nexport const BatchToSpaceND = 'BatchToSpaceND';\nexport type BatchToSpaceNDInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface BatchToSpaceNDAttrs {\n  blockShape: number[];\n  crops: number[][];\n}\n\nexport type BinaryInputs = Pick<NamedTensorInfoMap, 'a'|'b'>;\n\nexport const Bincount = 'Bincount';\nexport type BincountInputs = Pick<NamedTensorInfoMap, 'x'|'weights'>;\nexport interface BincountAttrs {\n  size: number;\n}\n\nexport const BroadcastTo = 'BroadcastTo';\nexport type BroadcastToInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface BroadCastToAttrs {\n  shape: number[];\n  inputShape: number[];  // for gradient\n}\n\nexport const BroadcastArgs = 'BroadcastArgs';\nexport type BroadcastArgsInputs = Pick<NamedTensorInfoMap, 's0'|'s1'>;\n\nexport const Cast = 'Cast';\nexport type CastInputs = UnaryInputs;\nexport interface CastAttrs {\n  dtype: DataType;\n}\n\nexport const Ceil = 'Ceil';\nexport type CeilInputs = UnaryInputs;\n\nexport const ClipByValue = 'ClipByValue';\nexport type ClipByValueInputs = UnaryInputs;\nexport interface ClipByValueAttrs {\n  clipValueMin: number;\n  clipValueMax: number;\n}\n\nexport const Complex = 'Complex';\nexport type ComplexInputs = Pick<NamedTensorInfoMap, 'real'|'imag'>;\n\nexport const ComplexAbs = 'ComplexAbs';\nexport type ComplexAbsInputs = UnaryInputs;\n\nexport const Concat = 'Concat';\nexport type ConcatInputs = TensorInfo[];\nexport interface ConcatAttrs {\n  axis: number;\n}\n\nexport const Conv2D = 'Conv2D';\nexport type Conv2DInputs = Pick<NamedTensorInfoMap, 'x'|'filter'>;\nexport interface Conv2DAttrs {\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dataFormat: 'NHWC'|'NCHW';\n  dilations: [number, number]|number;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n}\n\nexport const Conv2DBackpropFilter = 'Conv2DBackpropFilter';\nexport type Conv2DBackpropFilterInputs = Pick<NamedTensorInfoMap, 'x'|'dy'>;\nexport interface Conv2DBackpropFilterAttrs {\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dataFormat: 'NHWC'|'NCHW';\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n  filterShape: [number, number, number, number];\n}\n\nexport const Conv2DBackpropInput = 'Conv2DBackpropInput';\nexport type Conv2DBackpropInputInputs = Pick<NamedTensorInfoMap, 'dy'|'filter'>;\nexport interface Conv2DBackpropInputAttrs {\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dataFormat: 'NHWC'|'NCHW';\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n  inputShape: [number, number, number, number];\n}\n\nexport const Conv3D = 'Conv3D';\nexport type Conv3DInputs = Pick<NamedTensorInfoMap, 'x'|'filter'>;\nexport interface Conv3DAttrs {\n  strides: [number, number, number]|number;\n  pad: 'valid'|'same';\n  dataFormat: 'NDHWC'|'NCDHW';\n  dilations: [number, number, number]|number;\n}\n\nexport const Conv3DBackpropFilterV2 = 'Conv3DBackpropFilterV2';\nexport type Conv3DBackpropFilterV2Inputs = Pick<NamedTensorInfoMap, 'x'|'dy'>;\n\nexport interface Conv3DBackpropFilterV2Attrs {\n  strides: [number, number, number]|number;\n  pad: 'valid'|'same';\n  filterShape: [number, number, number, number, number];\n}\n\nexport const Conv3DBackpropInputV2 = 'Conv3DBackpropInputV2';\nexport type Conv3DBackpropInputV2Inputs =\n    Pick<NamedTensorInfoMap, 'dy'|'filter'>;\nexport interface Conv3DBackpropInputV2Attrs {\n  strides: [number, number, number]|number;\n  pad: 'valid'|'same';\n  inputShape: [number, number, number, number, number];\n}\n\nexport const Cos = 'Cos';\nexport type CosInputs = UnaryInputs;\n\nexport const Cosh = 'Cosh';\nexport type CoshInputs = UnaryInputs;\n\nexport const Cumsum = 'Cumsum';\nexport type CumsumInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface CumsumAttrs {\n  axis: number;\n  exclusive: boolean;\n  reverse: boolean;\n}\n\nexport const CropAndResize = 'CropAndResize';\nexport type CropAndResizeInputs =\n    Pick<NamedTensorInfoMap, 'image'|'boxes'|'boxInd'>;\nexport interface CropAndResizeAttrs {\n  cropSize: [number, number];\n  method: 'bilinear'|'nearest';\n  extrapolationValue: number;\n}\n\nexport const DenseBincount = 'DenseBincount';\nexport type DenseBincountInputs = Pick<NamedTensorInfoMap, 'x'|'weights'>;\nexport interface DenseBincountAttrs {\n  size: number;\n  binaryOutput?: boolean;\n}\n\nexport const DepthToSpace = 'DepthToSpace';\nexport type DepthToSpaceInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface DepthToSpaceAttrs {\n  blockSize: number;\n  dataFormat: 'NHWC'|'NCHW';\n}\n\nexport const DepthwiseConv2dNative = 'DepthwiseConv2dNative';\nexport type DepthwiseConv2dNativeInputs =\n    Pick<NamedTensorInfoMap, 'x'|'filter'>;\nexport interface DepthwiseConv2dNativeAttrs {\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dataFormat: 'NHWC'|'NCHW';\n  dilations: [number, number]|number;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n}\n\nexport const DepthwiseConv2dNativeBackpropFilter =\n    'DepthwiseConv2dNativeBackpropFilter';\nexport type DepthwiseConv2dNativeBackpropFilterInputs =\n    Pick<NamedTensorInfoMap, 'x'|'dy'>;\nexport interface DepthwiseConv2dNativeBackpropFilterAttrs {\n  strides: [number, number]|number;\n  dilations: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n  filterShape: [number, number, number, number];\n}\n\nexport const DepthwiseConv2dNativeBackpropInput =\n    'DepthwiseConv2dNativeBackpropInput';\nexport type DepthwiseConv2dNativeBackpropInputInputs =\n    Pick<NamedTensorInfoMap, 'dy'|'filter'>;\nexport interface DepthwiseConv2dNativeBackpropInputAttrs {\n  strides: [number, number]|number;\n  dilations: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n  inputShape: [number, number, number, number];\n}\n\nexport const Diag = 'Diag';\nexport type DiagInputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const Dilation2D = 'Dilation2D';\nexport type Dilation2DInputs = Pick<NamedTensorInfoMap, 'x'|'filter'>;\nexport interface Dilation2DAttrs {\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number;\n  dilations: [number, number]|number;\n}\n\nexport const Dilation2DBackpropInput = 'Dilation2DBackpropInput';\nexport type Dilation2DBackpropInputInputs =\n    Pick<NamedTensorInfoMap, 'x'|'filter'|'dy'>;\n\nexport const Dilation2DBackpropFilter = 'Dilation2DBackpropFilter';\nexport type Dilation2DBackpropFilterInputs =\n    Pick<NamedTensorInfoMap, 'x'|'filter'|'dy'>;\n\nexport const RealDiv = 'RealDiv';\nexport type RealDivInputs = BinaryInputs;\n\nexport const Einsum = 'Einsum';\nexport type EinsumInputs = TensorInfo[];\nexport interface EinsumAttrs {\n  equation: string;\n}\n\nexport const Elu = 'Elu';\nexport type EluInputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const EluGrad = 'EluGrad';\nexport type EluGradInputs = Pick<NamedTensorInfoMap, 'dy'|'y'>;\n\nexport const Erf = 'Erf';\nexport type ErfInputs = UnaryInputs;\n\nexport const Equal = 'Equal';\nexport type EqualInputs = BinaryInputs;\n\nexport const Exp = 'Exp';\nexport type ExpInputs = UnaryInputs;\n\nexport const ExpandDims = 'ExpandDims';\nexport type ExpandDimsInputs = Pick<NamedTensorInfoMap, 'input'>;\nexport interface ExpandDimsAttrs {\n  dim: number;\n}\n\nexport const Expm1 = 'Expm1';\nexport type Expm1Inputs = UnaryInputs;\n\nexport const FFT = 'FFT';\nexport type FFTInputs = Pick<NamedTensorInfoMap, 'input'>;\n\nexport const Fill = 'Fill';\nexport interface FillAttrs {\n  shape: number[];\n  value: number|string;\n  dtype: DataType;\n}\n\nexport const FlipLeftRight = 'FlipLeftRight';\nexport type FlipLeftRightInputs = Pick<NamedTensorInfoMap, 'image'>;\n\nexport const Floor = 'Floor';\nexport type FloorInputs = UnaryInputs;\n\nexport const FloorDiv = 'FloorDiv';\nexport type FloorDivInputs = BinaryInputs;\n\nexport const FusedBatchNorm = 'FusedBatchNorm';\nexport type FusedBatchNormInputs =\n    Pick<NamedTensorInfoMap, 'x'|'scale'|'offset'|'mean'|'variance'>;\nexport interface FusedBatchNormAttrs {\n  varianceEpsilon: number;\n}\n\nexport const GatherV2 = 'GatherV2';\nexport type GatherV2Inputs = Pick<NamedTensorInfoMap, 'x'|'indices'>;\nexport interface GatherV2Attrs {\n  axis: number;\n  batchDims: number;\n}\n\nexport const GatherNd = 'GatherNd';\nexport type GatherNdInputs = Pick<NamedTensorInfoMap, 'params'|'indices'>;\n\nexport const Greater = 'Greater';\nexport type GreaterInputs = BinaryInputs;\n\nexport const GreaterEqual = 'GreaterEqual';\nexport type GreaterEqualInputs = BinaryInputs;\n\nexport const Identity = 'Identity';\nexport type IdentityInputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const IFFT = 'IFFT';\nexport type IFFTInputs = Pick<NamedTensorInfoMap, 'input'>;\n\nexport const Imag = 'Imag';\nexport type ImagInputs = Pick<NamedTensorInfoMap, 'input'>;\n\nexport const IsFinite = 'IsFinite';\nexport type IsFiniteInputs = UnaryInputs;\n\nexport const IsInf = 'IsInf';\nexport type IsInfInputs = UnaryInputs;\n\nexport const IsNan = 'IsNan';\nexport type IsNanInputs = UnaryInputs;\n\nexport const LeakyRelu = 'LeakyRelu';\nexport type LeakyReluInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface LeakyReluAttrs {\n  alpha: number;\n}\n\nexport const Less = 'Less';\nexport type LessInputs = BinaryInputs;\n\nexport const LessEqual = 'LessEqual';\nexport type LessEqualInputs = BinaryInputs;\n\nexport const LinSpace = 'LinSpace';\nexport interface LinSpaceAttrs {\n  start: number;\n  stop: number;\n  num: number;\n}\nexport const Log = 'Log';\nexport type LogInputs = UnaryInputs;\n\nexport const Log1p = 'Log1p';\nexport type Log1pInputs = UnaryInputs;\n\nexport const LogicalAnd = 'LogicalAnd';\nexport type LogicalAndInputs = BinaryInputs;\n\nexport const LogicalNot = 'LogicalNot';\nexport type LogicalNotInputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const LogicalOr = 'LogicalOr';\nexport type LogicalOrInputs = BinaryInputs;\n\nexport const LogSoftmax = 'LogSoftmax';\nexport type LogSoftmaxInputs = Pick<NamedTensorInfoMap, 'logits'>;\nexport interface LogSoftmaxAttrs {\n  axis: number;\n}\n\nexport const LRN = 'LRN';\nexport type LRNInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface LRNAttrs {\n  depthRadius: number;\n  bias: number;\n  alpha: number;\n  beta: number;\n}\n\nexport const LRNGrad = 'LRNGrad';\nexport type LRNGradInputs = Pick<NamedTensorInfoMap, 'x'|'y'|'dy'>;\nexport interface LRNGradAttrs {\n  depthRadius: number;\n  bias: number;\n  alpha: number;\n  beta: number;\n}\n\nexport const Max = 'Max';\nexport type MaxInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface MaxAttrs {\n  reductionIndices: number|number[];\n  keepDims: boolean;\n}\n\nexport const Maximum = 'Maximum';\nexport type MaximumInputs = BinaryInputs;\n\nexport const MaxPool = 'MaxPool';\nexport type MaxPoolInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface MaxPoolAttrs {\n  filterSize: [number, number]|number;\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n}\n\nexport const MaxPoolGrad = 'MaxPoolGrad';\nexport type MaxPoolGradInputs = Pick<NamedTensorInfoMap, 'dy'|'input'|'output'>;\nexport interface MaxPoolGradAttrs {\n  filterSize: [number, number]|number;\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n}\n\nexport const MaxPool3D = 'MaxPool3D';\nexport type MaxPool3DInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface MaxPool3DAttrs {\n  filterSize: [number, number, number]|number;\n  strides: [number, number, number]|number;\n  pad: 'valid'|'same'|number;\n  dataFormat: 'NDHWC'|'NCDHW';\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n}\n\nexport const MaxPool3DGrad = 'MaxPool3DGrad';\nexport type MaxPool3DGradInputs =\n    Pick<NamedTensorInfoMap, 'dy'|'input'|'output'>;\nexport interface MaxPool3DGradAttrs {\n  filterSize: [number, number, number]|number;\n  strides: [number, number, number]|number;\n  pad: 'valid'|'same'|number;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n}\n\nexport const MaxPoolWithArgmax = 'MaxPoolWithArgmax';\nexport type MaxPoolWithArgmaxInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface MaxPoolWithArgmaxAttrs {\n  filterSize: [number, number]|number;\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number;\n  includeBatchInIndex: boolean;\n}\n\nexport const Mean = 'Mean';\nexport type MeanInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface MeanAttrs {\n  axis: number|number[];\n  keepDims: boolean;\n}\n\nexport const Min = 'Min';\nexport type MinInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface MinAttrs {\n  axis: number|number[];\n  keepDims: boolean;\n}\n\nexport const Minimum = 'Minimum';\nexport type MinimumInputs = BinaryInputs;\n\nexport const MirrorPad = 'MirrorPad';\nexport type MirrorPadInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface MirrorPadAttrs {\n  paddings: Array<[number, number]>;\n  mode: 'reflect'|'symmetric';\n}\n\nexport const Mod = 'Mod';\nexport type ModInputs = BinaryInputs;\n\nexport const Multinomial = 'Multinomial';\nexport type MultinomialInputs = Pick<NamedTensorInfoMap, 'logits'>;\nexport interface MultinomialAttrs {\n  numSamples: number;\n  seed: number;\n  normalized: boolean;\n}\n\nexport const Multiply = 'Multiply';\nexport type MultiplyInputs = BinaryInputs;\n\nexport const Neg = 'Neg';\nexport type NegInputs = UnaryInputs;\n\nexport const NotEqual = 'NotEqual';\nexport type NotEqualInputs = BinaryInputs;\n\nexport const NonMaxSuppressionV3 = 'NonMaxSuppressionV3';\nexport type NonMaxSuppressionV3Inputs =\n    Pick<NamedTensorInfoMap, 'boxes'|'scores'>;\nexport interface NonMaxSuppressionV3Attrs {\n  maxOutputSize: number;\n  iouThreshold: number;\n  scoreThreshold: number;\n}\n\nexport const NonMaxSuppressionV4 = 'NonMaxSuppressionV4';\nexport type NonMaxSuppressionV4Inputs =\n    Pick<NamedTensorInfoMap, 'boxes'|'scores'>;\nexport interface NonMaxSuppressionV4Attrs {\n  maxOutputSize: number;\n  iouThreshold: number;\n  scoreThreshold: number;\n  padToMaxOutputSize: boolean;\n}\n\nexport const NonMaxSuppressionV5 = 'NonMaxSuppressionV5';\nexport type NonMaxSuppressionV5Inputs =\n    Pick<NamedTensorInfoMap, 'boxes'|'scores'>;\nexport interface NonMaxSuppressionV5Attrs {\n  maxOutputSize: number;\n  iouThreshold: number;\n  scoreThreshold: number;\n  softNmsSigma: number;\n}\n\nexport const OnesLike = 'OnesLike';\nexport type OnesLikeInputs = UnaryInputs;\n\nexport const OneHot = 'OneHot';\nexport type OneHotInputs = Pick<NamedTensorInfoMap, 'indices'>;\nexport interface OneHotAttrs {\n  depth: number;\n  onValue: number;\n  offValue: number;\n}\n\nexport const Pack = 'Pack';\nexport type PackInputs = TensorInfo[];\nexport interface PackAttrs {\n  axis: number;\n}\n\nexport const PadV2 = 'PadV2';\nexport type PadV2Inputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface PadV2Attrs {\n  paddings: Array<[number, number]>;\n  constantValue: number;\n}\n\nexport const Pool = 'Pool';\nexport type PoolInputs = Pick<NamedTensorInfoMap, 'input'>;\n\nexport const Pow = 'Pow';\nexport type PowInputs = BinaryInputs;\n\nexport const Prelu = 'Prelu';\nexport type PreluInputs = Pick<NamedTensorInfoMap, 'x'|'alpha'>;\n\nexport const Prod = 'Prod';\nexport type ProdInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface ProdAttrs {\n  axis: number|number[];\n  keepDims: boolean;\n}\n\nexport const Range = 'Range';\nexport interface RangeAttrs {\n  start: number;\n  stop: number;\n  step: number;\n  dtype: 'float32'|'int32';\n}\n\nexport const Real = 'Real';\nexport type RealInputs = Pick<NamedTensorInfoMap, 'input'>;\n\nexport const Reciprocal = 'Reciprocal';\nexport type ReciprocalInputs = UnaryInputs;\n\nexport const Relu = 'Relu';\nexport type ReluInputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const Reshape = 'Reshape';\nexport type ReshapeInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface ReshapeAttrs {\n  shape: number[];\n}\n\nexport const ResizeNearestNeighbor = 'ResizeNearestNeighbor';\nexport type ResizeNearestNeighborInputs = Pick<NamedTensorInfoMap, 'images'>;\nexport interface ResizeNearestNeighborAttrs {\n  alignCorners: boolean;\n  halfPixelCenters: boolean;\n  size: [number, number];\n}\n\nexport const ResizeNearestNeighborGrad = 'ResizeNearestNeighborGrad';\nexport type ResizeNearestNeighborGradInputs =\n    Pick<NamedTensorInfoMap, 'images'|'dy'>;\nexport type ResizeNearestNeighborGradAttrs = ResizeNearestNeighborAttrs;\n\nexport const ResizeBilinear = 'ResizeBilinear';\nexport type ResizeBilinearInputs = Pick<NamedTensorInfoMap, 'images'>;\nexport interface ResizeBilinearAttrs {\n  alignCorners: boolean;\n  halfPixelCenters: boolean;\n  size: [number, number];\n}\n\nexport const ResizeBilinearGrad = 'ResizeBilinearGrad';\nexport type ResizeBilinearGradInputs = Pick<NamedTensorInfoMap, 'images'|'dy'>;\nexport type ResizeBilinearGradAttrs = ResizeBilinearAttrs;\n\nexport const Relu6 = 'Relu6';\nexport type Relu6Inputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const Reverse = 'Reverse';\nexport type ReverseInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface ReverseAttrs {\n  dims: number|number[];\n}\n\nexport const Round = 'Round';\nexport type RoundInputs = UnaryInputs;\n\nexport const Rsqrt = 'Rsqrt';\nexport type RsqrtInputs = UnaryInputs;\n\nexport const ScatterNd = 'ScatterNd';\nexport type ScatterNdInputs = Pick<NamedTensorInfoMap, 'indices'|'updates'>;\nexport interface ScatterNdAttrs {\n  shape: number[];\n}\n\nexport const Select = 'Select';\nexport type SelectInputs = Pick<NamedTensorInfoMap, 'condition'|'t'|'e'>;\n\nexport const Selu = 'Selu';\nexport type SeluInputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const Slice = 'Slice';\nexport type SliceInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface SliceAttrs {\n  begin: number|number[];\n  size: number|number[];\n}\nexport const Sin = 'Sin';\nexport type SinInputs = UnaryInputs;\n\nexport const Sinh = 'Sinh';\nexport type SinhInputs = UnaryInputs;\n\nexport const Sign = 'Sign';\nexport type SignInputs = UnaryInputs;\n\nexport const Sigmoid = 'Sigmoid';\nexport type SigmoidInputs = UnaryInputs;\n\nexport const Softplus = 'Softplus';\nexport type SoftplusInputs = UnaryInputs;\n\nexport const Sqrt = 'Sqrt';\nexport type SqrtInputs = UnaryInputs;\n\nexport const Sum = 'Sum';\nexport type SumInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface SumAttrs {\n  axis: number|number[];\n  keepDims: boolean;\n}\n\nexport const SpaceToBatchND = 'SpaceToBatchND';\nexport type SpaceToBatchNDInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface SpaceToBatchNDAttrs {\n  blockShape: number[];\n  paddings: number[][];\n}\n\nexport const SplitV = 'SplitV';\nexport type SplitVInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface SplitVAttrs {\n  numOrSizeSplits: number[]|number;\n  axis: number;\n}\n\nexport const Softmax = 'Softmax';\nexport type SoftmaxInputs = Pick<NamedTensorInfoMap, 'logits'>;\nexport interface SoftmaxAttrs {\n  dim: number;\n}\n\nexport const SparseFillEmptyRows = 'SparseFillEmptyRows';\nexport type SparseFillEmptyRowsInputs =\n    Pick<NamedTensorInfoMap, 'indices'|'values'|'denseShape'|'defaultValue'>;\n\nexport const SparseReshape = 'SparseReshape';\nexport type SparseReshapeInputs =\n    Pick<NamedTensorInfoMap, 'inputIndices'|'inputShape'|'newShape'>;\n\nexport const SparseSegmentMean = 'SparseSegmentMean';\nexport type SparseSegmentMeanInputs =\n    Pick<NamedTensorInfoMap, 'data'|'indices'|'segmentIds'>;\n\nexport const SparseSegmentSum = 'SparseSegmentSum';\nexport type SparseSegmentSumInputs =\n    Pick<NamedTensorInfoMap, 'data'|'indices'|'segmentIds'>;\n\nexport const SparseToDense = 'SparseToDense';\nexport type SparseToDenseInputs =\n    Pick<NamedTensorInfoMap, 'sparseIndices'|'sparseValues'|'defaultValue'>;\nexport interface SparseToDenseAttrs {\n  outputShape: number[];\n}\n\nexport const SquaredDifference = 'SquaredDifference';\nexport type SquaredDifferenceInputs = BinaryInputs;\n\nexport const Square = 'Square';\nexport type SquareInputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const StridedSlice = 'StridedSlice';\nexport type StridedSliceInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface StridedSliceAttrs {\n  begin: number[];\n  end: number[];\n  strides: number[];\n  beginMask: number;\n  endMask: number;\n  ellipsisMask: number;\n  newAxisMask: number;\n  shrinkAxisMask: number;\n}\n\nexport const StringNGrams = 'StringNGrams';\nexport type StringNGramsInputs = Pick<NamedTensorInfoMap, 'data'|'dataSplits'>;\nexport interface StringNGramsAttrs {\n  separator: string;\n  nGramWidths: number[];\n  leftPad: string;\n  rightPad: string;\n  padWidth: number;\n  preserveShortSequences: boolean;\n}\n\nexport const StringSplit = 'StringSplit';\nexport type StringSplitInputs = Pick<NamedTensorInfoMap, 'input'|'delimiter'>;\nexport interface StringSplitAttrs {\n  skipEmpty: boolean;\n}\n\nexport const StringToHashBucketFast = 'StringToHashBucketFast';\nexport type StringToHashBucketFastInputs = Pick<NamedTensorInfoMap, 'input'>;\nexport interface StringToHashBucketFastAttrs {\n  numBuckets: number;\n}\n\nexport const Sub = 'Sub';\nexport type SubInputs = BinaryInputs;\n\nexport const Tan = 'Tan';\nexport type TanInputs = UnaryInputs;\n\nexport const Tanh = 'Tanh';\nexport type TanhInputs = UnaryInputs;\n\nexport const Tile = 'Tile';\nexport type TileInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface TileAttrs {\n  reps: number[];\n}\n\nexport const TopK = 'TopK';\nexport type TopKInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface TopKAttrs {\n  k: number;\n  sorted: boolean;\n}\n\nexport const Transform = 'Transform';\nexport type TransformInputs = Pick<NamedTensorInfoMap, 'image'|'transforms'>;\nexport interface TransformAttrs {\n  interpolation: 'nearest'|'bilinear';\n  fillMode: 'constant'|'reflect'|'wrap'|'nearest';\n  fillValue: number;\n  outputShape?: [number, number];\n}\n\nexport const Transpose = 'Transpose';\nexport type TransposeInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface TransposeAttrs {\n  perm: number[];\n}\n\nexport const Unique = 'Unique';\nexport type UniqueInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface UniqueAttrs {\n  axis: number;\n}\n\nexport type UnaryInputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const Unpack = 'Unpack';\nexport type UnpackInputs = Pick<NamedTensorInfoMap, 'value'>;\nexport interface UnpackAttrs {\n  axis: number;\n}\n\nexport const UnsortedSegmentSum = 'UnsortedSegmentSum';\nexport type UnsortedSegmentSumInputs =\n    Pick<NamedTensorInfoMap, 'x'|'segmentIds'>;\nexport interface UnsortedSegmentSumAttrs {\n  numSegments: number;\n}\n\nexport const ZerosLike = 'ZerosLike';\nexport type ZerosLikeInputs = UnaryInputs;\n\n/**\n * TensorFlow.js-only kernels\n */\nexport const Step = 'Step';\nexport type StepInputs = UnaryInputs;\nexport interface StepAttrs {\n  alpha: number;\n}\n\nexport const FromPixels = 'FromPixels';\nexport interface FromPixelsInputs {\n  pixels: PixelData|ImageData|HTMLImageElement|HTMLCanvasElement|\n      HTMLVideoElement|ImageBitmap;\n}\nexport interface FromPixelsAttrs {\n  numChannels: number;\n}\n\nexport const RotateWithOffset = 'RotateWithOffset';\nexport type RotateWithOffsetInputs = Pick<NamedTensorInfoMap, 'image'>;\nexport interface RotateWithOffsetAttrs {\n  radians: number;\n  fillValue: number|[number, number, number];\n  center: number|[number, number];\n}\n\nexport const _FusedMatMul = '_FusedMatMul';\n// tslint:disable-next-line: class-name\nexport interface _FusedMatMulInputs extends NamedTensorInfoMap {\n  a: TensorInfo;\n  b: TensorInfo;\n  bias?: TensorInfo;\n  preluActivationWeights?: TensorInfo;\n}\n// tslint:disable-next-line: class-name\nexport interface _FusedMatMulAttrs {\n  transposeA: boolean;\n  transposeB: boolean;\n  activation: Activation;\n  leakyreluAlpha?: number;\n}\n\nexport const FusedConv2D = 'FusedConv2D';\nexport interface FusedConv2DInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n  bias?: TensorInfo;\n  preluActivationWeights?: TensorInfo;\n}\nexport interface FusedConv2DAttrs {\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dataFormat: 'NHWC'|'NCHW';\n  dilations: [number, number]|number;\n  dimRoundingMode: 'floor'|'round'|'ceil';\n  activation: Activation;\n  leakyreluAlpha?: number;\n}\n\nexport const FusedDepthwiseConv2D = 'FusedDepthwiseConv2D';\nexport interface FusedDepthwiseConv2DInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n  bias?: TensorInfo;\n  preluActivationWeights?: TensorInfo;\n}\nexport interface FusedDepthwiseConv2DAttrs {\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dataFormat: 'NHWC'|'NCHW';\n  dilations: [number, number]|number;\n  dimRoundingMode: 'floor'|'round'|'ceil';\n  activation: Activation;\n  leakyreluAlpha?: number;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {env} from './environment';\nimport {getGlobal} from './global_util';\nimport * as log from './log';\nimport {NamedGradientMap} from './tape';\nimport {Tensor} from './tensor';\nimport {DataType, RecursiveArray} from './types';\n\nconst kernelRegistry =\n    getGlobal('kernelRegistry', () => new Map<string, KernelConfig>());\nconst gradRegistry =\n    getGlobal('gradRegistry', () => new Map<string, GradConfig>());\n\nexport type DataId = object;\n\ntype AttributeValue =\n    number|number[]|boolean|boolean[]|string|string[]|NamedAttrMap;\n\n/** These are extra non-tensor/primitive params passed to kernel functions. */\nexport type Attribute = AttributeValue|RecursiveArray<AttributeValue>;\n\n/** Specifies the code to run when executing a kernel. */\nexport type KernelFunc = (params: {\n  inputs: NamedTensorInfoMap,\n  backend: {},\n  attrs?: NamedAttrMap,\n}) => TensorInfo|TensorInfo[];\n\n/** The function to run when computing a gradient during backprop. */\nexport type GradFunc =\n    (dy: Tensor|Tensor[], saved: Tensor[], attrs: NamedAttrMap) =>\n        NamedGradientMap;\n\n/** Function that gets called after the backend initializes. */\nexport type KernelSetupFunc = (backend: {}) => void;\n/** Function that gets called right before the backend is disposed. */\nexport type KernelDisposeFunc = KernelSetupFunc;\n\n/** Config object for registering a kernel in the global registry. */\nexport interface KernelConfig {\n  kernelName: string;\n  backendName: string;\n  kernelFunc: KernelFunc;\n  setupFunc?: KernelSetupFunc;\n  disposeFunc?: KernelDisposeFunc;\n}\n\n/** Config object for registering a gradient in the global registry. */\nexport interface GradConfig {\n  kernelName: string;\n  inputsToSave?: string[];\n  // When saveAllInputs is true, all inputs will be saved. Only use this flag\n  // if inputs is an array of Tensors.\n  saveAllInputs?: boolean;\n  outputsToSave?: boolean[];\n  gradFunc: GradFunc;\n}\n\n/** Holds metadata for a given tensor. */\nexport interface TensorInfo {\n  dataId: DataId;\n  shape: number[];\n  dtype: DataType;\n}\n\nexport interface NamedTensorInfoMap {\n  [name: string]: TensorInfo|undefined;\n}\n\nexport interface NamedAttrMap {\n  [name: string]: Attribute;\n}\n\n/**\n * Returns the kernel function (code) associated with the provided names.\n *\n * @param kernelName The official name of the kernel.\n * @param backendName The official name of the backend.\n */\nexport function getKernel(\n    kernelName: string, backendName: string): KernelConfig {\n  const key = makeKey(kernelName, backendName);\n  return kernelRegistry.get(key);\n}\n\n/**\n * Returns the registered gradient info associated with the provided kernel.\n * @param kernelName The official TF kernel name.\n */\nexport function getGradient(kernelName: string): GradConfig {\n  return gradRegistry.get(kernelName);\n}\n\nexport function getKernelsForBackend(backendName: string): KernelConfig[] {\n  const it = kernelRegistry.entries();\n  const result: KernelConfig[] = [];\n\n  while (true) {\n    const {done, value} = it.next();\n    if (done) {\n      break;\n    }\n    const [key, config] = value;\n    const [backend, ] = key.split('_');\n    if (backend === backendName) {\n      result.push(config);\n    }\n  }\n  return result;\n}\n\n/**\n * Registers the function (forward pass) for the kernel in a global registry.\n *\n * @param config A config object with the following properties:\n * - `kernelName` The official name of the kernel.\n * - `backendName` The official name of the backend.\n * - `kernelFunc` The function to run during the forward pass of the kernel.\n * - `setupFunc` Optional. Gets called once, after the backend initializes.\n * - `disposeFunc` Optional. Gets called once, right before the backend is\n * disposed.\n */\nexport function registerKernel(config: KernelConfig) {\n  const {kernelName, backendName} = config;\n  const key = makeKey(kernelName, backendName);\n  if (kernelRegistry.has(key)) {\n    log.warn(\n        `The kernel '${kernelName}' for backend ` +\n        `'${backendName}' is already registered`);\n  }\n  kernelRegistry.set(key, config);\n}\n\n/**\n * Registers a gradient function for a given kernel in the global registry,\n * to be used during the back-propagation of that kernel.\n *\n * @param config An object with the following properties:\n * - `kernelName` The name of the kernel that the gradient function is for.\n * - `gradFunc` The function to run during back-propagation.\n */\nexport function registerGradient(config: GradConfig) {\n  const {kernelName} = config;\n\n  if (gradRegistry.has(kernelName)) {\n    // TODO (yassogba) after 3.0 assess whether we need to keep this gated\n    // to debug mode.\n    if (env().getBool('DEBUG')) {\n      log.warn(`Overriding the gradient for '${kernelName}'`);\n    }\n  }\n  gradRegistry.set(kernelName, config);\n}\n\n/**\n * Removes the kernel function from the registry.\n *\n * @param kernelName The official name of the kernel.\n * @param backendName The official name of the backend.\n *\n */\nexport function unregisterKernel(\n    kernelName: string, backendName: string): void {\n  const key = makeKey(kernelName, backendName);\n  if (!kernelRegistry.has(key)) {\n    throw new Error(\n        `The kernel '${kernelName}' for backend ` +\n        `'${backendName}' is not registered`);\n  }\n  kernelRegistry.delete(key);\n}\n\n/** Removes the registered gradient from the global registry. */\nexport function unregisterGradient(kernelName: string): void {\n  if (!gradRegistry.has(kernelName)) {\n    throw new Error(\n        `The gradient '${kernelName}' for backend is not registered`);\n  }\n  gradRegistry.delete(kernelName);\n}\n\n/**\n * Finds kernels that have already been registered to a backend and re-registers\n * them for a new backend. Useful for registering custom backends.\n * @param registeredBackendName Already registered backend.\n * @param newBackendName New backend.\n */\nexport function copyRegisteredKernels(\n    registeredBackendName: string, newBackendName: string): void {\n  const kernels = getKernelsForBackend(registeredBackendName);\n  kernels.forEach(kernelConfig => {\n    const newKernelConfig =\n        Object.assign({}, kernelConfig, {backendName: newBackendName});\n    registerKernel(newKernelConfig);\n  });\n}\n\nfunction makeKey(kernelName: string, backendName: string) {\n  return `${backendName}_${kernelName}`;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from './environment';\n\nexport function warn(...msg: Array<{}>): void {\n  if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n    console.warn(...msg);\n  }\n}\n\nexport function log(...msg: Array<{}>): void {\n  if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n    console.log(...msg);\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendTimer, BackendTimingInfo} from './backends/backend';\nimport {env} from './environment';\nimport {Tensor} from './tensor';\nimport {NamedTensorMap} from './tensor_types';\nimport {DataType, DataTypeMap, TypedArray} from './types';\nimport * as util from './util';\n\nexport type KernelProfile = {\n  kernelName: string,\n  outputs: Tensor[],\n  inputs: NamedTensorMap,\n  timeMs: Promise<number|{error: string}>,\n  extraInfo: Promise<string>\n};\n\nexport class Profiler {\n  constructor(private backendTimer: BackendTimer, private logger?: Logger) {\n    if (logger == null) {\n      this.logger = new Logger();\n    }\n  }\n\n  profileKernel(kernelName: string, inputs: NamedTensorMap, f: () => Tensor[]):\n      KernelProfile {\n    let outputs: Tensor[];\n    const holdResultWrapperFn = () => {\n      outputs = f();\n    };\n    let timer: Promise<BackendTimingInfo>;\n    const start = util.now();\n    if (this.backendTimer.timerAvailable()) {\n      timer = this.backendTimer.time(holdResultWrapperFn);\n    } else {\n      holdResultWrapperFn();\n      for (const output of outputs) {\n        output.dataSync();\n      }\n      timer = Promise.resolve({kernelMs: util.now() - start});\n    }\n    if (env().getBool('CHECK_COMPUTATION_FOR_ERRORS')) {\n      for (let i = 0; i < outputs.length; i++) {\n        const output = outputs[i];\n        // Dangling promise here because we don't want to propagate up\n        // asynchronicity.\n        output.data().then(tensorVals => {\n          checkComputationForErrors(tensorVals, output.dtype, kernelName);\n        });\n      }\n    }\n\n    const kernelProfile = {\n      kernelName,\n      outputs,\n      inputs,\n      timeMs: timer.then(timing => timing.kernelMs),\n      extraInfo: timer.then(\n          timing => timing.getExtraProfileInfo != null ?\n              timing.getExtraProfileInfo() :\n              '')\n    };\n    return kernelProfile;\n  }\n\n  logKernelProfile(kernelProfile: KernelProfile): void {\n    const {kernelName, outputs, timeMs, inputs, extraInfo} = kernelProfile;\n\n    outputs.forEach(result => {\n      Promise.all([result.data(), timeMs, extraInfo]).then(valueContainer => {\n        this.logger.logKernelProfile(\n            kernelName, result, valueContainer[0], valueContainer[1], inputs,\n            valueContainer[2]);\n      });\n    });\n  }\n}\n\nexport function checkComputationForErrors<D extends DataType>(\n    vals: DataTypeMap[D], dtype: D, kernelName: string): boolean {\n  if (dtype !== 'float32') {\n    // Only floating point computations will generate NaN values\n    return false;\n  }\n  for (let i = 0; i < vals.length; i++) {\n    const num = vals[i] as number;\n    if (isNaN(num) || !isFinite(num)) {\n      // Throwing custom exception so behavior is testable.\n      console.warn(`Found ${num} in the result of '${kernelName}'`);\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class Logger {\n  logKernelProfile(\n      name: string, result: Tensor, vals: TypedArray,\n      timeMs: number|{error: string}, inputs: NamedTensorMap,\n      extraInfo?: string) {\n    const time = typeof timeMs === 'number' ? util.rightPad(`${timeMs}ms`, 9) :\n                                              timeMs['error'];\n    const paddedName = util.rightPad(name, 25);\n    const rank = result.rank;\n    const size = result.size;\n    const shape = util.rightPad(result.shape.toString(), 14);\n    let inputShapesDescription = '';\n\n    for (const name in inputs) {\n      const input = inputs[name];\n      if (input != null) {\n        // The input might be a non-tensor (e.g HTMLImageElement), in which case\n        // we claim the output shape as input shape.\n        const inputShape = input.shape || result.shape;\n        const inputRank = inputShape.length;\n        inputShapesDescription +=\n            `${name}: ${inputRank}D ${inputRank > 0 ? inputShape : ''} `;\n      }\n    }\n\n    console.log(\n        `%c${paddedName}\\t%c${time}\\t%c${rank}D ${shape}\\t%c${size}\\t%c${\n            inputShapesDescription}\\t%c${extraInfo}`,\n        'font-weight:bold', 'color:red', 'color:blue', 'color: orange',\n        'color: green', 'color: steelblue');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from './environment';\nimport {BackendValues, DataType, TensorLike, TypedArray} from './types';\nimport * as base from './util_base';\nexport * from './util_base';\nexport * from './hash_util';\n\n/**\n * Create typed array for scalar value. Used for storing in `DataStorage`.\n */\nexport function createScalarValue(\n    value: DataType, dtype: DataType): BackendValues {\n  if (dtype === 'string') {\n    return encodeString(value);\n  }\n\n  return toTypedArray([value], dtype);\n}\n\nfunction noConversionNeeded(a: TensorLike, dtype: DataType): boolean {\n  return (a instanceof Float32Array && dtype === 'float32') ||\n      (a instanceof Int32Array && dtype === 'int32') ||\n      (a instanceof Uint8Array && dtype === 'bool');\n}\n\nexport function toTypedArray(a: TensorLike, dtype: DataType): TypedArray {\n  if (dtype === 'string') {\n    throw new Error('Cannot convert a string[] to a TypedArray');\n  }\n  if (Array.isArray(a)) {\n    a = base.flatten(a);\n  }\n\n  if (env().getBool('DEBUG')) {\n    base.checkConversionForErrors(a as number[], dtype);\n  }\n  if (noConversionNeeded(a, dtype)) {\n    return a as TypedArray;\n  }\n  if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n    return new Float32Array(a as number[]);\n  } else if (dtype === 'int32') {\n    return new Int32Array(a as number[]);\n  } else if (dtype === 'bool') {\n    const bool = new Uint8Array((a as number[]).length);\n    for (let i = 0; i < bool.length; ++i) {\n      if (Math.round((a as number[])[i]) !== 0) {\n        bool[i] = 1;\n      }\n    }\n    return bool;\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n}\n\n/**\n * Returns the current high-resolution time in milliseconds relative to an\n * arbitrary time in the past. It works across different platforms (node.js,\n * browsers).\n *\n * ```js\n * console.log(tf.util.now());\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function now(): number {\n  return env().platform.now();\n}\n\n/**\n * Returns a platform-specific implementation of\n * [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n *\n * If `fetch` is defined on the global object (`window`, `process`, etc.),\n * `tf.util.fetch` returns that function.\n *\n * If not, `tf.util.fetch` returns a platform-specific solution.\n *\n * ```js\n * const resource = await tf.util.fetch('https://unpkg.com/@tensorflow/tfjs');\n * // handle response\n * ```\n *\n * @doc {heading: 'Util'}\n */\nexport function fetch(\n    path: string, requestInits?: RequestInit): Promise<Response> {\n  return env().platform.fetch(path, requestInits);\n}\n\n/**\n * Encodes the provided string into bytes using the provided encoding scheme.\n *\n * @param s The string to encode.\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\nexport function encodeString(s: string, encoding = 'utf-8'): Uint8Array {\n  encoding = encoding || 'utf-8';\n  return env().platform.encode(s, encoding);\n}\n\n/**\n * Decodes the provided bytes into a string using the provided encoding scheme.\n * @param bytes The bytes to decode.\n *\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\nexport function decodeString(bytes: Uint8Array, encoding = 'utf-8'): string {\n  encoding = encoding || 'utf-8';\n  return env().platform.decode(bytes, encoding);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Workaround for allowing cjs module to be included in bundle created by\n// rollup.\nimport * as LongExports from 'long';\n// tslint:disable-next-line\nconst Long: LongExports.LongConstructor =\n    // tslint:disable-next-line\n    (LongExports as any).default || LongExports;\n\nexport function hexToLong(hex: string): Long {\n  return Long.fromString(hex, true, 16);\n}\n\n// Some primes between 2^63 and 2^64 for various uses.\n// Hex 0xc3a5c85c97cb3127\nconst k0: Long = hexToLong('c3a5c85c97cb3127');\n// Hex 0xb492b66fbe98f273\nconst k1: Long = hexToLong('b492b66fbe98f273');\n// Hex 0x9ae16a3b2f90404f\nconst k2: Long = hexToLong('9ae16a3b2f90404f');\n\nfunction shiftMix(val: Long): Long {\n  return val.xor(val.shru(47));\n}\n\nfunction fetch(s: Uint8Array, offset: number, numBytes: number): Long {\n  const bytes = s.slice(offset, offset + numBytes);\n  return Long.fromBytes(Array.from(bytes), true, true);\n}\n\nfunction fetch64(s: Uint8Array, offset: number): Long {\n  return fetch(s, offset, 8);\n}\n\nfunction fetch32(s: Uint8Array, offset: number): Long {\n  return fetch(s, offset, 4);\n}\n\nfunction rotate64(val: Long, shift: number): Long {\n  // Avoid shifting by 64: doing so yields an undefined result.\n  return shift === 0 ? val : val.shru(shift).or(val.shl(64 - shift));\n}\n\nfunction hashLen16(u: Long, v: Long, mul = hexToLong('9ddfea08eb382d69')) {\n  // Murmur-inspired hashing.\n  let a = u.xor(v).mul(mul);\n  a = a.xor(a.shru(47));\n  let b = v.xor(a).mul(mul);\n  b = b.xor(b.shru(47));\n  b = b.mul(mul);\n  return b;\n}\n\n// Return a 16-byte hash for 48 bytes.  Quick and dirty.\n// Callers do best to use \"random-looking\" values for a and b.\nfunction weakHashLen32WithSeeds(\n    w: Long, x: Long, y: Long, z: Long, a: Long, b: Long) {\n  a = a.add(w);\n  b = rotate64(b.add(a).add(z), 21);\n  const c = a;\n  a = a.add(x);\n  a = a.add(y);\n  b = b.add(rotate64(a, 44));\n  return [a.add(z), b.add(c)];\n}\n\nfunction weakHashLen32WithSeedsStr(\n    s: Uint8Array, offset: number, a: Long, b: Long) {\n  return weakHashLen32WithSeeds(\n      fetch64(s, offset), fetch64(s, offset + 8), fetch64(s, offset + 16),\n      fetch64(s, offset + 24), a, b);\n}\n\nfunction hashLen0to16(s: Uint8Array, len = s.length): Long {\n  if (len >= 8) {\n    const mul = k2.add(len * 2);\n    const a = fetch64(s, 0).add(k2);\n    const b = fetch64(s, len - 8);\n    const c = rotate64(b, 37).mul(mul).add(a);\n    const d = rotate64(a, 25).add(b).mul(mul);\n    return hashLen16(c, d, mul);\n  }\n  if (len >= 4) {\n    const mul = k2.add(len * 2);\n    const a = fetch32(s, 0);\n    return hashLen16(a.shl(3).add(len), fetch32(s, len - 4), mul);\n  }\n  if (len > 0) {\n    const a = s[0];\n    const b = s[len >> 1];\n    const c = s[len - 1];\n    const y = a + (b << 8);\n    const z = len + (c << 2);\n    return shiftMix(k2.mul(y).xor(k0.mul(z))).mul(k2);\n  }\n  return k2;\n}\n\nfunction hashLen17to32(s: Uint8Array, len = s.length): Long {\n  const mul = k2.add(len * 2);\n  const a = fetch64(s, 0).mul(k1);\n  const b = fetch64(s, 8);\n  const c = fetch64(s, len - 8).mul(mul);\n  const d = fetch64(s, len - 16).mul(k2);\n  return hashLen16(\n      rotate64(a.add(b), 43).add(rotate64(c, 30)).add(d),\n      a.add(rotate64(b.add(k2), 18)).add(c), mul);\n}\n\nfunction hashLen33to64(s: Uint8Array, len = s.length): Long {\n  const mul = k2.add(len * 2);\n  const a = fetch64(s, 0).mul(k2);\n  const b = fetch64(s, 8);\n  const c = fetch64(s, len - 8).mul(mul);\n  const d = fetch64(s, len - 16).mul(k2);\n  const y = rotate64(a.add(b), 43).add(rotate64(c, 30)).add(d);\n  const z = hashLen16(y, a.add(rotate64(b.add(k2), 18)).add(c), mul);\n  const e = fetch64(s, 16).mul(mul);\n  const f = fetch64(s, 24);\n  const g = y.add(fetch64(s, len - 32)).mul(mul);\n  const h = z.add(fetch64(s, len - 24)).mul(mul);\n  return hashLen16(\n      rotate64(e.add(f), 43).add(rotate64(g, 30)).add(h),\n      e.add(rotate64(f.add(a), 18)).add(g), mul);\n}\n\nexport function fingerPrint64(s: Uint8Array, len = s.length): Long {\n  const seed: Long = Long.fromNumber(81, true);\n  if (len <= 32) {\n    if (len <= 16) {\n      return hashLen0to16(s, len);\n    } else {\n      return hashLen17to32(s, len);\n    }\n  } else if (len <= 64) {\n    return hashLen33to64(s, len);\n  }\n\n  // For strings over 64 bytes we loop.  Internal state consists of\n  // 56 bytes: v, w, x, y, and z.\n  let x = seed;\n  let y = seed.mul(k1).add(113);\n\n  let z = shiftMix(y.mul(k2).add(113)).mul(k2);\n  let v = [Long.UZERO, Long.UZERO];\n  let w = [Long.UZERO, Long.UZERO];\n  x = x.mul(k2).add(fetch64(s, 0));\n\n  let offset = 0;\n  // Set end so that after the loop we have 1 to 64 bytes left to process.\n  const end = ((len - 1) >> 6) * 64;\n  const last64 = end + ((len - 1) & 63) - 63;\n\n  do {\n    x = rotate64(x.add(y).add(v[0]).add(fetch64(s, offset + 8)), 37).mul(k1);\n    y = rotate64(y.add(v[1]).add(fetch64(s, offset + 48)), 42).mul(k1);\n    x = x.xor(w[1]);\n    y = y.add(v[0]).add(fetch64(s, offset + 40));\n    z = rotate64(z.add(w[0]), 33).mul(k1);\n    v = weakHashLen32WithSeedsStr(s, offset, v[1].mul(k1), x.add(w[0]));\n    w = weakHashLen32WithSeedsStr(\n        s, offset + 32, z.add(w[1]), y.add(fetch64(s, offset + 16)));\n\n    [z, x] = [x, z];\n    offset += 64;\n  } while (offset !== end);\n  const mul = k1.add(z.and(0xff).shl(1));\n  // Point to the last 64 bytes of input.\n  offset = last64;\n\n  w[0] = w[0].add((len - 1) & 63);\n  v[0] = v[0].add(w[0]);\n  w[0] = w[0].add(v[0]);\n\n  x = rotate64(x.add(y).add(v[0]).add(fetch64(s, offset + 8)), 37).mul(mul);\n  y = rotate64(y.add(v[1]).add(fetch64(s, offset + 48)), 42).mul(mul);\n  x = x.xor(w[1].mul(9));\n  y = y.add(v[0].mul(9).add(fetch64(s, offset + 40)));\n  z = rotate64(z.add(w[0]), 33).mul(mul);\n  v = weakHashLen32WithSeedsStr(s, offset, v[1].mul(mul), x.add(w[0]));\n  w = weakHashLen32WithSeedsStr(\n      s, offset + 32, z.add(w[1]), y.add(fetch64(s, offset + 16)));\n\n  [z, x] = [x, z];\n\n  return hashLen16(\n      hashLen16(v[0], w[0], mul).add(shiftMix(y).mul(k0)).add(z),\n      hashLen16(v[1], w[1], mul).add(x), mul);\n}\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from './tensor';\nimport {NamedTensorMap} from './tensor_types';\nimport * as util from './util';\n\nexport interface TapeNode {\n  id: number;\n  kernelName: string;\n  outputs: Tensor[];\n  inputs: NamedTensorMap;\n  // Optional params, defined only for ops with gradient impl.\n  gradient?: (dys: Tensor[]) => NamedGradientMap;\n  saved?: Tensor[];\n}\n\nexport type NamedGradientMap = {\n  [inputName: string]: () => Tensor;\n};\n\n/**\n * Computes a list of TapeNodes that connect x to y, filtering everything else\n * out and preserving the order of the original tape elements.\n *\n * @param tape The tape elements to filter.\n * @param xs The input Tensors.\n * @param y The output Tensor.\n */\nexport function getFilteredNodesXToY(\n    tape: TapeNode[], xs: Tensor[], y: Tensor): TapeNode[] {\n  // Forward pass to compute all the nodes and Tensors that are transitively a\n  // function of x.\n  const tensorsFromX: {[tensorId: number]: boolean} = {};\n  const nodesFromX: {[nodeId: number]: boolean} = {};\n  for (let i = 0; i < xs.length; i++) {\n    tensorsFromX[xs[i].id] = true;\n  }\n\n  for (let i = 0; i < tape.length; i++) {\n    const node = tape[i];\n    const nodeInputs = node.inputs;\n    for (const inputName in nodeInputs) {\n      const input = nodeInputs[inputName];\n\n      let anyInputFromX = false;\n      for (let j = 0; j < xs.length; j++) {\n        if (tensorsFromX[input.id]) {\n          node.outputs.forEach(output => tensorsFromX[output.id] = true);\n          anyInputFromX = true;\n          nodesFromX[node.id] = true;\n          break;\n        }\n      }\n\n      if (anyInputFromX) {\n        break;\n      }\n    }\n  }\n\n  // Backward pass to find all of the nodes and Tensors that lead to y.\n  const tensorsLeadToY: {[tensorId: number]: boolean} = {};\n  tensorsLeadToY[y.id] = true;\n  const nodesToY: {[nodeId: number]: boolean} = {};\n\n  for (let i = tape.length - 1; i >= 0; i--) {\n    const node = tape[i];\n    const nodeInputs = node.inputs;\n\n    // If any of the outputs lead to y, mark all of the inputs as leading to y.\n    for (let j = 0; j < node.outputs.length; j++) {\n      if (tensorsLeadToY[node.outputs[j].id]) {\n        for (const inputName in nodeInputs) {\n          tensorsLeadToY[nodeInputs[inputName].id] = true;\n          nodesToY[node.id] = true;\n        }\n        break;\n      }\n    }\n  }\n\n  // Return the paths that come from x and lead to y.\n  const filteredTape: TapeNode[] = [];\n  for (let i = 0; i < tape.length; i++) {\n    const node = tape[i];\n\n    if (nodesFromX[node.id] && nodesToY[node.id]) {\n      // Prune the inputs from the node that aren't a function of x.\n      const prunedInputs: {[inputName: string]: Tensor} = {};\n      for (const inputName in node.inputs) {\n        const nodeInput = node.inputs[inputName];\n        if (tensorsFromX[nodeInput.id]) {\n          prunedInputs[inputName] = nodeInput;\n        }\n      }\n\n      // Copy the node and overwrite inputsAndArgs to the pruned version.\n      const prunedNode = Object.assign({}, node);\n      prunedNode.inputs = prunedInputs;\n      prunedNode.outputs = node.outputs;\n\n      filteredTape.push(prunedNode);\n    }\n  }\n\n  return filteredTape;\n}\n\n/**\n * Backpropagate gradients through the filtered TapeNodes.\n *\n * @param tensorAccumulatedGradientMap A map of Tensor to its gradient. This map\n * is mutated by this method.\n * @param filteredTape The filtered TapeNodes to backprop through.\n */\nexport function backpropagateGradients(\n    tensorAccumulatedGradientMap: {[tensorId: number]: Tensor},\n    filteredTape: TapeNode[], tidy: (f: Function) => Tensor,\n    add: (a: Tensor, b: Tensor) => Tensor) {\n  // Walk the tape backward and keep a map of Tensor to its gradient.\n  for (let i = filteredTape.length - 1; i >= 0; i--) {\n    const node = filteredTape[i];\n\n    const dys: Tensor[] = [];\n    node.outputs.forEach(o => {\n      const gradTensor = tensorAccumulatedGradientMap[o.id];\n      if (gradTensor != null) {\n        dys.push(gradTensor);\n      } else {\n        // This particular output is not in the back-propagation subgraph, so it\n        // does not affect the final output, thus we put null for its dy.\n        dys.push(null);\n      }\n    });\n\n    if (node.gradient == null) {\n      throw new Error(\n          `Cannot compute gradient: gradient function not found ` +\n          `for ${node.kernelName}.`);\n    }\n\n    // Backprop dy through this node and accumulate gradients over the inputs.\n    const inputGradients = node.gradient(dys);\n\n    for (const inputName in node.inputs) {\n      if (!(inputName in inputGradients)) {\n        throw new Error(\n            `Cannot backprop through input ${inputName}. ` +\n            `Available gradients found: ${Object.keys(inputGradients)}.`);\n      }\n\n      // Call the gradient function.\n      const dx = tidy(() => inputGradients[inputName]());\n      if (dx.dtype !== 'float32') {\n        throw new Error(\n            `Error in gradient for op ${\n                node.kernelName}. The gradient of input ` +\n            `${inputName} must have 'float32' dtype, but has '${dx.dtype}'`);\n      }\n      const x = node.inputs[inputName];\n      if (!util.arraysEqual(dx.shape, x.shape)) {\n        throw new Error(\n            `Error in gradient for op ${\n                node.kernelName}. The gradient of input ` +\n            `'${inputName}' has shape '${dx.shape}', which does not match ` +\n            `the shape of the input '${x.shape}'`);\n      }\n\n      if (tensorAccumulatedGradientMap[x.id] == null) {\n        tensorAccumulatedGradientMap[x.id] = dx;\n      } else {\n        const curGradient = tensorAccumulatedGradientMap[x.id];\n        tensorAccumulatedGradientMap[x.id] = add(curGradient, dx);\n        curGradient.dispose();\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {getGlobal} from './global_util';\nimport {tensorToString} from './tensor_format';\nimport {ArrayMap, BackendValues, DataType, DataTypeMap, DataValues, NumericDataType, Rank, ShapeMap, SingleValueMap, TypedArray} from './types';\nimport * as util from './util';\nimport {computeStrides, toNestedArray} from './util';\n\nexport interface TensorData<D extends DataType> {\n  dataId?: DataId;\n  values?: DataTypeMap[D];\n}\n\n// This interface mimics KernelBackend (in backend.ts), which would create a\n// circular dependency if imported.\nexport interface Backend {}\n\n/**\n * A mutable object, similar to `tf.Tensor`, that allows users to set values\n * at locations before converting to an immutable `tf.Tensor`.\n *\n * See `tf.buffer` for creating a tensor buffer.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class TensorBuffer<R extends Rank, D extends DataType = 'float32'> {\n  size: number;\n  shape: ShapeMap[R];\n  strides: number[];\n  values: DataTypeMap[D];\n\n  constructor(shape: ShapeMap[R], public dtype: D, values?: DataTypeMap[D]) {\n    this.shape = shape.slice() as ShapeMap[R];\n    this.size = util.sizeFromShape(shape);\n\n    if (values != null) {\n      const n = values.length;\n      util.assert(\n          n === this.size,\n          () => `Length of values '${n}' does not match the size ` +\n              `inferred by the shape '${this.size}'.`);\n    }\n    if (dtype === 'complex64') {\n      throw new Error(\n          `complex64 dtype TensorBuffers are not supported. Please create ` +\n          `a TensorBuffer for the real and imaginary parts separately and ` +\n          `call tf.complex(real, imag).`);\n    }\n    this.values = values || util.getArrayFromDType(dtype, this.size);\n    this.strides = computeStrides(shape);\n  }\n\n  /**\n   * Sets a value in the buffer at a given location.\n   *\n   * @param value The value to set.\n   * @param locs  The location indices.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Creation'}\n   */\n  set(value: SingleValueMap[D], ...locs: number[]): void {\n    if (locs.length === 0) {\n      locs = [0];\n    }\n    util.assert(\n        locs.length === this.rank,\n        () => `The number of provided coordinates (${locs.length}) must ` +\n            `match the rank (${this.rank})`);\n\n    const index = this.locToIndex(locs);\n    this.values[index] = value as number;\n  }\n\n  /**\n   * Returns the value in the buffer at the provided location.\n   *\n   * @param locs The location indices.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Creation'}\n   */\n  get(...locs: number[]): SingleValueMap[D] {\n    if (locs.length === 0) {\n      locs = [0];\n    }\n    let i = 0;\n    for (const loc of locs) {\n      if (loc < 0 || loc >= this.shape[i]) {\n        const msg = `Requested out of range element at ${locs}. ` +\n            `  Buffer shape=${this.shape}`;\n        throw new Error(msg);\n      }\n      i++;\n    }\n    let index = locs[locs.length - 1];\n    for (let i = 0; i < locs.length - 1; ++i) {\n      index += this.strides[i] * locs[i];\n    }\n    return this.values[index] as SingleValueMap[D];\n  }\n\n  locToIndex(locs: number[]): number {\n    if (this.rank === 0) {\n      return 0;\n    } else if (this.rank === 1) {\n      return locs[0];\n    }\n    let index = locs[locs.length - 1];\n    for (let i = 0; i < locs.length - 1; ++i) {\n      index += this.strides[i] * locs[i];\n    }\n    return index;\n  }\n\n  indexToLoc(index: number): number[] {\n    if (this.rank === 0) {\n      return [];\n    } else if (this.rank === 1) {\n      return [index];\n    }\n    const locs: number[] = new Array(this.shape.length);\n    for (let i = 0; i < locs.length - 1; ++i) {\n      locs[i] = Math.floor(index / this.strides[i]);\n      index -= locs[i] * this.strides[i];\n    }\n    locs[locs.length - 1] = index;\n    return locs;\n  }\n\n  get rank() {\n    return this.shape.length;\n  }\n\n  /**\n   * Creates an immutable `tf.Tensor` object from the buffer.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Creation'}\n   */\n  toTensor(): Tensor<R> {\n    return trackerFn().makeTensor(this.values, this.shape, this.dtype) as\n        Tensor<R>;\n  }\n}\n\nexport interface DataToGPUWebGLOption {\n  customTexShape?: [number, number];\n}\n\nexport type DataToGPUOptions = DataToGPUWebGLOption;\n\nexport interface GPUData {\n  tensorRef: Tensor;\n  texture?: WebGLTexture;\n  texShape?: [number, number];\n}\nexport interface TensorTracker {\n  makeTensor(\n      values: DataValues, shape: number[], dtype: DataType,\n      backend?: Backend): Tensor;\n  makeVariable(\n      initialValue: Tensor, trainable?: boolean, name?: string,\n      dtype?: DataType): Variable;\n  incRef(a: Tensor, backend: Backend): void;\n  disposeTensor(t: Tensor): void;\n  disposeVariable(v: Variable): void;\n  read(dataId: DataId): Promise<BackendValues>;\n  readSync(dataId: DataId): BackendValues;\n  readToGPU(dataId: DataId, options?: DataToGPUOptions): GPUData;\n}\n\n/**\n * The Tensor class calls into this handler to delegate chaining operations.\n */\nexport interface OpHandler {\n  cast<T extends Tensor>(x: T, dtype: DataType): T;\n  buffer<R extends Rank, D extends DataType>(\n      shape: ShapeMap[R], dtype: D,\n      values?: DataTypeMap[D]): TensorBuffer<R, D>;\n  print<T extends Tensor>(x: T, verbose: boolean): void;\n  clone<T extends Tensor>(x: T): T;\n  // TODO(yassogba) bring reshape back?\n}\n\n// For tracking tensor creation and disposal.\nlet trackerFn: () => TensorTracker = null;\n// Used by chaining methods to call into ops.\nlet opHandler: OpHandler = null;\n// Used to warn about deprecated methods.\nlet deprecationWarningFn: (msg: string) => void = null;\n// This here so that we can use this method on dev branches and keep the\n// functionality at master.\n// tslint:disable-next-line:no-unused-expression\n[deprecationWarningFn];\n\n/**\n * An external consumer can register itself as the tensor tracker. This way\n * the Tensor class can notify the tracker for every tensor created and\n * disposed.\n */\nexport function setTensorTracker(fn: () => TensorTracker) {\n  trackerFn = fn;\n}\n\n/**\n * An external consumer can register itself as the op handler. This way the\n * Tensor class can have chaining methods that call into ops via the op\n * handler.\n */\nexport function setOpHandler(handler: OpHandler) {\n  opHandler = handler;\n}\n\n/**\n * Sets the deprecation warning function to be used by this file. This way the\n * Tensor class can be a leaf but still use the environment.\n */\nexport function setDeprecationWarningFn(fn: (msg: string) => void) {\n  deprecationWarningFn = fn;\n}\n\n/**\n * We wrap data id since we use weak map to avoid memory leaks.\n * Since we have our own memory management, we have a reference counter\n * mapping a tensor to its data, so there is always a pointer (even if that\n * data is otherwise garbage collectable).\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/\n * Global_Objects/WeakMap\n */\nexport type DataId = object;  // object instead of {} to force non-primitive.\n\n// Declare this namespace to make Tensor class augmentation work in google3.\nexport declare namespace Tensor {}\n/**\n * A `tf.Tensor` object represents an immutable, multidimensional array of\n * numbers that has a shape and a data type.\n *\n * For performance reasons, functions that create tensors do not necessarily\n * perform a copy of the data passed to them (e.g. if the data is passed as a\n * `Float32Array`), and changes to the data will change the tensor. This is not\n * a feature and is not supported. To avoid this behavior, use the tensor before\n * changing the input data or create a copy with `copy = tf.add(yourTensor, 0)`.\n *\n * See `tf.tensor` for details on how to create a `tf.Tensor`.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class Tensor<R extends Rank = Rank> {\n  /** Unique id of this tensor. */\n  readonly id: number;\n  /**\n   * Id of the bucket holding the data for this tensor. Multiple arrays can\n   * point to the same bucket (e.g. when calling array.reshape()).\n   */\n  dataId: DataId;\n  /** The shape of the tensor. */\n  readonly shape: ShapeMap[R];\n  /** Number of elements in the tensor. */\n  readonly size: number;\n  /** The data type for the array. */\n  readonly dtype: DataType;\n  /** The rank type for the array (see `Rank` enum). */\n  readonly rankType: R;\n\n  /** Whether this tensor has been globally kept. */\n  kept = false;\n  /** The id of the scope this tensor is being tracked in. */\n  scopeId: number;\n\n  /**\n   * Number of elements to skip in each dimension when indexing. See\n   * https://docs.scipy.org/doc/numpy/reference/generated/\\\n   * numpy.ndarray.strides.html\n   */\n  readonly strides: number[];\n\n  constructor(shape: ShapeMap[R], dtype: DataType, dataId: DataId, id: number) {\n    this.shape = shape.slice() as ShapeMap[R];\n    this.dtype = dtype || 'float32';\n    this.size = util.sizeFromShape(shape);\n    this.strides = computeStrides(shape);\n    this.dataId = dataId;\n    this.id = id;\n    this.rankType = (this.rank < 5 ? this.rank.toString() : 'higher') as R;\n  }\n\n  get rank(): number {\n    return this.shape.length;\n  }\n\n  /**\n   * Returns a promise of `tf.TensorBuffer` that holds the underlying data.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  async buffer<D extends DataType = 'float32'>(): Promise<TensorBuffer<R, D>> {\n    const vals = await this.data<D>();\n    return opHandler.buffer(this.shape, this.dtype as D, vals);\n  }\n\n  /**\n   * Returns a `tf.TensorBuffer` that holds the underlying data.\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  bufferSync<D extends DataType = 'float32'>(): TensorBuffer<R, D> {\n    return opHandler.buffer(this.shape, this.dtype as D, this.dataSync());\n  }\n\n  /**\n   * Returns the tensor data as a nested array. The transfer of data is done\n   * asynchronously.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  async array(): Promise<ArrayMap[R]> {\n    const vals = await this.data();\n    return toNestedArray(this.shape, vals, this.dtype === 'complex64') as\n        ArrayMap[R];\n  }\n\n  /**\n   * Returns the tensor data as a nested array. The transfer of data is done\n   * synchronously.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  arraySync(): ArrayMap[R] {\n    return toNestedArray(\n               this.shape, this.dataSync(), this.dtype === 'complex64') as\n        ArrayMap[R];\n  }\n\n  /**\n   * Asynchronously downloads the values from the `tf.Tensor`. Returns a\n   * promise of `TypedArray` that resolves when the computation has finished.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  async data<D extends DataType = NumericDataType>(): Promise<DataTypeMap[D]> {\n    this.throwIfDisposed();\n    const data = trackerFn().read(this.dataId);\n    if (this.dtype === 'string') {\n      const bytes = await data as Uint8Array[];\n      try {\n        return bytes.map(b => util.decodeString(b)) as DataTypeMap[D];\n      } catch {\n        throw new Error(\n            'Failed to decode the string bytes into utf-8. ' +\n            'To get the original bytes, call tensor.bytes().');\n      }\n    }\n    return data as Promise<DataTypeMap[D]>;\n  }\n\n  /**\n   * Copy the tensor's data to a new GPU resource. Comparing to the `dataSync()`\n   * and `data()`, this method prevents data from being downloaded to CPU.\n   *\n   * For WebGL backend, the data will be stored on a densely packed texture.\n   * This means that the texture will use the RGBA channels to store value.\n   *\n   * @param options:\n   *     For WebGL,\n   *         - customTexShape: Optional. If set, will use the user defined\n   *     texture shape to create the texture.\n   *\n   * @returns For WebGL backend, a GPUData contains the new texture and\n   *     its information.\n   *     {\n   *        tensorRef: The tensor that is associated with this texture,\n   *        texture: WebGLTexture,\n   *        texShape: [number, number] // [height, width]\n   *     }\n   *     Remember to dispose the GPUData after it is used by\n   *     `res.tensorRef.dispose()`.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  dataToGPU(options?: DataToGPUOptions): GPUData {\n    this.throwIfDisposed();\n    return trackerFn().readToGPU(this.dataId, options);\n  }\n\n  /**\n   * Synchronously downloads the values from the `tf.Tensor`. This blocks the\n   * UI thread until the values are ready, which can cause performance issues.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  dataSync<D extends DataType = NumericDataType>(): DataTypeMap[D] {\n    this.throwIfDisposed();\n    const data = trackerFn().readSync(this.dataId);\n    if (this.dtype === 'string') {\n      try {\n        return (data as Uint8Array[]).map(b => util.decodeString(b)) as\n            DataTypeMap[D];\n      } catch {\n        throw new Error(\n            'Failed to decode the string bytes into utf-8. ' +\n            'To get the original bytes, call tensor.bytes().');\n      }\n    }\n    return data as DataTypeMap[D];\n  }\n\n  /** Returns the underlying bytes of the tensor's data. */\n  async bytes(): Promise<Uint8Array[]|Uint8Array> {\n    this.throwIfDisposed();\n    const data = await trackerFn().read(this.dataId);\n    if (this.dtype === 'string') {\n      return data as Uint8Array[];\n    } else {\n      return new Uint8Array((data as TypedArray).buffer);\n    }\n  }\n\n  /**\n   * Disposes `tf.Tensor` from memory.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    trackerFn().disposeTensor(this);\n    this.isDisposedInternal = true;\n  }\n\n  protected isDisposedInternal = false;\n  get isDisposed(): boolean {\n    return this.isDisposedInternal;\n  }\n\n  throwIfDisposed() {\n    if (this.isDisposed) {\n      throw new Error(`Tensor is disposed.`);\n    }\n  }\n\n  /**\n   * Prints the `tf.Tensor`. See `tf.print` for details.\n   *\n   * @param verbose Whether to print verbose information about the tensor,\n   *    including dtype and size.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  print(verbose = false): void {\n    return opHandler.print(this, verbose);\n  }\n\n  /**\n   * Returns a copy of the tensor. See `tf.clone` for details.\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  clone<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.clone(this);\n  }\n\n  /**\n   * Returns a human-readable description of the tensor. Useful for logging.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  toString(verbose = false): string {\n    const vals = this.dataSync();\n    return tensorToString(vals, this.shape, this.dtype, verbose);\n  }\n\n  cast<T extends this>(dtype: DataType): T {\n    this.throwIfDisposed();\n    return opHandler.cast(this as T, dtype);\n  }\n  variable(trainable = true, name?: string, dtype?: DataType): Variable<R> {\n    this.throwIfDisposed();\n    return trackerFn().makeVariable(this, trainable, name, dtype) as\n        Variable<R>;\n  }\n}\n\nObject.defineProperty(Tensor, Symbol.hasInstance, {\n  value: (instance: Tensor) => {\n    // Implementation note: we should use properties of the object that will be\n    // defined before the constructor body has finished executing (methods).\n    // This is because when this code is transpiled by babel, babel will call\n    // classCallCheck before the constructor body is run.\n    // See https://github.com/tensorflow/tfjs/issues/3384 for backstory.\n    return !!instance && instance.data != null && instance.dataSync != null &&\n        instance.throwIfDisposed != null;\n  }\n});\n\nexport function getGlobalTensorClass() {\n  // Use getGlobal so that we can augment the Tensor class across package\n  // boundaries becase the node resolution alg may result in different modules\n  // being returned for this file depending on the path they are loaded from.\n  return getGlobal('Tensor', () => {\n    return Tensor;\n  });\n}\n\n// Global side effect. Cache global reference to Tensor class\ngetGlobalTensorClass();\n\nexport interface NumericTensor<R extends Rank = Rank> extends Tensor<R> {\n  dtype: NumericDataType;\n  dataSync<D extends DataType = NumericDataType>(): DataTypeMap[D];\n  data<D extends DataType = NumericDataType>(): Promise<DataTypeMap[D]>;\n  dataToGPU(options?: DataToGPUOptions): GPUData;\n}\n\nexport interface StringTensor<R extends Rank = Rank> extends Tensor<R> {\n  dtype: 'string';\n  dataSync<D extends DataType = 'string'>(): DataTypeMap[D];\n  data<D extends DataType = 'string'>(): Promise<DataTypeMap[D]>;\n}\n\n/** @doclink Tensor */\nexport type Scalar = Tensor<Rank.R0>;\n/** @doclink Tensor */\nexport type Tensor1D = Tensor<Rank.R1>;\n/** @doclink Tensor */\nexport type Tensor2D = Tensor<Rank.R2>;\n/** @doclink Tensor */\nexport type Tensor3D = Tensor<Rank.R3>;\n/** @doclink Tensor */\nexport type Tensor4D = Tensor<Rank.R4>;\n/** @doclink Tensor */\nexport type Tensor5D = Tensor<Rank.R5>;\n/** @doclink Tensor */\nexport type Tensor6D = Tensor<Rank.R6>;\n\n/**\n * A mutable `tf.Tensor`, useful for persisting state, e.g. for training.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class Variable<R extends Rank = Rank> extends Tensor<R> {\n  name: string;\n\n  constructor(\n      initialValue: Tensor<R>, public trainable: boolean, name: string,\n      tensorId: number) {\n    super(\n        initialValue.shape, initialValue.dtype, initialValue.dataId, tensorId);\n    this.name = name;\n  }\n\n  /**\n   * Assign a new `tf.Tensor` to this variable. The new `tf.Tensor` must have\n   * the same shape and dtype as the old `tf.Tensor`.\n   *\n   * @param newValue New tensor to be assigned to this variable.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  assign(newValue: Tensor<R>): void {\n    if (newValue.dtype !== this.dtype) {\n      throw new Error(\n          `dtype of the new value (${newValue.dtype}) and ` +\n          `previous value (${this.dtype}) must match`);\n    }\n    if (!util.arraysEqual(newValue.shape, this.shape)) {\n      throw new Error(\n          `shape of the new value (${newValue.shape}) and ` +\n          `previous value (${this.shape}) must match`);\n    }\n    trackerFn().disposeTensor(this);\n    this.dataId = newValue.dataId;\n    trackerFn().incRef(this, null /* backend */);\n  }\n\n  dispose(): void {\n    trackerFn().disposeVariable(this);\n    this.isDisposedInternal = true;\n  }\n}\n\nObject.defineProperty(Variable, Symbol.hasInstance, {\n  value: (instance: Variable) => {\n    return instance instanceof Tensor && instance.assign != null &&\n        instance.assign instanceof Function;\n  }\n});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, TypedArray} from './types';\nimport {computeStrides, isString, rightPad, sizeFromShape} from './util';\n\n// Maximum number of values before we decide to show ellipsis.\nconst FORMAT_LIMIT_NUM_VALS = 20;\n// Number of first and last values to show when displaying a, b,...,y, z.\nconst FORMAT_NUM_FIRST_LAST_VALS = 3;\n// Number of significant digits to show.\nconst FORMAT_NUM_SIG_DIGITS = 7;\n\nexport function tensorToString(\n    vals: TypedArray|string[], shape: number[], dtype: DataType,\n    verbose: boolean) {\n  const strides = computeStrides(shape);\n  const padPerCol = computeMaxSizePerColumn(vals, shape, dtype, strides);\n  const rank = shape.length;\n  const valsLines = subTensorToString(vals, shape, dtype, strides, padPerCol);\n  const lines = ['Tensor'];\n  if (verbose) {\n    lines.push(`  dtype: ${dtype}`);\n    lines.push(`  rank: ${rank}`);\n    lines.push(`  shape: [${shape}]`);\n    lines.push(`  values:`);\n  }\n  lines.push(valsLines.map(l => '    ' + l).join('\\n'));\n  return lines.join('\\n');\n}\n\nfunction computeMaxSizePerColumn(\n    vals: TypedArray|string[], shape: number[], dtype: DataType,\n    strides: number[]): number[] {\n  const n = sizeFromShape(shape);\n  const numCols = strides[strides.length - 1];\n  const padPerCol = new Array(numCols).fill(0);\n  const rank = shape.length;\n  const valuesOrTuples =\n      dtype === 'complex64' ? createComplexTuples(vals) : vals;\n\n  if (rank > 1) {\n    for (let row = 0; row < n / numCols; row++) {\n      const offset = row * numCols;\n      for (let j = 0; j < numCols; j++) {\n        padPerCol[j] = Math.max(\n            padPerCol[j],\n            valToString(valuesOrTuples[offset + j], 0, dtype).length);\n      }\n    }\n  }\n  return padPerCol;\n}\n\nfunction valToString(\n    val: number|string|[number, number], pad: number, dtype: DataType) {\n  let valStr: string;\n  if (Array.isArray(val)) {\n    valStr = `${parseFloat(val[0].toFixed(FORMAT_NUM_SIG_DIGITS))} + ` +\n        `${parseFloat(val[1].toFixed(FORMAT_NUM_SIG_DIGITS))}j`;\n  } else if (isString(val)) {\n    valStr = `'${val}'`;\n  } else if (dtype === 'bool') {\n    valStr = boolNumToString(val);\n  } else {\n    valStr = parseFloat(val.toFixed(FORMAT_NUM_SIG_DIGITS)).toString();\n  }\n\n  return rightPad(valStr, pad);\n}\n\nfunction boolNumToString(v: number): string {\n  return v === 0 ? 'false' : 'true';\n}\n\nfunction subTensorToString(\n    vals: TypedArray|string[], shape: number[], dtype: DataType,\n    strides: number[], padPerCol: number[], isLast = true): string[] {\n  const storagePerElement = dtype === 'complex64' ? 2 : 1;\n\n  const size = shape[0];\n  const rank = shape.length;\n  if (rank === 0) {\n    if (dtype === 'complex64') {\n      const complexTuple = createComplexTuples(vals);\n      return [valToString(complexTuple[0], 0, dtype)];\n    }\n    if (dtype === 'bool') {\n      return [boolNumToString(vals[0] as number)];\n    }\n    return [vals[0].toString()];\n  }\n\n  if (rank === 1) {\n    if (size > FORMAT_LIMIT_NUM_VALS) {\n      const firstValsSize = FORMAT_NUM_FIRST_LAST_VALS * storagePerElement;\n\n      let firstVals = Array.from<number|string|[number, number]>(\n          vals.slice(0, firstValsSize));\n      let lastVals = Array.from<number|string|[number, number]>(vals.slice(\n          (size - FORMAT_NUM_FIRST_LAST_VALS) * storagePerElement,\n          size * storagePerElement));\n      if (dtype === 'complex64') {\n        firstVals = createComplexTuples(firstVals);\n        lastVals = createComplexTuples(lastVals);\n      }\n      return [\n        '[' +\n        firstVals.map((x, i) => valToString(x, padPerCol[i], dtype))\n            .join(', ') +\n        ', ..., ' +\n        lastVals\n            .map(\n                (x, i) => valToString(\n                    x, padPerCol[size - FORMAT_NUM_FIRST_LAST_VALS + i], dtype))\n            .join(', ') +\n        ']'\n      ];\n    }\n    const displayVals: Array<number|string|[number, number]> =\n        dtype === 'complex64' ? createComplexTuples(vals) :\n                                Array.from<number|string>(vals);\n\n    return [\n      '[' +\n      displayVals.map((x, i) => valToString(x, padPerCol[i], dtype))\n          .join(', ') +\n      ']'\n    ];\n  }\n\n  // The array is rank 2 or more.\n  const subshape = shape.slice(1);\n  const substrides = strides.slice(1);\n  const stride = strides[0] * storagePerElement;\n  const lines: string[] = [];\n  if (size > FORMAT_LIMIT_NUM_VALS) {\n    for (let i = 0; i < FORMAT_NUM_FIRST_LAST_VALS; i++) {\n      const start = i * stride;\n      const end = start + stride;\n      lines.push(...subTensorToString(\n          vals.slice(start, end), subshape, dtype, substrides, padPerCol,\n          false /* isLast */));\n    }\n    lines.push('...');\n    for (let i = size - FORMAT_NUM_FIRST_LAST_VALS; i < size; i++) {\n      const start = i * stride;\n      const end = start + stride;\n      lines.push(...subTensorToString(\n          vals.slice(start, end), subshape, dtype, substrides, padPerCol,\n          i === size - 1 /* isLast */));\n    }\n  } else {\n    for (let i = 0; i < size; i++) {\n      const start = i * stride;\n      const end = start + stride;\n      lines.push(...subTensorToString(\n          vals.slice(start, end), subshape, dtype, substrides, padPerCol,\n          i === size - 1 /* isLast */));\n    }\n  }\n  const sep = rank === 2 ? ',' : '';\n  lines[0] = '[' + lines[0] + sep;\n  for (let i = 1; i < lines.length - 1; i++) {\n    lines[i] = ' ' + lines[i] + sep;\n  }\n  let newLineSep = ',\\n';\n  for (let i = 2; i < rank; i++) {\n    newLineSep += '\\n';\n  }\n  lines[lines.length - 1] =\n      ' ' + lines[lines.length - 1] + ']' + (isLast ? '' : newLineSep);\n  return lines;\n}\n\nfunction createComplexTuples(vals: Array<{}>|\n                             TypedArray): Array<[number, number]> {\n  const complexTuples: Array<[number, number]> = [];\n  for (let i = 0; i < vals.length; i += 2) {\n    complexTuples.push([vals[i], vals[i + 1]] as [number, number]);\n  }\n  return complexTuples;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from './tensor';\nimport {TensorContainer, TensorContainerArray} from './tensor_types';\nimport {upcastType} from './types';\nimport {assert} from './util';\n\nexport function makeTypesMatch<T extends Tensor>(a: T, b: T): [T, T] {\n  if (a.dtype === b.dtype) {\n    return [a, b];\n  }\n  const dtype = upcastType(a.dtype, b.dtype);\n  return [a.cast(dtype), b.cast(dtype)];\n}\n\nexport function assertTypesMatch(a: Tensor, b: Tensor): void {\n  assert(\n      a.dtype === b.dtype,\n      () => `The dtypes of the first(${a.dtype}) and` +\n          ` second(${b.dtype}) input must match`);\n}\n\nexport function isTensorInList(tensor: Tensor, tensorList: Tensor[]): boolean {\n  return tensorList.some(x => x.id === tensor.id);\n}\n\n/**\n * Extracts any `Tensor`s found within the provided object.\n *\n * @param container an object that may be a `Tensor` or may directly contain\n *   `Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. In general it\n *   is safe to pass any object here, except that `Promise`s are not\n *   supported.\n * @returns An array of `Tensors` found within the passed object. If the\n *   argument is simply a `Tensor', a list containing that `Tensor` is\n *   returned. If the object is not a `Tensor` or does not\n *   contain `Tensors`, an empty list is returned.\n */\nexport function getTensorsInContainer(result: TensorContainer): Tensor[] {\n  const list: Tensor[] = [];\n  const seen = new Set<{}|void>();\n  walkTensorContainer(result, list, seen);\n  return list;\n}\n\nfunction walkTensorContainer(\n    container: TensorContainer, list: Tensor[], seen: Set<{}|void>): void {\n  if (container == null) {\n    return;\n  }\n  if (container instanceof Tensor) {\n    list.push(container);\n    return;\n  }\n  if (!isIterable(container)) {\n    return;\n  }\n  // Iteration over keys works also for arrays.\n  const iterable = container as TensorContainerArray;\n  for (const k in iterable) {\n    const val = iterable[k];\n    if (!seen.has(val)) {\n      seen.add(val);\n      walkTensorContainer(val, list, seen);\n    }\n  }\n}\n\n// tslint:disable-next-line:no-any\nfunction isIterable(obj: any): boolean {\n  return Array.isArray(obj) || typeof obj === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/** @docalias number[] */\nexport interface ShapeMap {\n  R0: number[];\n  R1: [number];\n  R2: [number, number];\n  R3: [number, number, number];\n  R4: [number, number, number, number];\n  R5: [number, number, number, number, number];\n  R6: [number, number, number, number, number, number];\n}\n\n/** @docalias number[] */\nexport interface ArrayMap {\n  R0: number;\n  R1: number[];\n  R2: number[][];\n  R3: number[][][];\n  R4: number[][][][];\n  R5: number[][][][][];\n  R6: number[][][][][][];\n}\n\nexport interface DataTypeMap {\n  float32: Float32Array;\n  int32: Int32Array;\n  bool: Uint8Array;\n  complex64: Float32Array;\n  string: string[];\n}\n\nexport interface SingleValueMap {\n  bool: boolean;\n  int32: number;\n  float32: number;\n  complex64: number;\n  string: string;\n}\n\n/** @docalias 'float32'|'int32'|'bool'|'complex64'|'string' */\nexport type DataType = keyof DataTypeMap;\nexport type NumericDataType = 'float32'|'int32'|'bool'|'complex64';\nexport type TypedArray = Float32Array|Int32Array|Uint8Array;\n/** Tensor data used in tensor creation and user-facing API. */\nexport type DataValues = DataTypeMap[DataType];\n/** The underlying tensor data that gets stored in a backend. */\nexport type BackendValues = Float32Array|Int32Array|Uint8Array|Uint8Array[];\n\nexport enum Rank {\n  R0 = 'R0',\n  R1 = 'R1',\n  R2 = 'R2',\n  R3 = 'R3',\n  R4 = 'R4',\n  R5 = 'R5',\n  R6 = 'R6'\n}\n\nexport type FlatVector = boolean[]|number[]|TypedArray;\nexport type RegularArray<T> =\n    T[]|T[][]|T[][][]|T[][][][]|T[][][][][]|T[][][][][][];\n\n// tslint:disable-next-line:no-any\nexport interface RecursiveArray<T extends any> {\n  [index: number]: T|RecursiveArray<T>;\n}\n\n// Looks for upcasting types. Used, for example, in operations with mixed dtype\n// inputs.\nenum UpcastInt32AndMap {\n  'float32' = 'float32',\n  'int32' = 'int32',\n  'bool' = 'int32',\n  'complex64' = 'complex64'\n}\n\nenum UpcastBoolAndMap {\n  'float32' = 'float32',\n  'int32' = 'int32',\n  'bool' = 'bool',\n  'complex64' = 'complex64'\n}\n\nenum UpcastFloat32AndMap {\n  'float32' = 'float32',\n  'int32' = 'float32',\n  'bool' = 'float32',\n  'complex64' = 'complex64'\n}\n\nenum UpcastComplex64AndMap {\n  'float32' = 'complex64',\n  'int32' = 'complex64',\n  'bool' = 'complex64',\n  'complex64' = 'complex64'\n}\n\nconst upcastTypeMap = {\n  'float32': UpcastFloat32AndMap,\n  'int32': UpcastInt32AndMap,\n  'bool': UpcastBoolAndMap,\n  'complex64': UpcastComplex64AndMap\n};\n\nexport function upcastType(typeA: DataType, typeB: DataType): DataType {\n  if (typeA === 'string' || typeB === 'string') {\n    if (typeA === 'string' && typeB === 'string') {\n      return 'string';\n    }\n    throw new Error(`Can not upcast ${typeA} with ${typeB}`);\n  }\n  return upcastTypeMap[typeA][typeB];\n}\n\n/** Returns the output type after summation. */\nexport function sumOutType(type: DataType): DataType {\n  return upcastType(type, 'int32');\n}\n\n/** @docalias TypedArray|Array */\nexport type TensorLike =\n    TypedArray|number|boolean|string|RecursiveArray<number|number[]|TypedArray>|\n    RecursiveArray<boolean>|RecursiveArray<string>|Uint8Array[];\nexport type ScalarLike = number|boolean|string|Uint8Array;\n/** @docalias TypedArray|Array */\nexport type TensorLike1D = TypedArray|number[]|boolean[]|string[]|Uint8Array[];\n/** @docalias TypedArray|Array */\nexport type TensorLike2D = TypedArray|number[]|number[][]|boolean[]|boolean[][]|\n    string[]|string[][]|Uint8Array[]|Uint8Array[][];\n/** @docalias TypedArray|Array */\nexport type TensorLike3D = TypedArray|number[]|number[][][]|boolean[]|\n    boolean[][][]|string[]|string[][][]|Uint8Array[]|Uint8Array[][][];\n/** @docalias TypedArray|Array */\nexport type TensorLike4D = TypedArray|number[]|number[][][][]|boolean[]|\n    boolean[][][][]|string[]|string[][][][]|Uint8Array[]|Uint8Array[][][][];\n/** @docalias TypedArray|Array */\nexport type TensorLike5D =\n    TypedArray|number[]|number[][][][][]|boolean[]|boolean[][][][][]|string[]|\n    string[][][][][]|Uint8Array[]|Uint8Array[][][][][];\n/** @docalias TypedArray|Array */\nexport type TensorLike6D =\n    TypedArray|number[]|number[][][][][][]|boolean[]|boolean[][][][][][]|\n    string[]|string[][][][][][]|Uint8Array[]|Uint8Array[][][][][];\n\n/** Type for representing image data in Uint8Array type. */\nexport interface PixelData {\n  width: number;\n  height: number;\n  data: Uint8Array;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from './engine';\nimport {env} from './environment';\nimport {Tensor} from './tensor';\nimport {DataType, TensorLike} from './types';\nimport {assert, flatten, inferDtype, isTypedArray, toTypedArray} from './util';\n\nexport function inferShape(val: TensorLike, dtype?: DataType): number[] {\n  let firstElem: typeof val = val;\n\n  if (isTypedArray(val)) {\n    return dtype === 'string' ? [] : [val.length];\n  }\n  if (!Array.isArray(val)) {\n    return [];  // Scalar.\n  }\n  const shape: number[] = [];\n\n  while (Array.isArray(firstElem) ||\n         isTypedArray(firstElem) && dtype !== 'string') {\n    shape.push(firstElem.length);\n    firstElem = firstElem[0];\n  }\n  if (Array.isArray(val) &&\n      env().getBool('TENSORLIKE_CHECK_SHAPE_CONSISTENCY')) {\n    deepAssertShapeConsistency(val, shape, []);\n  }\n\n  return shape;\n}\n\nfunction deepAssertShapeConsistency(\n    val: TensorLike, shape: number[], indices: number[]) {\n  indices = indices || [];\n  if (!(Array.isArray(val)) && !isTypedArray(val)) {\n    assert(\n        shape.length === 0,\n        () => `Element arr[${indices.join('][')}] is a primitive, ` +\n            `but should be an array/TypedArray of ${shape[0]} elements`);\n    return;\n  }\n  assert(\n      shape.length > 0,\n      () => `Element arr[${indices.join('][')}] should be a primitive, ` +\n          `but is an array of ${val.length} elements`);\n  assert(\n      val.length === shape[0],\n      () => `Element arr[${indices.join('][')}] should have ${shape[0]} ` +\n          `elements, but has ${val.length} elements`);\n  const subShape = shape.slice(1);\n  for (let i = 0; i < val.length; ++i) {\n    deepAssertShapeConsistency(val[i], subShape, indices.concat(i));\n  }\n}\n\nfunction assertDtype(\n    expectedDtype: DataType|'numeric'|'string_or_numeric',\n    actualDType: DataType, argName: string, functionName: string) {\n  if (expectedDtype === 'string_or_numeric') {\n    return;\n  }\n  if (expectedDtype == null) {\n    throw new Error(`Expected dtype cannot be null.`);\n  }\n  if (expectedDtype !== 'numeric' && expectedDtype !== actualDType ||\n      expectedDtype === 'numeric' && actualDType === 'string') {\n    throw new Error(\n        `Argument '${argName}' passed to '${functionName}' must ` +\n        `be ${expectedDtype} tensor, but got ${actualDType} tensor`);\n  }\n}\n\nexport function convertToTensor<T extends Tensor>(\n    x: T|TensorLike, argName: string, functionName: string,\n    parseAsDtype: DataType|'numeric'|'string_or_numeric' = 'numeric'): T {\n  if (x instanceof Tensor) {\n    assertDtype(parseAsDtype, x.dtype, argName, functionName);\n    return x;\n  }\n  let inferredDtype = inferDtype(x);\n  // If the user expects a bool/int/float, use that info to update the\n  // inferredDtype when it is not a string.\n  if (inferredDtype !== 'string' &&\n      ['bool', 'int32', 'float32'].indexOf(parseAsDtype) >= 0) {\n    inferredDtype = parseAsDtype as DataType;\n  }\n  assertDtype(parseAsDtype, inferredDtype, argName, functionName);\n\n  if ((x == null) ||\n      (!isTypedArray(x) && !Array.isArray(x) && typeof x !== 'number' &&\n       typeof x !== 'boolean' && typeof x !== 'string')) {\n    const type = x == null ? 'null' : (x as {}).constructor.name;\n    throw new Error(\n        `Argument '${argName}' passed to '${functionName}' must be a ` +\n        `Tensor or TensorLike, but got '${type}'`);\n  }\n  const inferredShape = inferShape(x, inferredDtype);\n  if (!isTypedArray(x) && !Array.isArray(x)) {\n    x = [x] as number[];\n  }\n  const skipTypedArray = true;\n  const values = inferredDtype !== 'string' ?\n      toTypedArray(x, inferredDtype as DataType) :\n      flatten(x as string[], [], skipTypedArray) as string[];\n  return ENGINE.makeTensor(values, inferredShape, inferredDtype) as T;\n}\n\nexport function convertToTensorArray<T extends Tensor>(\n    arg: Array<T|TensorLike>, argName: string, functionName: string,\n    parseAsDtype: DataType|'numeric'|'string_or_numeric' = 'numeric'): T[] {\n  if (!Array.isArray(arg)) {\n    throw new Error(\n        `Argument ${argName} passed to ${functionName} must be a ` +\n        '`Tensor[]` or `TensorLike[]`');\n  }\n  const tensors = arg as T[];\n  return tensors.map(\n      (t, i) =>\n          convertToTensor(t, `${argName}[${i}]`, functionName, parseAsDtype));\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {isPromise} from '../util';\n\nexport const OP_SCOPE_SUFFIX = '__op';\n\n/**\n * Used for wrapping functions that perform math operations on\n * Tensors. The function will be wrapped in a named scope that cleans all\n * memory usage after the function is done.\n */\nexport function op<T extends Function>(f: {[name: string]: T}): T {\n  const keys = Object.keys(f);\n  if (keys.length !== 1) {\n    throw new Error(\n        `Please provide an object with a single key ` +\n        `(operation name) mapping to a function. Got an object with ` +\n        `${keys.length} keys.`);\n  }\n\n  let opName = keys[0];\n  const fn = f[opName];\n\n  // Strip the underscore from the end of the function name.\n  if (opName.endsWith('_')) {\n    opName = opName.substring(0, opName.length - 1);\n  }\n\n  // add an __op suffix to distinguish ops from kernels in tf.profile\n  opName = opName + OP_SCOPE_SUFFIX;\n\n  // tslint:disable-next-line:no-any\n  const f2 = (...args: any[]) => {\n    ENGINE.startScope(opName);\n    try {\n      const result = fn(...args);\n      if (isPromise(result)) {\n        console.error('Cannot return a Promise inside of tidy.');\n      }\n      ENGINE.endScope(result);\n      return result;\n    } catch (ex) {\n      ENGINE.endScope(null);\n      throw ex;\n    }\n  };\n  Object.defineProperty(f2, 'name', {value: opName, configurable: true});\n\n  // tslint:disable-next-line:no-any\n  return f2 as any as T;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {inferShape} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {DataType, Rank, ShapeMap} from '../types';\n\nimport {makeTensor} from './tensor_ops_util';\n\n/**\n * Creates a `tf.Tensor` with the provided values, shape and dtype.\n *\n * ```js\n * // Pass an array of values to create a vector.\n * tf.tensor([1, 2, 3, 4]).print();\n * ```\n *\n * ```js\n * // Pass a nested array of values to make a matrix or a higher\n * // dimensional tensor.\n * tf.tensor([[1, 2], [3, 4]]).print();\n * ```\n *\n * ```js\n * // Pass a flat array and specify a shape yourself.\n * tf.tensor([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`. If the values are strings,\n *     they will be encoded as utf-8 and kept as `Uint8Array[]`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor<R extends Rank>(\n    values: TensorLike, shape?: ShapeMap[R], dtype?: DataType): Tensor<R> {\n  const inferredShape = inferShape(values, dtype);\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor<R>;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {TensorLike, TypedArray} from '../types';\nimport {DataType} from '../types';\nimport {assert, assertNonNegativeIntegerDimensions, flatten, inferDtype, isTypedArray, sizeFromShape, toTypedArray} from '../util';\n\n/** This is shared code across all tensor creation methods. */\nexport function makeTensor(\n    values: TensorLike, shape: number[], inferredShape: number[],\n    dtype?: DataType): Tensor {\n  if (dtype == null) {\n    dtype = inferDtype(values);\n  }\n  if (dtype === 'complex64') {\n    throw new Error(\n        `Cannot construct a complex64 tensor directly. ` +\n        `Please use tf.complex(real, imag).`);\n  }\n  if (!isTypedArray(values) && !Array.isArray(values) &&\n      typeof values !== 'number' && typeof values !== 'boolean' &&\n      typeof values !== 'string') {\n    throw new Error(\n        'values passed to tensor(values) must be a number/boolean/string or ' +\n        'an array of numbers/booleans/strings, or a TypedArray');\n  }\n  if (shape != null) {\n    assertNonNegativeIntegerDimensions(shape);\n\n    const providedSize = sizeFromShape(shape);\n    const inferredSize = sizeFromShape(inferredShape);\n    assert(\n        providedSize === inferredSize,\n        () =>\n            `Based on the provided shape, [${shape}], the tensor should have ` +\n            `${providedSize} values but has ${inferredSize}`);\n\n    for (let i = 0; i < inferredShape.length; ++i) {\n      const inferred = inferredShape[i];\n      const flatDimsDontMatch = i === inferredShape.length - 1 ?\n          inferred !== sizeFromShape(shape.slice(i)) :\n          true;\n      assert(\n          inferredShape[i] === shape[i] || !flatDimsDontMatch,\n          () => `Error creating a new Tensor. Inferred shape ` +\n              `(${inferredShape}) does not match the provided ` +\n              `shape (${shape}). `);\n    }\n  }\n\n  if (!isTypedArray(values) && !Array.isArray(values)) {\n    values = [values] as number[];\n  }\n\n  shape = shape || inferredShape;\n  values = dtype !== 'string' ?\n      toTypedArray(values, dtype) :\n      flatten(values as string[], [], true) as string[];\n  return ENGINE.makeTensor(values as TypedArray, shape, dtype);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/* Type definitions for exporting and importing of models. */\n\n/**\n * A map from Tensor dtype to number of bytes per element of the Tensor.\n */\nexport const DTYPE_VALUE_SIZE_MAP: {[dtype: string]: number} = {\n  'float32': 4,\n  'float16': 2,\n  'int32': 4,\n  'uint16': 2,\n  'uint8': 1,\n  'bool': 1,\n  'complex64': 8\n};\n\n/**\n * A weight manifest.\n *\n * The weight manifest consists of an ordered list of weight-manifest groups.\n * Each weight-manifest group (\"group\" for short hereafter) consists of a\n * number of weight values stored in a number of paths.\n * See the documentation of `WeightManifestGroupConfig` below for more details.\n */\nexport declare type WeightsManifestConfig = WeightsManifestGroupConfig[];\n\n/**\n * A weight-manifest group.\n *\n * Consists of an ordered list of weight values encoded in binary format,\n * stored in an ordered list of paths.\n */\nexport declare interface WeightsManifestGroupConfig {\n  /**\n   * An ordered list of paths.\n   *\n   * Paths are intentionally abstract in order to be general. For example, they\n   * can be relative URL paths or relative paths on the file system.\n   */\n  paths: string[];\n\n  /**\n   * Specifications of the weights stored in the paths.\n   */\n  weights: WeightsManifestEntry[];\n}\n\n/**\n * Group to which the weight belongs.\n *\n * - 'optimizer': Weight from a stateful optimizer.\n */\nexport type WeightGroup = 'model'|'optimizer';\n\n/**\n * An entry in the weight manifest.\n *\n * The entry contains specification of a weight.\n */\nexport declare interface WeightsManifestEntry {\n  /**\n   * Name of the weight, e.g., 'Dense_1/bias'\n   */\n  name: string;\n\n  /**\n   * Shape of the weight.\n   */\n  shape: number[];\n\n  /**\n   * Data type of the weight.\n   */\n  dtype: 'float32'|'int32'|'bool'|'string'|'complex64';\n\n  /**\n   * Type of the weight.\n   *\n   * Optional.\n   *\n   * The value 'optimizer' indicates the weight belongs to an optimizer\n   * (i.e., used only during model training and not during inference).\n   */\n  group?: WeightGroup;\n\n  /**\n   * Information for dequantization of the weight.\n   */\n  quantization?: {\n    scale?: number,  // The scaling constant to multiply by.\n    min?: number,    // The (possibly nudged) minimum weight to add.\n       dtype: 'uint16'|'uint8'|'float16'  // The dtype of the quantized weights.\n  };\n}\n\n/**\n * Options for saving a model.\n * @innamespace io\n */\nexport interface SaveConfig {\n  /**\n   * Whether to save only the trainable weights of the model, ignoring the\n   * non-trainable ones.\n   */\n  trainableOnly?: boolean;\n\n  /**\n   * Whether the optimizer will be saved (if exists).\n   *\n   * Default: `false`.\n   */\n  includeOptimizer?: boolean;\n}\n\n/**\n * Result of a saving operation.\n */\nexport interface SaveResult {\n  /**\n   * Information about the model artifacts saved.\n   */\n  modelArtifactsInfo: ModelArtifactsInfo;\n\n  /**\n   * HTTP responses from the server that handled the model-saving request (if\n   * any). This is applicable only to server-based saving routes.\n   */\n  responses?: Response[];\n\n  /**\n   * Error messages and related data (if any).\n   */\n  errors?: Array<{}|string>;\n}\n\nexport declare interface ModelArtifactsInfo {\n  /**\n   * Timestamp for when the model is saved.\n   */\n  dateSaved: Date;\n\n  /**\n   * TODO (cais,yassogba) consider removing GraphDef as GraphDefs now\n   * come in a JSON format and none of our IOHandlers support a non json\n   * format. We could conder replacing this with 'Binary' if we want to\n   * allow future handlers to save to non json formats (though they will\n   * probably want more information than 'Binary').\n   * Type of the model topology\n   *\n   * Type of the model topology\n   *\n   * Possible values:\n   *   - JSON: JSON config (human-readable, e.g., Keras JSON).\n   *   - GraphDef: TensorFlow\n   *     [GraphDef](https://www.tensorflow.org/extend/tool_developers/#graphdef)\n   *     protocol buffer (binary).\n   */\n  modelTopologyType: 'JSON'|'GraphDef';\n\n  /**\n   * Size of model topology (Keras JSON or GraphDef), in bytes.\n   */\n  modelTopologyBytes?: number;\n\n  /**\n   * Size of weight specification or manifest, in bytes.\n   */\n  weightSpecsBytes?: number;\n\n  /**\n   * Size of weight value data, in bytes.\n   */\n  weightDataBytes?: number;\n}\n\n/** Model training configuration. */\nexport declare interface TrainingConfig {\n  // TODO(cais): Tighten the typing once keras spec is available to tfjs-core.\n  // See\n  // tslint:disable-next-line:max-line-length\n  // https://github.com/tensorflow/tfjs-layers/blob/master/src/keras_format/training_config.ts\n  /** Optimizer used for the model training. */\n  optimizer_config: {};\n\n  // TODO(cais): Tighten the typing once keras spec is available to tfjs-core.\n  /** Loss function(s) for the model's output(s). */\n  loss: string|string[]|{[key: string]: string};\n\n  // TODO(cais): Tighten the typing once keras spec is available to tfjs-core.\n  /** Metric function(s) for the model's output(s). */\n  metrics?: string[]|{[key: string]: string};\n\n  // TODO(cais): Tighten the typing once keras spec is available to tfjs-core.\n  weighted_metrics?: string[];\n\n  // TODO(cais): Tighten the typing once keras spec is available to tfjs-core.\n  sample_weight_mode?: string;\n\n  loss_weights?: number[]|{[key: string]: number};\n}\n\n/**\n * The serialized artifacts of a model, including topology and weights.\n *\n * The `modelTopology`, `trainingConfig`, `weightSpecs` and `weightData` fields\n * of this interface are optional, in order to support topology- or weights-only\n * saving and loading.\n *\n * Note this interface is used internally in IOHandlers.  For the file format\n * written to disk as `model.json`, see `ModelJSON`.\n */\nexport declare interface ModelArtifacts {\n  /**\n   * Model topology.\n   *\n   * For Keras-style `tf.Model`s, this is a JSON object.\n   * For TensorFlow-style models (e.g., `SavedModel`), this is the JSON\n   * encoding of the `GraphDef` protocol buffer.\n   */\n  modelTopology?: {}|ArrayBuffer;\n\n  /**\n   * Serialized configuration for the model's training.\n   */\n  trainingConfig?: TrainingConfig;\n\n  /**\n   * Weight specifications.\n   *\n   * This corresponds to the weightsData below.\n   */\n  weightSpecs?: WeightsManifestEntry[];\n\n  /**\n   * Binary buffer for all weight values concatenated in the order specified\n   * by `weightSpecs`.\n   */\n  weightData?: ArrayBuffer;\n\n  /**\n   * Hard-coded format name for models saved from TensorFlow.js or converted\n   * by TensorFlow.js Converter.\n   */\n  format?: string;\n\n  /**\n   * What library is responsible for originally generating this artifact.\n   *\n   * Used for debugging purposes. E.g., 'TensorFlow.js v1.0.0'.\n   */\n  generatedBy?: string;\n\n  /**\n   * What library or tool is responsible for converting the original model\n   * to this format, applicable only if the model is output by a converter.\n   *\n   * Used for debugging purposes.  E.g., 'TensorFlow.js Converter v1.0.0'.\n   *\n   * A value of `null` means the model artifacts are generated without any\n   * conversion process (e.g., saved directly from a TensorFlow.js\n   * `tf.LayersModel` instance.)\n   */\n  convertedBy?: string|null;\n\n  /**\n   * Inputs and outputs signature for saved model.\n   */\n  signature?: {};\n\n  /**\n   * User-defined metadata about the model.\n   */\n  userDefinedMetadata?: {[key: string]: {}};\n\n  /**\n   * Initializer for the model.\n   */\n  modelInitializer?: {};\n}\n\n/**\n * The on-disk format of the `model.json` file.\n *\n * TF.js 1.0 always populates the optional fields when writing model.json.\n * Prior versions did not provide those fields.\n */\nexport declare interface ModelJSON {\n  /**\n   * Model topology.\n   *\n   * For Keras-style `tf.Model`s, this is a JSON object.\n   * For TensorFlow-style models (e.g., `SavedModel`), this is the JSON\n   * encoding of the `GraphDef` protocol buffer.\n   */\n  modelTopology: {};\n\n  /** Model training configuration. */\n  trainingConfig?: TrainingConfig;\n\n  /**\n   * Weights manifest.\n   *\n   * The weights manifest consists of an ordered list of weight-manifest\n   * groups. Each weight-manifest group consists of a number of weight values\n   * stored in a number of paths. See the documentation of\n   * `WeightsManifestConfig` for more details.\n   */\n  weightsManifest: WeightsManifestConfig;\n\n  /**\n   * Hard-coded format name for models saved from TensorFlow.js or converted\n   * by TensorFlow.js Converter.\n   */\n  format?: string;\n\n  /**\n   * What library is responsible for originally generating this artifact.\n   *\n   * Used for debugging purposes. E.g., 'TensorFlow.js v1.0.0'.\n   */\n  generatedBy?: string;\n\n  /**\n   * What library or tool is responsible for converting the original model\n   * to this format, applicable only if the model is output by a converter.\n   *\n   * Used for debugging purposes.  E.g., 'TensorFlow.js Converter v1.0.0'.\n   *\n   * A value of `null` means the model artifacts are generated without any\n   * conversion process (e.g., saved directly from a TensorFlow.js\n   * `tf.LayersModel` instance.)\n   */\n  convertedBy?: string|null;\n\n  /**\n   * Inputs and outputs signature for saved model.\n   */\n  signature?: {};\n\n  /**\n   * User-defined metadata about the model.\n   */\n  userDefinedMetadata?: {[key: string]: {}};\n\n  /**\n   * Initializer for the model.\n   */\n  modelInitializer?: {};\n}\n\n/**\n * Type definition for handlers of loading operations.\n */\nexport type LoadHandler = () => Promise<ModelArtifacts>;\n\n/**\n * Type definition for handlers of saving operations.\n */\nexport type SaveHandler = (modelArtifact: ModelArtifacts) =>\n    Promise<SaveResult>;\n\n/**\n * Interface for a model import/export handler.\n *\n * The `save` and `load` handlers are both optional, in order to allow handlers\n * that support only saving or loading.\n */\n// tslint:disable-next-line:interface-name\nexport interface IOHandler {\n  save?: SaveHandler;\n  load?: LoadHandler;\n}\n\n/**\n * An interface for the manager of a model store.\n *\n * A model store is defined as a storage medium on which multiple models can\n * be stored. Each stored model has a unique `path` as its identifier.\n * A `ModelStoreManager` for the store allows actions including\n *\n * - Listing the models stored in the store.\n * - Deleting a model from the store.\n */\nexport interface ModelStoreManager {\n  /**\n   * List all models in the model store.\n   *\n   * @returns A dictionary mapping paths of existing models to their\n   *   model artifacts info. Model artifacts info include type of the model's\n   *   topology, byte sizes of the topology, weights, etc.\n   */\n  listModels(): Promise<{[path: string]: ModelArtifactsInfo}>;\n\n  /**\n   * Remove a model specified by `path`.\n   *\n   * @param path\n   * @returns ModelArtifactsInfo of the deleted model (if and only if deletion\n   *   is successful).\n   * @throws Error if deletion fails, e.g., if no model exists at `path`.\n   */\n  removeModel(path: string): Promise<ModelArtifactsInfo>;\n}\n\n/**\n * Callback for the progress of a long-running action such as an HTTP\n * request for a large binary object.\n *\n * `fraction` should be a number in the [0, 1] interval, indicating how\n * much of the action has completed.\n */\nexport type OnProgressCallback = (fraction: number) => void;\n\n/** @innamespace io */\nexport interface LoadOptions {\n  /**\n   * RequestInit (options) for HTTP requests.\n   *\n   * For detailed information on the supported fields, see\n   * [https://developer.mozilla.org/en-US/docs/Web/API/Request/Request](\n   *     https://developer.mozilla.org/en-US/docs/Web/API/Request/Request)\n   */\n  requestInit?: RequestInit;\n\n  /**\n   * Progress callback.\n   */\n  onProgress?: OnProgressCallback;\n\n  /**\n   * A function used to override the `window.fetch` function.\n   */\n  fetchFunc?: Function;\n\n  /**\n   * Strict loading model: whether extraneous weights or missing\n   * weights should trigger an `Error`.\n   *\n   * If `true`, require that the provided weights exactly match those\n   * required by the layers. `false` means that both extra weights\n   * and missing weights will be silently ignored.\n   *\n   * Default: `true`.\n   */\n  strict?: boolean;\n\n  /**\n   * Path prefix for weight files, by default this is calculated from the\n   * path of the model JSON file.\n   *\n   * For instance, if the path to the model JSON file is\n   * `http://localhost/foo/model.json`, then the default path prefix will be\n   * `http://localhost/foo/`. If a weight file has the path value\n   * `group1-shard1of2` in the weight manifest, then the weight file will be\n   * loaded from `http://localhost/foo/group1-shard1of2` by default. However,\n   * if you provide a `weightPathPrefix` value of\n   * `http://localhost/foo/alt-weights`, then the weight file will be loaded\n   * from the path `http://localhost/foo/alt-weights/group1-shard1of2` instead.\n   */\n  weightPathPrefix?: string;\n\n  /**\n   * Whether the module or model is to be loaded from TF Hub.\n   *\n   * Setting this to `true` allows passing a TF-Hub module URL, omitting the\n   * standard model file name and the query parameters.\n   *\n   * Default: `false`.\n   */\n  fromTFHub?: boolean;\n\n  /**\n   * An async function to convert weight file name to URL. The weight file\n   * names are stored in model.json's weightsManifest.paths field. By default we\n   * consider weight files are colocated with the model.json file. For example:\n   *     model.json URL: https://www.google.com/models/1/model.json\n   *     group1-shard1of1.bin url:\n   *        https://www.google.com/models/1/group1-shard1of1.bin\n   *\n   * With this func you can convert the weight file name to any URL.\n   */\n  weightUrlConverter?: (weightFileName: string) => Promise<string>;\n}\n\n/**\n * Additional options for Platform.fetch\n */\nexport interface RequestDetails {\n  /**\n   * Is this request for a binary file (as opposed to a json file)\n   */\n  isBinary?: boolean;\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {IOHandler, LoadOptions} from './types';\n\nexport type IORouter = (url: string|string[], loadOptions?: LoadOptions) =>\n    IOHandler;\n\nexport class IORouterRegistry {\n  // Singleton instance.\n  private static instance: IORouterRegistry;\n\n  private saveRouters: IORouter[];\n  private loadRouters: IORouter[];\n\n  private constructor() {\n    this.saveRouters = [];\n    this.loadRouters = [];\n  }\n\n  private static getInstance(): IORouterRegistry {\n    if (IORouterRegistry.instance == null) {\n      IORouterRegistry.instance = new IORouterRegistry();\n    }\n    return IORouterRegistry.instance;\n  }\n\n  /**\n   * Register a save-handler router.\n   *\n   * @param saveRouter A function that maps a URL-like string onto an instance\n   * of `IOHandler` with the `save` method defined or `null`.\n   */\n  static registerSaveRouter(saveRouter: IORouter) {\n    IORouterRegistry.getInstance().saveRouters.push(saveRouter);\n  }\n\n  /**\n   * Register a load-handler router.\n   *\n   * @param loadRouter A function that maps a URL-like string onto an instance\n   * of `IOHandler` with the `load` method defined or `null`.\n   */\n  static registerLoadRouter(loadRouter: IORouter) {\n    IORouterRegistry.getInstance().loadRouters.push(loadRouter);\n  }\n\n  /**\n   * Look up IOHandler for saving, given a URL-like string.\n   *\n   * @param url\n   * @returns If only one match is found, an instance of IOHandler with the\n   * `save` method defined. If no match is found, `null`.\n   * @throws Error, if more than one match is found.\n   */\n  static getSaveHandlers(url: string|string[]): IOHandler[] {\n    return IORouterRegistry.getHandlers(url, 'save');\n  }\n\n  /**\n   * Look up IOHandler for loading, given a URL-like string.\n   *\n   * @param url\n   * @param loadOptions Optional, custom load options.\n   * @returns All valid handlers for `url`, given the currently registered\n   *   handler routers.\n   */\n  static getLoadHandlers(url: string|string[], loadOptions?: LoadOptions):\n      IOHandler[] {\n    return IORouterRegistry.getHandlers(url, 'load', loadOptions);\n  }\n\n  private static getHandlers(\n      url: string|string[], handlerType: 'save'|'load',\n      loadOptions?: LoadOptions): IOHandler[] {\n    const validHandlers: IOHandler[] = [];\n    const routers = handlerType === 'load' ?\n        IORouterRegistry.getInstance().loadRouters :\n        IORouterRegistry.getInstance().saveRouters;\n    routers.forEach(router => {\n      const handler = router(url, loadOptions);\n      if (handler !== null) {\n        validHandlers.push(handler);\n      }\n    });\n    return validHandlers;\n  }\n}\n\nexport const registerSaveRouter = (loudRouter: IORouter) =>\n    IORouterRegistry.registerSaveRouter(loudRouter);\nexport const registerLoadRouter = (loudRouter: IORouter) =>\n    IORouterRegistry.registerLoadRouter(loudRouter);\nexport const getSaveHandlers = (url: string|string[]) =>\n    IORouterRegistry.getSaveHandlers(url);\nexport const getLoadHandlers =\n    (url: string|string[], loadOptions?: LoadOptions) =>\n        IORouterRegistry.getLoadHandlers(url, loadOptions);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * IOHandler implementations based on HTTP requests in the web browser.\n *\n * Uses [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n */\n\nimport {env} from '../environment';\n\nimport {assert} from '../util';\nimport {concatenateArrayBuffers, getModelArtifactsForJSON, getModelArtifactsInfoForJSON, getModelJSONForModelArtifacts} from './io_utils';\nimport {IORouter, IORouterRegistry} from './router_registry';\nimport {IOHandler, LoadOptions, ModelArtifacts, ModelJSON, OnProgressCallback, SaveResult, WeightsManifestConfig, WeightsManifestEntry} from './types';\nimport {loadWeightsAsArrayBuffer} from './weights_loader';\n\nconst OCTET_STREAM_MIME_TYPE = 'application/octet-stream';\nconst JSON_TYPE = 'application/json';\nexport class HTTPRequest implements IOHandler {\n  protected readonly path: string;\n  protected readonly requestInit: RequestInit;\n\n  private readonly fetch: Function;\n  private readonly weightUrlConverter: (weightName: string) => Promise<string>;\n\n  readonly DEFAULT_METHOD = 'POST';\n\n  static readonly URL_SCHEME_REGEX = /^https?:\\/\\//;\n\n  private readonly weightPathPrefix: string;\n  private readonly onProgress: OnProgressCallback;\n\n  constructor(path: string, loadOptions?: LoadOptions) {\n    if (loadOptions == null) {\n      loadOptions = {};\n    }\n    this.weightPathPrefix = loadOptions.weightPathPrefix;\n    this.onProgress = loadOptions.onProgress;\n    this.weightUrlConverter = loadOptions.weightUrlConverter;\n\n    if (loadOptions.fetchFunc != null) {\n      assert(\n          typeof loadOptions.fetchFunc === 'function',\n          () => 'Must pass a function that matches the signature of ' +\n              '`fetch` (see ' +\n              'https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)');\n      this.fetch = loadOptions.fetchFunc;\n    } else {\n      this.fetch = env().platform.fetch;\n    }\n\n    assert(\n        path != null && path.length > 0,\n        () => 'URL path for http must not be null, undefined or ' +\n            'empty.');\n\n    if (Array.isArray(path)) {\n      assert(\n          path.length === 2,\n          () => 'URL paths for http must have a length of 2, ' +\n              `(actual length is ${path.length}).`);\n    }\n    this.path = path;\n\n    if (loadOptions.requestInit != null &&\n        loadOptions.requestInit.body != null) {\n      throw new Error(\n          'requestInit is expected to have no pre-existing body, but has one.');\n    }\n    this.requestInit = loadOptions.requestInit || {};\n  }\n\n  async save(modelArtifacts: ModelArtifacts): Promise<SaveResult> {\n    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n      throw new Error(\n          'BrowserHTTPRequest.save() does not support saving model topology ' +\n          'in binary formats yet.');\n    }\n\n    const init = Object.assign({method: this.DEFAULT_METHOD}, this.requestInit);\n    init.body = new FormData();\n\n    const weightsManifest: WeightsManifestConfig = [{\n      paths: ['./model.weights.bin'],\n      weights: modelArtifacts.weightSpecs,\n    }];\n    const modelTopologyAndWeightManifest: ModelJSON =\n        getModelJSONForModelArtifacts(modelArtifacts, weightsManifest);\n\n    init.body.append(\n        'model.json',\n        new Blob(\n            [JSON.stringify(modelTopologyAndWeightManifest)],\n            {type: JSON_TYPE}),\n        'model.json');\n\n    if (modelArtifacts.weightData != null) {\n      init.body.append(\n          'model.weights.bin',\n          new Blob([modelArtifacts.weightData], {type: OCTET_STREAM_MIME_TYPE}),\n          'model.weights.bin');\n    }\n\n    const response = await this.fetch(this.path, init);\n\n    if (response.ok) {\n      return {\n        modelArtifactsInfo: getModelArtifactsInfoForJSON(modelArtifacts),\n        responses: [response],\n      };\n    } else {\n      throw new Error(\n          `BrowserHTTPRequest.save() failed due to HTTP response status ` +\n          `${response.status}.`);\n    }\n  }\n\n  /**\n   * Load model artifacts via HTTP request(s).\n   *\n   * See the documentation to `tf.io.http` for details on the saved\n   * artifacts.\n   *\n   * @returns The loaded model artifacts (if loading succeeds).\n   */\n  async load(): Promise<ModelArtifacts> {\n    const modelConfigRequest = await this.fetch(this.path, this.requestInit);\n\n    if (!modelConfigRequest.ok) {\n      throw new Error(\n          `Request to ${this.path} failed with status code ` +\n          `${modelConfigRequest.status}. Please verify this URL points to ` +\n          `the model JSON of the model to load.`);\n    }\n    let modelJSON: ModelJSON;\n    try {\n      modelJSON = await modelConfigRequest.json();\n    } catch (e) {\n      let message = `Failed to parse model JSON of response from ${this.path}.`;\n      // TODO(nsthorat): Remove this after some time when we're comfortable that\n      // .pb files are mostly gone.\n      if (this.path.endsWith('.pb')) {\n        message += ' Your path contains a .pb file extension. ' +\n            'Support for .pb models have been removed in TensorFlow.js 1.0 ' +\n            'in favor of .json models. You can re-convert your Python ' +\n            'TensorFlow model using the TensorFlow.js 1.0 conversion scripts ' +\n            'or you can convert your.pb models with the \\'pb2json\\'' +\n            'NPM script in the tensorflow/tfjs-converter repository.';\n      } else {\n        message += ' Please make sure the server is serving valid ' +\n            'JSON for this request.';\n      }\n      throw new Error(message);\n    }\n\n    // We do not allow both modelTopology and weightsManifest to be missing.\n    const modelTopology = modelJSON.modelTopology;\n    const weightsManifest = modelJSON.weightsManifest;\n    if (modelTopology == null && weightsManifest == null) {\n      throw new Error(\n          `The JSON from HTTP path ${this.path} contains neither model ` +\n          `topology or manifest for weights.`);\n    }\n\n    return getModelArtifactsForJSON(\n        modelJSON, (weightsManifest) => this.loadWeights(weightsManifest));\n  }\n\n  private async loadWeights(weightsManifest: WeightsManifestConfig):\n      Promise<[WeightsManifestEntry[], ArrayBuffer]> {\n    const weightPath = Array.isArray(this.path) ? this.path[1] : this.path;\n    const [prefix, suffix] = parseUrl(weightPath);\n    const pathPrefix = this.weightPathPrefix || prefix;\n\n    const weightSpecs = [];\n    for (const entry of weightsManifest) {\n      weightSpecs.push(...entry.weights);\n    }\n\n    const fetchURLs: string[] = [];\n    const urlPromises: Array<Promise<string>> = [];\n    for (const weightsGroup of weightsManifest) {\n      for (const path of weightsGroup.paths) {\n        if (this.weightUrlConverter != null) {\n          urlPromises.push(this.weightUrlConverter(path));\n        } else {\n          fetchURLs.push(pathPrefix + path + suffix);\n        }\n      }\n    }\n\n    if (this.weightUrlConverter) {\n      fetchURLs.push(...await Promise.all(urlPromises));\n    }\n\n    const buffers = await loadWeightsAsArrayBuffer(fetchURLs, {\n      requestInit: this.requestInit,\n      fetchFunc: this.fetch,\n      onProgress: this.onProgress\n    });\n    return [weightSpecs, concatenateArrayBuffers(buffers)];\n  }\n}\n\n/**\n * Extract the prefix and suffix of the url, where the prefix is the path before\n * the last file, and suffix is the search params after the last file.\n * ```\n * const url = 'http://tfhub.dev/model/1/tensorflowjs_model.pb?tfjs-format=file'\n * [prefix, suffix] = parseUrl(url)\n * // prefix = 'http://tfhub.dev/model/1/'\n * // suffix = '?tfjs-format=file'\n * ```\n * @param url the model url to be parsed.\n */\nexport function parseUrl(url: string): [string, string] {\n  const lastSlash = url.lastIndexOf('/');\n  const lastSearchParam = url.lastIndexOf('?');\n  const prefix = url.substring(0, lastSlash);\n  const suffix =\n      lastSearchParam > lastSlash ? url.substring(lastSearchParam) : '';\n  return [prefix + '/', suffix];\n}\n\nexport function isHTTPScheme(url: string): boolean {\n  return url.match(HTTPRequest.URL_SCHEME_REGEX) != null;\n}\n\nexport const httpRouter: IORouter =\n    (url: string, loadOptions?: LoadOptions) => {\n      if (typeof fetch === 'undefined' &&\n          (loadOptions == null || loadOptions.fetchFunc == null)) {\n        // `http` uses `fetch` or `node-fetch`, if one wants to use it in\n        // an environment that is not the browser or node they have to setup a\n        // global fetch polyfill.\n        return null;\n      } else {\n        let isHTTP = true;\n        if (Array.isArray(url)) {\n          isHTTP = url.every(urlItem => isHTTPScheme(urlItem));\n        } else {\n          isHTTP = isHTTPScheme(url);\n        }\n        if (isHTTP) {\n          return http(url, loadOptions);\n        }\n      }\n      return null;\n    };\nIORouterRegistry.registerSaveRouter(httpRouter);\nIORouterRegistry.registerLoadRouter(httpRouter);\n\n/**\n * Creates an IOHandler subtype that sends model artifacts to HTTP server.\n *\n * An HTTP request of the `multipart/form-data` mime type will be sent to the\n * `path` URL. The form data includes artifacts that represent the topology\n * and/or weights of the model. In the case of Keras-style `tf.Model`, two\n * blobs (files) exist in form-data:\n *   - A JSON file consisting of `modelTopology` and `weightsManifest`.\n *   - A binary weights file consisting of the concatenated weight values.\n * These files are in the same format as the one generated by\n * [tfjs_converter](https://js.tensorflow.org/tutorials/import-keras.html).\n *\n * The following code snippet exemplifies the client-side code that uses this\n * function:\n *\n * ```js\n * const model = tf.sequential();\n * model.add(\n *     tf.layers.dense({units: 1, inputShape: [100], activation: 'sigmoid'}));\n *\n * const saveResult = await model.save(tf.io.http(\n *     'http://model-server:5000/upload', {requestInit: {method: 'PUT'}}));\n * console.log(saveResult);\n * ```\n *\n * If the default `POST` method is to be used, without any custom parameters\n * such as headers, you can simply pass an HTTP or HTTPS URL to `model.save`:\n *\n * ```js\n * const saveResult = await model.save('http://model-server:5000/upload');\n * ```\n *\n * The following GitHub Gist\n * https://gist.github.com/dsmilkov/1b6046fd6132d7408d5257b0976f7864\n * implements a server based on [flask](https://github.com/pallets/flask) that\n * can receive the request. Upon receiving the model artifacts via the requst,\n * this particular server reconsistutes instances of [Keras\n * Models](https://keras.io/models/model/) in memory.\n *\n *\n * @param path A URL path to the model.\n *   Can be an absolute HTTP path (e.g.,\n *   'http://localhost:8000/model-upload)') or a relative path (e.g.,\n *   './model-upload').\n * @param requestInit Request configurations to be used when sending\n *    HTTP request to server using `fetch`. It can contain fields such as\n *    `method`, `credentials`, `headers`, `mode`, etc. See\n *    https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\n *    for more information. `requestInit` must not have a body, because the\n * body will be set by TensorFlow.js. File blobs representing the model\n * topology (filename: 'model.json') and the weights of the model (filename:\n * 'model.weights.bin') will be appended to the body. If `requestInit` has a\n * `body`, an Error will be thrown.\n * @param loadOptions Optional configuration for the loading. It includes the\n *   following fields:\n *   - weightPathPrefix Optional, this specifies the path prefix for weight\n *     files, by default this is calculated from the path param.\n *   - fetchFunc Optional, custom `fetch` function. E.g., in Node.js,\n *     the `fetch` from node-fetch can be used here.\n *   - onProgress Optional, progress callback function, fired periodically\n *     before the load is completed.\n * @returns An instance of `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nexport function http(path: string, loadOptions?: LoadOptions): IOHandler {\n  return new HTTPRequest(path, loadOptions);\n}\n\n/**\n * Deprecated. Use `tf.io.http`.\n * @param path\n * @param loadOptions\n */\nexport function browserHTTPRequest(\n    path: string, loadOptions?: LoadOptions): IOHandler {\n  return http(path, loadOptions);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from '../environment';\n\nimport {NamedTensorMap} from '../tensor_types';\nimport * as util from '../util';\nimport {decodeWeights} from './io_utils';\nimport {monitorPromisesProgress} from './progress';\nimport {DTYPE_VALUE_SIZE_MAP, LoadOptions, WeightsManifestConfig, WeightsManifestEntry} from './types';\n\n/**\n * Reads binary weights data from a number of URLs.\n *\n * @param fetchURLs URLs to send the HTTP requests at, using `fetch` calls.\n * @param requestOptions RequestInit (options) for the HTTP requests.\n * @param fetchFunc Optional overriding value for the `window.fetch` function.\n * @param onProgress Optional, progress callback function, fired periodically\n *   before the load is completed.\n * @returns A `Promise` of an Array of `ArrayBuffer`. The Array has the same\n *   length as `fetchURLs`.\n */\nexport async function loadWeightsAsArrayBuffer(\n    fetchURLs: string[], loadOptions?: LoadOptions): Promise<ArrayBuffer[]> {\n  if (loadOptions == null) {\n    loadOptions = {};\n  }\n\n  const fetchFunc = loadOptions.fetchFunc == null ? env().platform.fetch :\n                                                    loadOptions.fetchFunc;\n\n  // Create the requests for all of the weights in parallel.\n  const requests = fetchURLs.map(\n      fetchURL =>\n          fetchFunc(fetchURL, loadOptions.requestInit, {isBinary: true}));\n\n  const fetchStartFraction = 0;\n  const fetchEndFraction = 0.5;\n\n  const responses = loadOptions.onProgress == null ?\n      await Promise.all(requests) :\n      await monitorPromisesProgress(\n          requests, loadOptions.onProgress, fetchStartFraction,\n          fetchEndFraction);\n\n  const bufferPromises = responses.map(response => response.arrayBuffer());\n\n  const bufferStartFraction = 0.5;\n  const bufferEndFraction = 1;\n\n  const buffers = loadOptions.onProgress == null ?\n      await Promise.all(bufferPromises) :\n      await monitorPromisesProgress(\n          bufferPromises, loadOptions.onProgress, bufferStartFraction,\n          bufferEndFraction);\n  return buffers;\n}\n\n/**\n * Reads a weights manifest JSON configuration, fetches the weights and\n * returns them as `Tensor`s.\n *\n * @param manifest The weights manifest JSON.\n * @param filePathPrefix The path prefix for filenames given in the manifest.\n *     Defaults to the empty string.\n * @param weightNames The names of the weights to be fetched.\n */\nexport async function loadWeights(\n    manifest: WeightsManifestConfig, filePathPrefix = '',\n    weightNames?: string[],\n    requestInit?: RequestInit): Promise<NamedTensorMap> {\n  // TODO(nsthorat): Groups are currently fetched atomically. If you need a\n  // single weight from a group, the whole group will be fetched. At a future\n  // date, we should support fetching only the individual shards within a\n  // group that are needed to reconstruct the requested weight.\n  // TODO(cais): Use `decodeWeights` for implementation.\n\n  const fetchWeights = (fetchUrls: string[]) =>\n      loadWeightsAsArrayBuffer(fetchUrls, {requestInit});\n  const loadWeights = weightsLoaderFactory(fetchWeights);\n\n  return loadWeights(manifest, filePathPrefix, weightNames);\n}\n\n/**\n * Creates a function, which reads a weights manifest JSON configuration,\n * fetches the weight files using the specified function and returns them as\n * `Tensor`s.\n *\n * ```js\n * // example for creating a nodejs weight loader, which reads the weight files\n * // from disk using fs.readFileSync\n *\n * import * as fs from 'fs'\n *\n * const fetchWeightsFromDisk = (filePaths: string[]) =>\n *   filePaths.map(filePath => fs.readFileSync(filePath).buffer)\n *\n * const loadWeights = tf.io.weightsLoaderFactory(fetchWeightsFromDisk)\n *\n * const manifest = JSON.parse(\n *   fs.readFileSync('./my_model-weights_manifest').toString()\n * )\n * const weightMap = await loadWeights(manifest, './')\n * ```\n * @param fetchWeightsFunction The function used for fetching the weight files.\n * @returns Weight loading function.\n */\nexport function weightsLoaderFactory(\n    fetchWeightsFunction: (fetchUrls: string[]) => Promise<ArrayBuffer[]>):\n    (manifest: WeightsManifestConfig, filePathPrefix?: string,\n     weightNames?: string[]) => Promise<NamedTensorMap> {\n  return async(\n             manifest: WeightsManifestConfig, filePathPrefix = '',\n             weightNames?: string[]): Promise<NamedTensorMap> => {\n    // Collect all the groups, weights, and their relative offsets to be\n    // fetched.\n    const groupIndicesToFetchMap = manifest.map(() => false);\n    const groupWeightsToFetch: {\n      [group: number]: Array<{\n        manifestEntry: WeightsManifestEntry; groupOffset: number;\n        sizeBytes: number;\n      }>\n    } = {};\n    const weightsFound =\n        weightNames != null ? weightNames.map(() => false) : [];\n    const allManifestWeightNames: string[] = [];\n    manifest.forEach((manifestGroupConfig, groupIndex) => {\n      let groupOffset = 0;\n      manifestGroupConfig.weights.forEach(weightsEntry => {\n        const rawDtype = ('quantization' in weightsEntry) ?\n            weightsEntry.quantization.dtype :\n            weightsEntry.dtype;\n\n        const weightsBytes = DTYPE_VALUE_SIZE_MAP[rawDtype] *\n            util.sizeFromShape(weightsEntry.shape);\n\n        const enqueueWeightsForFetchingFn = () => {\n          groupIndicesToFetchMap[groupIndex] = true;\n          if (groupWeightsToFetch[groupIndex] == null) {\n            groupWeightsToFetch[groupIndex] = [];\n          }\n\n          groupWeightsToFetch[groupIndex].push({\n            manifestEntry: weightsEntry,\n            groupOffset,\n            sizeBytes: weightsBytes\n          });\n        };\n\n        if (weightNames != null) {\n          weightNames.forEach((weightName, weightIndex) => {\n            if (weightName === weightsEntry.name) {\n              enqueueWeightsForFetchingFn();\n              weightsFound[weightIndex] = true;\n            }\n          });\n        } else {\n          enqueueWeightsForFetchingFn();\n        }\n\n        allManifestWeightNames.push(weightsEntry.name);\n        groupOffset += weightsBytes;\n      });\n    });\n\n    if (!weightsFound.every(found => found)) {\n      const weightsNotFound = weightNames.filter((_, i) => !weightsFound[i]);\n      throw new Error(\n          `Could not find weights in manifest with names: ` +\n          `${weightsNotFound.join(', ')}. \\n` +\n          `Manifest JSON has weights with names: ` +\n          `${allManifestWeightNames.join(', ')}.`);\n    }\n\n    // Convert the one-hot boolean groupId => shouldFetch map to a list of group\n    // IDs.\n    const groupIndicesToFetch =\n        groupIndicesToFetchMap.reduce((accumulator, shouldFetch, i) => {\n          if (shouldFetch) {\n            accumulator.push(i);\n          }\n          return accumulator;\n        }, []);\n\n    const fetchUrls: string[] = [];\n    groupIndicesToFetch.forEach(i => {\n      manifest[i].paths.forEach(filepath => {\n        const fetchUrl = filePathPrefix +\n            (!filePathPrefix.endsWith('/') ? '/' : '') + filepath;\n        fetchUrls.push(fetchUrl);\n      });\n    });\n    const buffers = await fetchWeightsFunction(fetchUrls);\n\n    const weightsTensorMap: NamedTensorMap = {};\n    let bufferIndexOffset = 0;\n    groupIndicesToFetch.forEach(i => {\n      const numBuffers = manifest[i].paths.length;\n\n      let groupBytes = 0;\n      for (let i = 0; i < numBuffers; i++) {\n        groupBytes += buffers[bufferIndexOffset + i].byteLength;\n      }\n\n      // Create a buffer for the whole group.\n      const groupBuffer = new ArrayBuffer(groupBytes);\n      const groupByteBuffer = new Uint8Array(groupBuffer);\n      let groupBufferOffset = 0;\n      for (let i = 0; i < numBuffers; i++) {\n        const buffer = new Uint8Array(buffers[bufferIndexOffset + i]);\n        groupByteBuffer.set(buffer, groupBufferOffset);\n        groupBufferOffset += buffer.byteLength;\n      }\n\n      const weightsEntries = groupWeightsToFetch[i];\n      weightsEntries.forEach(weightsEntry => {\n        const byteBuffer = groupBuffer.slice(\n            weightsEntry.groupOffset,\n            weightsEntry.groupOffset + weightsEntry.sizeBytes);\n        const nameToTensorMap =\n            decodeWeights(byteBuffer, [weightsEntry.manifestEntry]);\n        for (const name in nameToTensorMap) {\n          weightsTensorMap[name] = nameToTensorMap[name];\n        }\n      });\n\n      bufferIndexOffset += numBuffers;\n    });\n\n    return weightsTensorMap;\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {assert} from '../util';\n\nimport {OnProgressCallback} from './types';\n\n/**\n * Monitor Promise.all progress, fire onProgress callback function.\n *\n * @param promises Promise list going to be monitored\n * @param onProgress Callback function. Fired when a promise resolved.\n * @param startFraction Optional fraction start. Default to 0.\n * @param endFraction Optional fraction end. Default to 1.\n */\nexport function monitorPromisesProgress(\n    promises: Array<Promise<{}|void>>, onProgress: OnProgressCallback,\n    startFraction?: number, endFraction?: number) {\n  checkPromises(promises);\n  startFraction = startFraction == null ? 0 : startFraction;\n  endFraction = endFraction == null ? 1 : endFraction;\n  checkFraction(startFraction, endFraction);\n  let resolvedPromise = 0;\n\n  const registerMonitor = (promise: Promise<{}>) => {\n    promise.then(value => {\n      const fraction = startFraction +\n          ++resolvedPromise / promises.length * (endFraction - startFraction);\n      // pass fraction as parameter to callback function.\n      onProgress(fraction);\n      return value;\n    });\n    return promise;\n  };\n\n  function checkPromises(promises: Array<Promise<{}|void>>): void {\n    assert(\n        promises != null && Array.isArray(promises) && promises.length > 0,\n        () => 'promises must be a none empty array');\n  }\n\n  function checkFraction(startFraction: number, endFraction: number): void {\n    assert(\n        startFraction >= 0 && startFraction <= 1,\n        () => `Progress fraction must be in range [0, 1], but ` +\n            `got startFraction ${startFraction}`);\n    assert(\n        endFraction >= 0 && endFraction <= 1,\n        () => `Progress fraction must be in range [0, 1], but ` +\n            `got endFraction ${endFraction}`);\n    assert(\n        endFraction >= startFraction,\n        () => `startFraction must be no more than endFraction, but ` +\n            `got startFraction ${startFraction} and endFraction ` +\n            `${endFraction}`);\n  }\n\n  return Promise.all(promises.map(registerMonitor));\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * IOHandlers that pass through the in-memory ModelArtifacts format.\n */\n\nimport {IOHandler, ModelArtifacts, SaveResult, TrainingConfig, WeightsManifestEntry} from './types';\n\nclass PassthroughLoader implements IOHandler {\n  constructor(private readonly modelArtifacts?: ModelArtifacts) {}\n\n  async load(): Promise<ModelArtifacts> {\n    return this.modelArtifacts;\n  }\n}\n\nclass PassthroughSaver implements IOHandler {\n  constructor(\n      private readonly saveHandler:\n          (artifacts: ModelArtifacts) => Promise<SaveResult>) {}\n\n  async save(modelArtifacts: ModelArtifacts) {\n    return this.saveHandler(modelArtifacts);\n  }\n}\n\n/**\n * Creates an IOHandler that loads model artifacts from memory.\n *\n * When used in conjunction with `tf.loadLayersModel`, an instance of\n * `tf.LayersModel` (Keras-style) can be constructed from the loaded artifacts.\n *\n * ```js\n * const model = await tf.loadLayersModel(tf.io.fromMemory(\n *     modelTopology, weightSpecs, weightData));\n * ```\n *\n * @param modelArtifacts a object containing model topology (i.e., parsed from\n *   the JSON format).\n * @param weightSpecs An array of `WeightsManifestEntry` objects describing the\n *   names, shapes, types, and quantization of the weight data.\n * @param weightData A single `ArrayBuffer` containing the weight data,\n *   concatenated in the order described by the weightSpecs.\n * @param trainingConfig Model training configuration. Optional.\n *\n * @returns A passthrough `IOHandler` that simply loads the provided data.\n */\nexport function fromMemory(\n    modelArtifacts: {}|ModelArtifacts, weightSpecs?: WeightsManifestEntry[],\n    weightData?: ArrayBuffer, trainingConfig?: TrainingConfig): IOHandler {\n  if (arguments.length === 1) {\n    const isModelArtifacts =\n        (modelArtifacts as ModelArtifacts).modelTopology != null ||\n        (modelArtifacts as ModelArtifacts).weightSpecs != null;\n    if (isModelArtifacts) {\n      return new PassthroughLoader(modelArtifacts as ModelArtifacts);\n    } else {\n      // Legacy support: with only modelTopology.\n      // TODO(cais): Remove this deprecated API.\n      console.warn(\n          'Please call tf.io.fromMemory() with only one argument. ' +\n          'The argument should be of type ModelArtifacts. ' +\n          'The multi-argument signature of tf.io.fromMemory() has been ' +\n          'deprecated and will be removed in a future release.');\n      return new PassthroughLoader({modelTopology: modelArtifacts as {}});\n    }\n  } else {\n    // Legacy support.\n    // TODO(cais): Remove this deprecated API.\n    console.warn(\n        'Please call tf.io.fromMemory() with only one argument. ' +\n        'The argument should be of type ModelArtifacts. ' +\n        'The multi-argument signature of tf.io.fromMemory() has been ' +\n        'deprecated and will be removed in a future release.');\n    return new PassthroughLoader({\n      modelTopology: modelArtifacts as {},\n      weightSpecs,\n      weightData,\n      trainingConfig\n    });\n  }\n}\n\n/**\n * Creates an IOHandler that passes saved model artifacts to a callback.\n *\n * ```js\n * function handleSave(artifacts) {\n *   // ... do something with the artifacts ...\n *   return {modelArtifactsInfo: {...}, ...};\n * }\n *\n * const saveResult = model.save(tf.io.withSaveHandler(handleSave));\n * ```\n *\n * @param saveHandler A function that accepts a `ModelArtifacts` and returns a\n *     `SaveResult`.\n */\nexport function withSaveHandler(\n    saveHandler: (artifacts: ModelArtifacts) =>\n        Promise<SaveResult>): IOHandler {\n  return new PassthroughSaver(saveHandler);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Classes and functions for model management across multiple storage mediums.\n *\n * Supported client actions:\n * - Listing models on all registered storage mediums.\n * - Remove model by URL from any registered storage mediums, by using URL\n *   string.\n * - Moving or copying model from one path to another in the same medium or from\n *   one medium to another, by using URL strings.\n */\n\nimport {assert} from '../util';\n\nimport {IORouterRegistry} from './router_registry';\nimport {ModelArtifactsInfo, ModelStoreManager} from './types';\n\nconst URL_SCHEME_SUFFIX = '://';\n\nexport class ModelStoreManagerRegistry {\n  // Singleton instance.\n  private static instance: ModelStoreManagerRegistry;\n\n  private managers: {[scheme: string]: ModelStoreManager};\n\n  private constructor() {\n    this.managers = {};\n  }\n\n  private static getInstance(): ModelStoreManagerRegistry {\n    if (ModelStoreManagerRegistry.instance == null) {\n      ModelStoreManagerRegistry.instance = new ModelStoreManagerRegistry();\n    }\n    return ModelStoreManagerRegistry.instance;\n  }\n\n  /**\n   * Register a save-handler router.\n   *\n   * @param saveRouter A function that maps a URL-like string onto an instance\n   * of `IOHandler` with the `save` method defined or `null`.\n   */\n  static registerManager(scheme: string, manager: ModelStoreManager) {\n    assert(scheme != null, () => 'scheme must not be undefined or null.');\n    if (scheme.endsWith(URL_SCHEME_SUFFIX)) {\n      scheme = scheme.slice(0, scheme.indexOf(URL_SCHEME_SUFFIX));\n    }\n    assert(scheme.length > 0, () => 'scheme must not be an empty string.');\n    const registry = ModelStoreManagerRegistry.getInstance();\n    assert(\n        registry.managers[scheme] == null,\n        () => `A model store manager is already registered for scheme '${\n            scheme}'.`);\n    registry.managers[scheme] = manager;\n  }\n\n  static getManager(scheme: string): ModelStoreManager {\n    const manager = this.getInstance().managers[scheme];\n    if (manager == null) {\n      throw new Error(`Cannot find model manager for scheme '${scheme}'`);\n    }\n    return manager;\n  }\n\n  static getSchemes(): string[] {\n    return Object.keys(this.getInstance().managers);\n  }\n}\n\n/**\n * Helper method for parsing a URL string into a scheme and a path.\n *\n * @param url E.g., 'localstorage://my-model'\n * @returns A dictionary with two fields: scheme and path.\n *   Scheme: e.g., 'localstorage' in the example above.\n *   Path: e.g., 'my-model' in the example above.\n */\nfunction parseURL(url: string): {scheme: string, path: string} {\n  if (url.indexOf(URL_SCHEME_SUFFIX) === -1) {\n    throw new Error(\n        `The url string provided does not contain a scheme. ` +\n        `Supported schemes are: ` +\n        `${ModelStoreManagerRegistry.getSchemes().join(',')}`);\n  }\n  return {\n    scheme: url.split(URL_SCHEME_SUFFIX)[0],\n    path: url.split(URL_SCHEME_SUFFIX)[1],\n  };\n}\n\nasync function cloneModelInternal(\n    sourceURL: string, destURL: string,\n    deleteSource = false): Promise<ModelArtifactsInfo> {\n  assert(\n      sourceURL !== destURL,\n      () => `Old path and new path are the same: '${sourceURL}'`);\n\n  const loadHandlers = IORouterRegistry.getLoadHandlers(sourceURL);\n  assert(\n      loadHandlers.length > 0,\n      () => `Copying failed because no load handler is found for source URL ${\n          sourceURL}.`);\n  assert(\n      loadHandlers.length < 2,\n      () => `Copying failed because more than one (${loadHandlers.length}) ` +\n          `load handlers for source URL ${sourceURL}.`);\n  const loadHandler = loadHandlers[0];\n\n  const saveHandlers = IORouterRegistry.getSaveHandlers(destURL);\n  assert(\n      saveHandlers.length > 0,\n      () => `Copying failed because no save handler is found for destination ` +\n          `URL ${destURL}.`);\n  assert(\n      saveHandlers.length < 2,\n      () => `Copying failed because more than one (${loadHandlers.length}) ` +\n          `save handlers for destination URL ${destURL}.`);\n  const saveHandler = saveHandlers[0];\n\n  const sourceScheme = parseURL(sourceURL).scheme;\n  const sourcePath = parseURL(sourceURL).path;\n  const sameMedium = sourceScheme === parseURL(sourceURL).scheme;\n\n  const modelArtifacts = await loadHandler.load();\n\n  // If moving within the same storage medium, remove the old model as soon as\n  // the loading is done. Without doing this, it is possible that the combined\n  // size of the two models will cause the cloning to fail.\n  if (deleteSource && sameMedium) {\n    await ModelStoreManagerRegistry.getManager(sourceScheme)\n        .removeModel(sourcePath);\n  }\n\n  const saveResult = await saveHandler.save(modelArtifacts);\n\n  // If moving between mediums, the deletion is done after the save succeeds.\n  // This guards against the case in which saving to the destination medium\n  // fails.\n  if (deleteSource && !sameMedium) {\n    await ModelStoreManagerRegistry.getManager(sourceScheme)\n        .removeModel(sourcePath);\n  }\n\n  return saveResult.modelArtifactsInfo;\n}\n\n/**\n * List all models stored in registered storage mediums.\n *\n * For a web browser environment, the registered mediums are Local Storage and\n * IndexedDB.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @returns A `Promise` of a dictionary mapping URLs of existing models to\n * their model artifacts info. URLs include medium-specific schemes, e.g.,\n *   'indexeddb://my/model/1'. Model artifacts info include type of the\n * model's topology, byte sizes of the topology, weights, etc.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function listModels(): Promise<{[url: string]: ModelArtifactsInfo}> {\n  const schemes = ModelStoreManagerRegistry.getSchemes();\n  const out: {[url: string]: ModelArtifactsInfo} = {};\n  for (const scheme of schemes) {\n    const schemeOut =\n        await ModelStoreManagerRegistry.getManager(scheme).listModels();\n    for (const path in schemeOut) {\n      const url = scheme + URL_SCHEME_SUFFIX + path;\n      out[url] = schemeOut[path];\n    }\n  }\n  return out;\n}\n\n/**\n * Remove a model specified by URL from a reigstered storage medium.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @param url A URL to a stored model, with a scheme prefix, e.g.,\n *   'localstorage://my-model-1', 'indexeddb://my/model/2'.\n * @returns ModelArtifactsInfo of the deleted model (if and only if deletion\n *   is successful).\n * @throws Error if deletion fails, e.g., if no model exists at `path`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function removeModel(url: string): Promise<ModelArtifactsInfo> {\n  const schemeAndPath = parseURL(url);\n  const manager = ModelStoreManagerRegistry.getManager(schemeAndPath.scheme);\n  return manager.removeModel(schemeAndPath.path);\n}\n\n/**\n * Copy a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Copying within a storage medium, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Copying between two storage mediums, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Copy the model, from Local Storage to IndexedDB.\n * await tf.io.copyModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove both models.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of copying.\n * @param destURL Destination URL of copying.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if copying fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function copyModel(\n    sourceURL: string, destURL: string): Promise<ModelArtifactsInfo> {\n  const deleteSource = false;\n  return cloneModelInternal(sourceURL, destURL, deleteSource);\n}\n\n/**\n * Move a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Moving within a storage medium, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Moving between two storage mediums, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Move the model, from Local Storage to IndexedDB.\n * await tf.io.moveModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove the moved model.\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of moving.\n * @param destURL Destination URL of moving.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if moving fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function moveModel(\n    sourceURL: string, destURL: string): Promise<ModelArtifactsInfo> {\n  const deleteSource = true;\n  return cloneModelInternal(sourceURL, destURL, deleteSource);\n}\n\nexport {moveModel, copyModel, removeModel, listModels};\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {assert} from './util';\n\n/**\n * Types to support JSON-esque data structures internally.\n *\n * Internally ConfigDict's use camelCase keys and values where the\n * values are class names to be instantiated.  On the python side, these\n * will be snake_case.  Internally we allow Enums into the values for better\n * type safety, but these need to be converted to raw primitives (usually\n * strings) for round-tripping with python.\n *\n * toConfig returns the TS-friendly representation. model.toJSON() returns\n * the pythonic version as that's the portable format.  If you need to\n * python-ify a non-model level toConfig output, you'll need to use a\n * convertTsToPythonic from serialization_utils in -Layers.\n *\n */\nexport declare type ConfigDictValue =\n    boolean | number | string | null | ConfigDictArray | ConfigDict;\nexport declare interface ConfigDict {\n  [key: string]: ConfigDictValue;\n}\nexport declare interface ConfigDictArray extends Array<ConfigDictValue> {}\n\n/**\n * Type to represent the class-type of Serializable objects.\n *\n * Ie the class prototype with access to the constructor and any\n * static members/methods. Instance methods are not listed here.\n *\n * Source for this idea: https://stackoverflow.com/a/43607255\n */\nexport declare type SerializableConstructor<T extends Serializable> = {\n  // tslint:disable-next-line:no-any\n  new (...args: any[]): T; className: string; fromConfig: FromConfigMethod<T>;\n};\nexport declare type FromConfigMethod<T extends Serializable> =\n    (cls: SerializableConstructor<T>, config: ConfigDict) => T;\n\n/**\n * Serializable defines the serialization contract.\n *\n * TFJS requires serializable classes to return their className when asked\n * to avoid issues with minification.\n */\nexport abstract class Serializable {\n  /**\n   * Return the class name for this class to use in serialization contexts.\n   *\n   * Generally speaking this will be the same thing that constructor.name\n   * would have returned.  However, the class name needs to be robust\n   * against minification for serialization/deserialization to work properly.\n   *\n   * There's also places such as initializers.VarianceScaling, where\n   * implementation details between different languages led to different\n   * class hierarchies and a non-leaf node is used for serialization purposes.\n   */\n  getClassName(): string {\n    return (this.constructor as SerializableConstructor<Serializable>)\n        .className;\n  }\n\n  /**\n   * Return all the non-weight state needed to serialize this object.\n   */\n  abstract getConfig(): ConfigDict;\n\n  /**\n   * Creates an instance of T from a ConfigDict.\n   *\n   * This works for most descendants of serializable.  A few need to\n   * provide special handling.\n   * @param cls A Constructor for the class to instantiate.\n   * @param config The Configuration for the object.\n   */\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(config);\n  }\n}\n\n/**\n * Maps string keys to class constructors.\n *\n * Used during (de)serialization from the cross-language JSON format, which\n * requires the class name in the serialization format matches the class\n * names as used in Python, should it exist.\n */\nexport class SerializationMap {\n  private static instance: SerializationMap;\n  classNameMap: {\n    [className: string]:\n        [SerializableConstructor<Serializable>, FromConfigMethod<Serializable>]\n  };\n\n  private constructor() {\n    this.classNameMap = {};\n  }\n\n  /**\n   * Returns the singleton instance of the map.\n   */\n  static getMap(): SerializationMap {\n    if (SerializationMap.instance == null) {\n      SerializationMap.instance = new SerializationMap();\n    }\n    return SerializationMap.instance;\n  }\n\n  /**\n   * Registers the class as serializable.\n   */\n  static register<T extends Serializable>(cls: SerializableConstructor<T>) {\n    SerializationMap.getMap().classNameMap[cls.className] =\n        [cls, cls.fromConfig];\n  }\n}\n\n/**\n * Register a class with the serialization map of TensorFlow.js.\n *\n * This is often used for registering custom Layers, so they can be\n * serialized and deserialized.\n *\n * Example:\n *\n * ```js\n * class MyCustomLayer extends tf.layers.Layer {\n *   static className = 'MyCustomLayer';\n *\n *   constructor(config) {\n *     super(config);\n *   }\n * }\n * tf.serialization.registerClass(MyCustomLayer);\n * ```\n *\n * @param cls The class to be registered. It must have a public static member\n *   called `className` defined and the value must be a non-empty string.\n *\n * @doc {heading: 'Models', subheading: 'Serialization', ignoreCI: true}\n */\nexport function registerClass<T extends Serializable>(\n    cls: SerializableConstructor<T>) {\n  assert(\n      cls.className != null,\n      () => `Class being registered does not have the static className ` +\n          `property defined.`);\n  assert(\n      typeof cls.className === 'string',\n      () => `className is required to be a string, but got type ` +\n          typeof cls.className);\n  assert(\n      cls.className.length > 0,\n      () => `Class being registered has an empty-string as its className, ` +\n          `which is disallowed.`);\n\n  SerializationMap.register(cls);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {dispose} from '../globals';\nimport {variableGrads} from '../gradients';\nimport {scalar} from '../ops/ops';\nimport {Serializable} from '../serialization';\nimport {Scalar, Variable} from '../tensor';\nimport {NamedTensor, NamedTensorMap} from '../tensor_types';\n\n/**\n * A variable that belongs to an optimizer.\n *\n * The `originalName` field is required for keeping track of the canonical\n * name of the variable, which is usually the name of the model weight that\n * the variable is related to plus a suffix, e.g., 'dense1/kernel/momentum'.\n * The name of the `Variable` object itself cannot be used directly due to\n * possible deduplication: Every `Variable` must have a unique name but more\n * than one optimizer objects of the same type may be created for the same model\n * or the same `Variable`.\n */\nexport interface OptimizerVariable {\n  originalName: string;\n  variable: Variable;\n}\n\n/** @doc {heading: 'Training', subheading: 'Classes', namespace: 'train'} */\nexport abstract class Optimizer extends Serializable {\n  protected iterations_: number;\n\n  /**\n   * Executes `f()` and minimizes the scalar output of `f()` by computing\n   * gradients of y with respect to the list of trainable variables provided by\n   * `varList`. If no list is provided, it defaults to all trainable variables.\n   *\n   * @param f The function to execute and whose output to minimize.\n   * @param returnCost Whether to return the scalar cost value produced by\n   * executing `f()`.\n   * @param varList An optional list of variables to update. If specified, only\n   * the trainable variables in varList will be updated by minimize. Defaults to\n   * all trainable variables.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers'}\n   */\n  minimize(f: () => Scalar, returnCost = false, varList?: Variable[]): Scalar\n      |null {\n    const {value, grads} = this.computeGradients(f, varList);\n\n    if (varList != null) {\n      const gradArray: NamedTensor[] =\n          varList.map(v => ({name: v.name, tensor: grads[v.name]}));\n      this.applyGradients(gradArray);\n    } else {\n      this.applyGradients(grads);\n    }\n\n    // Dispose gradients.\n    dispose(grads);\n\n    if (returnCost) {\n      return value;\n    } else {\n      value.dispose();\n      return null;\n    }\n  }\n\n  /**\n   * The number of iterations that this optimizer instance has been invoked for.\n   */\n  get iterations(): number {\n    if (this.iterations_ == null) {\n      this.iterations_ = 0;\n    }\n    return this.iterations_;\n  }\n\n  protected incrementIterations() {\n    this.iterations_ = this.iterations + 1;\n  }\n\n  /**\n   * Executes f() and computes the gradient of the scalar output of f() with\n   * respect to the list of trainable variables provided by `varList`. If no\n   * list is provided, it defaults to all trainable variables.\n   *\n   * @param f The function to execute and whose output to use for computing\n   * gradients with respect to variables.\n   * @param varList An optional list of variables to compute gradients with\n   * respect to. If specified, only the trainable variables in varList will have\n   * gradients computed with respect to. Defaults to all trainable variables.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers'}\n   */\n  computeGradients(f: () => Scalar, varList?: Variable[]):\n      {value: Scalar, grads: NamedTensorMap} {\n    return variableGrads(f, varList);\n  }\n\n  /**\n   * Updates variables by using the computed gradients.\n   *\n   * @param variableGradients A mapping of variable name to its gradient value.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers'}\n   */\n  abstract applyGradients(variableGradients: NamedTensorMap|\n                          NamedTensor[]): void;\n\n  /**\n   * Dispose the variables (if any) owned by this optimizer instance.\n   */\n  dispose(): void {\n    if (this.iterations_ != null) {\n      dispose(this.iterations_);\n    }\n  }\n\n  async saveIterations(): Promise<NamedTensor> {\n    if (this.iterations_ == null) {\n      this.iterations_ = 0;\n    }\n    return {\n      name: 'iter',  // Named for Python compatibility.\n      // TODO(cais): Use 'int64' type when available.\n      tensor: scalar(this.iterations_, 'int32')\n    };\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    throw new Error('getWeights() is not implemented for this optimizer yet.');\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    throw new Error(\n        `setWeights() is not implemented for this optimizer class ` +\n        `${this.getClassName()}`);\n  }\n\n  /**\n   * Extract the first element of the weight values and set it\n   * as the iterations counter variable of this instance of optimizer.\n   *\n   * @param weightValues\n   * @returns Weight values with the first element consumed and excluded.\n   */\n  protected async extractIterations(weightValues: NamedTensor[]):\n      Promise<NamedTensor[]> {\n    this.iterations_ = (await weightValues[0].tensor.data())[0];\n    return weightValues.slice(1);\n  }\n}\n\nObject.defineProperty(Optimizer, Symbol.hasInstance, {\n  value: (instance: Optimizer) => {\n    return instance.minimize != null && instance.computeGradients != null &&\n        instance.applyGradients != null;\n  }\n});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelBackend} from './backends/backend';\nimport {ENGINE, Engine, MemoryInfo, ProfileInfo, ScopeFn, TimingInfo} from './engine';\nimport {env} from './environment';\n\nimport {Platform} from './platforms/platform';\nimport {setDeprecationWarningFn, Tensor} from './tensor';\nimport {TensorContainer} from './tensor_types';\nimport {getTensorsInContainer} from './tensor_util';\n\n/**\n * Enables production mode which disables correctness checks in favor of\n * performance.\n *\n * @doc {heading: 'Environment'}\n */\nexport function enableProdMode(): void {\n  env().set('PROD', true);\n}\n\n/**\n * Enables debug mode which will log information about all executed kernels:\n * the elapsed time of the kernel execution, as well as the rank, shape, and\n * size of the output tensor.\n *\n * Debug mode will significantly slow down your application as it will\n * download the result of every operation to the CPU. This should not be used in\n * production. Debug mode does not affect the timing information of the kernel\n * execution as we do not measure download time in the kernel execution time.\n *\n * See also: `tf.profile`, `tf.memory`.\n *\n * @doc {heading: 'Environment'}\n */\nexport function enableDebugMode(): void {\n  env().set('DEBUG', true);\n}\n\n/** Globally disables deprecation warnings */\nexport function disableDeprecationWarnings(): void {\n  env().set('DEPRECATION_WARNINGS_ENABLED', false);\n  console.warn(`TensorFlow.js deprecation warnings have been disabled.`);\n}\n\n/** Warn users about deprecated functionality. */\nexport function deprecationWarn(msg: string) {\n  if (env().getBool('DEPRECATION_WARNINGS_ENABLED')) {\n    console.warn(\n        msg + ' You can disable deprecation warnings with ' +\n        'tf.disableDeprecationWarnings().');\n  }\n}\nsetDeprecationWarningFn(deprecationWarn);\n\n/**\n * Dispose all variables kept in backend engine.\n *\n * @doc {heading: 'Environment'}\n */\nexport function disposeVariables(): void {\n  ENGINE.disposeVariables();\n}\n\n/**\n * It returns the global engine that keeps track of all tensors and backends.\n *\n * @doc {heading: 'Environment'}\n */\nexport function engine(): Engine {\n  return ENGINE;\n}\n\n/**\n * Returns memory info at the current time in the program. The result is an\n * object with the following properties:\n *\n * - `numBytes`: Number of bytes allocated (undisposed) at this time.\n * - `numTensors`: Number of unique tensors allocated.\n * - `numDataBuffers`: Number of unique data buffers allocated\n *   (undisposed) at this time, which is ≤ the number of tensors\n *   (e.g. `a.reshape(newShape)` makes a new Tensor that shares the same\n *   data buffer with `a`).\n * - `unreliable`: True if the memory usage is unreliable. See `reasons` when\n *    `unreliable` is true.\n * - `reasons`: `string[]`, reasons why the memory is unreliable, present if\n *    `unreliable` is true.\n *\n * WebGL Properties:\n * - `numBytesInGPU`: Number of bytes allocated (undisposed) in the GPU only at\n *     this time.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nexport function memory(): MemoryInfo {\n  return ENGINE.memory();\n}\n\n/**\n * Executes the provided function `f()` and returns a promise that resolves\n * with information about the function's memory use:\n * - `newBytes`: the number of new bytes allocated\n * - `newTensors`: the number of new tensors created\n * - `peakBytes`: the peak number of bytes allocated\n * - `kernels`: an array of objects for each kernel involved that reports\n * their input and output shapes, number of bytes used, and number of new\n * tensors created.\n * - `kernelNames`: an array of unique strings with just the names of the\n * kernels in the `kernels` array.\n *\n * ```js\n * const profile = await tf.profile(() => {\n *   const x = tf.tensor1d([1, 2, 3]);\n *   let x2 = x.square();\n *   x2.dispose();\n *   x2 = x.square();\n *   x2.dispose();\n *   return x;\n * });\n *\n * console.log(`newBytes: ${profile.newBytes}`);\n * console.log(`newTensors: ${profile.newTensors}`);\n * console.log(`byte usage over all kernels: ${profile.kernels.map(k =>\n * k.totalBytesSnapshot)}`);\n * ```\n *\n *\n * @doc {heading: 'Performance', subheading: 'Profile'}\n */\nexport function profile(f: () => (TensorContainer | Promise<TensorContainer>)):\n    Promise<ProfileInfo> {\n  return ENGINE.profile(f);\n}\n\n/**\n * Executes the provided function `fn` and after it is executed, cleans up all\n * intermediate tensors allocated by `fn` except those returned by `fn`.\n * `fn` must not return a Promise (async functions not allowed). The returned\n * result can be a complex object.\n *\n * Using this method helps avoid memory leaks. In general, wrap calls to\n * operations in `tf.tidy` for automatic memory cleanup.\n *\n * NOTE: Variables do *not* get cleaned up when inside a tidy(). If you want to\n * dispose variables, please use `tf.disposeVariables` or call dispose()\n * directly on variables.\n *\n * ```js\n * // y = 2 ^ 2 + 1\n * const y = tf.tidy(() => {\n *   // a, b, and one will be cleaned up when the tidy ends.\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *   const b = a.square();\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * y.print();\n * ```\n *\n * @param nameOrFn The name of the closure, or the function to execute.\n *     If a name is provided, the 2nd argument should be the function.\n *     If debug mode is on, the timing and the memory usage of the function\n *     will be tracked and displayed on the console using the provided name.\n * @param fn The function to execute.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nexport function tidy<T extends TensorContainer>(\n    nameOrFn: string|ScopeFn<T>, fn?: ScopeFn<T>): T {\n  return ENGINE.tidy(nameOrFn, fn);\n}\n\n/**\n * Disposes any `tf.Tensor`s found within the provided object.\n *\n * @param container an object that may be a `tf.Tensor` or may directly\n *     contain `tf.Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. If\n *     the object is not a `tf.Tensor` or does not contain `Tensors`, nothing\n *     happens. In general it is safe to pass any object here, except that\n *     `Promise`s are not supported.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nexport function dispose(container: TensorContainer) {\n  const tensors = getTensorsInContainer(container);\n  tensors.forEach(tensor => tensor.dispose());\n}\n\n/**\n * Keeps a `tf.Tensor` generated inside a `tf.tidy` from being disposed\n * automatically.\n *\n * ```js\n * let b;\n * const y = tf.tidy(() => {\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *\n *   // b will not be cleaned up by the tidy. a and one will be cleaned up\n *   // when the tidy ends.\n *   b = tf.keep(a.square());\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * console.log('y:');\n * y.print();\n * console.log('b:');\n * b.print();\n * ```\n *\n * @param result The tensor to keep from being disposed.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nexport function keep<T extends Tensor>(result: T): T {\n  return ENGINE.keep(result);\n}\n\n/**\n * Executes `f()` and returns a promise that resolves with timing\n * information.\n *\n * The result is an object with the following properties:\n *\n * - `wallMs`: Wall execution time.\n * - `kernelMs`: Kernel execution time, ignoring data transfer. If using the\n * WebGL backend and the query timer extension is not available, this will\n * return an error object.\n * - On `WebGL` The following additional properties exist:\n *   - `uploadWaitMs`: CPU blocking time on texture uploads.\n *   - `downloadWaitMs`: CPU blocking time on texture downloads (readPixels).\n *\n * ```js\n * const x = tf.randomNormal([20, 20]);\n * const time = await tf.time(() => x.matMul(x));\n *\n * console.log(`kernelMs: ${time.kernelMs}, wallTimeMs: ${time.wallMs}`);\n * ```\n *\n * @param f The function to execute and time.\n *\n * @doc {heading: 'Performance', subheading: 'Timing'}\n */\nexport function time(f: () => void): Promise<TimingInfo> {\n  return ENGINE.time(f);\n}\n\n/**\n * Sets the backend (cpu, webgl, wasm, etc) responsible for creating tensors and\n * executing operations on those tensors. Returns a promise that resolves\n * to a boolean if the backend initialization was successful.\n *\n * Note this disposes the current backend, if any, as well as any tensors\n * associated with it. A new backend is initialized, even if it is of the\n * same type as the previous one.\n *\n * @param backendName The name of the backend. Currently supports\n *     `'webgl'|'cpu'` in the browser, `'tensorflow'` under node.js\n *     (requires tfjs-node), and `'wasm'` (requires tfjs-backend-wasm).\n *\n * @doc {heading: 'Backends'}\n */\nexport function setBackend(backendName: string): Promise<boolean> {\n  return ENGINE.setBackend(backendName);\n}\n\n/**\n * Returns a promise that resolves when the currently selected backend (or the\n * highest priority one) has initialized. Await this promise when you are using\n * a backend that has async initialization.\n *\n * @doc {heading: 'Backends'}\n */\nexport function ready(): Promise<void> {\n  return ENGINE.ready();\n}\n\n/**\n * Returns the current backend name (cpu, webgl, etc). The backend is\n * responsible for creating tensors and executing operations on those tensors.\n *\n * @doc {heading: 'Backends'}\n */\nexport function getBackend(): string {\n  return ENGINE.backendName;\n}\n\n/**\n * Removes a backend and the registered factory.\n *\n * @doc {heading: 'Backends'}\n */\nexport function removeBackend(name: string): void {\n  ENGINE.removeBackend(name);\n}\n\n/**\n * Finds the backend registered under the provided name. Returns null if the\n * name is not in the registry, or the registration hasn't finished yet.\n */\nexport function findBackend(name: string): KernelBackend {\n  return ENGINE.findBackend(name);\n}\n\n/**\n * Finds the backend factory registered under the provided name. Returns a\n * function that produces a new backend when called. Returns null if the name\n * is not in the registry.\n */\nexport function findBackendFactory(name: string): () =>\n    KernelBackend | Promise<KernelBackend> {\n  return ENGINE.findBackendFactory(name);\n}\n\n/**\n * Registers a global backend. The registration should happen when importing\n * a module file (e.g. when importing `backend_webgl.ts`), and is used for\n * modular builds (e.g. custom tfjs bundle with only webgl support).\n *\n * @param factory The backend factory function. When called, it should\n * return a backend instance, or a promise of an instance.\n * @param priority The priority of the backend (higher = more important).\n *     In case multiple backends are registered, the priority is used to find\n *     the best backend. Defaults to 1.\n * @return False if there is already a registered backend under this name, true\n *     if not.\n *\n * @doc {heading: 'Backends'}\n */\nexport function registerBackend(\n    name: string, factory: () => KernelBackend | Promise<KernelBackend>,\n    priority = 1): boolean {\n  return ENGINE.registerBackend(name, factory, priority);\n}\n\n/**\n * Gets the current backend. If no backends have been initialized, this will\n * attempt to initialize the best backend. Will throw an error if the highest\n * priority backend has async initialization, in which case, you should call\n * 'await tf.ready()' before running other code.\n *\n * @doc {heading: 'Backends'}\n */\nexport function backend(): KernelBackend {\n  return ENGINE.backend;\n}\n\n/**\n * Sets the global platform.\n *\n * @param platformName The name of this platform.\n * @param platform A platform implementation.\n */\nexport function setPlatform(platformName: string, platform: Platform) {\n  env().setPlatform(platformName, platform);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {CustomGradientFunc, ENGINE} from './engine';\nimport {Scalar, Tensor, Variable} from './tensor';\nimport {NamedTensorMap} from './tensor_types';\nimport {convertToTensor, convertToTensorArray} from './tensor_util_env';\nimport {TensorLike} from './types';\nimport * as util from './util';\n\n/**\n * Provided `f(x)`, returns another function `g(x, dy?)`, which gives the\n * gradient of `f(x)` with respect to `x`.\n *\n * If `dy` is provided, the gradient of `f(x).mul(dy).sum()` with respect to\n * `x` is computed instead. `f(x)` must take a single tensor `x` and return a\n * single tensor `y`. If `f()` takes multiple inputs, use `tf.grads` instead.\n *\n * ```js\n * // f(x) = x ^ 2\n * const f = x => x.square();\n * // f'(x) = 2x\n * const g = tf.grad(f);\n *\n * const x = tf.tensor1d([2, 3]);\n * g(x).print();\n * ```\n *\n * ```js\n * // f(x) = x ^ 3\n * const f = x => x.pow(tf.scalar(3, 'int32'));\n * // f'(x) = 3x ^ 2\n * const g = tf.grad(f);\n * // f''(x) = 6x\n * const gg = tf.grad(g);\n *\n * const x = tf.tensor1d([2, 3]);\n * gg(x).print();\n * ```\n *\n * @param f The function f(x), to compute gradient for.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction grad(f: (x: Tensor) => Tensor): (\n    x: TensorLike|Tensor, dy?: TensorLike|Tensor) => Tensor {\n  util.assert(\n      util.isFunction(f), () => 'The f passed in grad(f) must be a function');\n  return (x: TensorLike|Tensor, dy?: TensorLike|Tensor): Tensor => {\n    // x can be of any dtype, thus null as the last argument.\n    const $x = convertToTensor(x, 'x', 'tf.grad', 'string_or_numeric');\n    const $dy: Tensor =\n        (dy != null) ? convertToTensor(dy, 'dy', 'tf.grad') : null;\n    return ENGINE.tidy(() => {\n      const {value, grads} = ENGINE.gradients(() => f($x), [$x], $dy);\n      if ($dy != null) {\n        util.assertShapesMatch(\n            value.shape, $dy.shape,\n            'The shape of dy passed in grad(f)(x, dy) must match the shape ' +\n                'returned by f(x)');\n      }\n      checkGrads(grads);\n      return grads[0];\n    });\n  };\n}\n\n/**\n * Provided `f(x1, x2,...)`, returns another function `g([x1, x2,...], dy?)`,\n * which gives an array of gradients of `f()` with respect to each input\n * [`x1`,`x2`,...].\n *\n * If `dy` is passed when calling `g()`, the gradient of\n * `f(x1,...).mul(dy).sum()` with respect to each input is computed instead.\n * The provided `f` must take one or more tensors and return a single tensor\n * `y`. If `f()` takes a single input, we recommend using `tf.grad` instead.\n *\n * ```js\n * // f(a, b) = a * b\n * const f = (a, b) => a.mul(b);\n * // df / da = b, df / db = a\n * const g = tf.grads(f);\n *\n * const a = tf.tensor1d([2, 3]);\n * const b = tf.tensor1d([-2, -3]);\n * const [da, db] = g([a, b]);\n * console.log('da');\n * da.print();\n * console.log('db');\n * db.print();\n * ```\n *\n * @param f The function `f(x1, x2,...)` to compute gradients for.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction grads(f: (...args: Tensor[]) => Tensor): (\n    args: Array<Tensor|TensorLike>, dy?: Tensor|TensorLike) => Tensor[] {\n  util.assert(\n      util.isFunction(f), () => 'The f passed in grads(f) must be a function');\n  return (args: Array<Tensor|TensorLike>, dy?: Tensor|TensorLike): Tensor[] => {\n    util.assert(\n        Array.isArray(args),\n        () => 'The args passed in grads(f)(args) must be an array ' +\n            'of `Tensor`s or `TensorLike`s');\n    // args can be of any dtype, thus null as the last argument.\n    const $args =\n        convertToTensorArray(args, 'args', 'tf.grads', 'string_or_numeric');\n    const $dy: Tensor =\n        (dy != null) ? convertToTensor(dy, 'dy', 'tf.grads') : null;\n    return ENGINE.tidy(() => {\n      const {value, grads} = ENGINE.gradients(() => f(...$args), $args, $dy);\n      if ($dy != null) {\n        util.assertShapesMatch(\n            value.shape, $dy.shape,\n            'The shape of dy passed in grads(f)([x1,...], dy) must ' +\n                'match the shape returned by f([x1,...])');\n      }\n      checkGrads(grads);\n      return grads;\n    });\n  };\n}\n\n/**\n * Like `tf.grad`, but also returns the value of `f()`. Useful when `f()`\n * returns a metric you want to show.\n *\n * The result is a rich object with the following properties:\n * - grad: The gradient of `f(x)` w.r.t `x` (result of `tf.grad`).\n * - value: The value returned by `f(x)`.\n *\n * ```js\n * // f(x) = x ^ 2\n * const f = x => x.square();\n * // f'(x) = 2x\n * const g = tf.valueAndGrad(f);\n *\n * const x = tf.tensor1d([2, 3]);\n * const {value, grad} = g(x);\n *\n * console.log('value');\n * value.print();\n * console.log('grad');\n * grad.print();\n * ```\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction valueAndGrad<I extends Tensor, O extends Tensor>(f: (x: I) => O): (\n    x: I, dy?: O) => {\n  value: O;\n  grad: I;\n} {\n  util.assert(\n      util.isFunction(f),\n      () => 'The f passed in valueAndGrad(f) must be a function');\n  return (x: I, dy?: O) => {\n    util.assert(\n        x instanceof Tensor,\n        () => 'The x passed in valueAndGrad(f)(x) must be a tensor');\n    util.assert(\n        dy == null || dy instanceof Tensor,\n        () => 'The dy passed in valueAndGrad(f)(x, dy) must be a tensor');\n    const {grads, value} = ENGINE.gradients(() => f(x), [x], dy);\n    checkGrads(grads);\n    return {grad: grads[0] as I, value};\n  };\n}\n\n/**\n * Like `tf.grads`, but returns also the value of `f()`. Useful when `f()`\n * returns a metric you want to show.\n *\n * The result is a rich object with the following properties:\n * - grads: The gradients of `f()` w.r.t each input (result of `tf.grads`).\n * - value: The value returned by `f(x)`.\n *\n * ```js\n * // f(a, b) = a * b\n * const f = (a, b) => a.mul(b);\n * // df/da = b, df/db = a\n * const g = tf.valueAndGrads(f);\n *\n * const a = tf.tensor1d([2, 3]);\n * const b = tf.tensor1d([-2, -3]);\n * const {value, grads} = g([a, b]);\n *\n * const [da, db] = grads;\n *\n * console.log('value');\n * value.print();\n *\n * console.log('da');\n * da.print();\n * console.log('db');\n * db.print();\n * ```\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction valueAndGrads<O extends Tensor>(f: (...args: Tensor[]) => O): (\n    args: Tensor[], dy?: O) => {\n  grads: Tensor[];\n  value: O;\n} {\n  util.assert(\n      util.isFunction(f),\n      () => 'The f passed in valueAndGrads(f) must be a function');\n  return (args: Tensor[], dy?: O) => {\n    util.assert(\n        Array.isArray(args) && args.every(arg => arg instanceof Tensor),\n        () => 'The args passed in valueAndGrads(f)(args) must be array of ' +\n            'tensors');\n    util.assert(\n        dy == null || dy instanceof Tensor,\n        () => 'The dy passed in valueAndGrads(f)(args, dy) must be a tensor');\n    const res = ENGINE.gradients(() => f(...args), args, dy);\n    if (dy != null) {\n      util.assertShapesMatch(\n          res.value.shape, dy.shape,\n          'The shape of dy passed in valueAndGrads(f)([x1,...], dy) must ' +\n              'match the shape returned by f([x1,...])');\n    }\n    checkGrads(res.grads);\n    return res;\n  };\n}\n\n/**\n * Computes and returns the gradient of f(x) with respect to the list of\n * trainable variables provided by `varList`. If no list is provided, it\n * defaults to all trainable variables.\n *\n * ```js\n * const a = tf.variable(tf.tensor1d([3, 4]));\n * const b = tf.variable(tf.tensor1d([5, 6]));\n * const x = tf.tensor1d([1, 2]);\n *\n * // f(a, b) = a * x ^ 2 + b * x\n * const f = () => a.mul(x.square()).add(b.mul(x)).sum();\n * // df/da = x ^ 2, df/db = x\n * const {value, grads} = tf.variableGrads(f);\n *\n * Object.keys(grads).forEach(varName => grads[varName].print());\n * ```\n *\n * @param f The function to execute. f() should return a scalar.\n * @param varList The list of variables to compute the gradients with respect\n *     to. Defaults to all trainable variables.\n * @returns An object with the following keys and values:\n *   - `value`: The value of the function `f`.\n *   - `grads`: A map from the names of the variables to the gradients.\n *     If the `varList` argument is provided explicitly and contains a subset of\n *     non-trainable variables, this map in the return value will contain keys\n *     that map the names of the non-trainable variables to `null`.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction variableGrads(f: () => Scalar, varList?: Variable[]):\n    {value: Scalar, grads: NamedTensorMap} {\n  util.assert(\n      util.isFunction(f),\n      () => 'The f passed in variableGrads(f) must be a function');\n  util.assert(\n      varList == null ||\n          Array.isArray(varList) && varList.every(v => v instanceof Variable),\n      () =>\n          'The varList passed in variableGrads(f, varList) must be an array ' +\n          'of variables');\n\n  const specifiedVarList = varList != null;\n  if (!specifiedVarList) {\n    // Get all of the trainable variables.\n    varList = [];\n    for (const varName in ENGINE.registeredVariables) {\n      varList.push(ENGINE.registeredVariables[varName]);\n    }\n  }\n\n  const specifiedNonTrainable: Variable[] =\n      specifiedVarList ? varList.filter(variable => !variable.trainable) : null;\n\n  // Prune non-trainable variables.\n  const originalVarCount = varList.length;\n  varList = varList.filter(variable => variable.trainable);\n  util.assert(\n      varList.length > 0,\n      () => `variableGrads() expects at least one of the input variables to ` +\n          `be trainable, but none of the ${originalVarCount} variables is ` +\n          `trainable.`);\n\n  const allowNoGradients = true;\n  const {value, grads} = ENGINE.gradients(f, varList, null, allowNoGradients);\n\n  util.assert(\n      grads.some(g => g != null),\n      () => 'Cannot find a connection between any variable and the result of ' +\n          'the loss function y=f(x). Please make sure the operations that ' +\n          'use variables are inside the function f passed to minimize().');\n  util.assert(\n      value.rank === 0,\n      () => `The f passed in variableGrads(f) must return a scalar, but it ` +\n          `returned a rank-${value.rank} tensor`);\n\n  const namedGrads: NamedTensorMap = {};\n  varList.forEach((v, i) => {\n    if (grads[i] != null) {\n      namedGrads[v.name] = grads[i];\n    }\n  });\n  if (specifiedNonTrainable != null) {\n    // If varList is explicitly provided and contains non-trainable values,\n    // add them to the returned gradients with `null` values.\n    specifiedNonTrainable.forEach(v => namedGrads[v.name] = null);\n  }\n  return {value, grads: namedGrads};\n}\n\n/**\n * Overrides the gradient computation of a function `f`.\n *\n * Takes a function\n * `f(...inputs, save) => {value: Tensor, gradFunc: (dy, saved) => Tensor[]}`\n * and returns another function `g(...inputs)` which takes the same inputs as\n * `f`. When called, `g` returns `f().value`. In backward mode, custom gradients\n * with respect to each input of `f` are computed using `f().gradFunc`.\n *\n * The `save` function passsed to `f` should be used for saving tensors needed\n * in the gradient. And the `saved` passed to the `gradFunc` is a\n * `NamedTensorMap`, which contains those saved tensor.\n *\n * ```js\n * const customOp = tf.customGrad((x, save) => {\n *   // Save x to make sure it's available later for the gradient.\n *   save([x]);\n *   // Override gradient of our custom x ^ 2 op to be dy * abs(x);\n *   return {\n *     value: x.square(),\n *     // Note `saved.x` which points to the `x` we saved earlier.\n *     gradFunc: (dy, saved) => [dy.mul(saved[0].abs())]\n *   };\n * });\n *\n * const x = tf.tensor1d([-1, -2, 3]);\n * const dx = tf.grad(x => customOp(x));\n *\n * console.log(`f(x):`);\n * customOp(x).print();\n * console.log(`f'(x):`);\n * dx(x).print();\n * ```\n *\n * @param f The function to evaluate in forward mode, which should return\n *     `{value: Tensor, gradFunc: (dy, saved) => Tensor[]}`, where `gradFunc`\n *     returns the custom gradients of `f` with respect to its inputs.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction customGrad<T extends Tensor>(f: CustomGradientFunc<T>):\n    (...args: Tensor[]) => T {\n  return ENGINE.customGrad(f);\n}\n\nfunction checkGrads(grads: Tensor[]) {\n  const numNullGradients = grads.filter(g => g == null).length;\n  if (numNullGradients > 0) {\n    throw new Error(\n        `Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.`);\n  }\n}\n\nexport {\n  customGrad,\n  variableGrads,\n  valueAndGrad,\n  valueAndGrads,\n  grad,\n  grads,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Modularized ops.\nexport {abs} from './abs';\nexport {acos} from './acos';\nexport {acosh} from './acosh';\nexport {add} from './add';\nexport {addN} from './add_n';\nexport {all} from './all';\nexport {any} from './any';\nexport {argMax} from './arg_max';\nexport {argMin} from './arg_min';\nexport {asin} from './asin';\nexport {asinh} from './asinh';\nexport {atan} from './atan';\nexport {atan2} from './atan2';\nexport {atanh} from './atanh';\nexport {avgPool} from './avg_pool';\nexport {avgPool3d} from './avg_pool_3d';\nexport {basicLSTMCell} from './basic_lstm_cell';\nexport {batchToSpaceND} from './batch_to_space_nd';\nexport {batchNorm} from './batchnorm';\nexport {batchNorm2d} from './batchnorm2d';\nexport {batchNorm3d} from './batchnorm3d';\nexport {batchNorm4d} from './batchnorm4d';\nexport {bincount} from './bincount';\nexport {broadcastArgs} from './broadcast_args';\nexport {broadcastTo} from './broadcast_to';\nexport {buffer} from './buffer';\nexport {cast} from './cast';\nexport {ceil} from './ceil';\nexport {clipByValue} from './clip_by_value';\nexport {clone} from './clone';\nexport {complex} from './complex';\nexport {concat} from './concat';\nexport {concat1d} from './concat_1d';\nexport {concat2d} from './concat_2d';\nexport {concat3d} from './concat_3d';\nexport {concat4d} from './concat_4d';\nexport {conv1d} from './conv1d';\nexport {conv2d} from './conv2d';\nexport {conv2dTranspose} from './conv2d_transpose';\nexport {conv3d} from './conv3d';\nexport {conv3dTranspose} from './conv3d_transpose';\nexport {cos} from './cos';\nexport {cosh} from './cosh';\nexport {cumsum} from './cumsum';\nexport {denseBincount} from './dense_bincount';\nexport {depthToSpace} from './depth_to_space';\nexport {depthwiseConv2d} from './depthwise_conv2d';\nexport {diag} from './diag';\nexport {dilation2d} from './dilation2d';\nexport {div} from './div';\nexport {divNoNan} from './div_no_nan';\nexport {dot} from './dot';\nexport {einsum} from './einsum';\nexport {elu} from './elu';\nexport {equal} from './equal';\nexport {erf} from './erf';\nexport {exp} from './exp';\nexport {expandDims} from './expand_dims';\nexport {expm1} from './expm1';\nexport {eye} from './eye';\nexport {fill} from './fill';\nexport {floor} from './floor';\nexport {floorDiv} from './floorDiv';\nexport {gather} from './gather';\nexport {greater} from './greater';\nexport {greaterEqual} from './greater_equal';\nexport {imag} from './imag';\nexport {isFinite} from './is_finite';\nexport {isInf} from './is_inf';\nexport {isNaN} from './is_nan';\nexport {leakyRelu} from './leaky_relu';\nexport {less} from './less';\nexport {lessEqual} from './less_equal';\nexport {linspace} from './linspace';\nexport {localResponseNormalization} from './local_response_normalization';\nexport {log} from './log';\nexport {log1p} from './log1p';\nexport {logSigmoid} from './log_sigmoid';\nexport {logSoftmax} from './log_softmax';\nexport {logSumExp} from './log_sum_exp';\nexport {logicalAnd} from './logical_and';\nexport {logicalNot} from './logical_not';\nexport {logicalOr} from './logical_or';\nexport {logicalXor} from './logical_xor';\nexport {matMul} from './mat_mul';\nexport {max} from './max';\nexport {maxPool} from './max_pool';\nexport {maxPool3d} from './max_pool_3d';\nexport {maxPoolWithArgmax} from './max_pool_with_argmax';\nexport {maximum} from './maximum';\nexport {mean} from './mean';\nexport {meshgrid} from './meshgrid';\nexport {min} from './min';\nexport {minimum} from './minimum';\nexport {mirrorPad} from './mirror_pad';\nexport {mod} from './mod';\nexport {moments} from './moments';\nexport {mul} from './mul';\nexport {LSTMCellFunc, multiRNNCell} from './multi_rnn_cell';\nexport {multinomial} from './multinomial';\nexport {neg} from './neg';\nexport {notEqual} from './not_equal';\nexport {oneHot} from './one_hot';\nexport {ones} from './ones';\nexport {onesLike} from './ones_like';\nexport {outerProduct} from './outer_product';\nexport {pad} from './pad';\nexport {pad1d} from './pad1d';\nexport {pad2d} from './pad2d';\nexport {pad3d} from './pad3d';\nexport {pad4d} from './pad4d';\nexport {pool} from './pool';\nexport {pow} from './pow';\nexport {prelu} from './prelu';\nexport {print} from './print';\nexport {prod} from './prod';\nexport {rand} from './rand';\nexport {randomGamma} from './random_gamma';\nexport {randomNormal} from './random_normal';\nexport {randomUniform} from './random_uniform';\nexport {range} from './range';\nexport {real} from './real';\nexport {reciprocal} from './reciprocal';\nexport {relu} from './relu';\nexport {relu6} from './relu6';\nexport {reshape} from './reshape';\nexport {reverse} from './reverse';\nexport {reverse1d} from './reverse_1d';\nexport {reverse2d} from './reverse_2d';\nexport {reverse3d} from './reverse_3d';\nexport {reverse4d} from './reverse_4d';\nexport {round} from './round';\nexport {rsqrt} from './rsqrt';\nexport {scalar} from './scalar';\nexport {selu} from './selu';\nexport {separableConv2d} from './separable_conv2d';\nexport {setdiff1dAsync} from './setdiff1d_async';\nexport {sigmoid} from './sigmoid';\nexport {sign} from './sign';\nexport {sin} from './sin';\nexport {sinh} from './sinh';\nexport {slice} from './slice';\nexport {slice1d} from './slice1d';\nexport {slice2d} from './slice2d';\nexport {slice3d} from './slice3d';\nexport {slice4d} from './slice4d';\nexport {softmax} from './softmax';\nexport {softplus} from './softplus';\nexport {spaceToBatchND} from './space_to_batch_nd';\nexport {fft} from './spectral/fft';\nexport {ifft} from './spectral/ifft';\nexport {irfft} from './spectral/irfft';\nexport {rfft} from './spectral/rfft';\nexport {split} from './split';\nexport {sqrt} from './sqrt';\nexport {square} from './square';\nexport {squaredDifference} from './squared_difference';\nexport {squeeze} from './squeeze';\nexport {stack} from './stack';\nexport {step} from './step';\nexport {stridedSlice} from './strided_slice';\nexport {sub} from './sub';\nexport {sum} from './sum';\nexport {tan} from './tan';\nexport {tanh} from './tanh';\nexport {tensor} from './tensor';\nexport {tensor1d} from './tensor1d';\nexport {tensor2d} from './tensor2d';\nexport {tensor3d} from './tensor3d';\nexport {tensor4d} from './tensor4d';\nexport {tensor5d} from './tensor5d';\nexport {tensor6d} from './tensor6d';\nexport {tile} from './tile';\nexport {topk} from './topk';\nexport {truncatedNormal} from './truncated_normal';\nexport {unique} from './unique';\nexport {unsortedSegmentSum} from './unsorted_segment_sum';\nexport {unstack} from './unstack';\nexport {variable} from './variable';\nexport {where} from './where';\nexport {whereAsync} from './where_async';\nexport {zeros} from './zeros';\nexport {zerosLike} from './zeros_like';\n\nexport * from './boolean_mask';\nexport * from './transpose';\nexport * from './norm';\nexport * from './moving_average';\nexport * from './scatter_nd';\nexport * from './sparse_to_dense';\nexport * from './gather_nd';\nexport * from './dropout';\nexport * from './signal_ops_util';\nexport * from './in_top_k';\n\nexport {op, OP_SCOPE_SUFFIX} from './operation';\n\nimport {rfft} from './spectral/rfft';\nimport {fft} from './spectral/fft';\nimport {ifft} from './spectral/ifft';\nimport {irfft} from './spectral/irfft';\nconst spectral = {\n  fft,\n  ifft,\n  rfft,\n  irfft\n};\n\nimport * as fused from './fused_ops';\n\nimport {hammingWindow} from './signal/hamming_window';\nimport {hannWindow} from './signal/hann_window';\nimport {frame} from './signal/frame';\nimport {stft} from './signal/stft';\nconst signal = {\n  hammingWindow,\n  hannWindow,\n  frame,\n  stft,\n};\n\n// Image Ops namespace\nimport {cropAndResize} from './image/crop_and_resize';\nimport {flipLeftRight} from './image/flip_left_right';\nimport {grayscaleToRGB} from './image/grayscale_to_rgb';\nimport {rotateWithOffset} from './image/rotate_with_offset';\nimport {nonMaxSuppression} from './image/non_max_suppression';\nimport {nonMaxSuppressionAsync} from './image/non_max_suppression_async';\nimport {nonMaxSuppressionWithScore} from './image/non_max_suppression_with_score';\nimport {nonMaxSuppressionWithScoreAsync} from './image/non_max_suppression_with_score_async';\nimport {nonMaxSuppressionPadded} from './image/non_max_suppression_padded';\nimport {nonMaxSuppressionPaddedAsync} from './image/non_max_suppression_padded_async';\nimport {resizeBilinear} from './image/resize_bilinear';\nimport {resizeNearestNeighbor} from './image/resize_nearest_neighbor';\nimport {threshold} from './image/threshold';\nimport {transform} from './image/transform';\nconst image = {\n  flipLeftRight,\n  grayscaleToRGB,\n  resizeNearestNeighbor,\n  resizeBilinear,\n  rotateWithOffset,\n  cropAndResize,\n  nonMaxSuppression,\n  nonMaxSuppressionAsync,\n  nonMaxSuppressionWithScore,\n  nonMaxSuppressionWithScoreAsync,\n  nonMaxSuppressionPadded,\n  nonMaxSuppressionPaddedAsync,\n  threshold,\n  transform\n};\n\n// linalg namespace\nimport {bandPart} from './linalg/band_part';\nimport {gramSchmidt} from './linalg/gram_schmidt';\nimport {qr} from './linalg/qr';\nconst linalg = {\n  bandPart,\n  gramSchmidt,\n  qr\n};\n\n// losses namespace;\nimport {absoluteDifference} from './losses/absolute_difference';\nimport {computeWeightedLoss} from './losses/compute_weighted_loss';\nimport {cosineDistance} from './losses/cosine_distance';\nimport {hingeLoss} from './losses/hinge_loss';\nimport {huberLoss} from './losses/huber_loss';\nimport {logLoss} from './losses/log_loss';\nimport {meanSquaredError} from './losses/mean_squared_error';\nimport {sigmoidCrossEntropy} from './losses/sigmoid_cross_entropy';\nimport {softmaxCrossEntropy} from './losses/softmax_cross_entropy';\nconst losses = {\n  absoluteDifference,\n  computeWeightedLoss,\n  cosineDistance,\n  hingeLoss,\n  huberLoss,\n  logLoss,\n  meanSquaredError,\n  sigmoidCrossEntropy,\n  softmaxCrossEntropy\n};\n\nimport {sparseFillEmptyRows} from './sparse/sparse_fill_empty_rows';\nimport {sparseReshape} from './sparse/sparse_reshape';\nimport {sparseSegmentMean} from './sparse/sparse_segment_mean';\nimport {sparseSegmentSum} from './sparse/sparse_segment_sum';\nconst sparse = {\n  sparseFillEmptyRows,\n  sparseReshape,\n  sparseSegmentMean,\n  sparseSegmentSum\n};\n\nimport {stringNGrams} from './string/string_n_grams';\nimport {stringSplit} from './string/string_split';\nimport {stringToHashBucketFast} from './string/string_to_hash_bucket_fast';\n// tslint:disable-next-line:variable-name\nconst string = {\n  stringNGrams,\n  stringSplit,\n  stringToHashBucketFast\n};\n\n// Second level exports.\nexport {image, linalg, losses, spectral, fused, signal, sparse, string};\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Abs, AbsInputs, ComplexAbs, ComplexAbsInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes absolute value element-wise: `abs(x)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.abs().print();  // or tf.abs(x)\n * ```\n * @param x The input `tf.Tensor`.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction abs_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'abs');\n\n  if ($x.dtype === 'complex64') {\n    const inputs: ComplexAbsInputs = {x: $x};\n    return ENGINE.runKernel(ComplexAbs, inputs as {} as NamedTensorMap);\n  } else {\n    const inputs: AbsInputs = {x: $x};\n    return ENGINE.runKernel(Abs, inputs as {} as NamedTensorMap);\n  }\n}\n\nexport const abs = op({abs_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Add, AddInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Adds two `tf.Tensor`s element-wise, A + B. Supports broadcasting.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n *\n * ```js\n * // Broadcast add a with b.\n * const a = tf.scalar(5);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n * @param a The first `tf.Tensor` to add.\n * @param b The second `tf.Tensor` to add. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction add_<T extends Tensor>(a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'add');\n  let $b = convertToTensor(b, 'b', 'add');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const inputs: AddInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(Add, inputs as {} as NamedTensorMap);\n}\n\nexport const add = op({add_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {All, AllAttrs, AllInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the logical and of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 1, 1], 'bool');\n *\n * x.all().print();  // or tf.all(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');\n *\n * const axis = 1;\n * x.all(axis).print();  // or tf.all(x, axis)\n * ```\n *\n * @param x The input tensor. Must be of dtype bool.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction all_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  const $x = convertToTensor(x, 'x', 'all', 'bool');\n\n  const inputs: AllInputs = {x: $x};\n  const attrs: AllAttrs = {axis, keepDims};\n\n  return ENGINE.runKernel(\n      All, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const all = op({all_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Any, AnyAttrs, AnyInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the logical or of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 1, 1], 'bool');\n *\n * x.any().print();  // or tf.any(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');\n *\n * const axis = 1;\n * x.any(axis).print();  // or tf.any(x, axis)\n * ```\n *\n * @param x The input tensor. Must be of dtype bool.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction any_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  const $x = convertToTensor(x, 'x', 'any', 'bool');\n\n  const inputs: AnyInputs = {x: $x};\n  const attrs: AnyAttrs = {axis, keepDims};\n\n  return ENGINE.runKernel(\n      Any, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\n// tslint:disable-next-line:variable-name\nexport const any = op({any_});\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {ArgMax, ArgMaxAttrs, ArgMaxInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Returns the indices of the maximum values along an `axis`.\n *\n * The result has the same shape as `input` with the dimension along `axis`\n * removed.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.argMax().print();  // or tf.argMax(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 4, 3], [2, 2]);\n *\n * const axis = 1;\n * x.argMax(axis).print();  // or tf.argMax(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension to reduce. Defaults to 0 (outer-most dimension).\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction argMax_<T extends Tensor>(x: Tensor|TensorLike, axis = 0): T {\n  const $x = convertToTensor(x, 'x', 'argMax');\n\n  const inputs: ArgMaxInputs = {x: $x};\n  const attrs: ArgMaxAttrs = {axis};\n\n  return ENGINE.runKernel(\n      ArgMax, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const argMax = op({argMax_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {AvgPool, AvgPoolAttrs, AvgPoolInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {cast} from './cast';\nimport * as conv_util from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes the 2D average pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *         https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction avgPool_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filterSize: [number, number]|number,\n    strides: [number, number]|number,\n    pad: 'valid'|'same'|number|conv_util.ExplicitPadding,\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'avgPool', 'float32');\n  const dilations = 1;\n\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in avgPool: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in avgPool: x must be rank 4 but got rank ${x4D.rank}.`);\n  conv_util.checkPadOnDimRoundingMode('avgPool', pad, dimRoundingMode);\n  const inputs: AvgPoolInputs = {x: x4D};\n  const attrs: AvgPoolAttrs = {filterSize, strides, pad, dimRoundingMode};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  let res = ENGINE.runKernel(\n                AvgPool, inputs as {} as NamedTensorMap,\n                attrs as {} as NamedAttrMap) as T;\n\n  res = cast(res, $x.dtype);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n\n  return res;\n}\n\nexport const avgPool = op({avgPool_});\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Cast, CastAttrs, CastInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {DataType, TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Casts a `tf.Tensor` to a new dtype.\n *\n * ```js\n * const x = tf.tensor1d([1.5, 2.5, 3]);\n * tf.cast(x, 'int32').print();\n * ```\n * @param x The input tensor to be casted.\n * @param dtype The dtype to cast the input tensor to.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction cast_<T extends Tensor>(x: T|TensorLike, dtype: DataType): T {\n  const $x = convertToTensor(x, 'x', 'cast');\n\n  // Sanity checks.\n  if (!util.isValidDtype(dtype)) {\n    throw new Error(`Failed to cast to unknown dtype ${dtype}`);\n  }\n  if (dtype === 'string' && $x.dtype !== 'string' ||\n      dtype !== 'string' && $x.dtype === 'string') {\n    throw new Error('Only strings can be casted to strings');\n  }\n\n  const inputs: CastInputs = {x: $x};\n  const attrs: CastAttrs = {dtype};\n\n  return ENGINE.runKernel(\n      Cast, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const cast = op({cast_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as util from '../util';\n\ntype PadType = 'SAME'|'VALID'|'NUMBER'|'EXPLICIT';\n\n// For NHWC should be in the following form:\n//  [[0, 0], [pad_top,pad_bottom], [pad_left, pad_right], [0, 0]]\n// For NCHW should be in the following form:\n//  [[0, 0], [0, 0], [pad_top,pad_bottom], [pad_left, pad_right]]\n// Reference: https://www.tensorflow.org/api_docs/python/tf/nn/conv2d\nexport type ExplicitPadding =\n    [[number, number], [number, number], [number, number], [number, number]];\n\nexport type PadInfo = {\n  top: number,\n  left: number,\n  right: number,\n  bottom: number,\n  type: PadType\n};\n\nexport type PadInfo3D = {\n  top: number,\n  left: number,\n  right: number,\n  bottom: number,\n  front: number,\n  back: number,\n  type: PadType\n};\n\n/**\n * Information about the forward pass of a convolution/pooling operation.\n * It includes input and output shape, strides, filter size and padding\n * information.\n */\nexport type Conv2DInfo = {\n  batchSize: number,\n  inHeight: number,\n  inWidth: number,\n  inChannels: number,\n  outHeight: number,\n  outWidth: number,\n  outChannels: number,\n  dataFormat: 'channelsFirst'|'channelsLast',\n  strideHeight: number,\n  strideWidth: number,\n  dilationHeight: number,\n  dilationWidth: number,\n  filterHeight: number,\n  filterWidth: number,\n  effectiveFilterHeight: number,\n  effectiveFilterWidth: number,\n  padInfo: PadInfo,\n  inShape: [number, number, number, number],\n  outShape: [number, number, number, number],\n  filterShape: [number, number, number, number]\n};\n\n/**\n *\n * @param inputShape Input tensor shape is of the following dimensions:\n *     `[batch, height, width, inChannels]`.\n * @param filterShape The filter shape is of the following dimensions:\n *     `[filterHeight, filterWidth, depth]`.\n * @param strides The strides of the sliding window for each dimension of the\n *     input tensor: `[strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat The data format of the input and output data.\n *     Defaults to 'NHWC'.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`.\n *     Defaults to `[1, 1]`. If `dilations` is a single number, then\n *     `dilationHeight == dilationWidth`.\n */\nexport function computeDilation2DInfo(\n    inputShape: [number, number, number, number],\n    filterShape: [number, number, number], strides: number|[number, number],\n    pad: 'same'|'valid'|number, dataFormat: 'NHWC' = 'NHWC',\n    dilations: number|[number, number]) {\n  // `computerConv2DInfo` require filterShape to be in the dimension of:\n  // `[filterHeight, filterWidth, depth, outDepth]`, dilation2d doesn't have\n  // outDepth, it should have the same depth as the input.\n  // Input shape: [batch, height, width, inChannels]\n  const inputChannels = inputShape[3];\n  const $filterShape =\n      [...filterShape, inputChannels] as [number, number, number, number];\n  const $dataFormat = convertConv2DDataFormat(dataFormat);\n\n  return computeConv2DInfo(\n      inputShape, $filterShape, strides, dilations, pad,\n      null /* roundingMode */, null /* depthWise */, $dataFormat);\n}\n\nexport function computePool2DInfo(\n    inShape: [number, number, number, number],\n    filterSize: [number, number]|number, strides: number|[number, number],\n    dilations: number|[number, number],\n    pad: 'same'|'valid'|number|ExplicitPadding,\n    roundingMode?: 'floor'|'round'|'ceil',\n    dataFormat: 'channelsFirst'|'channelsLast' = 'channelsLast'): Conv2DInfo {\n  const [filterHeight, filterWidth] = parseTupleParam(filterSize);\n\n  let filterShape: [number, number, number, number];\n  if (dataFormat === 'channelsLast') {\n    filterShape = [filterHeight, filterWidth, inShape[3], inShape[3]];\n  } else if (dataFormat === 'channelsFirst') {\n    filterShape = [filterHeight, filterWidth, inShape[1], inShape[1]];\n  } else {\n    throw new Error(`Unknown dataFormat ${dataFormat}`);\n  }\n\n  return computeConv2DInfo(\n      inShape, filterShape, strides, dilations, pad, roundingMode, false,\n      dataFormat);\n}\n\n/**\n * Computes the information for a forward pass of a pooling3D operation.\n */\nexport function computePool3DInfo(\n    inShape: [number, number, number, number, number],\n    filterSize: number|[number, number, number],\n    strides: number|[number, number, number],\n    dilations: number|[number, number, number], pad: 'same'|'valid'|number,\n    roundingMode?: 'floor'|'round'|'ceil',\n    dataFormat: 'NDHWC'|'NCDHW' = 'NDHWC'): Conv3DInfo {\n  const [filterDepth, filterHeight, filterWidth] = parse3TupleParam(filterSize);\n\n  let filterShape: [number, number, number, number, number];\n  let $dataFormat: 'channelsFirst'|'channelsLast';\n  if (dataFormat === 'NDHWC') {\n    $dataFormat = 'channelsLast';\n    filterShape =\n        [filterDepth, filterHeight, filterWidth, inShape[4], inShape[4]];\n  } else if (dataFormat === 'NCDHW') {\n    $dataFormat = 'channelsFirst';\n    filterShape =\n        [filterDepth, filterHeight, filterWidth, inShape[1], inShape[1]];\n  } else {\n    throw new Error(`Unknown dataFormat ${dataFormat}`);\n  }\n\n  return computeConv3DInfo(\n      inShape, filterShape, strides, dilations, pad, false, $dataFormat,\n      roundingMode);\n}\n\n/**\n * Computes the information for a forward pass of a convolution/pooling\n * operation.\n */\nexport function computeConv2DInfo(\n    inShape: [number, number, number, number],\n    filterShape: [number, number, number, number],\n    strides: number|[number, number], dilations: number|[number, number],\n    pad: 'same'|'valid'|number|ExplicitPadding,\n    roundingMode?: 'floor'|'round'|'ceil', depthwise = false,\n    dataFormat: 'channelsFirst'|'channelsLast' = 'channelsLast'): Conv2DInfo {\n  let [batchSize, inHeight, inWidth, inChannels] = [-1, -1, -1, -1];\n  if (dataFormat === 'channelsLast') {\n    [batchSize, inHeight, inWidth, inChannels] = inShape;\n  } else if (dataFormat === 'channelsFirst') {\n    [batchSize, inChannels, inHeight, inWidth] = inShape;\n  } else {\n    throw new Error(`Unknown dataFormat ${dataFormat}`);\n  }\n\n  const [filterHeight, filterWidth, , filterChannels] = filterShape;\n  const [strideHeight, strideWidth] = parseTupleParam(strides);\n  const [dilationHeight, dilationWidth] = parseTupleParam(dilations);\n\n  const effectiveFilterHeight =\n      getEffectiveFilterSize(filterHeight, dilationHeight);\n  const effectiveFilterWidth =\n      getEffectiveFilterSize(filterWidth, dilationWidth);\n  const {padInfo, outHeight, outWidth} = getPadAndOutInfo(\n      pad, inHeight, inWidth, strideHeight, strideWidth, effectiveFilterHeight,\n      effectiveFilterWidth, roundingMode, dataFormat);\n\n  const outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n\n  let outShape: [number, number, number, number];\n  if (dataFormat === 'channelsFirst') {\n    outShape = [batchSize, outChannels, outHeight, outWidth];\n  } else if (dataFormat === 'channelsLast') {\n    outShape = [batchSize, outHeight, outWidth, outChannels];\n  }\n\n  return {\n    batchSize,\n    dataFormat,\n    inHeight,\n    inWidth,\n    inChannels,\n    outHeight,\n    outWidth,\n    outChannels,\n    padInfo,\n    strideHeight,\n    strideWidth,\n    filterHeight,\n    filterWidth,\n    effectiveFilterHeight,\n    effectiveFilterWidth,\n    dilationHeight,\n    dilationWidth,\n    inShape,\n    outShape,\n    filterShape\n  };\n}\n\n/**\n * Information about the forward pass of a 3D convolution/pooling operation.\n * It includes input and output shape, strides, filter size and padding\n * information.\n */\nexport type Conv3DInfo = {\n  batchSize: number,\n  inDepth: number,\n  inHeight: number,\n  inWidth: number,\n  inChannels: number,\n  outDepth: number,\n  outHeight: number,\n  outWidth: number,\n  outChannels: number,\n  dataFormat: 'channelsFirst'|'channelsLast',\n  strideDepth: number,\n  strideHeight: number,\n  strideWidth: number,\n  dilationDepth: number,\n  dilationHeight: number,\n  dilationWidth: number,\n  filterDepth: number,\n  filterHeight: number,\n  filterWidth: number,\n  effectiveFilterDepth: number,\n  effectiveFilterHeight: number,\n  effectiveFilterWidth: number,\n  padInfo: PadInfo3D,\n  inShape: [number, number, number, number, number],\n  outShape: [number, number, number, number, number],\n  filterShape: [number, number, number, number, number]\n};\n\n/**\n * Computes the information for a forward pass of a 3D convolution/pooling\n * operation.\n */\nexport function computeConv3DInfo(\n    inShape: [number, number, number, number, number],\n    filterShape: [number, number, number, number, number],\n    strides: number|[number, number, number],\n    dilations: number|[number, number, number], pad: 'same'|'valid'|number,\n    depthwise = false,\n    dataFormat: 'channelsFirst'|'channelsLast' = 'channelsLast',\n    roundingMode?: 'floor'|'round'|'ceil'): Conv3DInfo {\n  let [batchSize, inDepth, inHeight, inWidth, inChannels] =\n      [-1, -1, -1, -1, -1];\n  if (dataFormat === 'channelsLast') {\n    [batchSize, inDepth, inHeight, inWidth, inChannels] = inShape;\n  } else if (dataFormat === 'channelsFirst') {\n    [batchSize, inChannels, inDepth, inHeight, inWidth] = inShape;\n  } else {\n    throw new Error(`Unknown dataFormat ${dataFormat}`);\n  }\n\n  const [filterDepth, filterHeight, filterWidth, , filterChannels] =\n      filterShape;\n  const [strideDepth, strideHeight, strideWidth] = parse3TupleParam(strides);\n  const [dilationDepth, dilationHeight, dilationWidth] =\n      parse3TupleParam(dilations);\n\n  const effectiveFilterDepth =\n      getEffectiveFilterSize(filterDepth, dilationDepth);\n  const effectiveFilterHeight =\n      getEffectiveFilterSize(filterHeight, dilationHeight);\n  const effectiveFilterWidth =\n      getEffectiveFilterSize(filterWidth, dilationWidth);\n  const {padInfo, outDepth, outHeight, outWidth} = get3DPadAndOutInfo(\n      pad, inDepth, inHeight, inWidth, strideDepth, strideHeight, strideWidth,\n      effectiveFilterDepth, effectiveFilterHeight, effectiveFilterWidth,\n      roundingMode);\n\n  const outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n\n  let outShape: [number, number, number, number, number];\n  if (dataFormat === 'channelsFirst') {\n    outShape = [batchSize, outChannels, outDepth, outHeight, outWidth];\n  } else if (dataFormat === 'channelsLast') {\n    outShape = [batchSize, outDepth, outHeight, outWidth, outChannels];\n  }\n\n  return {\n    batchSize,\n    dataFormat,\n    inDepth,\n    inHeight,\n    inWidth,\n    inChannels,\n    outDepth,\n    outHeight,\n    outWidth,\n    outChannels,\n    padInfo,\n    strideDepth,\n    strideHeight,\n    strideWidth,\n    filterDepth,\n    filterHeight,\n    filterWidth,\n    effectiveFilterDepth,\n    effectiveFilterHeight,\n    effectiveFilterWidth,\n    dilationDepth,\n    dilationHeight,\n    dilationWidth,\n    inShape,\n    outShape,\n    filterShape\n  };\n}\n\nfunction computeOutputShape2D(\n    inShape: [number, number], fieldSize: number, stride: number,\n    zeroPad?: number, roundingMode?: 'floor'|'round'|'ceil'): [number, number] {\n  if (zeroPad == null) {\n    zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n  }\n  const inputRows = inShape[0];\n  const inputCols = inShape[1];\n\n  const outputRows =\n      round((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n  const outputCols =\n      round((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n\n  return [outputRows, outputCols];\n}\n\nfunction computeOutputShape4D(\n    inShape: [number, number, number, number], fieldSize: number,\n    outChannels: number, stride: number, zeroPad?: number,\n    roundingMode?: 'floor'|'round'|'ceil'): [number, number, number, number] {\n  if (zeroPad == null) {\n    zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n  }\n  const inputDepth = inShape[0];\n  const inputRows = inShape[1];\n  const inputCols = inShape[2];\n\n  const outputDepths =\n      round((inputDepth - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n  const outputRows =\n      round((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n  const outputCols =\n      round((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n\n  return [outputDepths, outputRows, outputCols, outChannels];\n}\n\nexport function computeDefaultPad(\n    inputShape: [number, number]|[number, number, number, number],\n    fieldSize: number, stride: number, dilation = 1): number {\n  const effectiveFieldSize = getEffectiveFilterSize(fieldSize, dilation);\n  return Math.floor(\n      (inputShape[0] * (stride - 1) - stride + effectiveFieldSize) / 2);\n}\n\nfunction parseTupleParam(param: number|number[]): [number, number, number] {\n  if (typeof param === 'number') {\n    return [param, param, param];\n  }\n  if (param.length === 2) {\n    return [param[0], param[1], 1];\n  }\n  return param as [number, number, number];\n}\n\nfunction parse3TupleParam(param: number|[number, number, number]):\n    [number, number, number] {\n  return typeof param === 'number' ? [param, param, param] : param;\n}\n\n/* See https://www.tensorflow.org/api_docs/python/tf/nn/atrous_conv2d\n * Atrous convolution is equivalent to standard convolution with upsampled\n * filters with effective_filter_height =\n * filter_height + (filter_height - 1) * (dilation - 1)\n * and effective_filter_width =\n * filter_width + (filter_width - 1) * (dilation - 1),\n * produced by inserting dilation - 1 zeros along consecutive elements across\n * the filters' spatial dimensions.\n * When there is a dilation, this converts a filter dimension to the\n * effective filter dimension, so it can be used in a standard convolution.\n */\nfunction getEffectiveFilterSize(filterSize: number, dilation: number) {\n  if (dilation <= 1) {\n    return filterSize;\n  }\n\n  return filterSize + (filterSize - 1) * (dilation - 1);\n}\n\nfunction getPadAndOutInfo(\n    pad: 'same'|'valid'|number|ExplicitPadding, inHeight: number,\n    inWidth: number, strideHeight: number, strideWidth: number,\n    filterHeight: number, filterWidth: number,\n    roundingMode: 'floor'|'round'|'ceil',\n    dataFormat: 'channelsFirst'|\n    'channelsLast'): {padInfo: PadInfo, outHeight: number, outWidth: number} {\n  let padInfo: PadInfo;\n  let outHeight: number;\n  let outWidth: number;\n\n  if (typeof pad === 'number') {\n    const padType = (pad === 0) ? 'VALID' : 'NUMBER';\n    padInfo = {top: pad, bottom: pad, left: pad, right: pad, type: padType};\n    const outShape = computeOutputShape2D(\n        [inHeight, inWidth], filterHeight, strideHeight, pad, roundingMode);\n    outHeight = outShape[0];\n    outWidth = outShape[1];\n  } else if (pad === 'same') {\n    outHeight = Math.ceil(inHeight / strideHeight);\n    outWidth = Math.ceil(inWidth / strideWidth);\n    const padAlongHeight =\n        Math.max(0, (outHeight - 1) * strideHeight + filterHeight - inHeight);\n    const padAlongWidth =\n        Math.max(0, (outWidth - 1) * strideWidth + filterWidth - inWidth);\n    const top = Math.floor(padAlongHeight / 2);\n    const bottom = padAlongHeight - top;\n    const left = Math.floor(padAlongWidth / 2);\n    const right = padAlongWidth - left;\n    padInfo = {top, bottom, left, right, type: 'SAME'};\n  } else if (pad === 'valid') {\n    padInfo = {top: 0, bottom: 0, left: 0, right: 0, type: 'VALID'};\n    outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n    outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n  } else if (typeof pad === 'object') {\n    const top = dataFormat === 'channelsLast' ? pad[1][0] : pad[2][0];\n    const bottom = dataFormat === 'channelsLast' ? pad[1][1] : pad[2][1];\n    const left = dataFormat === 'channelsLast' ? pad[2][0] : pad[3][0];\n    const right = dataFormat === 'channelsLast' ? pad[2][1] : pad[3][1];\n    const padType = (top === 0 && bottom === 0 && left === 0 && right === 0) ?\n        'VALID' :\n        'EXPLICIT';\n    padInfo = {top, bottom, left, right, type: padType};\n    outHeight = round(\n        (inHeight - filterHeight + top + bottom) / strideHeight + 1,\n        roundingMode);\n    outWidth = round(\n        (inWidth - filterWidth + left + right) / strideWidth + 1, roundingMode);\n  } else {\n    throw Error(`Unknown padding parameter: ${pad}`);\n  }\n  return {padInfo, outHeight, outWidth};\n}\n\nfunction get3DPadAndOutInfo(\n    pad: 'same'|'valid'|number, inDepth: number, inHeight: number,\n    inWidth: number, strideDepth: number, strideHeight: number,\n    strideWidth: number, filterDepth: number, filterHeight: number,\n    filterWidth: number, roundingMode?: 'floor'|'round'|'ceil'): {\n  padInfo: PadInfo3D,\n  outDepth: number,\n  outHeight: number,\n  outWidth: number\n} {\n  let padInfo: PadInfo3D;\n  let outDepth: number;\n  let outHeight: number;\n  let outWidth: number;\n\n  if (typeof pad === 'number') {\n    const padType = (pad === 0) ? 'VALID' : 'NUMBER';\n    padInfo = {\n      top: pad,\n      bottom: pad,\n      left: pad,\n      right: pad,\n      front: pad,\n      back: pad,\n      type: padType\n    };\n    const outShape = computeOutputShape4D(\n        [inDepth, inHeight, inWidth, 1], filterDepth, 1, strideDepth, pad,\n        roundingMode);\n    outDepth = outShape[0];\n    outHeight = outShape[1];\n    outWidth = outShape[2];\n  } else if (pad === 'same') {\n    outDepth = Math.ceil(inDepth / strideDepth);\n    outHeight = Math.ceil(inHeight / strideHeight);\n    outWidth = Math.ceil(inWidth / strideWidth);\n    const padAlongDepth = (outDepth - 1) * strideDepth + filterDepth - inDepth;\n    const padAlongHeight =\n        (outHeight - 1) * strideHeight + filterHeight - inHeight;\n    const padAlongWidth = (outWidth - 1) * strideWidth + filterWidth - inWidth;\n    const front = Math.floor(padAlongDepth / 2);\n    const back = padAlongDepth - front;\n    const top = Math.floor(padAlongHeight / 2);\n    const bottom = padAlongHeight - top;\n    const left = Math.floor(padAlongWidth / 2);\n    const right = padAlongWidth - left;\n\n    padInfo = {top, bottom, left, right, front, back, type: 'SAME'};\n  } else if (pad === 'valid') {\n    padInfo = {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      front: 0,\n      back: 0,\n      type: 'VALID'\n    };\n    outDepth = Math.ceil((inDepth - filterDepth + 1) / strideDepth);\n    outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n    outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n  } else {\n    throw Error(`Unknown padding parameter: ${pad}`);\n  }\n  return {padInfo, outDepth, outHeight, outWidth};\n}\n\n/**\n * Rounds a value depending on the rounding mode\n * @param value\n * @param roundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction round(value: number, roundingMode?: 'floor'|'round'|'ceil') {\n  if (!roundingMode) {\n    return Math.trunc(value);\n  }\n  switch (roundingMode) {\n    case 'round':\n      // used for Caffe Conv\n      return Math.round(value);\n    case 'ceil':\n      // used for Caffe Pool\n      return Math.ceil(value);\n    case 'floor':\n      return Math.floor(value);\n    default:\n      throw new Error(`Unknown roundingMode ${roundingMode}`);\n  }\n}\n\nexport function tupleValuesAreOne(param: number|number[]): boolean {\n  const [dimA, dimB, dimC] = parseTupleParam(param);\n  return dimA === 1 && dimB === 1 && dimC === 1;\n}\n\nexport function eitherStridesOrDilationsAreOne(\n    strides: number|number[], dilations: number|number[]): boolean {\n  return tupleValuesAreOne(strides) || tupleValuesAreOne(dilations);\n}\n\n/**\n * Convert Conv2D dataFormat from 'NHWC'|'NCHW' to\n *    'channelsLast'|'channelsFirst'\n * @param dataFormat in 'NHWC'|'NCHW' mode\n * @return dataFormat in 'channelsLast'|'channelsFirst' mode\n * @throws unknown dataFormat\n */\nexport function convertConv2DDataFormat(dataFormat: 'NHWC'|'NCHW'):\n    'channelsLast'|'channelsFirst' {\n  if (dataFormat === 'NHWC') {\n    return 'channelsLast';\n  } else if (dataFormat === 'NCHW') {\n    return 'channelsFirst';\n  } else {\n    throw new Error(`Unknown dataFormat ${dataFormat}`);\n  }\n}\n\n/**\n * Check validity of pad when using dimRoundingMode.\n * @param opDesc A string of op description\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid` output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @throws unknown padding parameter\n */\nexport function checkPadOnDimRoundingMode(\n    opDesc: string, pad: 'valid'|'same'|number|ExplicitPadding,\n    dimRoundingMode?: 'floor'|'round'|'ceil') {\n  if (dimRoundingMode != null) {\n    if (typeof pad === 'string') {\n      throw Error(\n          `Error in ${opDesc}: pad must be an integer when using `  +\n          `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    } else if (typeof pad === 'number') {\n      util.assert(\n        util.isInt(pad),\n          () => `Error in ${opDesc}: pad must be an integer when using ` +\n              `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    } else if (typeof pad === 'object') {\n      (pad as ExplicitPadding).forEach(p => {p.forEach(v =>{\n        util.assert(\n          util.isInt(v),\n            () => `Error in ${opDesc}: pad must be an integer when using ` +\n                `dimRoundingMode ${dimRoundingMode} but got pad ${v}.`);\n        });\n      });\n    } else {\n      throw Error(`Error in ${opDesc}: Unknown padding parameter: ${pad}`);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Reshape, ReshapeAttrs, ReshapeInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {Rank, ShapeMap, TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Reshapes a `tf.Tensor` to a given shape.\n *\n * Given an input tensor, returns a new tensor with the same values as the\n * input tensor with shape `shape`.\n *\n * If one component of shape is the special value -1, the size of that\n * dimension is computed so that the total size remains constant. In\n * particular, a shape of [-1] flattens into 1-D. At most one component of\n * shape can be -1.\n *\n * If shape is 1-D or higher, then the operation returns a tensor with shape\n * shape filled with the values of tensor. In this case, the number of\n * elements implied by shape must be the same as the number of elements in\n * tensor.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.reshape([2, 2]).print();\n * ```\n *\n * @param x The input tensor to be reshaped.\n * @param shape An array of integers defining the output tensor shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction reshape_<R extends Rank>(\n    x: Tensor|TensorLike, shape: ShapeMap[R]): Tensor<R> {\n  const $x = convertToTensor(x, 'x', 'reshape', 'string_or_numeric');\n\n  const inputs: ReshapeInputs = {x: $x};\n  const attrs: ReshapeAttrs = {shape};\n  return ENGINE.runKernel(\n      Reshape, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\nexport const reshape = op({reshape_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {AvgPool3D, AvgPool3DAttrs, AvgPool3DInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor4D, Tensor5D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {checkPadOnDimRoundingMode} from './conv_util';\nimport {cast} from './cast';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes the 3D average pooling.\n *\n * ```js\n * const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n * const result = tf.avgPool3d(x, 2, 1, 'valid');\n * result.print();\n * ```\n *\n * @param x The input tensor, of rank 5 or rank 4 of shape\n *     `[batch, depth, height, width, inChannels]`.\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     If `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideDepth == strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction avgPool3d_<T extends Tensor4D|Tensor5D>(\n    x: T|TensorLike, filterSize: [number, number, number]|number,\n    strides: [number, number, number]|number, pad: 'valid'|'same'|number,\n    dimRoundingMode?: 'floor'|'round'|'ceil',\n    dataFormat: 'NDHWC'|'NCDHW' = 'NDHWC'): T {\n  const $x = convertToTensor(x, 'x', 'avgPool3d', 'float32');\n\n  let x5D = $x as Tensor5D;\n  let reshapedTo5D = false;\n  if ($x.rank === 4) {\n    reshapedTo5D = true;\n    x5D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n  }\n\n  util.assert(\n      x5D.rank === 5,\n      () => `Error in avgPool3d: x must be rank 5 but got rank ${x5D.rank}.`);\n  util.assert(\n      dataFormat === 'NDHWC',\n      () => `Error in avgPool3d: Only NDHWC is currently supported, ` +\n          `but got dataFormat of ${dataFormat}`);\n  checkPadOnDimRoundingMode('avgPool3d', pad, dimRoundingMode);\n  const inputs: AvgPool3DInputs = {x: x5D};\n  const attrs:\n      AvgPool3DAttrs = {filterSize, strides, pad, dimRoundingMode, dataFormat};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  let res = ENGINE.runKernel(\n                AvgPool3D, inputs as {} as NamedTensorMap,\n                attrs as {} as NamedAttrMap) as T;\n\n  res = cast(res, x5D.dtype);\n\n  if (reshapedTo5D) {\n    return reshape(\n               res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]) as\n        T;\n  }\n\n  return res;\n}\n\nexport const avgPool3d = op({avgPool3d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor1D, Tensor2D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {batchNorm} from './batchnorm';\nimport {op} from './operation';\n\n/**\n * Batch normalization, strictly for 2D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm2d_(\n    x: Tensor2D|TensorLike, mean: Tensor2D|Tensor1D|TensorLike,\n    variance: Tensor2D|Tensor1D|TensorLike,\n    offset?: Tensor2D|Tensor1D|TensorLike, scale?: Tensor2D|Tensor1D|TensorLike,\n    varianceEpsilon?: number): Tensor2D {\n  const $x = convertToTensor(x, 'x', 'batchNorm');\n  const $mean = convertToTensor(mean, 'mean', 'batchNorm');\n  const $variance = convertToTensor(variance, 'variance', 'batchNorm');\n  let $scale: Tensor2D|Tensor1D;\n  if (scale != null) {\n    $scale = convertToTensor(scale, 'scale', 'batchNorm');\n  }\n  let $offset: Tensor2D|Tensor1D;\n  if (offset != null) {\n    $offset = convertToTensor(offset, 'offset', 'batchNorm');\n  }\n  util.assert(\n      $x.rank === 2,\n      () => `Error in batchNorm2D: x must be rank 2 but got rank ` +\n          `${$x.rank}.`);\n  util.assert(\n      $mean.rank === 2 || $mean.rank === 1,\n      () => `Error in batchNorm2D: mean must be rank 2 or rank 1 but ` +\n          `got rank ${$mean.rank}.`);\n  util.assert(\n      $variance.rank === 2 || $variance.rank === 1,\n      () => `Error in batchNorm2D: variance must be rank 2 or rank 1 ` +\n          `but got rank ${$variance.rank}.`);\n  if ($scale != null) {\n    util.assert(\n        $scale.rank === 2 || $scale.rank === 1,\n        () => `Error in batchNorm2D: scale must be rank 2 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n  }\n  if ($offset != null) {\n    util.assert(\n        $offset.rank === 2 || $offset.rank === 1,\n        () => `Error in batchNorm2D: offset must be rank 2 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n  }\n\n  return batchNorm($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\n\nexport const batchNorm2d = op({batchNorm2d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {FusedBatchNorm, FusedBatchNormAttrs, FusedBatchNormInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor, Tensor1D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {Rank, TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {xAs4D} from './batchnorm_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Batch normalization.\n *\n * As described in\n * [http://arxiv.org/abs/1502.03167](http://arxiv.org/abs/1502.03167).\n *\n * Mean, variance, scale, and offset can be of two shapes:\n *   - The same shape as the input.\n *   - In the common case, the depth dimension is the last dimension of x, so\n *     the values would be an `tf.Tensor1D` of shape [depth].\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that parameters passed are of given rank\n *   - `tf.batchNorm2d`\n *   - `tf.batchNorm3d`\n *   - `tf.batchNorm4d`\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction batchNorm_<R extends Rank>(\n    x: Tensor<R>|TensorLike, mean: Tensor<R>|Tensor1D|TensorLike,\n    variance: Tensor<R>|Tensor1D|TensorLike,\n    offset?: Tensor<R>|Tensor1D|TensorLike,\n    scale?: Tensor<R>|Tensor1D|TensorLike,\n    varianceEpsilon?: number): Tensor<R> {\n  if (varianceEpsilon == null) {\n    varianceEpsilon = 0.001;\n  }\n  const $x = convertToTensor(x, 'x', 'batchNorm');\n  const $mean = convertToTensor(mean, 'mean', 'batchNorm');\n  const $variance = convertToTensor(variance, 'variance', 'batchNorm');\n  let $scale: Tensor<R>|Tensor1D;\n  if (scale != null) {\n    $scale = convertToTensor(scale, 'scale', 'batchNorm');\n  }\n  let $offset: Tensor<R>|Tensor1D;\n  if (offset != null) {\n    $offset = convertToTensor(offset, 'offset', 'batchNorm');\n  }\n\n  util.assert(\n      $mean.rank === $variance.rank,\n      () => 'Batch normalization gradient requires mean and variance to have ' +\n          'equal ranks.');\n  util.assert(\n      $offset == null || $mean.rank === $offset.rank,\n      () => 'Batch normalization gradient requires mean and offset to have ' +\n          'equal ranks.');\n  util.assert(\n      $scale == null || $mean.rank === $scale.rank,\n      () => 'Batch normalization gradient requires mean and scale to have ' +\n          'equal ranks.');\n\n  const x4D: Tensor4D = xAs4D($x);\n\n  const inputs: FusedBatchNormInputs = {\n    x: x4D,\n    scale: $scale,\n    offset: $offset,\n    mean: $mean,\n    variance: $variance\n  };\n\n  const attrs: FusedBatchNormAttrs = {varianceEpsilon};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  FusedBatchNorm, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as Tensor<R>;\n\n  return reshape(res, $x.shape);\n}\n\nexport const batchNorm = op({batchNorm_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor, Tensor4D} from '../tensor';\nimport {Rank} from '../types';\nimport {reshape} from './reshape';\n\nexport function xAs4D<R extends Rank>(x: Tensor<R>) {\n  let x4D: Tensor4D;\n  if (x.rank === 0 || x.rank === 1) {\n    x4D = reshape(x, [1, 1, 1, x.size]);\n  } else if (x.rank === 2) {\n    x4D = reshape(x, [1, 1, x.shape[0], x.shape[1]]);\n  } else if (x.rank === 3) {\n    x4D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n  } else {\n    x4D = x as Tensor4D;\n  }\n\n  return x4D;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor1D, Tensor3D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {batchNorm} from './batchnorm';\nimport {op} from './operation';\n\n/**\n * Batch normalization, strictly for 3D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm3d_(\n    x: Tensor3D|TensorLike, mean: Tensor3D|Tensor1D|TensorLike,\n    variance: Tensor3D|Tensor1D|TensorLike,\n    offset?: Tensor3D|Tensor1D|TensorLike, scale?: Tensor3D|Tensor1D|TensorLike,\n    varianceEpsilon?: number): Tensor3D {\n  const $x = convertToTensor(x, 'x', 'batchNorm');\n  const $mean = convertToTensor(mean, 'mean', 'batchNorm');\n  const $variance = convertToTensor(variance, 'variance', 'batchNorm');\n  let $scale: Tensor3D|Tensor1D;\n  if (scale != null) {\n    $scale = convertToTensor(scale, 'scale', 'batchNorm');\n  }\n  let $offset: Tensor3D|Tensor1D;\n  if (offset != null) {\n    $offset = convertToTensor(offset, 'offset', 'batchNorm');\n  }\n  util.assert(\n      $x.rank === 3,\n      () => `Error in batchNorm3D: x must be rank 3 but got rank ` +\n          `${$x.rank}.`);\n  util.assert(\n      $mean.rank === 3 || $mean.rank === 1,\n      () => `Error in batchNorm3D: mean must be rank 3 or rank 1 but ` +\n          `got rank ${$mean.rank}.`);\n  util.assert(\n      $variance.rank === 3 || $variance.rank === 1,\n      () => `Error in batchNorm3D: variance must be rank 3 or rank 1 ` +\n          `but got rank ${$variance.rank}.`);\n  if ($scale != null) {\n    util.assert(\n        $scale.rank === 3 || $scale.rank === 1,\n        () => `Error in batchNorm3D: scale must be rank 3 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n  }\n  if ($offset != null) {\n    util.assert(\n        $offset.rank === 3 || $offset.rank === 1,\n        () => `Error in batchNorm3D: offset must be rank 3 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n  }\n\n  return batchNorm($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\n\nexport const batchNorm3d = op({batchNorm3d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor1D, Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {batchNorm} from './batchnorm';\nimport {op} from './operation';\n\n/**\n * Batch normalization, strictly for 4D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm4d_(\n    x: Tensor4D|TensorLike, mean: Tensor4D|Tensor1D|TensorLike,\n    variance: Tensor4D|Tensor1D|TensorLike,\n    offset?: Tensor4D|Tensor1D|TensorLike, scale?: Tensor4D|Tensor1D|TensorLike,\n    varianceEpsilon?: number): Tensor4D {\n  const $x = convertToTensor(x, 'x', 'batchNorm');\n  const $mean = convertToTensor(mean, 'mean', 'batchNorm');\n  const $variance = convertToTensor(variance, 'variance', 'batchNorm');\n  let $scale: Tensor4D|Tensor1D;\n  if (scale != null) {\n    $scale = convertToTensor(scale, 'scale', 'batchNorm');\n  }\n  let $offset: Tensor4D|Tensor1D;\n  if (offset != null) {\n    $offset = convertToTensor(offset, 'offset', 'batchNorm');\n  }\n  util.assert(\n      $x.rank === 4,\n      () => `Error in batchNorm4D: x must be rank 4 but got rank ` +\n          `${$x.rank}.`);\n  util.assert(\n      $mean.rank === 4 || $mean.rank === 1,\n      () => `Error in batchNorm4D: mean must be rank 4 or rank 1 but ` +\n          `got rank ${$mean.rank}.`);\n  util.assert(\n      $variance.rank === 4 || $variance.rank === 1,\n      () => `Error in batchNorm4D: variance must be rank 4 or rank 1 ` +\n          `but got rank ${$variance.rank}.`);\n  if ($scale != null) {\n    util.assert(\n        $scale.rank === 4 || $scale.rank === 1,\n        () => `Error in batchNorm4D: scale must be rank 4 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n  }\n  if ($offset != null) {\n    util.assert(\n        $offset.rank === 4 || $offset.rank === 1,\n        () => `Error in batchNorm4D: offset must be rank 4 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n  }\n  return batchNorm($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\n\nexport const batchNorm4d = op({batchNorm4d_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {ClipByValue, ClipByValueAttrs, ClipByValueInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Clips values element-wise. `max(min(x, clipValueMax), clipValueMin)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.clipByValue(-2, 3).print();  // or tf.clipByValue(x, -2, 3)\n * ```\n * @param x The input tensor.\n * @param clipValueMin Lower-bound of range to be clipped to.\n * @param clipValueMax Upper-bound of range to be clipped to.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction clipByValue_<T extends Tensor>(\n    x: T|TensorLike, clipValueMin: number, clipValueMax: number): T {\n  const $x = convertToTensor(x, 'x', 'clipByValue');\n  util.assert(\n      (clipValueMin <= clipValueMax),\n      () => `Error in clip: min (${clipValueMin}) must be ` +\n          `less than or equal to max (${clipValueMax}).`);\n\n  const inputs: ClipByValueInputs = {x: $x};\n  const attrs: ClipByValueAttrs = {clipValueMin, clipValueMax};\n\n  return ENGINE.runKernel(\n      ClipByValue, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const clipByValue = op({clipByValue_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Identity, IdentityInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Creates a new tensor with the same values and shape as the specified\n * tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n *\n * x.clone().print();\n * ```\n *\n * @param x The tensor to clone.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction clone_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'clone', 'string_or_numeric');\n  const inputs: IdentityInputs = {x: $x};\n\n  // Note this op is called tf.identity in python. Hence the kernel name used\n  // here.\n  return ENGINE.runKernel(Identity, inputs as {} as NamedTensorMap);\n}\n\nexport const clone = op({clone_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Concat, ConcatAttrs, ConcatInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensorArray} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {assert} from '../util';\n\nimport {clone} from './clone';\nimport {op} from './operation';\n\n/**\n * Concatenates a list of `tf.Tensor`s along a given axis.\n *\n * The tensors ranks and types must match, and their sizes must match in all\n * dimensions except `axis`.\n *\n * Also available are stricter rank-specific methods that assert that\n * `tensors` are of the given rank:\n *   - `tf.concat1d`\n *   - `tf.concat2d`\n *   - `tf.concat3d`\n *   - `tf.concat4d`\n *\n * Except `tf.concat1d` (which does not have axis param), all methods have\n * same signature as this method.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * a.concat(b).print();  // or a.concat(b)\n * ```\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.concat([a, b, c]).print();\n * ```\n *\n * ```js\n * const a = tf.tensor2d([[1, 2], [10, 20]]);\n * const b = tf.tensor2d([[3, 4], [30, 40]]);\n * const axis = 1;\n * tf.concat([a, b], axis).print();\n * ```\n * @param tensors A list of tensors to concatenate.\n * @param axis The axis to concate along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction concat_<T extends Tensor>(tensors: Array<T|TensorLike>, axis = 0): T {\n  assert(tensors.length >= 1, () => 'Pass at least one tensor to concat');\n\n  const $tensors =\n      convertToTensorArray(tensors, 'tensors', 'concat', 'string_or_numeric');\n\n  if ($tensors[0].dtype === 'complex64') {\n    $tensors.forEach(tensor => {\n      if (tensor.dtype !== 'complex64') {\n        throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${tensor.dtype}. `);\n      }\n    });\n  }\n\n  if ($tensors.length === 1) {\n    return clone($tensors[0]);\n  }\n\n  const inputs: ConcatInputs = $tensors;\n  const attr: ConcatAttrs = {axis};\n\n  return ENGINE.runKernel(\n      Concat, inputs as {} as NamedTensorMap, attr as {} as NamedAttrMap);\n}\n\nexport const concat = op({concat_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor1D} from '../tensor';\nimport {TensorLike} from '../types';\n\nimport {concat} from './concat';\nimport {op} from './operation';\n\n/**\n * Concatenates a list of`tf.Tensor1D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(3) = |r1, g1, b1|\n * B: shape(2) = |r2, g2|\n * C = tf.concat1d([A, B]) == |r1, g1, b1, r2, g2|\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @return The concatenated array.\n */\nfunction concat1d_(tensors: Array<Tensor1D|TensorLike>): Tensor1D {\n  return concat(tensors, 0 /* axis */);\n}\n\nexport const concat1d = op({concat1d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor2D} from '../tensor';\nimport {TensorLike} from '../types';\n\nimport {concat} from './concat';\nimport {op} from './operation';\n\n/**\n * Concatenates a list of`tf.Tensor2D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(2, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *\n * B: shape(2, 3) = | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * C = tf.concat2d([A, B], axis)\n *\n * if axis = 0:\n * C: shape(4, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *                  | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * if axis = 1:\n * C = shape(2, 6) = | r1, g1, b1, r3, g3, b3 |\n *                   | r2, g2, b2, r4, g4, b4 |\n *\n *\n * @param tensors A list of `tf.Tensor`s to concatenate.\n * @param axis The axis to concatenate along.\n * @return The concatenated array.\n */\nfunction concat2d_(\n    tensors: Array<Tensor2D|TensorLike>, axis: number): Tensor2D {\n  return concat(tensors, axis);\n}\n\nexport const concat2d = op({concat2d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor3D} from '../tensor';\nimport {TensorLike} from '../types';\n\nimport {concat} from './concat';\nimport {op} from './operation';\n\n/**\n * Concatenates a list of `tf.Tensor3D`s along an axis.\n * See `concat` for details.\n *\n * For example, if:\n * A: shape(2, 1, 3) = | r1, g1, b1 |\n *                     | r2, g2, b2 |\n *\n * B: shape(2, 1, 3) = | r3, g3, b3 |\n *                     | r4, g4, b4 |\n *\n * C = tf.concat3d([A, B], axis)\n *\n * if axis = 0:\n * C: shape(4, 1, 3) = | r1, g1, b1 |\n *                     | r2, g2, b2 |\n *                     | r3, g3, b3 |\n *                     | r4, g4, b4 |\n *\n * if axis = 1:\n * C: shape(2, 2, 3) = | r1, g1, b1, r3, g3, b3 |\n *                     | r2, g2, b2, r4, g4, b4 |\n *\n * if axis = 2:\n * C = shape(2, 1, 6) = | r1, g1, b1, r3, g3, b3 |\n *                      | r2, g2, b2, r4, g4, b4 |\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @param axis The axis to concate along.\n * @return The concatenated array.\n */\nfunction concat3d_(\n    tensors: Array<Tensor3D|TensorLike>, axis: number): Tensor3D {\n  return concat(tensors, axis);\n}\n\nexport const concat3d = op({concat3d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor4D} from '../tensor';\nimport {TensorLike} from '../types';\n\nimport {concat} from './concat';\nimport {op} from './operation';\n\n/**\n * Concatenates a list of `tf.Tensor4D`s along an axis.\n * See `concat` for details.\n *\n * @param tensors A list of `tf.Tensor`s to concatenate.\n * @param axis The axis to concate along.\n * @return The concatenated array.\n */\nfunction concat4d_(\n    tensors: Array<Tensor4D|TensorLike>, axis: number): Tensor4D {\n  return concat(tensors, axis);\n}\n\nexport const concat4d = op({concat4d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor2D, Tensor3D, Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {conv2d} from './conv2d';\nimport * as conv_util from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes a 1D convolution over the input x.\n *\n * @param x The input tensor, of rank 3 or rank 2, of shape\n *     `[batch, width, inChannels]`. If rank 2, batch of 1 is assumed.\n * @param filter The filter, rank 3, of shape\n *     `[filterWidth, inDepth, outDepth]`.\n * @param stride The number of entries by which the filter is moved right at\n *     each step.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat An optional string from \"NWC\", \"NCW\". Defaults to \"NWC\",\n *     the data is stored in the order of [batch, in_width, in_channels]. Only\n *     \"NWC\" is currently supported.\n * @param dilation The dilation rate in which we sample input values in\n *     atrous convolution. Defaults to `1`. If it is greater than 1, then\n *     stride must be `1`.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv1d_<T extends Tensor2D|Tensor3D>(\n    x: T|TensorLike, filter: Tensor3D|TensorLike, stride: number,\n    pad: 'valid'|'same'|number|conv_util.ExplicitPadding,\n    dataFormat: 'NWC'|'NCW' = 'NWC', dilation = 1,\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'conv1d');\n  const $filter = convertToTensor(filter, 'filter', 'conv1d');\n\n  let x3D = $x as Tensor3D;\n  let reshapedTo3D = false;\n  if ($x.rank === 2) {\n    reshapedTo3D = true;\n    x3D = reshape($x, [1, $x.shape[0], $x.shape[1]]);\n  }\n\n  util.assert(\n      x3D.rank === 3,\n      () => `Error in conv1d: input must be rank 3, but got rank ${x3D.rank}.`);\n  util.assert(\n      $filter.rank === 3,\n      () => `Error in conv1d: filter must be rank 3, but got rank ` +\n          `${$filter.rank}.`);\n  conv_util.checkPadOnDimRoundingMode('conv1d', pad, dimRoundingMode);\n  util.assert(\n      x3D.shape[2] === $filter.shape[1],\n      () => `Error in conv1d: depth of input (${x3D.shape[2]}) must match ` +\n          `input depth for filter ${$filter.shape[1]}.`);\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(stride, dilation),\n      () => 'Error in conv1D: Either stride or dilation must be 1. ' +\n          `Got stride ${stride} and dilation '${dilation}'`);\n  util.assert(\n      dataFormat === 'NWC',\n      () => `Error in conv1d: got dataFormat of ${\n          dataFormat} but only NWC is currently supported.`);\n\n  const filter4D = reshape(\n      $filter, [1, $filter.shape[0], $filter.shape[1], $filter.shape[2]]);\n  const input4D = reshape(x3D, [x3D.shape[0], 1, x3D.shape[1], x3D.shape[2]]);\n  const strides: [number, number] = [1, stride];\n  const dilations: [number, number] = [1, dilation];\n\n  const conv2dDataFormat = 'NHWC';\n\n  const res = conv2d(\n      (input4D as Tensor4D), (filter4D as Tensor4D), strides, pad,\n      conv2dDataFormat, dilations, dimRoundingMode);\n\n  if (reshapedTo3D) {\n    return reshape(res, [res.shape[2], res.shape[3]]) as T;\n  }\n\n  return reshape(res, [res.shape[0], res.shape[2], res.shape[3]]) as T;\n}\n\nexport const conv1d = op({conv1d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Conv2D, Conv2DAttrs, Conv2DInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport * as conv_util from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes a 2D convolution over the input x.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv2d_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filter: Tensor4D|TensorLike,\n    strides: [number, number]|number,\n    pad: 'valid'|'same'|number|conv_util.ExplicitPadding,\n    dataFormat: 'NHWC'|'NCHW' = 'NHWC',\n    dilations: [number, number]|number = [1, 1],\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'conv2d', 'float32');\n  const $filter = convertToTensor(filter, 'filter', 'conv2d', 'float32');\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in conv2d: input must be rank 4, but got rank ${x4D.rank}.`);\n  util.assert(\n      $filter.rank === 4,\n      () => `Error in conv2d: filter must be rank 4, but got rank ` +\n          `${$filter.rank}.`);\n  conv_util.checkPadOnDimRoundingMode('conv2d', pad, dimRoundingMode);\n  const inDepth = dataFormat === 'NHWC' ? x4D.shape[3] : x4D.shape[1];\n  util.assert(\n      inDepth === $filter.shape[2],\n      () => `Error in conv2d: depth of input (${inDepth}) must match ` +\n          `input depth for filter ${$filter.shape[2]}.`);\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in conv2D: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n\n  const inputs: Conv2DInputs = {x: x4D, filter: $filter};\n  const attrs:\n      Conv2DAttrs = {strides, pad, dataFormat, dilations, dimRoundingMode};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  Conv2D, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n  return res;\n}\n\nexport const conv2d = op({conv2d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {conv2DBackpropInput} from './conv2d_backprop_input';\nimport {ExplicitPadding} from './conv_util';\nimport {op} from './operation';\n\n/**\n * Computes the transposed 2D convolution of an image, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 4 or rank 3, of shape\n *   `[batch, height, width, inDepth]`. If rank 3, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 4 or rank 3:\n *     `[batch, height, width, outDepth]`. If rank 3, batch of 1 is assumed.\n * @param strides The strides of the original convolution:\n *     `[strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv2dTranspose_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filter: Tensor4D|TensorLike,\n    outputShape: [number, number, number, number]|[number, number, number],\n    strides: [number, number]|number,\n    pad: 'valid'|'same'|number|ExplicitPadding,\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'conv2dTranspose');\n  const $filter = convertToTensor(filter, 'filter', 'conv2dTranspose');\n\n  return conv2DBackpropInput(\n      outputShape, $x, $filter, strides, pad, 'NHWC', dimRoundingMode);\n}\n\nexport const conv2dTranspose = op({conv2dTranspose_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Conv2DBackpropInput, Conv2DBackpropInputAttrs, Conv2DBackpropInputInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport * as util from '../util';\n\nimport * as conv_util from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes the derivative of the input of a 2D convolution.\n *\n * @param xShape The shape of the input: [batch, height, width, inDepth].\n * If length of 3, batch of 1 is assumed.\n * @param dy The derivative of the output, of rank 4 or rank 3 of shape\n *   `[batch, outHeight, outWidth, outDepth]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm used:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction conv2DBackpropInput_<T extends Tensor3D|Tensor4D>(\n    xShape: [number, number, number, number]|[number, number, number], dy: T,\n    filter: Tensor4D, strides: [number, number]|number,\n    pad: 'valid'|'same'|number|conv_util.ExplicitPadding,\n    dataFormat: 'NHWC'|'NCHW' = 'NHWC',\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  util.assert(\n      xShape.length === dy.rank,\n      () => `Length of inShape ` +\n          `(${xShape.length}) and rank of dy (${dy.rank}) must match`);\n\n  let xShape4D = xShape as [number, number, number, number];\n  let dy4D = dy as Tensor4D;\n  let reshapedTo4D = false;\n  if (dy.rank === 3) {\n    reshapedTo4D = true;\n    dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n    xShape4D = [1, xShape[0], xShape[1], xShape[2]];\n  }\n\n  util.assert(\n      xShape4D.length === 4,\n      () =>\n          `Error in conv2dDerInput: inShape must be length 4, but got length ` +\n          `${xShape4D.length}.`);\n  util.assert(\n      dy4D.rank === 4,\n      () => `Error in conv2dDerInput: dy must be rank 4, but got ` +\n          `rank ${dy4D.rank}`);\n  util.assert(\n      filter.rank === 4,\n      () => `Error in conv2dDerInput: filter must be rank 4, but got ` +\n          `rank ${filter.rank}`);\n  const inDepth = dataFormat === 'NHWC' ? xShape4D[3] : xShape4D[1];\n  const outDepth = dataFormat === 'NHWC' ? dy4D.shape[3] : dy4D.shape[1];\n  util.assert(\n      inDepth === filter.shape[2],\n      () => `Error in conv2dDerInput: depth of input (${inDepth}) must ` +\n          `match input depth for filter ${filter.shape[2]}.`);\n  util.assert(\n      outDepth === filter.shape[3],\n      () => `Error in conv2dDerInput: depth of output (${outDepth}) must ` +\n          `match output depth for filter ${filter.shape[3]}.`);\n  conv_util.checkPadOnDimRoundingMode('conv2dDerInput', pad, dimRoundingMode);\n  const inputs: Conv2DBackpropInputInputs = {dy: dy4D, filter};\n  const attrs: Conv2DBackpropInputAttrs =\n      {strides, pad, dataFormat, dimRoundingMode, inputShape: xShape4D};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  Conv2DBackpropInput, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n  return res;\n}\n\nexport const conv2DBackpropInput = op({conv2DBackpropInput_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Conv3D, Conv3DAttrs, Conv3DInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor4D, Tensor5D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {eitherStridesOrDilationsAreOne} from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes a 3D convolution over the input x.\n *\n * @param x The input tensor, of rank 5 or rank 4, of shape\n *     `[batch, depth, height, width, channels]`. If rank 4,\n * batch of 1 is assumed.\n * @param filter The filter, rank 5, of shape\n *     `[filterDepth, filterHeight, filterWidth, inChannels, outChannels]`.\n *      inChannels must match between input and filter.\n * @param strides The strides of the convolution: `[strideDepth, strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat: An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @param dilations The dilation rates: `[dilationDepth, dilationHeight,\n *     dilationWidth]` in which we sample input values across the height\n *     and width dimensions in atrous convolution. Defaults to `[1, 1, 1]`.\n *     If `dilations` is a single number, then\n *     `dilationDepth == dilationHeight == dilationWidth`. If it is greater\n *     than 1, then all values of `strides` must be 1.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv3d_<T extends Tensor4D|Tensor5D>(\n    x: T|TensorLike, filter: Tensor5D|TensorLike,\n    strides: [number, number, number]|number, pad: 'valid'|'same',\n    dataFormat: 'NDHWC'|'NCDHW' = 'NDHWC',\n    dilations: [number, number, number]|number = [1, 1, 1]): T {\n  const $x = convertToTensor(x, 'x', 'conv3d');\n  const $filter = convertToTensor(filter, 'filter', 'conv3d');\n\n  let x5D = $x as Tensor5D;\n  let reshapedTo5D = false;\n\n  if ($x.rank === 4) {\n    reshapedTo5D = true;\n    x5D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n  }\n  util.assert(\n      x5D.rank === 5,\n      () => `Error in conv3d: input must be rank 5, but got rank ${x5D.rank}.`);\n  util.assert(\n      $filter.rank === 5,\n      () => `Error in conv3d: filter must be rank 5, but got rank ` +\n          `${$filter.rank}.`);\n  util.assert(\n      x5D.shape[4] === $filter.shape[3],\n      () => `Error in conv3d: depth of input (${x5D.shape[4]}) must match ` +\n          `input depth for filter ${$filter.shape[3]}.`);\n  util.assert(\n      eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in conv3D: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n  util.assert(\n      dataFormat === 'NDHWC',\n      () => `Error in conv3d: got dataFormat of ${\n          dataFormat} but only NDHWC is currently supported.`);\n\n  const inputs: Conv3DInputs = {x: x5D, filter: $filter};\n\n  const attrs: Conv3DAttrs = {strides, pad, dataFormat, dilations};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  Conv3D, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo5D) {\n    return reshape(\n               res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]) as\n        T;\n  }\n  return res;\n}\n\nexport const conv3d = op({conv3d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor4D, Tensor5D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {conv3DBackpropInput} from './conv3d_backprop_input';\nimport {op} from './operation';\n\n/**\n * Computes the transposed 3D convolution of a volume, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 5 or rank 4, of shape\n *   `[batch, depth, height, width, inDepth]`. If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[depth, filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 5 or rank 4:\n *     `[batch, depth, height, width, outDepth]`. If rank 3, batch of 1 is\n *    assumed.\n * @param strides The strides of the original convolution:\n *     `[strideDepth, strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv3dTranspose_<T extends Tensor4D|Tensor5D>(\n    x: T|TensorLike, filter: Tensor5D|TensorLike,\n    outputShape:\n        [number, number, number, number,\n         number]|[number, number, number, number],\n    strides: [number, number, number]|number, pad: 'valid'|'same'): T {\n  const $x = convertToTensor(x, 'x', 'conv3dTranspose');\n  const $filter = convertToTensor(filter, 'filter', 'conv3dTranspose');\n\n  return conv3DBackpropInput(outputShape, $x, $filter, strides, pad);\n}\n\nexport const conv3dTranspose = op({conv3dTranspose_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Conv3DBackpropInputV2, Conv3DBackpropInputV2Attrs, Conv3DBackpropInputV2Inputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor4D, Tensor5D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport * as util from '../util';\n\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes the derivative of the input of a 3D convolution.\n *\n * @param xShape The shape of the input: [batch, depth, height, width,\n * in_channels]. If length of 4, batch of 1 is assumed.\n * @param dy The derivative of the output, of rank 5 or rank 4 of shape\n *   `[batch, outDepth, outHeight, outWidth, in_channels]`.\n * If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 5, of shape\n *     `[filterDepth, filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideDepth, strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm used:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n */\nfunction conv3DBackpropInput_<T extends Tensor4D|Tensor5D>(\n    xShape:\n        [number, number, number, number,\n         number]|[number, number, number, number],\n    dy: T, filter: Tensor5D, strides: [number, number, number]|number,\n    pad: 'valid'|'same'): T {\n  util.assert(\n      xShape.length === dy.rank,\n      () => `Length of inShape ` +\n          `(${xShape.length}) and rank of dy (${dy.rank}) must match`);\n\n  let xShape5D = xShape as [number, number, number, number, number];\n  let dy5D = dy as Tensor5D;\n  let reshapedTo5D = false;\n  if (dy.rank === 4) {\n    reshapedTo5D = true;\n    dy5D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2], dy.shape[3]]);\n    xShape5D = [1, xShape[0], xShape[1], xShape[2], xShape[3]];\n  }\n\n  const inDepth = xShape5D[4];\n  const outDepth = dy5D.shape[4];\n  util.assert(\n      xShape5D.length === 5,\n      () =>\n          `Error in conv3dDerInput: inShape must be length 5, but got length ` +\n          `${xShape5D.length}.`);\n  util.assert(\n      dy5D.rank === 5,\n      () => `Error in conv3dDerInput: dy must be rank 5, but got ` +\n          `rank ${dy5D.rank}`);\n  util.assert(\n      filter.rank === 5,\n      () => `Error in conv3dDerInput: filter must be rank 5, but got ` +\n          `rank ${filter.rank}`);\n  util.assert(\n      inDepth === filter.shape[3],\n      () => `Error in conv3dDerInput: depth of input (${inDepth}) must ` +\n          `match input depth for filter ${filter.shape[3]}.`);\n  util.assert(\n      outDepth === filter.shape[4],\n      () => `Error in conv3dDerInput: depth of output (${outDepth}) must ` +\n          `match output depth for filter ${filter.shape[4]}.`);\n\n  const inputs: Conv3DBackpropInputV2Inputs = {dy: dy5D, filter};\n\n  const attrs:\n      Conv3DBackpropInputV2Attrs = {pad, strides, inputShape: xShape5D};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  Conv3DBackpropInputV2, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo5D) {\n    return reshape(\n               res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]) as\n        T;\n  }\n  return res;\n}\n\nexport const conv3DBackpropInput = op({conv3DBackpropInput_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {DepthwiseConv2dNative, DepthwiseConv2dNativeAttrs, DepthwiseConv2dNativeInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport * as conv_util from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Depthwise 2D convolution.\n *\n * Given a 4D `input` array and a `filter` array of shape\n * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing\n * `inChannels` convolutional filters of depth 1, this op applies a\n * different filter to each input channel (expanding from 1 channel to\n * `channelMultiplier` channels for each), then concatenates the results\n * together. The output has `inChannels * channelMultiplier` channels.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction depthwiseConv2d_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filter: Tensor4D|TensorLike,\n    strides: [number, number]|number,\n    pad: 'valid'|'same'|number|conv_util.ExplicitPadding,\n    dataFormat: 'NHWC'|'NCHW' = 'NHWC',\n    dilations: [number, number]|number = [1, 1],\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'depthwiseConv2d', 'float32');\n  const $filter =\n      convertToTensor(filter, 'filter', 'depthwiseConv2d', 'float32');\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in depthwiseConv2d: input must be rank 4, but got ` +\n          `rank ${x4D.rank}.`);\n  util.assert(\n      $filter.rank === 4,\n      () => `Error in depthwiseConv2d: filter must be rank 4, but got rank ` +\n          `${$filter.rank}.`);\n  util.assert(\n      x4D.shape[3] === $filter.shape[2],\n      () => `Error in depthwiseConv2d: number of input channels ` +\n          `(${x4D.shape[3]}) must match the inChannels dimension in ` +\n          `filter ${$filter.shape[2]}.`);\n  conv_util.checkPadOnDimRoundingMode('depthwiseConv2d', pad, dimRoundingMode);\n  const inputs: DepthwiseConv2dNativeInputs = {x: x4D, filter: $filter};\n  const attrs: DepthwiseConv2dNativeAttrs =\n      {strides, pad, dataFormat, dilations, dimRoundingMode};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  DepthwiseConv2dNative, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n  return res;\n}\n\nexport const depthwiseConv2d = op({depthwiseConv2d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {RealDiv, RealDivInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {floorDiv} from './floorDiv';\nimport {op} from './operation';\n\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction div_<T extends Tensor>(a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'div');\n  let $b = convertToTensor(b, 'b', 'div');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  if ($a.dtype === 'int32' && $b.dtype === 'int32') {\n    return floorDiv($a, $b);\n  }\n\n  const inputs: RealDivInputs = {a: $a, b: $b};\n  const attrs = {};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  return ENGINE.runKernel(RealDiv, inputs as {} as NamedTensorMap, attrs) as T;\n}\n\nexport const div = op({div_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {FloorDiv, FloorDivInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n * The result is rounded with floor function.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.floorDiv(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.floorDiv(b).print();  // or tf.floorDiv(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction floorDiv_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'floorDiv');\n  let $b = convertToTensor(b, 'b', 'floorDiv');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const inputs: FloorDivInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(FloorDiv, inputs as {} as NamedTensorMap);\n}\n\nexport const floorDiv = op({floorDiv_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Elu, EluInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes exponential linear element-wise: `x > 0 ? x : (e ^ x) - 1`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 1, -3, 2]);\n *\n * x.elu().print();  // or tf.elu(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction elu_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'elu', 'float32');\n\n  const inputs: EluInputs = {x: $x};\n\n  return ENGINE.runKernel(Elu, inputs as {} as NamedTensorMap);\n}\n\nexport const elu = op({elu_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Equal, EqualInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns the truth value of (a == b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.equal(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction equal_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'equal', 'string_or_numeric');\n  let $b = convertToTensor(b, 'b', 'equal', 'string_or_numeric');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: EqualInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(Equal, inputs as {} as NamedTensorMap);\n}\n\nexport const equal = op({equal_});\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Returns the dimensions in the input shape that are broadcasted to\n * produce the provided output shape.\n *\n * The returned dimensions are 0-indexed and sorted. An example:\n * inShape = [4, 1, 3]\n * outShape = [5, 4, 3, 3]\n * result = [1]. Dimension 1 (2nd dimension of input) gets broadcasted 1 => 3.\n */\nexport function getBroadcastDims(\n    inShape: number[], outShape: number[]): number[] {\n  const inRank = inShape.length;\n  const dims: number[] = [];\n  for (let i = 0; i < inRank; i++) {\n    const dim = inRank - 1 - i;\n    const a = inShape[dim] || 1;\n    const b = outShape[outShape.length - 1 - i] || 1;\n    if (b > 1 && a === 1) {\n      dims.unshift(dim);\n    }\n  }\n  return dims;\n}\n\n/**\n * Returns the axes in the output space that should be reduced to produce\n * the input space.\n */\nexport function getReductionAxes(\n    inShape: number[], outShape: number[]): number[] {\n  const result: number[] = [];\n  for (let i = 0; i < outShape.length; i++) {\n    const inDim = inShape[inShape.length - i - 1];\n    const outAxis = outShape.length - i - 1;\n    const outDim = outShape[outAxis];\n    if (inDim == null || (inDim === 1 && outDim > 1)) {\n      result.unshift(outAxis);\n    }\n  }\n  return result;\n}\n\nexport function assertAndGetBroadcastShape(\n    shapeA: number[], shapeB: number[]): number[] {\n  const result: number[] = [];\n  const l = Math.max(shapeA.length, shapeB.length);\n\n  for (let i = 0; i < l; i++) {\n    let a = shapeA[shapeA.length - i - 1];\n    if (a == null) {\n      a = 1;\n    }\n    let b = shapeB[shapeB.length - i - 1];\n    if (b == null) {\n      b = 1;\n    }\n    if (a === 1) {\n      result.unshift(b);\n    } else if (b === 1) {\n      result.unshift(a);\n    } else if (a !== b) {\n      const errMsg = `Operands could not be broadcast together with shapes ` +\n          `${shapeA} and ${shapeB}.`;\n      throw Error(errMsg);\n    } else {\n      result.unshift(a);\n    }\n  }\n  return result;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Exp, ExpInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes exponential of the input `tf.Tensor` element-wise. `e ^ x`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, -3]);\n *\n * x.exp().print();  // or tf.exp(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction exp_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'exp');\n\n  const inputs: ExpInputs = {x: $x};\n  return ENGINE.runKernel(Exp, inputs as {} as NamedTensorMap);\n}\nexport const exp = op({exp_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {ExpandDims, ExpandDimsAttrs, ExpandDimsInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Returns a `tf.Tensor` that has expanded rank, by inserting a dimension\n * into the tensor's shape.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const axis = 1;\n * x.expandDims(axis).print();\n * ```\n *\n * @param x The input tensor whose dimensions to be expanded.\n * @param axis The dimension index at which to insert shape of `1`. Defaults\n *     to 0 (the first dimension).\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction expandDims_<T extends Tensor>(x: Tensor|TensorLike, axis = 0): T {\n  const $x = convertToTensor(x, 'x', 'expandDims', 'string_or_numeric');\n\n  util.assert(axis <= $x.rank, () => 'Axis must be <= rank of the tensor');\n\n  const inputs: ExpandDimsInputs = {input: $x};\n  const attrs: ExpandDimsAttrs = {dim: axis};\n\n  return ENGINE.runKernel(\n      ExpandDims, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const expandDims = op({expandDims_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor2D} from '../tensor';\nimport {DataType} from '../types';\n\nimport {buffer} from './buffer';\nimport {expandDims} from './expand_dims';\nimport {op} from './operation';\nimport {reshape} from './reshape';\nimport {tile} from './tile';\n\n/**\n * Create an identity matrix.\n *\n * @param numRows Number of rows.\n * @param numColumns Number of columns. Defaults to `numRows`.\n * @param batchShape If provided, will add the batch shape to the beginning\n *   of the shape of the returned `tf.Tensor` by repeating the identity\n *   matrix.\n * @param dtype Data type.\n * @returns Identity matrix of the specified size and data type, possibly\n *   with batch repetition if `batchShape` is specified.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction eye_(\n    numRows: number, numColumns?: number,\n    batchShape?:\n        [\n          number\n        ]|[number,\n           number]|[number, number, number]|[number, number, number, number],\n    dtype: DataType = 'float32'): Tensor2D {\n  if (numColumns == null) {\n    numColumns = numRows;\n  }\n  const buff = buffer([numRows, numColumns], dtype);\n  const n = numRows <= numColumns ? numRows : numColumns;\n  for (let i = 0; i < n; ++i) {\n    buff.set(1, i, i);\n  }\n  const out: Tensor2D = reshape(buff.toTensor(), [numRows, numColumns]);\n  if (batchShape == null) {\n    return out;\n  } else {\n    if (batchShape.length === 1) {\n      return tile(expandDims(out, 0), [batchShape[0], 1, 1]) as Tensor2D;\n    } else if (batchShape.length === 2) {\n      // tslint:disable-next-line:no-unnecessary-type-assertion\n      return tile(\n                 expandDims(expandDims(out, 0), 0),\n                 [batchShape[0], batchShape[1], 1, 1]) as Tensor2D;\n    } else if (batchShape.length === 3) {\n      // tslint:disable-next-line:no-unnecessary-type-assertion\n      return tile(expandDims(expandDims(expandDims(out, 0), 0), 0), [\n               batchShape[0], batchShape[1], batchShape[2], 1, 1\n             ]) as Tensor2D;\n    } else {\n      throw new Error(\n          `eye() currently supports only 1D and 2D ` +\n          // tslint:disable-next-line:no-any\n          `batchShapes, but received ${(batchShape as any).length}D.`);\n    }\n  }\n}\n\nexport const eye = op({eye_});\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TensorBuffer} from '../tensor';\nimport {DataType, DataTypeMap, Rank, ShapeMap} from '../types';\nimport * as util from '../util';\n\n/**\n * Creates an empty `tf.TensorBuffer` with the specified `shape` and `dtype`.\n *\n * The values are stored in CPU as `TypedArray`. Fill the buffer using\n * `buffer.set()`, or by modifying directly `buffer.values`.\n *\n * When done, call `buffer.toTensor()` to get an immutable `tf.Tensor` with\n * those values.\n *\n * ```js\n * // Create a buffer and set values at particular indices.\n * const buffer = tf.buffer([2, 2]);\n * buffer.set(3, 0, 0);\n * buffer.set(5, 1, 0);\n *\n * // Convert the buffer back to a tensor.\n * buffer.toTensor().print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The dtype of the buffer. Defaults to 'float32'.\n * @param values The values of the buffer as `TypedArray`. Defaults to\n * zeros.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function buffer<R extends Rank, D extends DataType = 'float32'>(\n    shape: ShapeMap[R], dtype: D = 'float32' as D,\n    values?: DataTypeMap[D]): TensorBuffer<R, D> {\n  dtype = dtype || 'float32' as D;\n  util.assertNonNegativeIntegerDimensions(shape);\n  return new TensorBuffer<R, D>(shape, dtype, values);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tile, TileAttrs, TileInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Construct a tensor by repeating it the number of times given by reps.\n *\n * This operation creates a new tensor by replicating `input` `reps`\n * times. The output tensor's i'th dimension has `input.shape[i] *\n * reps[i]` elements, and the values of `input` are replicated\n * `reps[i]` times along the i'th dimension. For example, tiling\n * `[a, b, c, d]` by `[2]` produces `[a, b, c, d, a, b, c, d]`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n *\n * a.tile([2]).print();    // or a.tile([2])\n * ```\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.tile([1, 2]).print();  // or a.tile([1, 2])\n * ```\n * @param x The tensor to tile.\n * @param reps Determines the number of replications per dimension.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction tile_<T extends Tensor>(x: T|TensorLike, reps: number[]): T {\n  const $x = convertToTensor(x, 'x', 'tile', 'string_or_numeric');\n  util.assert(\n      $x.rank === reps.length,\n      () => `Error in transpose: rank of input ${$x.rank} ` +\n          `must match length of reps ${reps}.`);\n\n  const inputs: TileInputs = {x: $x};\n  const attrs: TileAttrs = {reps};\n\n  return ENGINE.runKernel(\n      Tile, inputs as unknown as NamedTensorMap,\n      attrs as unknown as NamedAttrMap);\n}\n\nexport const tile = op({tile_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Fill, FillAttrs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {DataType, Rank, ShapeMap} from '../types';\n\n/**\n * Creates a `tf.Tensor` filled with a scalar value.\n *\n * ```js\n * tf.fill([2, 2], 4).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param value The scalar value to fill the tensor with.\n * @param dtype The type of an element in the resulting tensor. Defaults to\n * 'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction fill<R extends Rank>(\n    shape: ShapeMap[R], value: number|string, dtype?: DataType): Tensor<R> {\n  const attrs: FillAttrs = {shape, value, dtype};\n\n  return ENGINE.runKernel(Fill, {}, attrs as {} as NamedAttrMap);\n}\n\nexport {fill};\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Floor, FloorInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes floor of input `tf.Tensor` element-wise: `floor(x)`.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.floor().print();  // or tf.floor(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction floor_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'floor', 'float32');\n\n  const inputs: FloorInputs = {x: $x};\n  return ENGINE.runKernel(Floor, inputs as {} as NamedTensorMap);\n}\nexport const floor = op({floor_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {GatherV2, GatherV2Attrs, GatherV2Inputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Gather slices from tensor `x`'s axis `axis` according to `indices`.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const indices = tf.tensor1d([1, 3, 3], 'int32');\n *\n * x.gather(indices).print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const indices = tf.tensor1d([1, 1, 0], 'int32');\n *\n * x.gather(indices).print();\n * ```\n * @param x The input tensor whose slices to be gathered.\n * @param indices The indices of the values to extract.\n * @param axis The axis over which to select values. Defaults to 0.\n * @param batchDims Optional. The number of batch dimensions. It must be less\n *     than or equal to rank(indices). Defaults to 0.\n *     The output tensor will have shape of\n *     `x.shape[:axis] + indices.shape[batchDims:] + x.shape[axis + 1:]`\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction gather_<T extends Tensor>(\n    x: T|TensorLike, indices: Tensor|TensorLike, axis = 0, batchDims = 0): T {\n  const $x = convertToTensor(x, 'x', 'gather');\n  const $indices = convertToTensor(indices, 'indices', 'gather', 'int32');\n\n  const inputs: GatherV2Inputs = {x: $x, indices: $indices};\n  const attrs: GatherV2Attrs = {axis, batchDims};\n\n  return ENGINE.runKernel(\n      GatherV2, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const gather = op({gather_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Greater, GreaterInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns the truth value of (a > b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.greater(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction greater_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'greater', 'string_or_numeric');\n  let $b = convertToTensor(b, 'b', 'greater', 'string_or_numeric');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: GreaterInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(Greater, inputs as {} as NamedTensorMap);\n}\n\nexport const greater = op({greater_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {GreaterEqual, GreaterEqualInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns the truth value of (a >= b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.greaterEqual(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction greaterEqual_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'greaterEqual', 'string_or_numeric');\n  let $b = convertToTensor(b, 'b', 'greaterEqual', 'string_or_numeric');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: GreaterEqualInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(GreaterEqual, inputs as {} as NamedTensorMap);\n}\n\nexport const greaterEqual = op({greaterEqual_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {LeakyRelu, LeakyReluAttrs, LeakyReluInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes leaky rectified linear element-wise.\n *\n * See\n * [http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf](\n *     http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf)\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.leakyRelu(0.1).print();  // or tf.leakyRelu(x, 0.1)\n * ```\n * @param x The input tensor.\n * @param alpha The scaling factor for negative values, defaults to 0.2.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction leakyRelu_<T extends Tensor>(x: T|TensorLike, alpha = 0.2): T {\n  const $x = convertToTensor(x, 'x', 'leakyRelu');\n\n  const inputs: LeakyReluInputs = {x: $x};\n  const attrs: LeakyReluAttrs = {alpha};\n\n  return ENGINE.runKernel(\n      LeakyRelu, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const leakyRelu = op({leakyRelu_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Log, LogInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes natural logarithm of the input `tf.Tensor` element-wise: `ln(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.E]);\n *\n * x.log().print();  // or tf.log(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction log_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'log', 'float32');\n\n  const inputs: LogInputs = {x: $x};\n  return ENGINE.runKernel(Log, inputs as {} as NamedTensorMap);\n}\nexport const log = op({log_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Log1p, Log1pInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes natural logarithm of the input `tf.Tensor` plus one\n * element-wise: `ln(1 + x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.E - 1]);\n *\n * x.log1p().print();  // or tf.log1p(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction log1p_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'log1p');\n\n  const inputs: Log1pInputs = {x: $x};\n  return ENGINE.runKernel(Log1p, inputs as {} as NamedTensorMap);\n}\nexport const log1p = op({log1p_});\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {customGrad} from '../gradients';\n\nimport {Tensor} from '../tensor';\nimport {GradSaveFunc} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {cast} from './cast';\nimport {exp} from './exp';\nimport {log} from './log';\nimport {max} from './max';\nimport {mul} from './mul';\nimport {op} from './operation';\nimport {sub} from './sub';\nimport {sum} from './sum';\n\n/**\n * Computes the log softmax.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n *\n * a.logSoftmax().print();  // or tf.logSoftmax(a)\n * ```\n *\n * ```js\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\n *\n * a.logSoftmax().print();  // or tf.logSoftmax(a)\n * ```\n *\n * @param logits The logits array.\n * @param axis The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction logSoftmax_<T extends Tensor>(logits: T|TensorLike, axis = -1): T {\n  const $logits = convertToTensor(logits, 'logits', 'logSoftmax');\n\n  if (axis === -1) {\n    axis = $logits.rank - 1;\n  }\n  if (axis !== $logits.rank - 1) {\n    throw Error(\n        'Log Softmax along a non-last dimension is not yet supported. ' +\n        `Logits was rank ${$logits.rank} and axis was ${axis}`);\n  }\n\n  // const forward: ForwardFunc<Tensor> = (backend, save) => {\n  //   const keepDims = true;\n  //   const xMax = max(logits, axis, true);\n  //   const shifted = sub(logits, xMax);\n  //   const value =\n  //       sub(cast(shifted, 'float32'), log(sum(exp(shifted), axis,\n  //       keepDims)));\n  //   save([value]);\n  //   return value;\n  // };\n\n  // Use a custom gradient for numerical stability.\n  const customOp = customGrad((logits: Tensor, save: GradSaveFunc) => {\n    const keepDims = true;\n    const xMax = max(logits, axis, true);\n    const shifted = sub(logits, xMax);\n    const value =\n        sub(cast(shifted, 'float32'), log(sum(exp(shifted), axis, keepDims)));\n    save([value]);\n\n    const gradFunc = (dy: Tensor, saved: Tensor[]) => {\n      const [value] = saved;\n      const keepDims = true;\n      const softmax = exp(value);\n      return sub(dy, mul(sum(dy, axis, keepDims), softmax));\n    };\n    return {value, gradFunc};\n  });\n\n  return customOp($logits) as T;\n\n  // TODO Use Engine.runKernel when CPU/WebGL/WASM backends implement this.\n  // const inputs: LogSoftmaxInputs = {logits: $logits};\n  // const attrs: LogSoftmaxAttrs = {axis};\n  // return ENGINE.runKernel(\n  //            LogSoftmax, inputs as {} as NamedTensorMap,\n  //            attrs as {} as NamedAttrMap);\n}\n\nexport const logSoftmax = op({logSoftmax_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Max, MaxAttrs, MaxInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the maximum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.max().print();  // or tf.max(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.max(axis).print();  // or tf.max(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction max_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  const $x = convertToTensor(x, 'x', 'max');\n\n  const inputs: MaxInputs = {x: $x};\n  const attrs: MaxAttrs = {reductionIndices: axis, keepDims};\n\n  return ENGINE.runKernel(\n      Max, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const max = op({max_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Multiply, MultiplyInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Multiplies two `tf.Tensor`s element-wise, A * B. Supports broadcasting.\n *\n * We also expose `tf.mulStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([2, 3, 4, 5]);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n *\n * ```js\n * // Broadcast mul a with b.\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.scalar(5);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n * @param a The first tensor to multiply.\n * @param b The second tensor to multiply. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction mul_<T extends Tensor>(a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'mul');\n  let $b = convertToTensor(b, 'b', 'mul');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const inputs: MultiplyInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(Multiply, inputs as {} as NamedTensorMap);\n}\nexport const mul = op({mul_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Sub, SubInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Subtracts two `tf.Tensor`s element-wise, A - B. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n *\n * ```js\n * // Broadcast subtract a with b.\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.scalar(5);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n * @param a The first `tf.Tensor` to subtract from.\n * @param b The second `tf.Tensor` to be subtracted. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction sub_<T extends Tensor>(a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'sub');\n  let $b = convertToTensor(b, 'b', 'sub');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const inputs: SubInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(Sub, inputs as {} as NamedTensorMap);\n}\n\nexport const sub = op({sub_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Sum, SumAttrs, SumInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {cast} from './cast';\nimport {op} from './operation';\n\n/**\n * Computes the sum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If axes has no entries, all dimensions are reduced, and a\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.sum().print();  // or tf.sum(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.sum(axis).print();  // or tf.sum(x, axis)\n * ```\n *\n * @param x The input tensor to compute the sum over. If the dtype is `bool`\n *   it will be converted to `int32` and the output dtype will be `int32`.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction sum_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  let $x = convertToTensor(x, 'x', 'sum');\n  if ($x.dtype === 'bool') {\n    $x = cast($x, 'int32');\n  }\n\n  const inputs: SumInputs = {x: $x};\n  const attrs: SumAttrs = {axis, keepDims};\n\n  return ENGINE.runKernel(\n      Sum, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const sum = op({sum_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {LogicalAnd, LogicalAndInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns the truth value of `a AND b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalAnd(b).print();\n * ```\n *\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalAnd_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'logicalAnd', 'bool');\n  const $b = convertToTensor(b, 'b', 'logicalAnd', 'bool');\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: LogicalAndInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(LogicalAnd, inputs as {} as NamedTensorMap);\n}\n\nexport const logicalAnd = op({logicalAnd_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {BatchMatMul, BatchMatMulAttrs, BatchMatMulInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the dot product of two matrices, A * B. These must be matrices.\n *\n * ```js\n * const a = tf.tensor2d([1, 2], [1, 2]);\n * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.matMul(b).print();  // or tf.matMul(a, b)\n * ```\n * @param a First matrix in dot product operation.\n * @param b Second matrix in dot product operation.\n * @param transposeA If true, `a` is transposed before multiplication.\n * @param transposeB If true, `b` is transposed before multiplication.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction matMul_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike, transposeA = false,\n    transposeB = false): T {\n  let $a = convertToTensor(a, 'a', 'matMul');\n  let $b = convertToTensor(b, 'b', 'matMul');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const inputs: BatchMatMulInputs = {a: $a, b: $b};\n  const attrs: BatchMatMulAttrs = {transposeA, transposeB};\n\n  return ENGINE.runKernel(\n      BatchMatMul, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const matMul = op({matMul_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {MaxPool, MaxPoolAttrs, MaxPoolInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport * as conv_util from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes the 2D max pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction maxPool_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filterSize: [number, number]|number,\n    strides: [number, number]|number,\n    pad: 'valid'|'same'|number|conv_util.ExplicitPadding,\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'maxPool');\n  const dilations = 1;\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in maxPool: input must be rank 4 but got rank ${x4D.rank}.`);\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n  conv_util.checkPadOnDimRoundingMode('maxPool', pad, dimRoundingMode);\n  const inputs: MaxPoolInputs = {x: x4D};\n  const attrs: MaxPoolAttrs = {filterSize, strides, pad, dimRoundingMode};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  MaxPool, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n  return res;\n}\n\nexport const maxPool = op({maxPool_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {MaxPool3D, MaxPool3DAttrs, MaxPool3DInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor4D, Tensor5D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {checkPadOnDimRoundingMode} from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes the 3D max pooling.\n *\n * ```js\n * const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n * const result = tf.maxPool3d(x, 2, 1, 'valid');\n * result.print();\n * ```\n *\n * @param x The input tensor, of rank 5 or rank 4 of shape\n *     `[batch, depth, height, width, inChannels]`.\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     If `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideDepth == strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction maxPool3d_<T extends Tensor4D|Tensor5D>(\n    x: T|TensorLike, filterSize: [number, number, number]|number = [1, 1, 1],\n    strides: [number, number, number]|number, pad: 'valid'|'same'|number,\n    dimRoundingMode?: 'floor'|'round'|'ceil',\n    dataFormat: 'NDHWC'|'NCDHW' = 'NDHWC'): T {\n  const $x = convertToTensor(x, 'x', 'maxPool3d');\n\n  let x5D = $x as Tensor5D;\n  let reshapedTo5D = false;\n  if ($x.rank === 4) {\n    reshapedTo5D = true;\n    x5D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n  }\n\n  util.assert(\n      x5D.rank === 5,\n      () => `Error in maxPool3d: x must be rank 5 but got rank ${x5D.rank}.`);\n  util.assert(\n      dataFormat === 'NDHWC',\n      () => `Error in maxPool3d: Only NDHWC is currently supported, ` +\n          `but got dataFormat of ${dataFormat}`);\n  checkPadOnDimRoundingMode('maxPool3d', pad, dimRoundingMode);\n  const inputs: MaxPool3DInputs = {x: x5D};\n  const attrs:\n      MaxPool3DAttrs = {filterSize, strides, pad, dimRoundingMode, dataFormat};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  MaxPool3D, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo5D) {\n    return reshape(\n               res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]) as\n        T;\n  }\n\n  return res;\n}\n\nexport const maxPool3d = op({maxPool3d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Maximum, MaximumInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {cast} from './cast';\nimport {op} from './operation';\n\n/**\n * Returns the max of a and b (`a > b ? a : b`) element-wise.\n * Supports broadcasting.\n *\n * We also expose `tf.maximumStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.maximum(b).print();  // or tf.maximum(a, b)\n * ```\n *\n * ```js\n * // Broadcast maximum a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.maximum(b).print();  // or tf.maximum(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction maximum_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'maximum');\n  let $b = convertToTensor(b, 'b', 'maximum');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  if ($a.dtype === 'bool') {\n    $a = cast($a, 'int32');\n    $b = cast($b, 'int32');\n  }\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: MaximumInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(Maximum, inputs as {} as NamedTensorMap);\n}\n\nexport const maximum = op({maximum_});\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Mean, MeanAttrs, MeanInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the mean of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces `x` along the dimensions given in `axis`. Unless `keepDims` is\n * true, the rank of the `tf.Tensor` is reduced by 1 for each entry in `axis`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axis` has no entries, all dimensions are reduced, and a `tf.Tensor` with\n * a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.mean().print();  // or tf.mean(a)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.mean(axis).print();  // or tf.mean(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction mean_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  const $x = convertToTensor(x, 'x', 'mean');\n\n  const inputs: MeanInputs = {x: $x};\n  const attrs: MeanAttrs = {axis, keepDims};\n\n  return ENGINE.runKernel(\n      Mean, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const mean = op({mean_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Minimum, MinimumInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {cast} from './cast';\nimport {op} from './operation';\n\n/**\n * Returns the min of a and b (`a < b ? a : b`) element-wise.\n * Supports broadcasting.\n *\n * We also expose `minimumStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.minimum(b).print();  // or tf.minimum(a, b)\n * ```\n *\n * ```js\n * // Broadcast minimum a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.minimum(b).print();  // or tf.minimum(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction minimum_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'minimum');\n  let $b = convertToTensor(b, 'b', 'minimum');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  if ($a.dtype === 'bool') {\n    $a = cast($a, 'int32');\n    $b = cast($b, 'int32');\n  }\n\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: MinimumInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(Minimum, inputs as {} as NamedTensorMap);\n}\n\nexport const minimum = op({minimum_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {parseAxisParam} from '../util';\n\nimport {expandShapeToKeepDim} from './axis_util';\nimport {cast} from './cast';\nimport {mean} from './mean';\nimport {op} from './operation';\nimport {reshape} from './reshape';\nimport {square} from './square';\nimport {sub} from './sub';\n\n/**\n * Calculates the mean and variance of `x`. The mean and variance are\n * calculated by aggregating the contents of `x` across `axes`. If `x` is\n * 1-D and `axes = [0]` this is just the mean and variance of a vector.\n *\n * @param x The input tensor.\n * @param axis The dimension(s) along with to compute mean and\n *     variance. By default it reduces all dimensions.\n * @param keepDims If true, the moments have the same dimensionality as the\n *     input.\n * @return An object with two keys: `mean` and `variance`.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction moments_(\n    x: Tensor|TensorLike, axis: number|number[] = null,\n    keepDims = false): {mean: Tensor, variance: Tensor} {\n  x = convertToTensor(x, 'x', 'moments');\n  const axes = parseAxisParam(axis, x.shape);\n  const xMean = mean(x, axes, keepDims);\n  let keepDimsShape = xMean.shape;\n  if (!keepDims) {\n    keepDimsShape = expandShapeToKeepDim(xMean.shape, axes);\n  }\n  const devSquared =\n      square(sub(cast(x, 'float32'), reshape(xMean, keepDimsShape)));\n  const variance = mean(devSquared, axes, keepDims);\n  return {mean: xMean, variance};\n}\n\nexport const moments = op({moments_});\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as util from '../util';\n\n/**\n * Returns true if the axis specifies the inner most dimensions of the\n * array.\n */\nexport function axesAreInnerMostDims(axes: number[], rank: number): boolean {\n  for (let i = 0; i < axes.length; ++i) {\n    if (axes[axes.length - i - 1] !== rank - 1 - i) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function combineLocations(\n    outputLoc: number[], reduceLoc: number[], axes: number[]): number[] {\n  const rank = outputLoc.length + reduceLoc.length;\n  const loc = [];\n  let outIdx = 0;\n  let reduceIdx = 0;\n    for (let dim = 0; dim < rank; dim++) {\n    if (axes.indexOf(dim) === -1) {\n      loc.push(outputLoc[outIdx++]);\n    } else {\n      loc.push(reduceLoc[reduceIdx++]);\n    }\n  }\n  return loc;\n}\n\nexport function computeOutAndReduceShapes(\n    aShape: number[], axes: number[]): [number[], number[]] {\n  const outShape = [];\n  const rank = aShape.length;\n  for (let dim = 0; dim < rank; dim++) {\n    if (axes.indexOf(dim) === -1) {\n      outShape.push(aShape[dim]);\n    }\n  }\n  const reduceShape = axes.map(dim => aShape[dim]);\n  return [outShape, reduceShape];\n}\n\nexport function expandShapeToKeepDim(\n    shape: number[], axes: number[]): number[] {\n  const reduceSubShape = axes.map(x => 1);\n  return combineLocations(shape, reduceSubShape, axes);\n}\n\nexport function assertAxesAreInnerMostDims(\n    msg: string, axes: number[], rank: number): void {\n  util.assert(\n      axesAreInnerMostDims(axes, rank),\n      () => `${msg} supports only inner-most axes for now. ` +\n          `Got axes ${axes} and rank-${rank} input.`);\n}\n\n/**\n * Returns the axes permutation to be used with `tf.transpose`, if such\n * permutation is necessary. Otherwise it returns null. This method is used by\n * operations that operate only on inner-most axes.\n */\nexport function getAxesPermutation(axes: number[], rank: number): number[]|\n    null {\n  if (axesAreInnerMostDims(axes, rank)) {\n    return null;\n  }\n  const result: number[] = [];\n  for (let i = 0; i < rank; ++i) {\n    if (axes.indexOf(i) === -1) {\n      result.push(i);\n    }\n  }\n  axes.forEach(axis => result.push(axis));\n  return result;\n}\n\n/** Returns the axes permutation that undoes the original permutation. */\nexport function getUndoAxesPermutation(axes: number[]): number[] {\n  return axes.map((axis, i) => [i, axis])\n      .sort((a, b) => a[1] - b[1])\n      .map(x => x[0]);\n}\n\nexport function getInnerMostAxes(numAxes: number, rank: number): number[] {\n  const res: number[] = [];\n  for (let i = rank - numAxes; i < rank; ++i) {\n    res.push(i);\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {op} from './operation';\n\n/**\n * Computes square of `x` element-wise: `x ^ 2`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.sqrt(2), -1]);\n *\n * x.square().print();  // or tf.square(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction square_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'square');\n  const attrs = {};\n  return ENGINE.runKernel('Square', {x: $x}, attrs);\n}\n\nexport const square = op({square_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Multinomial, MultinomialAttrs, MultinomialInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor1D, Tensor2D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Creates a `tf.Tensor` with values drawn from a multinomial distribution.\n *\n * ```js\n * const probs = tf.tensor([.75, .25]);\n * tf.multinomial(probs, 3).print();\n * ```\n *\n * @param logits 1D array with unnormalized log-probabilities, or\n *     2D array of shape `[batchSize, numOutcomes]`. See the `normalized`\n *     parameter.\n * @param numSamples Number of samples to draw for each row slice.\n * @param seed The seed number.\n * @param normalized Whether the provided `logits` are normalized true\n *     probabilities (sum to 1). Defaults to false.\n * @return 1D array of shape `[numSamples]`, or 2D array of shape\n *     `[batchSize, numSamples]`, depending on the rank of the input.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction multinomial_(\n    logits: Tensor1D|Tensor2D|TensorLike, numSamples: number, seed?: number,\n    normalized = false): Tensor1D|Tensor2D {\n  const $logits = convertToTensor(logits, 'logits', 'multinomial');\n  const numOutcomes = $logits.size;\n  const origRank = $logits.rank;\n  if (numOutcomes < 2) {\n    throw new Error(\n        `Error in multinomial: you need at least 2 outcomes, but got ` +\n        `${numOutcomes}.`);\n  }\n  if (origRank > 2) {\n    throw new Error(`Rank of probabilities must be 1 or 2, but is ${origRank}`);\n  }\n  // TODO(lina128): Investigate correct seed behavior. The code seems not allow\n  // setting see to 0.\n  seed = seed || Math.random();\n\n  // The kernel only accepts (and returns) rank 2 tensors.\n  const logits2D: Tensor2D =\n      origRank === 1 ? reshape($logits, [1, -1]) : $logits as Tensor2D;\n\n  const inputs: MultinomialInputs = {logits: logits2D};\n  const attrs: MultinomialAttrs = {numSamples, seed, normalized};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  Multinomial, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as Tensor2D;\n\n  // tslint:disable-next-line:no-unnecessary-type-assertion\n  return origRank === 1 ? reshape(res, [res.size]) as Tensor1D : res;\n}\n\nexport const multinomial = op({multinomial_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Neg, NegInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes `-1 * x` element-wise.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, -2, 0], [2, 2]);\n *\n * x.neg().print();  // or tf.neg(x)\n * ```\n *\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction neg_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'neg');\n\n  const inputs: NegInputs = {x: $x};\n  return ENGINE.runKernel(Neg, inputs as {} as NamedTensorMap);\n}\nexport const neg = op({neg_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {NotEqual, NotEqualInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns the truth value of (a != b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([0, 2, 3]);\n *\n * a.notEqual(b).print();\n * ```\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction notEqual_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'notEqual', 'string_or_numeric');\n  let $b = convertToTensor(b, 'b', 'notEqual', 'string_or_numeric');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: NotEqualInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(NotEqual, inputs as {} as NamedTensorMap);\n}\n\nexport const notEqual = op({notEqual_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {OneHot, OneHotAttrs, OneHotInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Creates a one-hot `tf.Tensor`. The locations represented by `indices` take\n * value `onValue` (defaults to 1), while all other locations take value\n * `offValue` (defaults to 0). If `indices` is rank `R`, the output has rank\n * `R+1` with the last axis of size `depth`.\n *\n * ```js\n * tf.oneHot(tf.tensor1d([0, 1], 'int32'), 3).print();\n * ```\n *\n * @param indices `tf.Tensor` of indices with dtype `int32`.\n * @param depth The depth of the one hot dimension.\n * @param onValue A number used to fill in the output when the index matches\n * the location.\n * @param offValue A number used to fill in the output when the index does\n *     not match the location.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction oneHot_(\n    indices: Tensor|TensorLike, depth: number, onValue = 1,\n    offValue = 0): Tensor {\n  if (depth < 2) {\n    throw new Error(`Error in oneHot: depth must be >=2, but it is ${depth}`);\n  }\n  const $indices = convertToTensor(indices, 'indices', 'oneHot', 'int32');\n\n  const inputs: OneHotInputs = {indices: $indices};\n  const attrs: OneHotAttrs = {depth, onValue, offValue};\n\n  return ENGINE.runKernel(\n      OneHot, inputs as unknown as NamedTensorMap,\n      attrs as unknown as NamedAttrMap);\n}\n\nexport const oneHot = op({oneHot_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {DataType, Rank, ShapeMap} from '../types';\nimport {makeOnesTypedArray, sizeFromShape} from '../util';\n\nimport {complex} from './complex';\nimport {zeros} from './zeros';\n\n/**\n * Creates a `tf.Tensor` with all elements set to 1.\n *\n * ```js\n * tf.ones([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The type of an element in the resulting tensor. Defaults to\n *     'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function ones<R extends Rank>(\n    shape: ShapeMap[R], dtype: DataType = 'float32'): Tensor<R> {\n  if (dtype === 'complex64') {\n    const real = ones(shape, 'float32');\n    const imag = zeros(shape, 'float32');\n    return complex(real, imag);\n  }\n  const values = makeOnesTypedArray(sizeFromShape(shape), dtype);\n  return ENGINE.makeTensor(values, shape, dtype) as Tensor<R>;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {DataType, Rank, ShapeMap} from '../types';\nimport {makeZerosTypedArray, sizeFromShape} from '../util';\n\nimport {complex} from './complex';\n\n/**\n * Creates a `tf.Tensor` with all elements set to 0.\n *\n * ```js\n * tf.zeros([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The type of an element in the resulting tensor. Can\n *     be 'float32', 'int32' or 'bool'. Defaults to 'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function zeros<R extends Rank>(\n    shape: ShapeMap[R], dtype: DataType = 'float32'): Tensor<R> {\n  if (dtype === 'complex64') {\n    const real = zeros(shape, 'float32');\n    const imag = zeros(shape, 'float32');\n    return complex(real, imag);\n  }\n  const values = makeZerosTypedArray(sizeFromShape(shape), dtype);\n  return ENGINE.makeTensor(values, shape, dtype) as Tensor<R>;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {OnesLike, OnesLikeInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Creates a `tf.Tensor` with all elements set to 1 with the same shape as the\n * given tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n * tf.onesLike(x).print();\n * ```\n * @param x A tensor.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction onesLike_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'onesLike');\n\n  const inputs: OnesLikeInputs = {x: $x};\n  return ENGINE.runKernel(OnesLike, inputs as {} as NamedTensorMap);\n}\n\nexport const onesLike = op({onesLike_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {PadV2, PadV2Attrs, PadV2Inputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Pads a `tf.Tensor` with a given value and paddings.\n *\n * This operation implements `CONSTANT` mode. For `REFLECT` and `SYMMETRIC`,\n * refer to `tf.mirrorPad`\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `paddings` is of given length.\n *   - `tf.pad1d`\n *   - `tf.pad2d`\n *   - `tf.pad3d`\n *   - `tf.pad4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.pad([[1, 2]]).print();\n * ```\n * @param x The tensor to pad.\n * @param paddings An array of length `R` (the rank of the tensor), where\n * each element is a length-2 tuple of ints `[padBefore, padAfter]`,\n * specifying how much to pad along each dimension of the tensor.\n * @param constantValue The pad value to use. Defaults to 0.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction pad_<T extends Tensor>(\n    x: T|TensorLike, paddings: Array<[number, number]>, constantValue = 0): T {\n  const $x = convertToTensor(x, 'x', 'pad');\n  if ($x.rank === 0) {\n    throw new Error('pad(scalar) is not defined. Pass non-scalar to pad');\n  }\n\n  const attrs: PadV2Attrs = {paddings, constantValue};\n  const inputs: PadV2Inputs = {x: $x};\n  return ENGINE.runKernel(\n      PadV2, inputs as unknown as NamedTensorMap,\n      attrs as unknown as NamedAttrMap);\n}\n\nexport const pad = op({pad_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Pow, PowInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the power of one `tf.Tensor` to another. Supports broadcasting.\n *\n * Given a `tf.Tensor` x and a `tf.Tensor` y, this operation computes x^y for\n * corresponding elements in x and y. The result's dtype will be the upcasted\n * type of the `base` and `exp` dtypes.\n *\n * ```js\n * const a = tf.tensor([[2, 3], [4, 5]])\n * const b = tf.tensor([[1, 2], [3, 0]]).toInt();\n *\n * a.pow(b).print();  // or tf.pow(a, b)\n * ```\n *\n * ```js\n * const a = tf.tensor([[1, 2], [3, 4]])\n * const b = tf.tensor(2).toInt();\n *\n * a.pow(b).print();  // or tf.pow(a, b)\n * ```\n * We also expose `powStrict` which has the same signature as this op and\n * asserts that `base` and `exp` are the same shape (does not broadcast).\n *\n * @param base The base `tf.Tensor` to pow element-wise.\n * @param exp The exponent `tf.Tensor` to pow element-wise.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction pow_<T extends Tensor>(\n    base: Tensor|TensorLike, exp: Tensor|TensorLike): T {\n  let $base = convertToTensor(base, 'base', 'pow');\n  let $exp = convertToTensor(exp, 'exp', 'pow');\n  [$base, $exp] = makeTypesMatch($base, $exp);\n\n  const inputs: PowInputs = {a: $base, b: $exp};\n\n  return ENGINE.runKernel(Pow, inputs as {} as NamedTensorMap);\n}\n\nexport const pow = op({pow_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Prelu, PreluInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes leaky rectified linear element-wise with parametric alphas.\n *\n * `x < 0 ? alpha * x : f(x) = x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n * const alpha = tf.scalar(0.1);\n *\n * x.prelu(alpha).print();  // or tf.prelu(x, alpha)\n * ```\n * @param x The input tensor.\n * @param alpha Scaling factor for negative values.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction prelu_<T extends Tensor>(x: T|TensorLike, alpha: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'prelu');\n  const $alpha = convertToTensor(alpha, 'alpha', 'prelu');\n\n  const inputs: PreluInputs = {x: $x, alpha: $alpha};\n  return ENGINE.runKernel(Prelu, inputs as {} as NamedTensorMap);\n}\n\nexport const prelu = op({prelu_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {DataType, Rank, ShapeMap} from '../types';\n\nimport {buffer} from './buffer';\nimport {op} from './operation';\nimport {MPRandGauss} from './rand_util';\n\n/**\n * Creates a `tf.Tensor` with values sampled from a normal distribution.\n *\n * ```js\n * tf.randomNormal([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param mean The mean of the normal distribution.\n * @param stdDev The standard deviation of the normal distribution.\n * @param dtype The data type of the output.\n * @param seed The seed for the random number generator.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction randomNormal_<R extends Rank>(\n    shape: ShapeMap[R], mean = 0, stdDev = 1, dtype?: 'float32'|'int32',\n    seed?: number): Tensor<R> {\n  if (dtype != null && (dtype as DataType) === 'bool') {\n    throw new Error(`Unsupported data type ${dtype}`);\n  }\n  const randGauss =\n      new MPRandGauss(mean, stdDev, dtype, false /* truncated */, seed);\n  const res = buffer(shape, dtype);\n  for (let i = 0; i < res.values.length; i++) {\n    res.values[i] = randGauss.nextValue();\n  }\n  return res.toTensor();\n}\n\nexport const randomNormal = op({randomNormal_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as seedrandom from 'seedrandom';\n\nimport {expectNumbersClose, testEpsilon} from '../test_util';\nimport {TypedArray} from '../types';\n\nexport interface RandomBase {\n  nextValue(): number;\n}\n\nexport interface RandomGamma {\n  nextValue(): number;\n}\n\nexport interface RandNormalDataTypes {\n  float32: Float32Array;\n  int32: Int32Array;\n}\n\nexport interface RandGammaDataTypes {\n  float32: Float32Array;\n  int32: Int32Array;\n}\n\n// https://en.wikipedia.org/wiki/Marsaglia_polar_method\nexport class MPRandGauss implements RandomBase {\n  private mean: number;\n  private stdDev: number;\n  private nextVal: number;\n  private dtype?: keyof RandNormalDataTypes;\n  private truncated?: boolean;\n  private upper?: number;\n  private lower?: number;\n  private random: seedrandom.prng;\n\n  constructor(\n      mean: number, stdDeviation: number, dtype?: keyof RandNormalDataTypes,\n      truncated?: boolean, seed?: number) {\n    this.mean = mean;\n    this.stdDev = stdDeviation;\n    this.dtype = dtype;\n    this.nextVal = NaN;\n    this.truncated = truncated;\n    if (this.truncated) {\n      this.upper = this.mean + this.stdDev * 2;\n      this.lower = this.mean - this.stdDev * 2;\n    }\n    const seedValue = seed ? seed : Math.random();\n    this.random = seedrandom.alea(seedValue.toString());\n  }\n\n  /** Returns next sample from a Gaussian distribution. */\n  public nextValue(): number {\n    if (!isNaN(this.nextVal)) {\n      const value = this.nextVal;\n      this.nextVal = NaN;\n      return value;\n    }\n\n    let resultX: number, resultY: number;\n    let isValid = false;\n    while (!isValid) {\n      let v1: number, v2: number, s: number;\n      do {\n        v1 = 2 * this.random() - 1;\n        v2 = 2 * this.random() - 1;\n        s = v1 * v1 + v2 * v2;\n      } while (s >= 1 || s === 0);\n\n      const mul = Math.sqrt(-2.0 * Math.log(s) / s);\n      resultX = this.mean + this.stdDev * v1 * mul;\n      resultY = this.mean + this.stdDev * v2 * mul;\n\n      if (!this.truncated || this.isValidTruncated(resultX)) {\n        isValid = true;\n      }\n    }\n\n    if (!this.truncated || this.isValidTruncated(resultY)) {\n      this.nextVal = this.convertValue(resultY);\n    }\n    return this.convertValue(resultX);\n  }\n\n  /** Handles proper rounding for non-floating-point numbers. */\n  private convertValue(value: number): number {\n    if (this.dtype == null || this.dtype === 'float32') {\n      return value;\n    }\n    return Math.round(value);\n  }\n\n  /** Returns true if less than 2-standard-deviations from the mean. */\n  private isValidTruncated(value: number): boolean {\n    return value <= this.upper && value >= this.lower;\n  }\n}\n\n// Marsaglia, George, and Wai Wan Tsang. 2000. \"A Simple Method for Generating\n// Gamma Variables.\"\nexport class RandGamma implements RandomGamma {\n  private alpha: number;\n  private beta: number;\n  private d: number;\n  private c: number;\n  private dtype?: keyof RandGammaDataTypes;\n  private randu: seedrandom.prng;\n  private randn: MPRandGauss;\n\n  constructor(\n      alpha: number, beta: number, dtype: keyof RandGammaDataTypes,\n      seed?: number) {\n    this.alpha = alpha;\n    this.beta = 1 / beta;  // convert rate to scale parameter\n    this.dtype = dtype;\n\n    const seedValue = seed ? seed : Math.random();\n    this.randu = seedrandom.alea(seedValue.toString());\n    this.randn = new MPRandGauss(0, 1, dtype, false, this.randu());\n\n    if (alpha < 1) {\n      this.d = alpha + (2 / 3);\n    } else {\n      this.d = alpha - (1 / 3);\n    }\n    this.c = 1 / Math.sqrt(9 * this.d);\n  }\n\n  /** Returns next sample from a gamma distribution. */\n  public nextValue(): number {\n    let x2: number, v0: number, v1: number, x: number, u: number, v: number;\n    while (true) {\n      do {\n        x = this.randn.nextValue();\n        v = 1 + (this.c * x);\n      } while (v <= 0);\n      v *= v * v;\n      x2 = x * x;\n      v0 = 1 - (0.331 * x2 * x2);\n      v1 = (0.5 * x2) + (this.d * (1 - v + Math.log(v)));\n      u = this.randu();\n      if (u < v0 || Math.log(u) < v1) {\n        break;\n      }\n    }\n    v = (1 / this.beta) * this.d * v;\n    if (this.alpha < 1) {\n      v *= Math.pow(this.randu(), 1 / this.alpha);\n    }\n    return this.convertValue(v);\n  }\n  /** Handles proper rounding for non-floating-point numbers. */\n  private convertValue(value: number): number {\n    if (this.dtype === 'float32') {\n      return value;\n    }\n    return Math.round(value);\n  }\n}\n\nexport class UniformRandom implements RandomBase {\n  private min: number;\n  private range: number;\n  private random: seedrandom.prng;\n  private dtype?: keyof RandNormalDataTypes;\n\n  constructor(\n      min = 0, max = 1, dtype?: keyof RandNormalDataTypes,\n      seed?: string|number) {\n    this.min = min;\n    this.range = max - min;\n    this.dtype = dtype;\n    if (seed == null) {\n      seed = Math.random();\n    }\n    if (typeof seed === 'number') {\n      seed = seed.toString();\n    }\n\n    if (!this.canReturnFloat() && this.range <= 1) {\n      throw new Error(\n          `The difference between ${min} - ${max} <= 1 and dtype is not float`);\n    }\n    this.random = seedrandom.alea(seed);\n  }\n\n  /** Handles proper rounding for non floating point numbers. */\n  private canReturnFloat = () =>\n      (this.dtype == null || this.dtype === 'float32');\n\n  private convertValue(value: number): number {\n    if (this.canReturnFloat()) {\n      return value;\n    }\n    return Math.round(value);\n  }\n\n  nextValue() {\n    return this.convertValue(this.min + this.range * this.random());\n  }\n}\n\nexport function jarqueBeraNormalityTest(values: TypedArray|number[]) {\n  // https://en.wikipedia.org/wiki/Jarque%E2%80%93Bera_test\n  const n = values.length;\n  const s = skewness(values);\n  const k = kurtosis(values);\n  const jb = n / 6 * (Math.pow(s, 2) + 0.25 * Math.pow(k - 3, 2));\n  // JB test requires 2-degress of freedom from Chi-Square @ 0.95:\n  // http://www.itl.nist.gov/div898/handbook/eda/section3/eda3674.htm\n  const CHI_SQUARE_2DEG = 5.991;\n  if (jb > CHI_SQUARE_2DEG) {\n    throw new Error(`Invalid p-value for JB: ${jb}`);\n  }\n}\n\nexport function expectArrayInMeanStdRange(\n    actual: TypedArray|number[], expectedMean: number, expectedStdDev: number,\n    epsilon?: number) {\n  if (epsilon == null) {\n    epsilon = testEpsilon();\n  }\n  const actualMean = mean(actual);\n  expectNumbersClose(actualMean, expectedMean, epsilon);\n  expectNumbersClose(\n      standardDeviation(actual, actualMean), expectedStdDev, epsilon);\n}\n\nfunction mean(values: TypedArray|number[]) {\n  let sum = 0;\n  for (let i = 0; i < values.length; i++) {\n    sum += values[i];\n  }\n  return sum / values.length;\n}\n\nfunction standardDeviation(values: TypedArray|number[], mean: number) {\n  let squareDiffSum = 0;\n  for (let i = 0; i < values.length; i++) {\n    const diff = values[i] - mean;\n    squareDiffSum += diff * diff;\n  }\n  return Math.sqrt(squareDiffSum / values.length);\n}\n\nfunction kurtosis(values: TypedArray|number[]) {\n  // https://en.wikipedia.org/wiki/Kurtosis\n  const valuesMean = mean(values);\n  const n = values.length;\n  let sum2 = 0;\n  let sum4 = 0;\n  for (let i = 0; i < n; i++) {\n    const v = values[i] - valuesMean;\n    sum2 += Math.pow(v, 2);\n    sum4 += Math.pow(v, 4);\n  }\n  return (1 / n) * sum4 / Math.pow((1 / n) * sum2, 2);\n}\n\nfunction skewness(values: TypedArray|number[]) {\n  // https://en.wikipedia.org/wiki/Skewness\n  const valuesMean = mean(values);\n  const n = values.length;\n  let sum2 = 0;\n  let sum3 = 0;\n  for (let i = 0; i < n; i++) {\n    const v = values[i] - valuesMean;\n    sum2 += Math.pow(v, 2);\n    sum3 += Math.pow(v, 3);\n  }\n  return (1 / n) * sum3 / Math.pow((1 / (n - 1)) * sum2, 3 / 2);\n}\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar global = this,\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from './engine';\nimport {inferShape} from './tensor_util_env';\nimport {RecursiveArray, TensorLike, TypedArray} from './types';\nimport {arraysEqual, encodeString, flatten, isString, isTypedArray} from './util';\n\nconst TEST_EPSILON_FLOAT32 = 1e-3;\nexport const TEST_EPSILON_FLOAT16 = 1e-1;\n\nexport function expectArraysClose(\n    actual: TypedArray|number|RecursiveArray<number>,\n    expected: TypedArray|number|RecursiveArray<number>, epsilon?: number) {\n  if (epsilon == null) {\n    epsilon = testEpsilon();\n  }\n  return expectArraysPredicate(\n      actual, expected, (a, b) => areClose(a as number, b as number, epsilon));\n}\n\nexport function testEpsilon() {\n  return ENGINE.backend.floatPrecision() === 32 ? TEST_EPSILON_FLOAT32 :\n                                                  TEST_EPSILON_FLOAT16;\n}\n\nfunction expectArraysPredicate(\n    actual: TensorLike, expected: TensorLike,\n    predicate: (a: {}, b: {}) => boolean) {\n  let checkClassType = true;\n  if (isTypedArray(actual) || isTypedArray(expected)) {\n    checkClassType = false;\n  }\n  if (isTypedArray(actual) && isTypedArray(expected)) {\n    checkClassType = true;\n  }\n  if (checkClassType) {\n    const aType = actual.constructor.name;\n    const bType = expected.constructor.name;\n\n    if (aType !== bType) {\n      throw new Error(\n          `Arrays are of different type. Actual: ${aType}. ` +\n          `Expected: ${bType}`);\n    }\n  }\n\n  if (Array.isArray(actual) && Array.isArray(expected)) {\n    const actualShape = inferShape(actual);\n    const expectedShape = inferShape(expected);\n    if (!arraysEqual(actualShape, expectedShape)) {\n      throw new Error(\n          `Arrays have different shapes. ` +\n          `Actual: [${actualShape}]. Expected: [${expectedShape}]`);\n    }\n  }\n\n  const actualFlat =\n      isTypedArray(actual) ? actual : flatten(actual as RecursiveArray<number>);\n  const expectedFlat = isTypedArray(expected) ?\n      expected :\n      flatten(expected as RecursiveArray<number>);\n\n  if (actualFlat.length !== expectedFlat.length) {\n    throw new Error(\n        `Arrays have different lengths actual: ${actualFlat.length} vs ` +\n        `expected: ${expectedFlat.length}.\\n` +\n        `Actual:   ${actualFlat}.\\n` +\n        `Expected: ${expectedFlat}.`);\n  }\n  for (let i = 0; i < expectedFlat.length; ++i) {\n    const a = actualFlat[i];\n    const e = expectedFlat[i];\n\n    if (!predicate(a, e)) {\n      throw new Error(\n          `Arrays differ: actual[${i}] = ${a}, expected[${i}] = ${e}.\\n` +\n          `Actual:   ${actualFlat}.\\n` +\n          `Expected: ${expectedFlat}.`);\n    }\n  }\n}\n\nexport interface DoneFn {\n  (): void;\n  fail: (message?: Error|string) => void;\n}\n\nexport function expectPromiseToFail(fn: () => Promise<{}>, done: DoneFn): void {\n  fn().then(() => done.fail(), () => done());\n}\n\nexport function expectArraysEqual(actual: TensorLike, expected: TensorLike) {\n  const exp = typeof expected === 'string' || typeof expected === 'number' ||\n          typeof expected === 'boolean' ?\n      [expected] as number[] :\n      expected as number[];\n  if (isString(actual) || isString((actual as string[])[0]) ||\n      isString(expected) || isString((expected as string[])[0])) {\n    // tslint:disable-next-line: triple-equals\n    return expectArraysPredicate(actual, exp, (a, b) => a == b);\n  }\n  return expectArraysPredicate(\n      actual, expected, (a, b) => areClose(a as number, b as number, 0));\n}\n\nexport function expectNumbersClose(a: number, e: number, epsilon?: number) {\n  if (epsilon == null) {\n    epsilon = testEpsilon();\n  }\n  if (!areClose(a, e, epsilon)) {\n    throw new Error(`Numbers differ: actual === ${a}, expected === ${e}`);\n  }\n}\n\nfunction areClose(a: number, e: number, epsilon: number): boolean {\n  if (!isFinite(a) && !isFinite(e)) {\n    return true;\n  }\n  if (isNaN(a) || isNaN(e) || Math.abs(a - e) > epsilon) {\n    return false;\n  }\n  return true;\n}\n\nexport function expectValuesInRange(\n    actual: TypedArray|number[], low: number, high: number) {\n  for (let i = 0; i < actual.length; i++) {\n    if (actual[i] < low || actual[i] > high) {\n      throw new Error(\n          `Value out of range:${actual[i]} low: ${low}, high: ${high}`);\n    }\n  }\n}\n\nexport function expectArrayBuffersEqual(\n    actual: ArrayBuffer, expected: ArrayBuffer) {\n  // Safari does not like comparing ArrayBuffers directly. Wrapping in\n  // a Float32Array solves this issue.\n  const actualArray = new Float32Array(actual);\n  const expectedArray = new Float32Array(expected);\n  if (actualArray.length !== expectedArray.length) {\n    throw new Error(\n        'Expected ArrayBuffer to be of length ' +\n        `${expectedArray.length}, but it was ${actualArray.length}`);\n  }\n\n  for (let i = 0; i < expectedArray.length; i++) {\n    if (actualArray[i] !== expectedArray[i]) {\n      throw new Error(\n          `Expected ArrayBuffer value at ${i} to be ` +\n          `${expectedArray[i]} but got ${actualArray[i]} instead`);\n    }\n  }\n}\n\n/** Encodes strings into utf-8 bytes. */\nexport function encodeStrings(a: RecursiveArray<{}>):\n    RecursiveArray<Uint8Array> {\n  for (let i = 0; i < (a as Array<{}>).length; i++) {\n    const val = a[i];\n    if (Array.isArray(val)) {\n      encodeStrings(val);\n    } else {\n      a[i] = encodeString(val as string);\n    }\n  }\n  return a as RecursiveArray<Uint8Array>;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {DataType, Rank, ShapeMap} from '../types';\n\nimport {buffer} from './buffer';\nimport {op} from './operation';\nimport {UniformRandom} from './rand_util';\n\n/**\n * Creates a `tf.Tensor` with values sampled from a uniform distribution.\n *\n * The generated values follow a uniform distribution in the range [minval,\n * maxval). The lower bound minval is included in the range, while the upper\n * bound maxval is excluded.\n *\n * ```js\n * tf.randomUniform([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param minval The lower bound on the range of random values to generate.\n *   Defaults to 0.\n * @param maxval The upper bound on the range of random values to generate.\n *   Defaults to 1.\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction randomUniform_<R extends Rank>(\n    shape: ShapeMap[R], minval = 0, maxval = 1, dtype: DataType = 'float32',\n    seed?: number|string): Tensor<R> {\n  const res = buffer(shape, dtype);\n  const random = new UniformRandom(minval, maxval, null, seed);\n  for (let i = 0; i < res.values.length; i++) {\n    res.values[i] = random.nextValue();\n  }\n  return res.toTensor();\n}\n\nexport const randomUniform = op({randomUniform_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Relu, ReluInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes rectified linear element-wise: `max(x, 0)`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.relu().print();  // or tf.relu(x)\n * ```\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\n *     `int32'.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction relu_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'relu');\n\n  const inputs: ReluInputs = {x: $x};\n\n  return ENGINE.runKernel(Relu, inputs as {} as NamedTensorMap);\n}\n\nexport const relu = op({relu_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Reverse, ReverseAttrs, ReverseInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Reverses a `tf.Tensor` along a specified axis.\n *\n * Also available are stricter rank-specific methods that assert that `x` is\n * of the given rank:\n *   - `tf.reverse1d`\n *   - `tf.reverse2d`\n *   - `tf.reverse3d`\n *   - `tf.reverse4d`\n *\n * Except `tf.reverse1d` (which does not have axis param), all methods have\n * same signature as this method.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.reverse().print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.reverse(axis).print();\n * ```\n * @param x The input tensor to be reversed.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction reverse_<T extends Tensor>(\n    x: T|TensorLike, axis?: number|number[]): T {\n  const $x = convertToTensor(x, 'x', 'reverse');\n\n  const inputs: ReverseInputs = {x: $x};\n  const attrs: ReverseAttrs = {dims: axis};\n\n  return ENGINE.runKernel(\n      Reverse, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const reverse = op({reverse_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Scalar} from '../tensor';\nimport {DataType} from '../types';\nimport {isTypedArray} from '../util';\nimport {makeTensor} from './tensor_ops_util';\n\n/**\n * Creates rank-0 `tf.Tensor` (scalar) with the provided value and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.scalar` as it makes the code more readable.\n *\n * ```js\n * tf.scalar(3.14).print();\n * ```\n *\n * @param value The value of the scalar.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function scalar(\n    value: number|boolean|string|Uint8Array, dtype?: DataType): Scalar {\n  if (((isTypedArray(value) && dtype !== 'string') || Array.isArray(value)) &&\n      dtype !== 'complex64') {\n    throw new Error(\n        'Error creating a new Scalar: value must be a primitive ' +\n        '(number|boolean|string)');\n  }\n  if (dtype === 'string' && isTypedArray(value) &&\n      !(value instanceof Uint8Array)) {\n    throw new Error(\n        'When making a scalar from encoded string, ' +\n        'the value must be `Uint8Array`.');\n  }\n  const shape: number[] = [];\n  const inferredShape: number[] = [];\n  return makeTensor(value, shape, inferredShape, dtype) as Scalar;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Selu, SeluInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes scaled exponential linear element-wise.\n *\n * `x < 0 ? scale * alpha * (exp(x) - 1) : x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.selu().print();  // or tf.selu(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction selu_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'selu');\n\n  const inputs: SeluInputs = {x: $x};\n\n  return ENGINE.runKernel(Selu, inputs as {} as NamedTensorMap);\n}\n\nexport const selu = op({selu_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {conv2d} from './conv2d';\nimport {depthwiseConv2d} from './depthwise_conv2d';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * 2-D convolution with separable filters.\n *\n * Performs a depthwise convolution that acts separately on channels followed\n * by a pointwise convolution that mixes channels. Note that this is\n * separability between dimensions [1, 2] and 3, not spatial separability\n * between dimensions 1 and 2.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param depthwiseFilter The depthwise filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`. This is\n *     the filter used in the first step.\n * @param pointwiseFilter The pointwise filter tensor, rank 4, of shape\n *     `[1, 1, inChannels * channelMultiplier, outChannels]`. This is\n *     the filter used in the second step.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction separableConv2d_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, depthwiseFilter: Tensor4D|TensorLike,\n    pointwiseFilter: Tensor4D|TensorLike, strides: [number, number]|number,\n    pad: 'valid'|'same', dilation: [number, number]|number = [1, 1],\n    dataFormat: 'NHWC'|'NCHW' = 'NHWC'): T {\n  const $x = convertToTensor(x, 'x', 'separableConv2d');\n  const $depthwiseFilter =\n      convertToTensor(depthwiseFilter, 'depthwiseFilter', 'separableConv2d');\n  const $pointwiseFilter =\n      convertToTensor(pointwiseFilter, 'pointwiseFilter', 'separableConv2d');\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  if (dataFormat === 'NCHW') {\n    throw new Error(\n        'separableConv2d currently does not support dataFormat NCHW; only ' +\n        'NHWC is supported');\n  }\n\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in separableConv2d: input must be rank 4, but got ` +\n          `rank ${x4D.rank}.`);\n  util.assert(\n      $depthwiseFilter.rank === 4,\n      () => `Error in separableConv2d: depthwise filter must be rank 4, but ` +\n          `got rank ${$depthwiseFilter.rank}.`);\n  util.assert(\n      $pointwiseFilter.rank === 4,\n      () => `Error in separableConv2d: pointwise filter must be rank 4, but ` +\n          `got rank ${$depthwiseFilter.rank}.`);\n  util.assert(\n      $pointwiseFilter.shape[0] === 1,\n      () =>\n          `Error in separableConv2d: the first dimension of pointwise filter ` +\n          ` must be 1, but got ${$pointwiseFilter.shape[0]}.`);\n  util.assert(\n      $pointwiseFilter.shape[1] === 1,\n      () => `Error in separableConv2d: the second dimension of pointwise ` +\n          `filter must be 1, but got ${$pointwiseFilter.shape[1]}.`);\n\n  const inChannels = $depthwiseFilter.shape[2];\n  const channelMultiplier = $depthwiseFilter.shape[3];\n  util.assert(\n      $pointwiseFilter.shape[2] === inChannels * channelMultiplier,\n      () =>\n          `Error in separableConv2d: the third dimension of pointwise filter ` +\n          `must be ${inChannels * channelMultiplier}, ` +\n          `but got ${$pointwiseFilter.shape[2]}.`);\n\n  const depthwise = depthwiseConv2d(\n      x4D, $depthwiseFilter, strides, pad, dataFormat, dilation);\n  const pointwiseStride = 1;\n  const res =\n      conv2d(depthwise, $pointwiseFilter, pointwiseStride, 'valid', dataFormat);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n  return res as T;\n}\n\nexport const separableConv2d = op({separableConv2d_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Sigmoid, SigmoidInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes sigmoid element-wise, `1 / (1 + exp(-x))`\n *\n * ```js\n * const x = tf.tensor1d([0, -1, 2, -3]);\n *\n * x.sigmoid().print();  // or tf.sigmoid(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sigmoid_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'sigmoid', 'float32');\n\n  const inputs: SigmoidInputs = {x: $x};\n\n  return ENGINE.runKernel(Sigmoid, inputs as {} as NamedTensorMap);\n}\nexport const sigmoid = op({sigmoid_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Slice, SliceAttrs, SliceInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {Rank, TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Extracts a slice from a `tf.Tensor` starting at coordinates `begin`\n * and is of size `size`.\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `x` is of the given rank:\n *   - `tf.slice1d`\n *   - `tf.slice2d`\n *   - `tf.slice3d`\n *   - `tf.slice4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.slice([1], [2]).print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * x.slice([1, 0], [1, 2]).print();\n * ```\n * @param x The input `tf.Tensor` to slice from.\n * @param begin The coordinates to start the slice from. The length can be\n *     less than the rank of x - the rest of the axes will have implicit 0 as\n *     start. Can also be a single number, in which case it specifies the\n *     first axis.\n * @param size The size of the slice. The length can be less than the rank of\n *     x - the rest of the axes will have implicit -1. A value of -1 requests\n *     the rest of the dimensions in the axis. Can also be a single number,\n *     in which case it specifies the size of the first axis.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction slice_<R extends Rank, T extends Tensor<R>>(\n    x: T|TensorLike, begin: number|number[], size?: number|number[]): T {\n  const $x = convertToTensor(x, 'x', 'slice', 'string_or_numeric');\n\n  if ($x.rank === 0) {\n    throw new Error('Slicing scalar is not possible');\n  }\n\n  const inputs: SliceInputs = {x: $x};\n  const attrs: SliceAttrs = {begin, size};\n\n  return ENGINE.runKernel(\n      Slice, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const slice = op({slice_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor1D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\nimport {slice} from './slice';\n\n/**\n * Extracts a 1D slice from 1D array starting at coordinates `begin` and is\n * of length `size`. See `slice` for details.\n */\nfunction slice1d_(\n    x: Tensor1D|TensorLike, begin: number, size: number): Tensor1D {\n  const $x = convertToTensor(x, 'x', 'slice1d');\n  util.assert(\n      $x.rank === 1,\n      () =>\n          `slice1d expects a rank-1 tensor, but got a rank-${$x.rank} tensor`);\n  return slice($x, [begin], [size]);\n}\nexport const slice1d = op({slice1d_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor2D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\nimport {slice} from './slice';\n\n/**\n * Extracts a 2D slice from a 2D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice2d_(\n    x: Tensor2D|TensorLike, begin: [number, number],\n    size: [number, number]): Tensor2D {\n  const $x = convertToTensor(x, 'x', 'slice2d');\n  util.assert(\n      $x.rank === 2,\n      () =>\n          `slice2d expects a rank-2 tensor, but got a rank-${$x.rank} tensor`);\n  return slice($x, begin, size);\n}\nexport const slice2d = op({slice2d_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor3D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\nimport {slice} from './slice';\n\n/**\n * Extracts a 3D slice from a 3D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice3d_(\n    x: Tensor3D|TensorLike, begin: [number, number, number],\n    size: [number, number, number]): Tensor3D {\n  const $x = convertToTensor(x, 'x', 'slice3d');\n  util.assert(\n      $x.rank === 3,\n      () =>\n          `slice3d expects a rank-3 tensor, but got a rank-${$x.rank} tensor`);\n  return slice($x, begin, size);\n}\nexport const slice3d = op({slice3d_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\nimport {slice} from './slice';\n\n/**\n * Extracts a 4D slice from a 4D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice4d_(\n    x: Tensor4D|TensorLike, begin: [number, number, number, number],\n    size: [number, number, number, number]): Tensor4D {\n  const $x = convertToTensor(x, 'x', 'slice4d');\n  util.assert(\n      $x.rank === 4,\n      () =>\n          `slice4d expects a rank-4 tensor, but got a rank-${$x.rank} tensor`);\n  return slice($x, begin, size);\n}\nexport const slice4d = op({slice4d_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Softmax, SoftmaxAttrs, SoftmaxInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the softmax normalized vector given the logits.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * ```js\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * @param logits The logits array.\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction softmax_<T extends Tensor>(logits: T|TensorLike, dim = -1): T {\n  const $logits = convertToTensor(logits, 'logits', 'softmax', 'float32');\n\n  if (dim === -1) {\n    dim = $logits.rank - 1;\n  }\n  if (dim !== $logits.rank - 1) {\n    throw Error(\n        'Softmax along a non-last dimension is not yet supported. ' +\n        `Logits was rank ${$logits.rank} and dim was ${dim}`);\n  }\n\n  const inputs: SoftmaxInputs = {logits: $logits};\n  const attrs: SoftmaxAttrs = {dim};\n\n  return ENGINE.runKernel(\n      Softmax, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const softmax = op({softmax_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Softplus, SoftplusInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes softplus of the input `tf.Tensor` element-wise: `log(exp(x) + 1)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.softplus().print();  // or tf.softplus(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction softplus_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'softplus');\n\n  const inputs: SoftplusInputs = {x: $x};\n  return ENGINE.runKernel(Softplus, inputs as {} as NamedTensorMap);\n}\nexport const softplus = op({softplus_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {FFT, FFTInputs} from '../../kernel_names';\nimport {Tensor} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {assert} from '../../util';\nimport {op} from '../operation';\n\n/**\n * Fast Fourier transform.\n *\n * Computes the 1-dimensional discrete Fourier transform over the inner-most\n * dimension of input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([1, 2, 3]);\n * const x = tf.complex(real, imag);\n *\n * x.fft().print();  // tf.spectral.fft(x).print();\n * ```\n * @param input The complex input to compute an fft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction fft_(input: Tensor): Tensor {\n  assert(\n      input.dtype === 'complex64',\n      () => `The dtype for tf.spectral.fft() must be complex64 ` +\n          `but got ${input.dtype}.`);\n\n  const inputs: FFTInputs = {input};\n\n  return ENGINE.runKernel(FFT, inputs as {} as NamedTensorMap);\n}\n\nexport const fft = op({fft_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {IFFT, IFFTInputs} from '../../kernel_names';\nimport {Tensor} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {assert} from '../../util';\nimport {op} from '../operation';\n\n/**\n * Inverse fast Fourier transform.\n *\n * Computes the inverse 1-dimensional discrete Fourier transform over the\n * inner-most dimension of input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([1, 2, 3]);\n * const x = tf.complex(real, imag);\n *\n * x.ifft().print();  // tf.spectral.ifft(x).print();\n * ```\n * @param input The complex input to compute an ifft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction ifft_(input: Tensor): Tensor {\n  assert(\n      input.dtype === 'complex64',\n      () => `The dtype for tf.spectral.ifft() must be complex64 ` +\n          `but got ${input.dtype}.`);\n\n  const inputs: IFFTInputs = {input};\n\n  return ENGINE.runKernel(IFFT, inputs as {} as NamedTensorMap);\n}\n\nexport const ifft = op({ifft_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor2D} from '../../tensor';\nimport {complex} from '../complex';\nimport {concat} from '../concat';\nimport {imag} from '../imag';\nimport {mul} from '../mul';\nimport {op} from '../operation';\nimport {real} from '../real';\nimport {reshape} from '../reshape';\nimport {reverse} from '../reverse';\nimport {scalar} from '../scalar';\nimport {slice} from '../slice';\n\nimport {ifft} from './ifft';\n\n/**\n * Inversed real value input fast Fourier transform.\n *\n * Computes the 1-dimensional inversed discrete Fourier transform over the\n * inner-most dimension of the real input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([0, 0, 0]);\n * const x = tf.complex(real, imag);\n *\n * x.irfft().print();\n * ```\n * @param input The real value input to compute an irfft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction irfft_(input: Tensor): Tensor {\n  const innerDimensionSize = input.shape[input.shape.length - 1];\n  const batch = input.size / innerDimensionSize;\n  let ret: Tensor;\n  if (innerDimensionSize <= 2) {\n    const complexInput = reshape(input, [batch, innerDimensionSize]);\n    ret = ifft(complexInput);\n  } else {\n    // The length of unique components of the DFT of a real-valued signal\n    // is 2 * (input_len - 1)\n    const outputShape = [batch, 2 * (innerDimensionSize - 1)];\n    const realInput = reshape(real(input), [batch, innerDimensionSize]);\n    const imagInput = reshape(imag(input), [batch, innerDimensionSize]);\n\n    const realConjugate =\n        reverse(slice(realInput, [0, 1], [batch, innerDimensionSize - 2]), 1);\n    const imagConjugate: Tensor2D = mul(\n        reverse(slice(imagInput, [0, 1], [batch, innerDimensionSize - 2]), 1),\n        scalar(-1));\n\n    const r = concat([realInput, realConjugate], 1);\n    const i = concat([imagInput, imagConjugate], 1);\n    const complexInput =\n        reshape(complex(r, i), [outputShape[0], outputShape[1]]);\n    ret = ifft(complexInput);\n  }\n  ret = real(ret);\n  // reshape the result if the input is 3D tensor.\n  if (input.rank === 3 && input.shape[0] !== 0) {\n    const temp = ret;\n    const batch = input.shape[0];\n    ret = reshape(ret, [batch, ret.shape[0] / batch, ret.shape[1]]);\n    temp.dispose();\n  }\n  return ret;\n}\n\nexport const irfft = op({irfft_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Imag, ImagInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {op} from './operation';\n/**\n * Returns the imaginary part of a complex (or real) tensor.\n *\n * Given a tensor input, this operation returns a tensor of type float that is\n * the imaginary part of each element in input considered as a complex number.\n * If input is real, a tensor of all zeros is returned.\n *\n * ```js\n * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);\n * tf.imag(x).print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction imag_<T extends Tensor>(input: T|TensorLike): T {\n  const $input = convertToTensor(input, 'input', 'imag');\n\n  const inputs: ImagInputs = {input: $input};\n  return ENGINE.runKernel(Imag, inputs as {} as NamedTensorMap);\n}\n\nexport const imag = op({imag_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Real, RealInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {op} from './operation';\n\n/**\n * Returns the real part of a complex (or real) tensor.\n *\n * Given a tensor input, this operation returns a tensor of type float that is\n * the real part of each element in input considered as a complex number.\n *\n * If the input is real, it simply makes a clone.\n *\n * ```js\n * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);\n * tf.real(x).print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction real_<T extends Tensor>(input: T|TensorLike): T {\n  const $input = convertToTensor(input, 'input', 'real');\n\n  const inputs: RealInputs = {input: $input};\n  return ENGINE.runKernel(Real, inputs as {} as NamedTensorMap);\n}\n\nexport const real = op({real_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../../tensor';\nimport {assert} from '../../util';\nimport {complex} from '../complex';\nimport {concat} from '../concat';\nimport {imag} from '../imag';\nimport {op} from '../operation';\nimport {real} from '../real';\nimport {reshape} from '../reshape';\nimport {slice} from '../slice';\nimport {split} from '../split';\nimport {zeros} from '../zeros';\nimport {zerosLike} from '../zeros_like';\n\nimport {fft} from './fft';\n\n/**\n * Real value input fast Fourier transform.\n *\n * Computes the 1-dimensional discrete Fourier transform over the\n * inner-most dimension of the real input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n *\n * real.rfft().print();\n * ```\n * @param input The real value input to compute an rfft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction rfft_(input: Tensor, fftLength?: number): Tensor {\n  assert(\n      input.dtype === 'float32',\n      () => `The dtype for rfft() must be real value but got ${input.dtype}`);\n\n  let innerDimensionSize = input.shape[input.shape.length - 1];\n  const batch = input.size / innerDimensionSize;\n\n  let adjustedInput: Tensor;\n  if (fftLength != null && fftLength < innerDimensionSize) {\n    // Need to crop\n    const begin = input.shape.map(v => 0);\n    const size = input.shape.map(v => v);\n    size[input.shape.length - 1] = fftLength;\n    adjustedInput = slice(input, begin, size);\n    innerDimensionSize = fftLength;\n  } else if (fftLength != null && fftLength > innerDimensionSize) {\n    // Need to pad with zeros\n    const zerosShape = input.shape.map(v => v);\n    zerosShape[input.shape.length - 1] = fftLength - innerDimensionSize;\n    adjustedInput = concat([input, zeros(zerosShape)], input.shape.length - 1);\n    innerDimensionSize = fftLength;\n  } else {\n    adjustedInput = input;\n  }\n\n  // Complement the input with zero imaginary numbers.\n  const zerosInput = zerosLike(adjustedInput);\n  const complexInput =\n      reshape(complex(adjustedInput, zerosInput), [batch, innerDimensionSize]);\n\n  const ret = fft(complexInput);\n\n  // Exclude complex conjugations. These conjugations are put symmetrically.\n  const half = Math.floor(innerDimensionSize / 2) + 1;\n  const realValues = real(ret);\n  const imagValues = imag(ret);\n  const realComplexConjugate = split(\n      realValues, [half, innerDimensionSize - half],\n      realValues.shape.length - 1);\n  const imagComplexConjugate = split(\n      imagValues, [half, innerDimensionSize - half],\n      imagValues.shape.length - 1);\n\n  const outputShape = adjustedInput.shape.slice();\n  outputShape[adjustedInput.shape.length - 1] = half;\n\n  return reshape(\n      complex(realComplexConjugate[0], imagComplexConjugate[0]), outputShape);\n}\n\nexport const rfft = op({rfft_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {SplitV, SplitVAttrs, SplitVInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Splits a `tf.Tensor` into sub tensors.\n *\n * If `numOrSizeSplits` is a number, splits `x` along dimension `axis`\n * into `numOrSizeSplits` smaller tensors.\n * Requires that `numOrSizeSplits` evenly divides `x.shape[axis]`.\n *\n * If `numOrSizeSplits` is a number array, splits `x` into\n * `numOrSizeSplits.length` pieces. The shape of the `i`-th piece has the\n * same size as `x` except along dimension `axis` where the size is\n * `numOrSizeSplits[i]`.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8], [2, 4]);\n * const [a, b] = tf.split(x, 2, 1);\n * a.print();\n * b.print();\n *\n * const [c, d, e] = tf.split(x, [1, 2, 1], 1);\n * c.print();\n * d.print();\n * e.print();\n * ```\n *\n * @param x The input tensor to split.\n * @param numOrSizeSplits Either an integer indicating the number of\n * splits along the axis or an array of integers containing the sizes of\n * each output tensor along the axis. If a number then it must evenly divide\n * `x.shape[axis]`; otherwise the sum of sizes must match `x.shape[axis]`.\n * Can contain one -1 indicating that dimension is to be inferred.\n * @param axis The dimension along which to split. Defaults to 0 (the first\n * dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction split_<T extends Tensor>(\n    x: Tensor|TensorLike, numOrSizeSplits: number[]|number, axis = 0): T[] {\n  const $x = convertToTensor(x, 'x', 'split');\n\n  const inputs: SplitVInputs = {x: $x};\n  const attr: SplitVAttrs = {numOrSizeSplits, axis};\n\n  return ENGINE.runKernel(\n             SplitV, inputs as {} as NamedTensorMap,\n             attr as {} as NamedAttrMap) as {} as T[];\n}\n\nexport const split = op({split_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {ZerosLike, ZerosLikeInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Creates a `tf.Tensor` with all elements set to 0 with the same shape as the\n * given tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n * tf.zerosLike(x).print();\n * ```\n *\n * @param x The tensor of required shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction zerosLike_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'zerosLike');\n  const inputs: ZerosLikeInputs = {x: $x};\n  return ENGINE.runKernel(ZerosLike, inputs as {} as NamedTensorMap);\n}\nexport const zerosLike = op({zerosLike_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Sqrt, SqrtInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes square root of the input `tf.Tensor` element-wise: `y = sqrt(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 4, -1]);\n *\n * x.sqrt().print();  // or tf.sqrt(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sqrt_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'sqrt', 'float32');\n\n  const inputs: SqrtInputs = {x: $x};\n\n  return ENGINE.runKernel(Sqrt, inputs as {} as NamedTensorMap);\n}\nexport const sqrt = op({sqrt_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {squeezeShape} from '../util';\n\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Removes dimensions of size 1 from the shape of a `tf.Tensor`.\n *\n * ```js\n * const x = tf.tensor([1, 2, 3, 4], [1, 1, 4]);\n * x.squeeze().print();\n * ```\n *\n * @param x The input tensor to be squeezed.\n * @param axis An optional list of numbers. If specified, only\n *     squeezes the dimensions listed. The dimension index starts at 0. It\n * is an error to squeeze a dimension that is not 1.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction squeeze_<T extends Tensor>(x: Tensor|TensorLike, axis?: number[]): T {\n  const $x = convertToTensor(x, 'x', 'squeeze');\n  return reshape($x, squeezeShape($x.shape, axis).newShape) as T;\n}\n\nexport const squeeze = op({squeeze_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Pack, PackAttrs, PackInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensorArray} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Stacks a list of rank-`R` `tf.Tensor`s into one rank-`(R+1)` `tf.Tensor`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.stack([a, b, c]).print();\n * ```\n *\n * @param tensors A list of tensor objects with the same shape and dtype.\n * @param axis The axis to stack along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction stack_<T extends Tensor>(\n    tensors: Array<T|TensorLike>, axis = 0): Tensor {\n  const $tensors =\n      convertToTensorArray(tensors, 'tensors', 'stack', 'string_or_numeric');\n\n  util.assert(\n      $tensors.length >= 1, () => 'Pass at least one tensor to tf.stack');\n\n  if ($tensors.length > 0) {\n    util.assert(\n        axis <= $tensors[0].rank, () => 'Axis must be <= rank of the tensor');\n  }\n\n  const inputs: PackInputs = $tensors;\n  const attrs: PackAttrs = {axis};\n\n  return ENGINE.runKernel(\n      Pack, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const stack = op({stack_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tanh, TanhInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes hyperbolic tangent of the input `tf.Tensor` element-wise: `tanh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, 70]);\n *\n * x.tanh().print();  // or tf.tanh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction tanh_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'tanh', 'float32');\n\n  const inputs: TanhInputs = {x: $x};\n\n  return ENGINE.runKernel(Tanh, inputs as {} as NamedTensorMap);\n}\nexport const tanh = op({tanh_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor1D} from '../tensor';\nimport {inferShape} from '../tensor_util_env';\nimport {TensorLike1D} from '../types';\nimport {DataType} from '../types';\nimport {assertNonNull} from '../util';\nimport {makeTensor} from './tensor_ops_util';\n\n/**\n * Creates rank-1 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor1d` as it makes the code more readable.\n *\n * ```js\n * tf.tensor1d([1, 2, 3]).print();\n * ```\n *\n * @param values The values of the tensor. Can be array of numbers,\n *     or a `TypedArray`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor1d(values: TensorLike1D, dtype?: DataType): Tensor1D {\n  assertNonNull(values);\n  const inferredShape = inferShape(values, dtype);\n  if (inferredShape.length !== 1) {\n    throw new Error('tensor1d() requires values to be a flat/TypedArray');\n  }\n  const shape: number[] = null;\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor1D;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {DataType, Rank, ShapeMap} from '../types';\n\nimport {buffer} from './buffer';\nimport {op} from './operation';\nimport {MPRandGauss} from './rand_util';\n\n/**\n * Creates a `tf.Tensor` with values sampled from a truncated normal\n * distribution.\n *\n * ```js\n * tf.truncatedNormal([2, 2]).print();\n * ```\n *\n * The generated values follow a normal distribution with specified mean and\n * standard deviation, except that values whose magnitude is more than 2\n * standard deviations from the mean are dropped and re-picked.\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param mean The mean of the normal distribution.\n * @param stdDev The standard deviation of the normal distribution.\n * @param dtype The data type of the output tensor.\n * @param seed The seed for the random number generator.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction truncatedNormal_<R extends Rank>(\n    shape: ShapeMap[R], mean = 0, stdDev = 1, dtype?: 'float32'|'int32',\n    seed?: number): Tensor<R> {\n  if (dtype != null && (dtype as DataType) === 'bool') {\n    throw new Error(`Unsupported data type $ { dtype }`);\n  }\n  const randGauss =\n      new MPRandGauss(mean, stdDev, dtype, true /* truncated */, seed);\n  const res = buffer(shape, dtype);\n  for (let i = 0; i < res.values.length; i++) {\n    res.values[i] = randGauss.nextValue();\n  }\n  return res.toTensor();\n}\n\nexport const truncatedNormal = op({truncatedNormal_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Unpack, UnpackAttrs, UnpackInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Unstacks a `tf.Tensor` of rank-`R` into a list of rank-`(R-1)` `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * tf.unstack(a).forEach(tensor => tensor.print());\n * ```\n *\n * @param x A tensor object.\n * @param axis The axis to unstack along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction unstack_(x: Tensor|TensorLike, axis = 0): Tensor[] {\n  const $x = convertToTensor(x, 'x', 'unstack', 'string_or_numeric');\n  util.assert(\n      axis >= -$x.shape.length && axis < $x.shape.length,\n      () =>\n          `Axis = ${axis} is not in [-${$x.shape.length}, ${$x.shape.length})`);\n\n  const inputs: UnpackInputs = {value: $x};\n  const attrs: UnpackAttrs = {axis};\n\n  return ENGINE.runKernel(\n      Unpack, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const unstack = op({unstack_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor, Variable} from '../tensor';\nimport {DataType, Rank} from '../types';\n\n/**\n * Creates a new variable with the provided initial value.\n * ```js\n * const x = tf.variable(tf.tensor([1, 2, 3]));\n * x.assign(tf.tensor([4, 5, 6]));\n *\n * x.print();\n * ```\n *\n * @param initialValue Initial value for the tensor.\n * @param trainable If true, optimizers are allowed to update it.\n * @param name Name of the variable. Defaults to a unique id.\n * @param dtype If set, initialValue will be converted to the given type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function variable<R extends Rank>(\n    initialValue: Tensor<R>, trainable = true, name?: string,\n    dtype?: DataType): Variable<R> {\n  return ENGINE.makeVariable(initialValue, trainable, name, dtype) as\n      Variable<R>;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Select, SelectInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {broadcastTo} from './broadcast_to';\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns the elements, either `a` or `b` depending on the `condition`.\n *\n * If the condition is true, select from `a`, otherwise select from `b`.\n *\n * ```js\n * const cond = tf.tensor1d([false, false, true], 'bool');\n * const a = tf.tensor1d([1 , 2, 3]);\n * const b = tf.tensor1d([-1, -2, -3]);\n *\n * a.where(cond, b).print();\n * ```\n *\n * @param condition The input condition. Must be of dtype bool.\n * @param a If `condition` is rank 1, `a` may have a higher rank but\n *     its first dimension must match the size of `condition`.\n * @param b A tensor with the same dtype as `a` and with shape that is\n *     compatible with `a`.\n * @return A tensor with same dtype as `a` and `b`, and shape that is\n *     broadcastable from `a` and `b`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction where_<T extends Tensor>(\n    condition: Tensor|TensorLike, a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'where');\n  const $b = convertToTensor(b, 'b', 'where');\n  const $condition = convertToTensor(condition, 'condition', 'where', 'bool');\n  // TODO: move this logic to forward function when the broadcastTo op is\n  // implemented in WASM.\n  // Find the broadcastable shape for $condition, $a, and $b.\n  const broadcastShape = assertAndGetBroadcastShape(\n      assertAndGetBroadcastShape($condition.shape, $a.shape), $b.shape);\n  const $broadcastedCondition = broadcastTo($condition, broadcastShape);\n  const $broadcastedA = broadcastTo($a, broadcastShape);\n  const $broadcastedB = broadcastTo($b, broadcastShape);\n\n  const inputs: SelectInputs = {\n    condition: $broadcastedCondition,\n    t: $broadcastedA,\n    e: $broadcastedB\n  };\n  return ENGINE.runKernel(Select, inputs as {} as NamedTensorMap);\n}\n\nexport const where = op({where_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tile, TileAttrs, TileInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {Rank, ShapeMap, TensorLike} from '../types';\n\nimport {clone} from './clone';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Broadcast an array to a compatible shape NumPy-style.\n *\n * The tensor's shape is compared to the broadcast shape from end to beginning.\n * Ones are prepended to the tensor's shape until is has the same length as\n * the broadcast shape. If input.shape[i]==shape[i], the (i+1)-th axis is\n * already broadcast-compatible. If input.shape[i]==1 and shape[i]==N, then\n * the input tensor is tiled N times along that axis (using tf.tile).\n *\n * @param input The tensor that is to be broadcasted.\n * @param shape The input is to be broadcast to this shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction broadcastTo_<R extends Rank>(\n    x: Tensor|TensorLike, shape: ShapeMap[R]): Tensor<R> {\n  let input = convertToTensor(x, 'broadcastTo', 'x');\n  const xShape = input.shape;\n\n  if (shape.some(d => !(d > 0) || d % 1 !== 0)) {\n    throw new Error(`broadcastTo(): Invalid broadcast shape [${shape}].`);\n  }\n\n  if (shape.length < input.rank) {\n    throw new Error(`broadcastTo(): shape.length=${shape.length} < input.rank=${\n        input.rank}.`);\n  }\n\n  if (shape.length > input.rank) {\n    const newShape = input.shape.slice();\n    while (newShape.length < shape.length) {\n      newShape.unshift(1);\n    }\n    input = reshape(input, newShape);\n  }\n\n  const inputShape = input.shape;\n  const reps: number[] = Array.from(shape);\n  for (let i = shape.length - 1; i >= 0; i--) {\n    if (inputShape[i] === shape[i]) {\n      reps[i] = 1;\n    } else if (input.shape[i] !== 1) {\n      throw new Error(\n          `broadcastTo(): [${xShape}] cannot be broadcast to [${shape}].`);\n    }\n  }\n  const axes = reps.map((n, i) => n > 1 ? i : -1).filter(i => i >= 0);\n\n  if (axes.length === 0) {\n    return clone(input) as Tensor<R>;\n  }\n\n  // TODO call broadcastTo kernel directly once backends implement broadcstTo\n  const inputs: TileInputs = {x: input};\n  const attrs: TileAttrs = {reps};\n  return ENGINE.runKernel(\n      Tile, inputs as {} as NamedTensorMap, attrs as unknown as NamedAttrMap);\n}\n\nexport const broadcastTo = op({broadcastTo_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Transpose, TransposeAttrs, TransposeInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Transposes the `tf.Tensor`. Permutes the dimensions according to `perm`.\n *\n * The returned `tf.Tensor`'s dimension `i` will correspond to the input\n * dimension `perm[i]`. If `perm` is not given, it is set to `[n-1...0]`,\n * where `n` is the rank of the input `tf.Tensor`. Hence by default, this\n * operation performs a regular matrix transpose on 2-D input `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n *\n * a.transpose().print();  // or tf.transpose(a)\n * ```\n *\n * @param x The tensor to transpose.\n * @param perm The permutation of the dimensions of a.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction transpose_<T extends Tensor>(x: T|TensorLike, perm?: number[]): T {\n  const $x = convertToTensor(x, 'x', 'transpose');\n\n  if (perm == null) {\n    perm = $x.shape.map((s, i) => i).reverse();\n  }\n  util.assert(\n      $x.rank === perm.length,\n      () => `Error in transpose: rank of input ${$x.rank} ` +\n          `must match length of perm ${perm}.`);\n  perm.forEach(axis => {\n    util.assert(\n        axis >= 0 && axis < $x.rank,\n        () => `All entries in 'perm' must be between 0 and ${$x.rank - 1}` +\n            ` but got ${perm}`);\n  });\n\n  if ($x.rank <= 1) {\n    return $x.clone();\n  }\n\n  const inputs: TransposeInputs = {x: $x};\n  const attrs: TransposeAttrs = {perm};\n\n  return ENGINE.runKernel(\n      Transpose, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const transpose = op({transpose_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {add} from './add';\nimport {div} from './div';\nimport {getNoiseShape} from './dropout_util';\nimport {floor} from './floor';\nimport {mul} from './mul';\nimport {op} from './operation';\nimport {randomUniform} from './random_uniform';\n\n/**\n * Computes dropout.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 2, 1]);\n * const rate = 0.75;\n * const output = tf.dropout(x, rate);\n * output.print();\n * ```\n *\n * @param x A floating point Tensor or TensorLike.\n * @param rate A float in the range [0, 1). The probability that each element\n *   of x is discarded.\n * @param noiseShape An array of numbers of type int32, representing the\n * shape for randomly generated keep/drop flags. If the noiseShape has null\n * value, it will be automatically replaced with the x's relative dimension\n * size. Optional.\n * @param seed Used to create random seeds. Optional.\n * @returns A Tensor of the same shape of x.\n *\n * @doc {heading: 'Operations', subheading: 'Dropout'}\n */\nfunction dropout_(\n    x: Tensor|TensorLike, rate: number, noiseShape?: number[],\n    seed?: number|string): Tensor {\n  const $x = convertToTensor(x, 'x', 'dropout');\n\n  util.assert(\n      $x.dtype === 'float32',\n      () => `x has to be a floating point tensor since it's going to be ` +\n          `scaled, but got a ${$x.dtype} tensor instead.`);\n  util.assert(\n      rate >= 0 && rate < 1,\n      () => `rate must be a float in the range [0, 1), but got ${rate}.`);\n\n  if (rate === 0) {\n    return x instanceof Tensor ? $x.clone() : $x;\n  }\n\n  const $noiseShape = getNoiseShape($x, noiseShape);\n  const keepProb = 1 - rate;\n  const multiplier = div(\n      floor(add(randomUniform($noiseShape, 0, 1, 'float32', seed), keepProb)),\n      keepProb);\n\n  return mul($x, multiplier);\n}\n\nexport const dropout = op({dropout_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport * as util from '../util';\n\n/**\n * Normalize noise shape based on provided tensor and noise shape.\n *\n * @param x Tensor.\n * @param noiseShape The shape for the randomly generated keep/drop flags, as\n *   an array of numbers. Optional.\n * @returns Normalized noise shape.\n */\nexport function getNoiseShape(x: Tensor, noiseShape?: number[]): number[] {\n  if (noiseShape == null) {\n    return x.shape.slice();\n  }\n  if (util.arraysEqual(x.shape, noiseShape)) {\n    return noiseShape;\n  }\n  if (x.shape.length === noiseShape.length) {\n    const newDimension: number[] = [];\n    for (let i = 0; i < x.shape.length; i++) {\n      if (noiseShape[i] == null && x.shape[i] != null) {\n        newDimension.push(x.shape[i]);\n      } else {\n        newDimension.push(noiseShape[i]);\n      }\n    }\n    return newDimension;\n  }\n\n  return noiseShape;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {customGrad} from '../../gradients';\nimport {FusedConv2D, FusedConv2DAttrs, FusedConv2DInputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor, Tensor3D, Tensor4D} from '../../tensor';\nimport {GradSaveFunc, NamedTensorMap} from '../../tensor_types';\nimport {makeTypesMatch} from '../../tensor_util';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\nimport {add} from '../add';\nimport * as broadcast_util from '../broadcast_util';\nimport {conv2d as unfusedConv2d} from '../conv2d';\nimport {conv2DBackpropFilter} from '../conv2d_backprop_filter';\nimport {conv2DBackpropInput} from '../conv2d_backprop_input';\nimport * as conv_util from '../conv_util';\nimport {Activation} from '../fused_types';\nimport {applyActivation, getFusedBiasGradient, getFusedDyActivation, shouldFuse} from '../fused_util';\nimport {op} from '../operation';\nimport {reshape} from '../reshape';\n\n/**\n * Computes a 2D convolution over the input x, optionally fused with adding a\n * bias and applying an activation.\n *\n * ```js\n * const inputDepth = 2;\n * const inShape = [2, 2, 2, inputDepth];\n * const outputDepth = 2;\n * const fSize = 1;\n * const pad = 0;\n * const strides = 1;\n *\n * const x = tf.tensor4d( [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n * 16], inShape);\n * const w = tf.tensor4d([-1, 1, -2, 0.5], [fSize, fSize, inputDepth,\n * outputDepth]);\n *\n * tf.fused.conv2d({ x, filter: w, strides, pad, dataFormat: 'NHWC',\n * dilations: [1, 1], bias: tf.scalar(5), activation: 'relu' }).print();\n * ```\n *\n * @param obj An object with the following properties:\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid` output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param bias Tensor to be added to the result.\n * @param activation Name of activation kernel (defaults to `linear`) to be\n *     applied\n *      after biasAdd.\n * @param preluActivationWeights Tensor of prelu weights to be applied as part\n *     of a `prelu` activation, typically the same shape as `x`.\n * @param leakyreluAlpha Optional. Alpha to be applied as part of a `leakyrelu`\n *     activation.\n */\nfunction fusedConv2d_<T extends Tensor3D|Tensor4D>({\n  x,\n  filter,\n  strides,\n  pad,\n  dataFormat = 'NHWC',\n  dilations = [1, 1],\n  dimRoundingMode,\n  bias,\n  activation = 'linear',\n  preluActivationWeights,\n  leakyreluAlpha\n}: {\n  x: T|TensorLike,\n  filter: Tensor4D|TensorLike,\n  strides: [number, number]|number,\n  pad: 'valid'|'same'|number|conv_util.ExplicitPadding,\n  dataFormat?: 'NHWC'|'NCHW',\n  dilations?: [number, number]|number,\n  dimRoundingMode?: 'floor'|'round'|'ceil',\n  bias?: Tensor|TensorLike,\n  activation?: Activation,\n  preluActivationWeights?: Tensor,\n  leakyreluAlpha?: number\n}): T {\n  activation = activation || 'linear';\n\n  if (shouldFuse(ENGINE.state.gradientDepth, activation) === false) {\n    let result = unfusedConv2d(\n        x, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n    if (bias != null) {\n      result = add(result, bias);\n    }\n\n    return applyActivation(\n               result, activation, preluActivationWeights, leakyreluAlpha) as T;\n  }\n\n  const $x = convertToTensor(x, 'x', 'conv2d', 'float32');\n  const $filter = convertToTensor(filter, 'filter', 'conv2d', 'float32');\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in fused conv2d: input must be rank 4, but got rank ` +\n          `${x4D.rank}.`);\n  util.assert(\n      $filter.rank === 4,\n      () => `Error in fused conv2d: filter must be rank 4, but got rank ` +\n          `${$filter.rank}.`);\n  conv_util.checkPadOnDimRoundingMode('fused conv2d', pad, dimRoundingMode);\n  util.assert(\n      x4D.shape[3] === $filter.shape[2],\n      () => `Error in conv2d: depth of input (${x4D.shape[3]}) must match ` +\n          `input depth for filter ${$filter.shape[2]}.`);\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in conv2D: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n  util.assert(\n      dataFormat === 'NHWC',\n      () => `Error in conv2d: got dataFormat of ${\n          dataFormat} but only NHWC is currently supported.`);\n\n  const convInfo = conv_util.computeConv2DInfo(\n      x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode);\n\n  let $bias: Tensor;\n  if (bias != null) {\n    $bias = convertToTensor(bias, 'bias', 'fused conv2d');\n    [$bias] = makeTypesMatch($bias, $x);\n\n    broadcast_util.assertAndGetBroadcastShape(convInfo.outShape, $bias.shape);\n  }\n\n  let $preluActivationWeights: Tensor;\n  if (preluActivationWeights != null) {\n    $preluActivationWeights = convertToTensor(\n        preluActivationWeights, 'prelu weights', 'fused conv2d');\n  }\n\n  const grad = (dy: Tensor4D, saved: Tensor[]) => {\n    const [$filter, x4D, y, $bias] =\n        saved as [Tensor4D, Tensor4D, Tensor4D, Tensor];\n\n    const dyActivation = getFusedDyActivation(dy, y, activation) as Tensor4D;\n\n    util.assert(\n        conv_util.tupleValuesAreOne(dilations),\n        () => 'Error in gradient of fused conv2D: ' +\n            `dilation rates greater than 1 ` +\n            `are not yet supported in gradients. Got dilations '${dilations}'`);\n\n    const xDer =\n        conv2DBackpropInput(x4D.shape, dyActivation, $filter, strides, pad);\n    const filterDer =\n        conv2DBackpropFilter(x4D, dyActivation, $filter.shape, strides, pad);\n    const der: Tensor[] = [xDer, filterDer];\n\n    if ($bias != null) {\n      const biasDer = getFusedBiasGradient($bias, dyActivation);\n      der.push(biasDer);\n    }\n    return der;\n  };\n\n  const inputs: FusedConv2DInputs = {\n    x: x4D,\n    filter: $filter,\n    bias: $bias,\n    preluActivationWeights: $preluActivationWeights\n  };\n\n  const attrs: FusedConv2DAttrs = {\n    strides,\n    pad,\n    dataFormat,\n    dilations,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  };\n\n  // Depending on the the params passed in we will have different number of\n  // inputs and thus a a different number of elements in the gradient.\n  if (bias == null) {\n    const customOp =\n        customGrad((x4D: Tensor4D, filter: Tensor4D, save: GradSaveFunc) => {\n          let res: Tensor4D|Tensor3D =\n              // tslint:disable-next-line: no-unnecessary-type-assertion\n              ENGINE.runKernel(\n                  FusedConv2D, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap);\n\n          save([filter, x4D, res]);\n\n          if (reshapedTo4D) {\n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            res = reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as\n                Tensor3D;\n          }\n\n          return {value: res, gradFunc: grad};\n        });\n    return customOp(x4D, $filter) as T;\n  } else {\n    const customOpWithBias = customGrad(\n        (x4D: Tensor4D, filter: Tensor4D, bias: Tensor, save: GradSaveFunc) => {\n          let res: Tensor4D|Tensor3D = ENGINE.runKernel(\n              FusedConv2D, inputs as {} as NamedTensorMap,\n              attrs as {} as NamedAttrMap);\n\n          save([filter, x4D, res, bias]);\n\n          if (reshapedTo4D) {\n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            res = reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as\n                Tensor3D;\n          }\n\n          return {value: res, gradFunc: grad};\n        });\n\n    return customOpWithBias(x4D, $filter, $bias) as T;\n  }\n}\nexport const conv2d = op({fusedConv2d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Conv2DBackpropFilter, Conv2DBackpropFilterAttrs, Conv2DBackpropFilterInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport * as util from '../util';\n\nimport * as conv_util from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes the derivative of the filter of a 2D convolution.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     [batch, height, width, inChannels]. If rank 3, batch of 1 is assumed.\n * @param dy The dy image, of rank 4 or rank 3, of shape\n *     [batch, height, width, outDepth]. If rank 3, batch of 1 is assumed.\n * @param filterShape The shape of the filter, length 4,\n *     [filterHeight, filterWidth, inDepth, outDepth].\n * @param strides The strides of the convolution: [strideHeight,\n * strideWidth].\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction conv2DBackpropFilter_<T extends Tensor3D|Tensor4D>(\n    x: T, dy: T, filterShape: [number, number, number, number],\n    strides: [number, number]|number,\n    pad: 'valid'|'same'|number|conv_util.ExplicitPadding,\n    dataFormat: 'NHWC'|'NCHW' = 'NHWC',\n    dimRoundingMode?: 'floor'|'round'|'ceil'): Tensor4D {\n  let x4D = x as Tensor4D;\n  if (x.rank === 3) {\n    x4D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n  }\n  let dy4D = dy as Tensor4D;\n  if (dy4D.rank === 3) {\n    dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n  }\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in conv2dDerFilter: input must be rank 4, but got shape ` +\n          `${x4D.shape}.`);\n  util.assert(\n      dy4D.rank === 4,\n      () => `Error in conv2dDerFilter: dy must be rank 4, but got shape ` +\n          `${dy4D.shape}.`);\n  util.assert(\n      filterShape.length === 4,\n      () => `Error in conv2dDerFilter: filterShape must be length 4, but got ` +\n          `${filterShape}.`);\n  const inDepth = dataFormat === 'NHWC' ? x4D.shape[3] : x4D.shape[1];\n  const outDepth = dataFormat === 'NHWC' ? dy4D.shape[3] : dy4D.shape[1];\n  util.assert(\n      inDepth === filterShape[2],\n      () => `Error in conv2dDerFilter: depth of input ${inDepth}) must ` +\n          `match input depth in filter (${filterShape[2]}.`);\n  util.assert(\n      outDepth === filterShape[3],\n      () => `Error in conv2dDerFilter: depth of dy (${outDepth}) must ` +\n          `match output depth for filter (${filterShape[3]}).`);\n  conv_util.checkPadOnDimRoundingMode('conv2dDerFilter', pad, dimRoundingMode);\n  const inputs: Conv2DBackpropFilterInputs = {x: x4D, dy: dy4D};\n  const attrs: Conv2DBackpropFilterAttrs =\n      {strides, pad, dataFormat, dimRoundingMode, filterShape};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  return ENGINE.runKernel(\n             Conv2DBackpropFilter, inputs as {} as NamedTensorMap,\n             attrs as {} as NamedAttrMap) as Tensor4D;\n}\n\nexport const conv2DBackpropFilter = op({conv2DBackpropFilter_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\n\nimport * as broadcast_util from './broadcast_util';\nimport {elu} from './elu';\nimport {Activation} from './fused_types';\nimport {leakyRelu} from './leaky_relu';\nimport {mul} from './mul';\nimport {prelu} from './prelu';\nimport {relu} from './relu';\nimport {relu6} from './relu6';\nimport {reshape} from './reshape';\nimport {sigmoid} from './sigmoid';\nimport {step} from './step';\nimport {sum} from './sum';\n\n// Returns gradient for fused activation.\nexport function getFusedDyActivation(\n    dy: Tensor, y: Tensor, activation: Activation): Tensor {\n  if (activation == null || activation === 'linear') {\n    return dy;\n  }\n  if (activation === 'relu') {\n    return mul(dy, step(y));\n  }\n  throw new Error(\n      `Cannot compute gradient for fused activation ${activation}.`);\n}\n\n// Returns gradient for fused bias.\nexport function getFusedBiasGradient(\n    bias: Tensor, dyActivation: Tensor): Tensor {\n  let res = dyActivation;\n  const reduceAxes =\n      broadcast_util.getReductionAxes(bias.shape, dyActivation.shape);\n  if (reduceAxes.length > 0) {\n    res = sum(res, reduceAxes);\n  }\n  return reshape(res, bias.shape);\n}\n\nexport function applyActivation(\n    x: Tensor, activation: Activation, preluActivationWeights?: Tensor,\n    leakyreluAlpha?: number): Tensor {\n  if (activation === 'linear') {\n    return x;\n  } else if (activation === 'relu') {\n    return relu(x);\n  } else if (activation === 'elu') {\n    return elu(x);\n  } else if (activation === 'relu6') {\n    return relu6(x);\n  } else if (activation === 'prelu') {\n    return prelu(x, preluActivationWeights);\n  } else if (activation === 'leakyrelu') {\n    return leakyRelu(x, leakyreluAlpha);\n  } else if (activation === 'sigmoid') {\n    return sigmoid(x);\n  }\n  throw new Error(`Unknown fused activation ${activation}.`);\n}\n\n// Whether we should call fused ops.\nexport const shouldFuse = (gradientDepth: number, activation: Activation) => {\n  const gradientMode = gradientDepth > 0;\n  return !gradientMode || activation === 'linear';\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Relu6, Relu6Inputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes rectified linear 6 element-wise: `min(max(x, 0), 6)`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 8]);\n *\n * x.relu6().print();  // or tf.relu6(x)\n * ```\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\n *     `int32'.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction relu6_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'relu6');\n\n  const inputs: Relu6Inputs = {x: $x};\n\n  return ENGINE.runKernel(Relu6, inputs as {} as NamedTensorMap);\n}\n\nexport const relu6 = op({relu6_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Step, StepAttrs, StepInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes step of the input `tf.Tensor` element-wise: `x > 0 ? 1 : alpha * x`\n *\n * ```js\n * const x = tf.tensor1d([0, 2, -1, -3]);\n *\n * x.step(.5).print();  // or tf.step(x, .5)\n * ```\n * @param x The input tensor.\n * @param alpha The gradient when input is negative.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction step_<T extends Tensor>(x: T|TensorLike, alpha = 0.0): T {\n  const $x = convertToTensor(x, 'x', 'step');\n\n  const inputs: StepInputs = {x: $x};\n  const attrs: StepAttrs = {alpha};\n\n  return ENGINE.runKernel(\n      Step, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\nexport const step = op({step_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {customGrad} from '../../gradients';\nimport {FusedDepthwiseConv2D, FusedDepthwiseConv2DAttrs, FusedDepthwiseConv2DInputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor, Tensor3D, Tensor4D} from '../../tensor';\nimport {GradSaveFunc, NamedTensorMap} from '../../tensor_types';\nimport {makeTypesMatch} from '../../tensor_util';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\nimport {add} from '../add';\nimport * as broadcast_util from '../broadcast_util';\nimport * as conv_util from '../conv_util';\nimport {depthwiseConv2d as unfusedDepthwiseConv2d} from '../depthwise_conv2d';\nimport {depthwiseConv2dNativeBackpropFilter} from '../depthwise_conv2d_native_backprop_filter';\nimport {depthwiseConv2dNativeBackpropInput} from '../depthwise_conv2d_native_backprop_input';\nimport {Activation} from '../fused_types';\nimport {applyActivation, getFusedBiasGradient, getFusedDyActivation, shouldFuse} from '../fused_util';\nimport {op} from '../operation';\nimport {reshape} from '../reshape';\n\n/**\n * Computes depthwise 2D convolution, optionally fused with adding a\n * bias and applying an activation.\n *\n * Given a 4D `input` array and a `filter` array of shape\n * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing\n * `inChannels` convolutional filters of depth 1, this op applies a\n * different filter to each input channel (expanding from 1 channel to\n * `channelMultiplier` channels for each), then concatenates the results\n * together. The output has `inChannels * channelMultiplier` channels.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)\n * for more details.\n *\n * @param obj An object with the following properties:\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param bias Tensor to be added to the result.\n * @param activation Name of activation kernel (defaults to `linear`).\n * @param preluActivationWeights Tensor of prelu weights to be applied as part\n *     of a `prelu` activation, typically the same shape as `x`.\n * @param leakyreluAlpha Optional. Alpha to be applied as part of a `leakyrelu`\n *     activation.\n */\nfunction fusedDepthwiseConv2d_<T extends Tensor3D|Tensor4D>({\n  x,\n  filter,\n  strides,\n  pad,\n  dataFormat = 'NHWC',\n  dilations = [1, 1],\n  dimRoundingMode,\n  bias,\n  activation = 'linear',\n  preluActivationWeights,\n  leakyreluAlpha\n}: {\n  x: T|TensorLike,\n  filter: Tensor4D|TensorLike,\n  strides: [number, number]|number,\n  pad: 'valid'|'same'|number,\n  dataFormat?: 'NHWC'|'NCHW',\n  dilations?: [number, number]|number,\n  dimRoundingMode?: 'floor'|'round'|'ceil',\n  bias?: Tensor|TensorLike,\n  activation?: Activation,\n  preluActivationWeights?: Tensor,\n  leakyreluAlpha?: number\n}): T {\n  if (shouldFuse(ENGINE.state.gradientDepth, activation) === false) {\n    let result = unfusedDepthwiseConv2d(\n        x, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n    if (bias != null) {\n      result = add(result, bias);\n    }\n\n    return applyActivation(\n               result, activation, preluActivationWeights, leakyreluAlpha) as T;\n  }\n\n  const $x = convertToTensor(x, 'x', 'depthwiseConv2d', 'float32');\n  const $filter =\n      convertToTensor(filter, 'filter', 'depthwiseConv2d', 'float32');\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in fused depthwiseConv2d: input must be rank 4, but got ` +\n          `rank ${x4D.rank}.`);\n  util.assert(\n      $filter.rank === 4,\n      () => `Error in fused depthwiseConv2d: filter must be rank 4, ` +\n          `but got rank ${$filter.rank}.`);\n  util.assert(\n      x4D.shape[3] === $filter.shape[2],\n      () => `Error in fused depthwiseConv2d: number of input channels ` +\n          `(${x4D.shape[3]}) must match the inChannels dimension in ` +\n          `filter ${$filter.shape[2]}.`);\n  if (dilations == null) {\n    dilations = [1, 1];\n  }\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () =>\n          'Error in fused depthwiseConv2d: Either strides or dilations must ' +\n          `be 1. Got strides ${strides} and dilations '${dilations}'`);\n  conv_util.checkPadOnDimRoundingMode(\n      'fused depthwiseConv2d', pad, dimRoundingMode);\n  const convInfo = conv_util.computeConv2DInfo(\n      x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode,\n      true /* depthwise */);\n\n  let $bias: Tensor;\n  if (bias != null) {\n    $bias = convertToTensor(bias, 'bias', 'fused conv2d');\n    [$bias] = makeTypesMatch($bias, $x);\n\n    broadcast_util.assertAndGetBroadcastShape(convInfo.outShape, $bias.shape);\n  }\n\n  let $preluActivationWeights: Tensor;\n  if (preluActivationWeights != null) {\n    $preluActivationWeights = convertToTensor(\n        preluActivationWeights, 'prelu weights', 'fused depthwiseConv2d');\n  }\n\n  const grad = (dy: Tensor4D, saved: Tensor[]) => {\n    util.assert(\n        conv_util.tupleValuesAreOne(dilations),\n        () => 'Error in gradient of fused depthwiseConv2d: dilation rates ' +\n            `greater than 1 are not yet supported. Got dilations ` +\n            `'${dilations}'`);\n    const [$filter, x4D, y, bias] = saved;\n\n    const dyActivation = getFusedDyActivation(dy, y, activation) as Tensor4D;\n\n    const xDer = depthwiseConv2dNativeBackpropInput(\n        (x4D as Tensor4D).shape, dyActivation, $filter as Tensor4D, strides,\n        pad, dilations, dimRoundingMode);\n    const filterDer = depthwiseConv2dNativeBackpropFilter(\n        x4D as Tensor4D, dyActivation, ($filter as Tensor4D).shape, strides,\n        pad, dilations, dimRoundingMode);\n\n    if (bias != null) {\n      const biasDer = getFusedBiasGradient($bias, dyActivation);\n      return [xDer, filterDer, biasDer];\n    }\n    return [xDer, filterDer];\n  };\n\n  const inputs: FusedDepthwiseConv2DInputs = {\n    x: x4D,\n    filter: $filter,\n    bias: $bias,\n    preluActivationWeights: $preluActivationWeights\n  };\n  const attrs: FusedDepthwiseConv2DAttrs = {\n    strides,\n    pad,\n    dataFormat,\n    dilations,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  };\n\n  // Depending on the the params passed in we will have different number of\n  // inputs and thus a a different number of elements in the gradient.\n  if (bias == null) {\n    const customOp =\n        customGrad((x4D: Tensor4D, filter: Tensor4D, save: GradSaveFunc) => {\n          // tslint:disable-next-line: no-unnecessary-type-assertion\n          let res: Tensor4D|Tensor3D = ENGINE.runKernel(\n              FusedDepthwiseConv2D, inputs as {} as NamedTensorMap,\n              attrs as {} as NamedAttrMap);\n\n          save([filter, x4D, res]);\n\n          if (reshapedTo4D) {\n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            res = reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as\n                Tensor3D;\n          }\n\n          return {value: res, gradFunc: grad};\n        });\n    return customOp(x4D, $filter) as T;\n  } else {\n    const customOpWithBias = customGrad(\n        (x4D: Tensor4D, filter: Tensor4D, bias: Tensor, save: GradSaveFunc) => {\n          // tslint:disable-next-line: no-unnecessary-type-assertion\n          let res: Tensor4D|Tensor3D = ENGINE.runKernel(\n              FusedDepthwiseConv2D, inputs as {} as NamedTensorMap,\n              attrs as {} as NamedAttrMap);\n\n          save([filter, x4D, res, bias]);\n\n          if (reshapedTo4D) {\n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            res = reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as\n                Tensor3D;\n          }\n\n          return {value: res, gradFunc: grad};\n        });\n\n    return customOpWithBias(x4D, $filter, $bias) as T;\n  }\n}\nexport const depthwiseConv2d = op({fusedDepthwiseConv2d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {DepthwiseConv2dNativeBackpropFilter, DepthwiseConv2dNativeBackpropFilterAttrs, DepthwiseConv2dNativeBackpropFilterInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\n\nimport {ExplicitPadding} from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\nfunction depthwiseConv2dNativeBackpropFilter_<T extends Tensor3D|Tensor4D>(\n    x: T, dy: T, filterShape: [number, number, number, number],\n    strides: [number, number]|number,\n    pad: 'valid'|'same'|number|ExplicitPadding,\n    dilations: [number, number]|number = [1, 1],\n    dimRoundingMode?: 'floor'|'round'|'ceil'): Tensor4D {\n  let x4D = x as Tensor4D;\n  if (x.rank === 3) {\n    x4D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n  }\n  let dy4D = dy as Tensor4D;\n  if (dy4D.rank === 3) {\n    dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n  }\n\n  const inputs: DepthwiseConv2dNativeBackpropFilterInputs = {x: x4D, dy: dy4D};\n  const attrs: DepthwiseConv2dNativeBackpropFilterAttrs =\n      {strides, pad, dimRoundingMode, dilations, filterShape};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  return ENGINE.runKernel(\n             DepthwiseConv2dNativeBackpropFilter,\n             inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap) as\n      Tensor4D;\n}\n\nexport const depthwiseConv2dNativeBackpropFilter =\n    op({depthwiseConv2dNativeBackpropFilter_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {DepthwiseConv2dNativeBackpropInput, DepthwiseConv2dNativeBackpropInputAttrs, DepthwiseConv2dNativeBackpropInputInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\n\nimport {ExplicitPadding} from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\nfunction depthwiseConv2dNativeBackpropInput_<T extends Tensor3D|Tensor4D>(\n    xShape: [number, number, number, number], dy: T, filter: Tensor4D,\n    strides: [number, number]|number,\n    pad: 'valid'|'same'|number|ExplicitPadding,\n    dilations: [number, number]|number = [1, 1],\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  let dy4D = dy as Tensor4D;\n  let reshapedTo4D = false;\n  if (dy.rank === 3) {\n    reshapedTo4D = true;\n    dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n  }\n\n  const inputs: DepthwiseConv2dNativeBackpropInputInputs = {dy: dy4D, filter};\n  const attrs: DepthwiseConv2dNativeBackpropInputAttrs =\n      {strides, pad, dimRoundingMode, dilations, inputShape: xShape};\n\n  const res =\n      // tslint:disable-next-line: no-unnecessary-type-assertion\n      ENGINE.runKernel(\n          DepthwiseConv2dNativeBackpropInput, inputs as {} as NamedTensorMap,\n          attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n  return res;\n}\n\nexport const depthwiseConv2dNativeBackpropInput =\n    op({depthwiseConv2dNativeBackpropInput_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {customGrad} from '../../gradients';\nimport {_FusedMatMul, _FusedMatMulAttrs, _FusedMatMulInputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor, Tensor3D} from '../../tensor';\nimport {GradSaveFunc, NamedTensorMap} from '../../tensor_types';\nimport {makeTypesMatch} from '../../tensor_util';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\n\nimport {add} from '../add';\nimport * as broadcast_util from '../broadcast_util';\nimport {Activation} from '../fused_types';\nimport {applyActivation, getFusedBiasGradient, getFusedDyActivation, shouldFuse} from '../fused_util';\nimport {matMul as unfusedMatMul} from '../mat_mul';\nimport {op} from '../operation';\nimport {reshape} from '../reshape';\n\n/**\n * Computes the dot product of two matrices with optional activation and bias.\n *\n * ```js\n * const a = tf.tensor2d([-1, -2], [1, 2]);\n * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const bias = tf.tensor2d([1, 2], [1, 2]);\n *\n * tf.fused.matMul({a, b, bias, activation: 'relu'}).print();\n * ```\n *\n * @param obj An object with the following properties:\n * - `a` First matrix in dot product operation.\n * - `b` Second matrix in dot product operation.\n * - `transposeA` If true, `a` is transposed before multiplication.\n * - `transposeB` If true, `b` is transposed before multiplication.\n * - `bias` Matrix to be added to the result.\n * - `activation` Name of activation kernel (defaults to `linear`).\n * - `preluActivationWeights` Tensor of prelu weights.\n * - `leakyreluAlpha` Alpha of leakyrelu.\n */\nfunction fusedMatMul_({\n  a,\n  b,\n  transposeA = false,\n  transposeB = false,\n  bias,\n  activation = 'linear',\n  preluActivationWeights,\n  leakyreluAlpha,\n}: {\n  a: Tensor|TensorLike,\n  b: Tensor|TensorLike,\n  transposeA?: boolean,\n  transposeB?: boolean,\n  bias?: Tensor|TensorLike,\n  activation?: Activation,\n  preluActivationWeights?: Tensor\n  leakyreluAlpha?: number\n}): Tensor {\n    if (shouldFuse(ENGINE.state.gradientDepth, activation) === false) {\n      let result = unfusedMatMul(a, b, transposeA, transposeB);\n      if (bias != null) {\n        result = add(result, bias);\n      }\n\n      return applyActivation(\n                 result, activation, preluActivationWeights, leakyreluAlpha);\n    }\n\n    let $a = convertToTensor(a, 'a', 'fused matMul');\n    let $b = convertToTensor(b, 'b', 'fused matMul');\n    [$a, $b] = makeTypesMatch($a, $b);\n\n    const innerShapeA =\n        transposeA ? $a.shape[$a.rank - 2] : $a.shape[$a.rank - 1];\n    const innerShapeB =\n        transposeB ? $b.shape[$b.rank - 1] : $b.shape[$b.rank - 2];\n\n    const outerShapeA =\n        transposeA ? $a.shape[$a.rank - 1] : $a.shape[$a.rank - 2];\n    const outerShapeB =\n        transposeB ? $b.shape[$b.rank - 2] : $b.shape[$b.rank - 1];\n\n    const outerDimsA = $a.shape.slice(0, -2);\n    const outerDimsB = $b.shape.slice(0, -2);\n    const batchDimA = util.sizeFromShape(outerDimsA);\n    const batchDimB = util.sizeFromShape(outerDimsB);\n\n    util.assert(\n        innerShapeA === innerShapeB,\n        () => `Error in fused matMul: inner shapes (${innerShapeA}) and (` +\n            `${innerShapeB}) of Tensors with shapes ${$a.shape} and ` +\n            `${$b.shape} and transposeA=${transposeA}` +\n            ` and transposeB=${transposeB} must match.`);\n\n    const outShapeOuterDims = broadcast_util.assertAndGetBroadcastShape(\n        $a.shape.slice(0, -2), $b.shape.slice(0, -2));\n    const outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n\n    const a3D: Tensor3D = transposeA ?\n        reshape($a, [batchDimA, innerShapeA, outerShapeA]) :\n        reshape($a, [batchDimA, outerShapeA, innerShapeA]);\n    const b3D: Tensor3D = transposeB ?\n        reshape($b, [batchDimB, outerShapeB, innerShapeB]) :\n        reshape($b, [batchDimB, innerShapeB, outerShapeB]);\n\n    let $bias: Tensor;\n    if (bias != null) {\n      $bias = convertToTensor(bias, 'bias', 'fused matMul');\n      [$bias] = makeTypesMatch($bias, $a);\n\n      broadcast_util.assertAndGetBroadcastShape(outShape, $bias.shape);\n    }\n\n    let $preluActivationWeights: Tensor;\n    if (preluActivationWeights != null) {\n      $preluActivationWeights = convertToTensor(\n          preluActivationWeights, 'prelu weights', 'fused matMul');\n    }\n\n    const grad = (dy: Tensor3D, saved: Tensor[]) => {\n      const [a3D, b3D, y, $bias] = saved;\n      // we reshape dy because the result of the forward is not\n      // necessarily going to be a 3d tensor due to a reshape done at the end of\n      // the customOp.\n      const dyActivation =\n          getFusedDyActivation(reshape(dy, y.shape), y, activation);\n      let aDer: Tensor;\n      let bDer: Tensor;\n\n      if (!transposeA && !transposeB) {\n        aDer = unfusedMatMul(dyActivation, b3D, false, true);\n        bDer = unfusedMatMul(a3D, dyActivation, true, false);\n      } else if (!transposeA && transposeB) {\n        aDer = unfusedMatMul(dyActivation, b3D, false, false);\n        bDer = unfusedMatMul(dyActivation, a3D, true, false);\n      } else if (transposeA && !transposeB) {\n        aDer = unfusedMatMul(b3D, dyActivation, false, true);\n        bDer = unfusedMatMul(a3D, dyActivation, false, false);\n      } else {\n        aDer = unfusedMatMul(b3D, dyActivation, true, true);\n        bDer = unfusedMatMul(dyActivation, a3D, true, true);\n      }\n\n      if (bias != null) {\n        const biasDer = getFusedBiasGradient($bias, dyActivation);\n        return [aDer, bDer, biasDer];\n      } else {\n        return [aDer, bDer];\n      }\n    };\n\n    const inputs: _FusedMatMulInputs = {\n      a: a3D,\n      b: b3D,\n      bias: $bias,\n      preluActivationWeights: $preluActivationWeights\n    };\n    const attrs: _FusedMatMulAttrs =\n        {transposeA, transposeB, activation, leakyreluAlpha};\n\n    // Depending on the the params passed in we will have different number of\n    // inputs and thus a a different number of elements in the gradient.\n    if (bias == null) {\n      const customOp =\n          customGrad((a3D: Tensor3D, b3D: Tensor3D, save: GradSaveFunc) => {\n            const res =\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                ENGINE.runKernel(\n                    _FusedMatMul, inputs as {} as NamedTensorMap,\n                    attrs as {} as NamedAttrMap) as Tensor;\n\n            save([a3D, b3D, res]);\n\n            return {value: reshape(res, outShape), gradFunc: grad};\n          });\n      return customOp(a3D, b3D);\n    } else {\n      const customOpWithBias = customGrad(\n          (a3D: Tensor3D, b3D: Tensor3D, $bias: Tensor, save: GradSaveFunc) => {\n            const res =\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                ENGINE.runKernel(\n                    _FusedMatMul, inputs as {} as NamedTensorMap,\n                    attrs as {} as NamedAttrMap) as Tensor;\n\n            save([a3D, b3D, res, $bias]);\n\n            return {value: reshape(res, outShape), gradFunc: grad};\n          });\n\n      return customOpWithBias(a3D, b3D, $bias);\n    }\n  }\n\n  export const matMul = op({fusedMatMul_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor1D} from '../../tensor';\nimport {op} from '../operation';\nimport {cosineWindow} from '../signal_ops_util';\n\n/**\n * Generate a hamming window.\n *\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\n *\n * ```js\n * tf.signal.hammingWindow(10).print();\n * ```\n * @param The length of window\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction hammingWindow_(windowLength: number): Tensor1D {\n  return cosineWindow(windowLength, 0.54, 0.46);\n}\nexport const hammingWindow = op({hammingWindow_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor1D} from '../tensor';\nimport {tensor1d} from './tensor1d';\n\nexport function enclosingPowerOfTwo(value: number) {\n  // Return 2**N for integer N such that 2**N >= value.\n  return Math.floor(Math.pow(2, Math.ceil(Math.log(value) / Math.log(2.0))));\n}\n\nexport function cosineWindow(\n    windowLength: number, a: number, b: number): Tensor1D {\n  const even = 1 - windowLength % 2;\n  const newValues = new Float32Array(windowLength);\n  for (let i = 0; i < windowLength; ++i) {\n    const cosArg = (2.0 * Math.PI * i) / (windowLength + even - 1);\n    newValues[i] = a - b * Math.cos(cosArg);\n  }\n  return tensor1d(newValues, 'float32');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor1D} from '../../tensor';\nimport {op} from '../operation';\nimport {cosineWindow} from '../signal_ops_util';\n\n/**\n * Generate a Hann window.\n *\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\n *\n * ```js\n * tf.signal.hannWindow(10).print();\n * ```\n * @param The length of window\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction hannWindow_(windowLength: number): Tensor1D {\n  return cosineWindow(windowLength, 0.5, 0.5);\n}\n\nexport const hannWindow = op({hannWindow_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor1D} from '../../tensor';\nimport {concat} from '../concat';\nimport {fill} from '../fill';\nimport {op} from '../operation';\nimport {reshape} from '../reshape';\nimport {slice} from '../slice';\nimport {tensor2d} from '../tensor2d';\n\n/**\n * Expands input into frames of frameLength.\n * Slides a window size with frameStep.\n *\n * ```js\n * tf.signal.frame([1, 2, 3], 2, 1).print();\n * ```\n * @param signal The input tensor to be expanded\n * @param frameLength Length of each frame\n * @param frameStep The frame hop size in samples.\n * @param padEnd Whether to pad the end of signal with padValue.\n * @param padValue An number to use where the input signal does\n *     not exist when padEnd is True.\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction frame_(\n    signal: Tensor1D, frameLength: number, frameStep: number, padEnd = false,\n    padValue = 0): Tensor {\n  let start = 0;\n  const output: Tensor[] = [];\n  while (start + frameLength <= signal.size) {\n    output.push(slice(signal, start, frameLength));\n    start += frameStep;\n  }\n\n  if (padEnd) {\n    while (start < signal.size) {\n      const padLen = (start + frameLength) - signal.size;\n      const pad = concat([\n        slice(signal, start, frameLength - padLen), fill([padLen], padValue)\n      ]);\n      output.push(pad);\n      start += frameStep;\n    }\n  }\n\n  if (output.length === 0) {\n    return tensor2d([], [0, frameLength]);\n  }\n\n  return reshape(concat(output), [output.length, frameLength]);\n}\nexport const frame = op({frame_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor2D} from '../tensor';\nimport {inferShape} from '../tensor_util_env';\nimport {TensorLike2D} from '../types';\nimport {DataType} from '../types';\nimport {assertNonNull} from '../util';\nimport {makeTensor} from './tensor_ops_util';\n\n/**\n * Creates rank-2 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor2d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor2d([[1, 2], [3, 4]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. If not provided, it is inferred from\n *     `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor2d(\n    values: TensorLike2D, shape?: [number, number],\n    dtype?: DataType): Tensor2D {\n  assertNonNull(values);\n  if (shape != null && shape.length !== 2) {\n    throw new Error('tensor2d() requires shape to have two numbers');\n  }\n  const inferredShape = inferShape(values, dtype);\n  if (inferredShape.length !== 2 && inferredShape.length !== 1) {\n    throw new Error(\n        'tensor2d() requires values to be number[][] or flat/TypedArray');\n  }\n  if (inferredShape.length === 1 && shape == null) {\n    throw new Error(\n        'tensor2d() requires shape to be provided when `values` ' +\n        'are a flat/TypedArray');\n  }\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor2D;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor1D} from '../../tensor';\nimport {mul} from '../mul';\nimport {op} from '../operation';\nimport {enclosingPowerOfTwo} from '../signal_ops_util';\nimport {rfft} from '../spectral/rfft';\n\nimport {frame} from './frame';\nimport {hannWindow} from './hann_window';\n\n/**\n * Computes the Short-time Fourier Transform of signals\n * See: https://en.wikipedia.org/wiki/Short-time_Fourier_transform\n *\n * ```js\n * const input = tf.tensor1d([1, 1, 1, 1, 1])\n * tf.signal.stft(input, 3, 1).print();\n * ```\n * @param signal 1-dimensional real value tensor.\n * @param frameLength The window length of samples.\n * @param frameStep The number of samples to step.\n * @param fftLength The size of the FFT to apply.\n * @param windowFn A callable that takes a window length and returns 1-d tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction stft_(\n    signal: Tensor1D, frameLength: number, frameStep: number,\n    fftLength?: number,\n    windowFn: (length: number) => Tensor1D = hannWindow): Tensor {\n  if (fftLength == null) {\n    fftLength = enclosingPowerOfTwo(frameLength);\n  }\n  const framedSignal = frame(signal, frameLength, frameStep);\n  const windowedSignal = mul(framedSignal, windowFn(frameLength));\n  return rfft(windowedSignal, fftLength);\n}\nexport const stft = op({stft_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {CropAndResize, CropAndResizeAttrs, CropAndResizeInputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor1D, Tensor2D, Tensor4D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\n\nimport {op} from '../operation';\n\n/**\n * Extracts crops from the input image tensor and resizes them using bilinear\n * sampling or nearest neighbor sampling (possibly with aspect ratio change)\n * to a common output size specified by cropSize.\n *\n * @param image 4d tensor of shape `[batch,imageHeight,imageWidth, depth]`,\n *     where imageHeight and imageWidth must be positive, specifying the\n *     batch of images from which to take crops\n * @param boxes 2d float32 tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the normalized\n *     coordinates of the box in the boxInd[i]'th image in the batch\n * @param boxInd 1d int32 tensor of shape `[numBoxes]` with values in range\n *     `[0, batch)` that specifies the image that the `i`-th box refers to.\n * @param cropSize 1d int32 tensor of 2 elements `[cropHeigh, cropWidth]`\n *     specifying the size to which all crops are resized to.\n * @param method Optional string from `'bilinear' | 'nearest'`,\n *     defaults to bilinear, which specifies the sampling method for resizing\n * @param extrapolationValue A threshold for deciding when to remove boxes based\n *     on score. Defaults to 0.\n * @return A 4D tensor of the shape `[numBoxes,cropHeight,cropWidth,depth]`\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction cropAndResize_(\n    image: Tensor4D|TensorLike,\n    boxes: Tensor2D|TensorLike,\n    boxInd: Tensor1D|TensorLike,\n    cropSize: [number, number],\n    method: 'bilinear'|'nearest' = 'bilinear',\n    extrapolationValue = 0,\n    ): Tensor4D {\n  const $image = convertToTensor(image, 'image', 'cropAndResize');\n  const $boxes = convertToTensor(boxes, 'boxes', 'cropAndResize', 'float32');\n  const $boxInd = convertToTensor(boxInd, 'boxInd', 'cropAndResize', 'int32');\n\n  const numBoxes = $boxes.shape[0];\n\n  util.assert(\n      $image.rank === 4,\n      () => 'Error in cropAndResize: image must be rank 4,' +\n          `but got rank ${$image.rank}.`);\n  util.assert(\n      $boxes.rank === 2 && $boxes.shape[1] === 4,\n      () => `Error in cropAndResize: boxes must be have size [${numBoxes},4] ` +\n          `but had shape ${$boxes.shape}.`);\n  util.assert(\n      $boxInd.rank === 1 && $boxInd.shape[0] === numBoxes,\n      () => `Error in cropAndResize: boxInd must be have size [${numBoxes}] ` +\n          `but had shape ${$boxes.shape}.`);\n  util.assert(\n      cropSize.length === 2,\n      () => `Error in cropAndResize: cropSize must be of length 2, but got ` +\n          `length ${cropSize.length}.`);\n  util.assert(\n      cropSize[0] >= 1 && cropSize[1] >= 1,\n      () => `cropSize must be atleast [1,1], but was ${cropSize}`);\n  util.assert(\n      method === 'bilinear' || method === 'nearest',\n      () => `method must be bilinear or nearest, but was ${method}`);\n\n  const inputs:\n      CropAndResizeInputs = {image: $image, boxes: $boxes, boxInd: $boxInd};\n  const attrs: CropAndResizeAttrs = {method, extrapolationValue, cropSize};\n  const res = ENGINE.runKernel(\n      CropAndResize, inputs as {} as NamedTensorMap,\n      attrs as {} as NamedAttrMap);\n  return res as Tensor4D;\n}\n\nexport const cropAndResize = op({cropAndResize_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {FlipLeftRight, FlipLeftRightInputs} from '../../kernel_names';\nimport {Tensor4D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\nimport {op} from '../operation';\n\n/**\n * Flips the image left to right. Currently available in the CPU, WebGL, and\n * WASM backends.\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n */\n/** @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'} */\nfunction flipLeftRight_(image: Tensor4D|TensorLike): Tensor4D {\n  const $image = convertToTensor(image, 'image', 'flipLeftRight', 'float32');\n\n  util.assert(\n      $image.rank === 4,\n      () => 'Error in flipLeftRight: image must be rank 4,' +\n          `but got rank ${$image.rank}.`);\n\n  const inputs: FlipLeftRightInputs = {image: $image};\n  const res =\n      ENGINE.runKernel(FlipLeftRight, inputs as {} as NamedTensorMap, {});\n  return res as Tensor4D;\n}\n\nexport const flipLeftRight = op({flipLeftRight_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor2D, Tensor3D, Tensor4D, Tensor5D, Tensor6D} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\n\nimport {op} from '../operation';\nimport {tile} from '../tile';\n\n/**\n * Converts images from grayscale to RGB format.\n *\n * @param image A grayscale tensor to convert. The `image`'s last dimension must\n *     be size 1 with at least a two-dimensional shape.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction grayscaleToRGB_<T extends Tensor2D|Tensor3D|Tensor4D|Tensor5D|\n                         Tensor6D>(image: T|TensorLike): T {\n  const $image = convertToTensor(image, 'image', 'grayscaleToRGB');\n\n  const lastDimsIdx = $image.rank - 1;\n  const lastDims = $image.shape[lastDimsIdx];\n\n  util.assert(\n      $image.rank >= 2,\n      () => 'Error in grayscaleToRGB: images must be at least rank 2, ' +\n          `but got rank ${$image.rank}.`);\n\n  util.assert(\n      lastDims === 1,\n      () => 'Error in grayscaleToRGB: last dimension of a grayscale image ' +\n          `should be size 1, but got size ${lastDims}.`);\n\n  const reps = new Array($image.rank);\n\n  reps.fill(1, 0, lastDimsIdx);\n  reps[lastDimsIdx] = 3;\n\n  return tile($image, reps);\n}\n\nexport const grayscaleToRGB = op({grayscaleToRGB_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {RotateWithOffset, RotateWithOffsetAttrs, RotateWithOffsetInputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor4D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\n\nimport {op} from '../operation';\n\n/**\n * Rotates the input image tensor counter-clockwise with an optional offset\n * center of rotation. Currently available in the CPU, WebGL, and WASM backends.\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n * @param radians The amount of rotation.\n * @param fillValue The value to fill in the empty space leftover\n *     after rotation. Can be either a single grayscale value (0-255), or an\n *     array of three numbers `[red, green, blue]` specifying the red, green,\n *     and blue channels. Defaults to `0` (black).\n * @param center The center of rotation. Can be either a single value (0-1), or\n *     an array of two numbers `[centerX, centerY]`. Defaults to `0.5` (rotates\n *     the image around its center).\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction rotateWithOffset_(\n    image: Tensor4D|TensorLike, radians: number,\n    fillValue: number|[number, number, number] = 0,\n    center: number|[number, number] = 0.5): Tensor4D {\n  const $image = convertToTensor(image, 'image', 'rotateWithOffset', 'float32');\n\n  util.assert(\n      $image.rank === 4,\n      () => 'Error in rotateWithOffset: image must be rank 4,' +\n          `but got rank ${$image.rank}.`);\n\n  const inputs: RotateWithOffsetInputs = {image: $image};\n  const attrs: RotateWithOffsetAttrs = {radians, fillValue, center};\n  const res = ENGINE.runKernel(\n      RotateWithOffset, inputs as {} as NamedTensorMap,\n      attrs as {} as NamedAttrMap);\n  return res as Tensor4D;\n}\n\nexport const rotateWithOffset = op({rotateWithOffset_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {NonMaxSuppressionV3} from '../../kernel_names';\nimport {Tensor1D, Tensor2D} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {nonMaxSuppSanityCheck} from '../nonmax_util';\nimport {op} from '../operation';\n\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppression_(\n    boxes: Tensor2D|TensorLike, scores: Tensor1D|TensorLike,\n    maxOutputSize: number, iouThreshold = 0.5,\n    scoreThreshold = Number.NEGATIVE_INFINITY): Tensor1D {\n  const $boxes =\n      convertToTensor(boxes, 'boxes', 'nonMaxSuppression', 'float32');\n  const $scores =\n      convertToTensor(scores, 'scores', 'nonMaxSuppression', 'float32');\n\n  const inputs = nonMaxSuppSanityCheck(\n      $boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n  maxOutputSize = inputs.maxOutputSize;\n  iouThreshold = inputs.iouThreshold;\n  scoreThreshold = inputs.scoreThreshold;\n\n  const attrs = {maxOutputSize, iouThreshold, scoreThreshold};\n  return ENGINE.runKernel(\n      NonMaxSuppressionV3, {boxes: $boxes, scores: $scores}, attrs);\n}\n\nexport const nonMaxSuppression = op({nonMaxSuppression_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor1D, Tensor2D} from '../tensor';\nimport * as util from '../util';\n\nfunction nonMaxSuppSanityCheck(\n    boxes: Tensor2D, scores: Tensor1D, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number, softNmsSigma?: number): {\n  maxOutputSize: number,\n  iouThreshold: number,\n  scoreThreshold: number,\n  softNmsSigma: number\n} {\n  if (iouThreshold == null) {\n    iouThreshold = 0.5;\n  }\n  if (scoreThreshold == null) {\n    scoreThreshold = Number.NEGATIVE_INFINITY;\n  }\n  if (softNmsSigma == null) {\n    softNmsSigma = 0.0;\n  }\n\n  const numBoxes = boxes.shape[0];\n  maxOutputSize = Math.min(maxOutputSize, numBoxes);\n\n  util.assert(\n      0 <= iouThreshold && iouThreshold <= 1,\n      () => `iouThreshold must be in [0, 1], but was '${iouThreshold}'`);\n  util.assert(\n      boxes.rank === 2,\n      () => `boxes must be a 2D tensor, but was of rank '${boxes.rank}'`);\n  util.assert(\n      boxes.shape[1] === 4,\n      () =>\n          `boxes must have 4 columns, but 2nd dimension was ${boxes.shape[1]}`);\n  util.assert(scores.rank === 1, () => 'scores must be a 1D tensor');\n  util.assert(\n      scores.shape[0] === numBoxes,\n      () => `scores has incompatible shape with boxes. Expected ${numBoxes}, ` +\n          `but was ${scores.shape[0]}`);\n  util.assert(\n      0 <= softNmsSigma && softNmsSigma <= 1,\n      () => `softNmsSigma must be in [0, 1], but was '${softNmsSigma}'`);\n  return {maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma};\n}\n\nexport {nonMaxSuppSanityCheck};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {nonMaxSuppressionV3Impl} from '../../backends/non_max_suppression_impl';\nimport {Tensor1D, Tensor2D} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {nonMaxSuppSanityCheck} from '../nonmax_util';\nimport {tensor1d} from '../tensor1d';\n\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This is the async version of `nonMaxSuppression`\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionAsync_(\n    boxes: Tensor2D|TensorLike, scores: Tensor1D|TensorLike,\n    maxOutputSize: number, iouThreshold = 0.5,\n    scoreThreshold = Number.NEGATIVE_INFINITY): Promise<Tensor1D> {\n  const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n  const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n\n  const inputs = nonMaxSuppSanityCheck(\n      $boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n  maxOutputSize = inputs.maxOutputSize;\n  iouThreshold = inputs.iouThreshold;\n  scoreThreshold = inputs.scoreThreshold;\n\n  const boxesAndScores = await Promise.all([$boxes.data(), $scores.data()]);\n  const boxesVals = boxesAndScores[0];\n  const scoresVals = boxesAndScores[1];\n\n  // We call a cpu based impl directly with the typedarray data  here rather\n  // than a kernel because all kernels are synchronous (and thus cannot await\n  // .data()).\n  const {selectedIndices} = nonMaxSuppressionV3Impl(\n      boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n  if ($boxes !== boxes) {\n    $boxes.dispose();\n  }\n  if ($scores !== scores) {\n    $scores.dispose();\n  }\n\n  return tensor1d(selectedIndices, 'int32');\n}\n\nexport const nonMaxSuppressionAsync = nonMaxSuppressionAsync_;\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TypedArray} from '../types';\nimport {binaryInsert} from './non_max_suppression_util';\n\n/**\n * Implementation of the NonMaxSuppression kernel shared between webgl and cpu.\n */\ninterface Candidate {\n  score: number;\n  boxIndex: number;\n  suppressBeginIndex: number;\n}\n\ninterface NonMaxSuppressionResult {\n  selectedIndices: number[];\n  selectedScores?: number[];\n  validOutputs?: number;\n}\n\nexport function nonMaxSuppressionV3Impl(\n    boxes: TypedArray, scores: TypedArray, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number): NonMaxSuppressionResult {\n  return nonMaxSuppressionImpl_(\n      boxes, scores, maxOutputSize, iouThreshold, scoreThreshold,\n      0 /* softNmsSigma */);\n}\n\nexport function nonMaxSuppressionV4Impl(\n    boxes: TypedArray, scores: TypedArray, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number,\n    padToMaxOutputSize: boolean): NonMaxSuppressionResult {\n  return nonMaxSuppressionImpl_(\n      boxes, scores, maxOutputSize, iouThreshold, scoreThreshold,\n      0 /* softNmsSigma */, false /* returnScoresTensor */,\n      padToMaxOutputSize /* padToMaxOutputSize */, true\n      /* returnValidOutputs */);\n}\n\nexport function nonMaxSuppressionV5Impl(\n    boxes: TypedArray, scores: TypedArray, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number,\n    softNmsSigma: number): NonMaxSuppressionResult {\n  return nonMaxSuppressionImpl_(\n      boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma,\n      true /* returnScoresTensor */);\n}\n\nfunction nonMaxSuppressionImpl_(\n    boxes: TypedArray, scores: TypedArray, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number, softNmsSigma: number,\n    returnScoresTensor = false, padToMaxOutputSize = false,\n    returnValidOutputs = false): NonMaxSuppressionResult {\n  // The list is sorted in ascending order, so that we can always pop the\n  // candidate with the largest score in O(1) time.\n  const candidates = [];\n\n  for (let i = 0; i < scores.length; i++) {\n    if (scores[i] > scoreThreshold) {\n      candidates.push({score: scores[i], boxIndex: i, suppressBeginIndex: 0});\n    }\n  }\n\n  candidates.sort(ascendingComparator);\n\n  // If softNmsSigma is 0, the outcome of this algorithm is exactly same as\n  // before.\n  const scale = softNmsSigma > 0 ? (-0.5 / softNmsSigma) : 0.0;\n\n  const selectedIndices: number[] = [];\n  const selectedScores: number[] = [];\n\n  while (selectedIndices.length < maxOutputSize && candidates.length > 0) {\n    const candidate = candidates.pop();\n    const {score: originalScore, boxIndex, suppressBeginIndex} = candidate;\n\n    if (originalScore < scoreThreshold) {\n      break;\n    }\n\n    // Overlapping boxes are likely to have similar scores, therefore we\n    // iterate through the previously selected boxes backwards in order to\n    // see if candidate's score should be suppressed. We use\n    // suppressBeginIndex to track and ensure a candidate can be suppressed\n    // by a selected box no more than once. Also, if the overlap exceeds\n    // iouThreshold, we simply ignore the candidate.\n    let ignoreCandidate = false;\n    for (let j = selectedIndices.length - 1; j >= suppressBeginIndex; --j) {\n      const iou = intersectionOverUnion(boxes, boxIndex, selectedIndices[j]);\n\n      if (iou >= iouThreshold) {\n        ignoreCandidate = true;\n        break;\n      }\n\n      candidate.score =\n          candidate.score * suppressWeight(iouThreshold, scale, iou);\n\n      if (candidate.score <= scoreThreshold) {\n        break;\n      }\n    }\n\n    // At this point, if `candidate.score` has not dropped below\n    // `scoreThreshold`, then we know that we went through all of the\n    // previous selections and can safely update `suppressBeginIndex` to the\n    // end of the selected array. Then we can re-insert the candidate with\n    // the updated score and suppressBeginIndex back in the candidate list.\n    // If on the other hand, `candidate.score` has dropped below the score\n    // threshold, we will not add it back to the candidates list.\n    candidate.suppressBeginIndex = selectedIndices.length;\n\n    if (!ignoreCandidate) {\n      // Candidate has passed all the tests, and is not suppressed, so\n      // select the candidate.\n      if (candidate.score === originalScore) {\n        selectedIndices.push(boxIndex);\n        selectedScores.push(candidate.score);\n      } else if (candidate.score > scoreThreshold) {\n        // Candidate's score is suppressed but is still high enough to be\n        // considered, so add back to the candidates list.\n        binaryInsert(candidates, candidate, ascendingComparator);\n      }\n    }\n  }\n\n  // NonMaxSuppressionV4 feature: padding output to maxOutputSize.\n  const validOutputs = selectedIndices.length;\n  const elemsToPad = maxOutputSize - validOutputs;\n\n  if (padToMaxOutputSize && elemsToPad > 0) {\n    selectedIndices.push(...new Array(elemsToPad).fill(0));\n    selectedScores.push(...new Array(elemsToPad).fill(0.0));\n  }\n\n  const result: NonMaxSuppressionResult = {selectedIndices};\n\n  if (returnScoresTensor) {\n    result['selectedScores'] = selectedScores;\n  }\n\n  if (returnValidOutputs) {\n    result['validOutputs'] = validOutputs;\n  }\n\n  return result;\n}\n\nfunction intersectionOverUnion(boxes: TypedArray, i: number, j: number) {\n  const iCoord = boxes.subarray(i * 4, i * 4 + 4);\n  const jCoord = boxes.subarray(j * 4, j * 4 + 4);\n  const yminI = Math.min(iCoord[0], iCoord[2]);\n  const xminI = Math.min(iCoord[1], iCoord[3]);\n  const ymaxI = Math.max(iCoord[0], iCoord[2]);\n  const xmaxI = Math.max(iCoord[1], iCoord[3]);\n  const yminJ = Math.min(jCoord[0], jCoord[2]);\n  const xminJ = Math.min(jCoord[1], jCoord[3]);\n  const ymaxJ = Math.max(jCoord[0], jCoord[2]);\n  const xmaxJ = Math.max(jCoord[1], jCoord[3]);\n  const areaI = (ymaxI - yminI) * (xmaxI - xminI);\n  const areaJ = (ymaxJ - yminJ) * (xmaxJ - xminJ);\n  if (areaI <= 0 || areaJ <= 0) {\n    return 0.0;\n  }\n  const intersectionYmin = Math.max(yminI, yminJ);\n  const intersectionXmin = Math.max(xminI, xminJ);\n  const intersectionYmax = Math.min(ymaxI, ymaxJ);\n  const intersectionXmax = Math.min(xmaxI, xmaxJ);\n  const intersectionArea = Math.max(intersectionYmax - intersectionYmin, 0.0) *\n      Math.max(intersectionXmax - intersectionXmin, 0.0);\n  return intersectionArea / (areaI + areaJ - intersectionArea);\n}\n\n// A Gaussian penalty function, this method always returns values in [0, 1].\n// The weight is a function of similarity, the more overlap two boxes are, the\n// smaller the weight is, meaning highly overlapping boxe will be significantly\n// penalized. On the other hand, a non-overlapping box will not be penalized.\nfunction suppressWeight(iouThreshold: number, scale: number, iou: number) {\n  const weight = Math.exp(scale * iou * iou);\n  return iou <= iouThreshold ? weight : 0.0;\n}\n\nfunction ascendingComparator(c1: Candidate, c2: Candidate) {\n  // For objects with same scores, we make the object with the larger index go\n  // first. In an array that pops from the end, this means that the object with\n  // the smaller index will be popped first. This ensures the same output as\n  // the TensorFlow python version.\n  return (c1.score - c2.score) ||\n      ((c1.score === c2.score) && (c2.boxIndex - c1.boxIndex));\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Inserts a value into a sorted array. This method allows duplicate, meaning it\n * allows inserting duplicate value, in which case, the element will be inserted\n * at the lowest index of the value.\n * @param arr The array to modify.\n * @param element The element to insert.\n * @param comparator Optional. If no comparator is specified, elements are\n * compared using array_util.defaultComparator, which is suitable for Strings\n * and Numbers in ascending arrays. If the array contains multiple instances of\n * the target value, the left-most instance will be returned. To provide a\n * comparator, it should take 2 arguments to compare and return a negative,\n * zero, or a positive number.\n */\nexport function binaryInsert<T>(\n    arr: T[], element: T, comparator?: (a: T, b: T) => number) {\n  const index = binarySearch(arr, element, comparator);\n  const insertionPoint = index < 0 ? -(index + 1) : index;\n  arr.splice(insertionPoint, 0, element);\n}\n\n/**\n * Searches the array for the target using binary search, returns the index\n * of the found element, or position to insert if element not found. If no\n * comparator is specified, elements are compared using array_\n * util.defaultComparator, which is suitable for Strings and Numbers in\n * ascending arrays. If the array contains multiple instances of the target\n * value, the left-most instance will be returned.\n * @param arr The array to be searched in.\n * @param target The target to be searched for.\n * @param comparator Should take 2 arguments to compare and return a negative,\n *    zero, or a positive number.\n * @return Lowest index of the target value if found, otherwise the insertion\n *    point where the target should be inserted, in the form of\n *    (-insertionPoint - 1).\n */\nexport function binarySearch<T>(\n    arr: T[], target: T, comparator?: (a: T, b: T) => number) {\n  return binarySearch_(arr, target, comparator || defaultComparator);\n}\n\n/**\n * Compares its two arguments for order.\n * @param a The first element to be compared.\n * @param b The second element to be compared.\n * @return A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nfunction defaultComparator<T>(a: T, b: T): number {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\nfunction binarySearch_<T>(\n    arr: T[], target: T, comparator: (a: T, b: T) => number) {\n  let left = 0;\n  let right = arr.length;\n  let middle = 0;\n  let found = false;\n  while (left < right) {\n    middle = left + ((right - left) >>> 1);\n    const compareResult = comparator(target, arr[middle]);\n    if (compareResult > 0) {\n      left = middle + 1;\n    } else {\n      right = middle;\n      // If compareResult is 0, the value is found. We record it is found,\n      // and then keep looking because there may be duplicate.\n      found = !compareResult;\n    }\n  }\n\n  return found ? left : -left - 1;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {NonMaxSuppressionV5, NonMaxSuppressionV5Attrs, NonMaxSuppressionV5Inputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor, Tensor1D, Tensor2D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\n\nimport {nonMaxSuppSanityCheck} from '../nonmax_util';\nimport {op} from '../operation';\n\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This op also supports a Soft-NMS mode (c.f.\n * Bodla et al, https://arxiv.org/abs/1704.04503) where boxes reduce the score\n * of other overlapping boxes, therefore favoring different regions of the image\n * with high scores. To enable this Soft-NMS mode, set the `softNmsSigma`\n * parameter to be larger than 0.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param softNmsSigma A float representing the sigma parameter for Soft NMS.\n *     When sigma is 0, it falls back to nonMaxSuppression.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - selectedScores: A 1D tensor with the corresponding scores for each\n *       selected box.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppressionWithScore_(\n    boxes: Tensor2D|TensorLike, scores: Tensor1D|TensorLike,\n    maxOutputSize: number, iouThreshold = 0.5,\n    scoreThreshold = Number.NEGATIVE_INFINITY,\n    softNmsSigma = 0.0): NamedTensorMap {\n  const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression');\n  const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression');\n\n  const params = nonMaxSuppSanityCheck(\n      $boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold,\n      softNmsSigma);\n  maxOutputSize = params.maxOutputSize;\n  iouThreshold = params.iouThreshold;\n  scoreThreshold = params.scoreThreshold;\n  softNmsSigma = params.softNmsSigma;\n\n  const inputs: NonMaxSuppressionV5Inputs = {boxes: $boxes, scores: $scores};\n  const attrs: NonMaxSuppressionV5Attrs =\n      {maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const result = ENGINE.runKernel(\n                     NonMaxSuppressionV5, inputs as {} as NamedTensorMap,\n                     attrs as {} as NamedAttrMap) as Tensor[];\n\n  return {selectedIndices: result[0], selectedScores: result[1]};\n}\n\nexport const nonMaxSuppressionWithScore = op({nonMaxSuppressionWithScore_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {nonMaxSuppressionV5Impl} from '../../backends/non_max_suppression_impl';\nimport {Tensor1D, Tensor2D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {nonMaxSuppSanityCheck} from '../nonmax_util';\nimport {tensor1d} from '../tensor1d';\n\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This op also supports a Soft-NMS mode (c.f.\n * Bodla et al, https://arxiv.org/abs/1704.04503) where boxes reduce the score\n * of other overlapping boxes, therefore favoring different regions of the image\n * with high scores. To enable this Soft-NMS mode, set the `softNmsSigma`\n * parameter to be larger than 0.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param softNmsSigma A float representing the sigma parameter for Soft NMS.\n *     When sigma is 0, it falls back to nonMaxSuppression.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - selectedScores: A 1D tensor with the corresponding scores for each\n *       selected box.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionWithScoreAsync_(\n    boxes: Tensor2D|TensorLike, scores: Tensor1D|TensorLike,\n    maxOutputSize: number, iouThreshold = 0.5,\n    scoreThreshold = Number.NEGATIVE_INFINITY,\n    softNmsSigma = 0.0): Promise<NamedTensorMap> {\n  const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n  const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n\n  const params = nonMaxSuppSanityCheck(\n      $boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold,\n      softNmsSigma);\n  maxOutputSize = params.maxOutputSize;\n  iouThreshold = params.iouThreshold;\n  scoreThreshold = params.scoreThreshold;\n  softNmsSigma = params.softNmsSigma;\n\n  const boxesAndScores = await Promise.all([$boxes.data(), $scores.data()]);\n  const boxesVals = boxesAndScores[0];\n  const scoresVals = boxesAndScores[1];\n\n  // We call a cpu based impl directly with the typedarray data  here rather\n  // than a kernel because all kernels are synchronous (and thus cannot await\n  // .data()).\n  const {selectedIndices, selectedScores} = nonMaxSuppressionV5Impl(\n      boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold,\n      softNmsSigma);\n\n  if ($boxes !== boxes) {\n    $boxes.dispose();\n  }\n  if ($scores !== scores) {\n    $scores.dispose();\n  }\n\n  return {\n    selectedIndices: tensor1d(selectedIndices, 'int32'),\n    selectedScores: tensor1d(selectedScores)\n  };\n}\n\nexport const nonMaxSuppressionWithScoreAsync = nonMaxSuppressionWithScoreAsync_;\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {NonMaxSuppressionV4, NonMaxSuppressionV4Attrs, NonMaxSuppressionV4Inputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor, Tensor1D, Tensor2D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\n\nimport {nonMaxSuppSanityCheck} from '../nonmax_util';\nimport {op} from '../operation';\n\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union), with an option to pad results.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param padToMaxOutputSize Defalts to false. If true, size of output\n *     `selectedIndices` is padded to maxOutputSize.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - validOutputs: A scalar denoting how many elements in `selectedIndices`\n *       are valid. Valid elements occur first, then padding.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppressionPadded_(\n    boxes: Tensor2D|TensorLike, scores: Tensor1D|TensorLike,\n    maxOutputSize: number, iouThreshold = 0.5,\n    scoreThreshold = Number.NEGATIVE_INFINITY,\n    padToMaxOutputSize = false): NamedTensorMap {\n  const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression');\n  const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression');\n\n  const params = nonMaxSuppSanityCheck(\n      $boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold,\n      null /* softNmsSigma */);\n  const $maxOutputSize = params.maxOutputSize;\n  const $iouThreshold = params.iouThreshold;\n  const $scoreThreshold = params.scoreThreshold;\n\n  const inputs: NonMaxSuppressionV4Inputs = {boxes: $boxes, scores: $scores};\n  const attrs: NonMaxSuppressionV4Attrs = {\n    maxOutputSize: $maxOutputSize,\n    iouThreshold: $iouThreshold,\n    scoreThreshold: $scoreThreshold,\n    padToMaxOutputSize\n  };\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const result = ENGINE.runKernel(\n                     NonMaxSuppressionV4, inputs as {} as NamedTensorMap,\n                     attrs as {} as NamedAttrMap) as Tensor[];\n\n  return {selectedIndices: result[0], validOutputs: result[1]};\n}\n\nexport const nonMaxSuppressionPadded = op({nonMaxSuppressionPadded_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {nonMaxSuppressionV4Impl} from '../../backends/non_max_suppression_impl';\nimport {Tensor1D, Tensor2D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {nonMaxSuppSanityCheck} from '../nonmax_util';\nimport {scalar} from '../scalar';\nimport {tensor1d} from '../tensor1d';\n\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union), with an option to pad results.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param padToMaxOutputSize Defalts to false. If true, size of output\n *     `selectedIndices` is padded to maxOutputSize.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - validOutputs: A scalar denoting how many elements in `selectedIndices`\n *       are valid. Valid elements occur first, then padding.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionPaddedAsync_(\n    boxes: Tensor2D|TensorLike, scores: Tensor1D|TensorLike,\n    maxOutputSize: number, iouThreshold = 0.5,\n    scoreThreshold = Number.NEGATIVE_INFINITY,\n    padToMaxOutputSize = false): Promise<NamedTensorMap> {\n  const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n  const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n\n  const params = nonMaxSuppSanityCheck(\n      $boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold,\n      null /* softNmsSigma */);\n  const $maxOutputSize = params.maxOutputSize;\n  const $iouThreshold = params.iouThreshold;\n  const $scoreThreshold = params.scoreThreshold;\n\n  const [boxesVals, scoresVals] =\n      await Promise.all([$boxes.data(), $scores.data()]);\n\n  // We call a cpu based impl directly with the typedarray data here rather\n  // than a kernel because all kernels are synchronous (and thus cannot await\n  // .data()).\n  const {selectedIndices, validOutputs} = nonMaxSuppressionV4Impl(\n      boxesVals, scoresVals, $maxOutputSize, $iouThreshold, $scoreThreshold,\n      padToMaxOutputSize);\n\n  if ($boxes !== boxes) {\n    $boxes.dispose();\n  }\n  if ($scores !== scores) {\n    $scores.dispose();\n  }\n\n  return {\n    selectedIndices: tensor1d(selectedIndices, 'int32'),\n    validOutputs: scalar(validOutputs, 'int32')\n  };\n}\n\nexport const nonMaxSuppressionPaddedAsync = nonMaxSuppressionPaddedAsync_;\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {ResizeBilinear, ResizeBilinearAttrs, ResizeBilinearInputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\n\nimport {op} from '../operation';\nimport {reshape} from '../reshape';\n\n/**\n * Bilinear resize a single 3D image or a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to `false`. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n * @param halfPixelCenters Defaults to `false`. Whether to assume pixel centers\n *     are at 0.5, which would make the floating point coordinates of the top\n *     left pixel 0.5, 0.5.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction resizeBilinear_<T extends Tensor3D|Tensor4D>(\n    images: T|TensorLike, size: [number, number], alignCorners = false,\n    halfPixelCenters = false): T {\n  const $images = convertToTensor(images, 'images', 'resizeBilinear');\n\n  util.assert(\n      $images.rank === 3 || $images.rank === 4,\n      () => `Error in resizeBilinear: x must be rank 3 or 4, but got ` +\n          `rank ${$images.rank}.`);\n  util.assert(\n      size.length === 2,\n      () => `Error in resizeBilinear: new shape must 2D, but got shape ` +\n          `${size}.`);\n  util.assert(\n      halfPixelCenters === false || alignCorners === false,\n      () => `Error in resizeBilinear: If halfPixelCenters is true, ` +\n          `alignCorners must be false.`);\n\n  let batchImages = $images as Tensor4D;\n  let reshapedTo4D = false;\n  if ($images.rank === 3) {\n    reshapedTo4D = true;\n    batchImages = reshape(\n        $images, [1, $images.shape[0], $images.shape[1], $images.shape[2]]);\n  }\n\n  const [] = size;\n\n  const inputs: ResizeBilinearInputs = {images: batchImages};\n  const attrs: ResizeBilinearAttrs = {alignCorners, halfPixelCenters, size};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  ResizeBilinear, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n  return res;\n}\n\nexport const resizeBilinear = op({resizeBilinear_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {ResizeNearestNeighbor, ResizeNearestNeighborAttrs, ResizeNearestNeighborInputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\n\nimport {op} from '../operation';\nimport {reshape} from '../reshape';\n\n/**\n * NearestNeighbor resize a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to False. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n * @param halfPixelCenters Defaults to `false`. Whether to assumes pixels are of\n *      half the actual dimensions, and yields more accurate resizes. This flag\n *      would also make the floating point coordinates of the top left pixel\n *      0.5, 0.5.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction resizeNearestNeighbor_<T extends Tensor3D|Tensor4D>(\n    images: T|TensorLike, size: [number, number], alignCorners = false,\n    halfPixelCenters = false): T {\n  const $images = convertToTensor(images, 'images', 'resizeNearestNeighbor');\n\n  util.assert(\n      $images.rank === 3 || $images.rank === 4,\n      () => `Error in resizeNearestNeighbor: x must be rank 3 or 4, but got ` +\n          `rank ${$images.rank}.`);\n  util.assert(\n      size.length === 2,\n      () =>\n          `Error in resizeNearestNeighbor: new shape must 2D, but got shape ` +\n          `${size}.`);\n  util.assert(\n      $images.dtype === 'float32' || $images.dtype === 'int32',\n      () => '`images` must have `int32` or `float32` as dtype');\n  util.assert(\n      halfPixelCenters === false || alignCorners === false,\n      () => `Error in resizeNearestNeighbor: If halfPixelCenters is true, ` +\n          `alignCorners must be false.`);\n  let batchImages = $images as Tensor4D;\n  let reshapedTo4D = false;\n  if ($images.rank === 3) {\n    reshapedTo4D = true;\n    batchImages = reshape(\n        $images, [1, $images.shape[0], $images.shape[1], $images.shape[2]]);\n  }\n  const [] = size;\n\n  const inputs: ResizeNearestNeighborInputs = {images: batchImages};\n  const attrs:\n      ResizeNearestNeighborAttrs = {alignCorners, halfPixelCenters, size};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  ResizeNearestNeighbor, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n  return res;\n}\n\nexport const resizeNearestNeighbor = op({resizeNearestNeighbor_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport { Tensor1D, Tensor3D } from '../../tensor';\nimport { tensor1d } from '../tensor1d';\nimport { TensorLike } from '../../types';\nimport { op } from '../operation';\nimport { cast } from '../cast';\nimport { split } from '../split';\nimport { bincount } from '../bincount';\nimport { lessEqual } from '../less_equal';\nimport { greater } from '../greater';\nimport { sum } from '../sum';\nimport { add } from '../add';\nimport { mul } from '../mul';\nimport { div } from '../div';\nimport { sub } from '../sub';\nimport { round } from '../round';\nimport { where } from '../where';\nimport { fill } from '../fill';\nimport {slice} from '../slice';\nimport { range } from '../range';\nimport { tensor } from '../tensor';\nimport * as util from '../../util';\nimport { convertToTensor } from '../../tensor_util_env';\n\n/**\n * Performs image binarization with corresponding threshold\n * (depends on the method)value, which creates a binary image from a grayscale.\n * @param image 3d tensor of shape [imageHeight,imageWidth, depth],\n * where imageHeight and imageWidth must be positive.The image color\n * range should be [0, 255].\n * @param method Optional string from `'binary' | 'otsu'`\n * which specifies the method for thresholding. Defaults to 'binary'.\n * @param inverted Optional boolean whichspecifies\n * if colours should be inverted. Defaults to false.\n * @param threshValue Optional number which defines threshold value from 0 to 1.\n * Defaults to 0.5.\n * @return A 3d tensor of shape [imageHeight,imageWidth, depth], which\n * contains binarized image.\n */\n\nfunction threshold_(\n    image: Tensor3D | TensorLike,\n    method = 'binary',\n    inverted = false,\n    threshValue = 0.5\n): Tensor3D {\n    const $image = convertToTensor(image, 'image', 'threshold');\n\n    /* 0.2989, 0.5870, 0.1140 are represent luma coefficients in CCIR601.\n\tReference for converting between RGB and grayscale: https://en.wikipedia.org/wiki/Luma_%28video%29  */\n\n    const RED_INTENCITY_COEF = 0.2989;\n    const GREEN_INTENCITY_COEF = 0.5870;\n    const BLUE_INTENCITY_COEF = 0.1140;\n    const totalPixelsInImage = $image.shape[0] * $image.shape[1];\n\n    let $threshold = mul(tensor1d([threshValue]), 255);\n    let r, g, b, grayscale;\n\n    util.assert(\n        $image.rank === 3,\n        () => 'Error in threshold: image must be rank 3,' +\n            `but got rank ${$image.rank}.`);\n\n    util.assert(\n        $image.shape[2] === 3 || $image.shape[2]=== 1,\n        () => 'Error in threshold: ' +\n            'image color channel must be equal to 3 or 1' +\n            `but got ${$image.shape[2]}.`);\n\n    util.assert(\n      $image.dtype === 'int32' || $image.dtype === 'float32',\n      () => 'Error in dtype: image dtype must be int32 or float32,' +\n          `but got dtype ${$image.dtype}.`);\n\n    util.assert(\n      method === 'otsu' || method === 'binary',\n      () => `Method must be binary or otsu, but was ${method}`);\n\n    if ($image.shape[2] === 3) {\n        [r, g, b] = split($image, [1, 1, 1], -1);\n        const $r = mul(r,RED_INTENCITY_COEF);\n        const $g = mul(g,GREEN_INTENCITY_COEF);\n        const $b = mul(b,BLUE_INTENCITY_COEF);\n        grayscale = add(add($r, $g), $b);\n    } else {\n        grayscale = image;\n    }\n\n    if (method === 'otsu') {\n        const $histogram = bincount(cast(round(grayscale), 'int32') as Tensor1D,\n            tensor([]),\n            256);\n        $threshold = otsu($histogram, totalPixelsInImage);\n    }\n\n    const invCondition = inverted ?\n        lessEqual(grayscale, $threshold) : greater(grayscale, $threshold);\n\n    const result = cast(mul(invCondition,255), 'int32');\n\n    return result as Tensor3D;\n}\n\nfunction otsu(histogram: Tensor1D, total: number):Tensor1D {\n\n    let bestThresh = tensor1d([-1]);\n    let bestInBetVar = tensor1d([0]);\n    let cInBetVar = tensor1d([0]);\n    let classFirst, classSecond, meanFirst,\n        meanSec, weightForeground, weightBack;\n\n    for (let index = 0; index < histogram.size-1; index++) {\n\n        classFirst = slice(histogram, 0, index + 1);\n\n        classSecond = slice(histogram,index + 1);\n\n        weightForeground = div(sum(classFirst),total);\n\n        weightBack = div(sum(classSecond),total);\n\n        const meanFirstDivA = sum(mul(classFirst, range(0, classFirst.size)));\n\n        meanFirst = div(meanFirstDivA, sum(classFirst) );\n\n        const meanSecFill = fill(classSecond.shape, classFirst.size);\n        const meanSecAdd = add(range(0,classSecond.size),meanSecFill);\n        const meanSecMul = mul(classSecond, (meanSecAdd));\n        meanSec = div(sum(meanSecMul), sum(classSecond));\n\n        const cInBetVarSubA = sub(meanFirst, meanSec);\n        const cInBetVarSubB = sub(meanFirst, meanSec);\n        const cInBetVarMul = mul(weightForeground, weightBack);\n        cInBetVar = mul(mul(cInBetVarMul,cInBetVarSubA), cInBetVarSubB);\n\n        const condition = greater(cInBetVar, bestInBetVar);\n\n        bestInBetVar = where(condition, cInBetVar, bestInBetVar);\n\n        bestThresh = where(condition, tensor1d([index]), bestThresh);\n\n    }\n    return bestThresh;\n}\n\nexport const threshold = op({ threshold_ });\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Bincount, BincountAttrs, BincountInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor1D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Outputs a vector with length `size` and the same dtype as `weights`.\n *\n * If `weights` are empty, then index `i` stores the number of times the value\n * `i` is counted in `x`. If `weights` are non-empty, then index `i` stores the\n * sum of the value in `weights` at each index where the corresponding value in\n * `x` is `i`.\n *\n * Values in `x` outside of the range [0, size) are ignored.\n *\n * @param x The input int tensor, rank 1.\n * @param weights The weights tensor, must have the same shape as x, or a\n *     length-0 Tensor, in which case it acts as all weights equal to 1.\n * @param size Non-negative integer.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction bincount_<T extends Tensor1D>(\n    x: T|TensorLike, weights: T|TensorLike, size: number): T {\n  const $x = convertToTensor(x, 'x', 'bincount');\n  const $weights = convertToTensor(weights, 'weights', 'bincount');\n\n  util.assert(\n      $x.dtype === 'int32',\n      () => `Error in bincount: input ` +\n          `dtype must be int32, but got ${$x.dtype}`);\n  util.assert(size >= 0, () => `size must be non-negative, but got ${size}.`);\n  util.assert(\n      $weights.size === $x.size || $weights.size === 0,\n      () => `Error in bincount: weights must have the same size as input or` +\n          `0-length, but got input shape: ${$x.shape}, weights shape: ` +\n          `${$weights.shape}.`);\n\n  const inputs: BincountInputs = {x: $x, weights: $weights};\n  const attrs: BincountAttrs = {size};\n\n  return ENGINE.runKernel(\n      Bincount, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const bincount = op({bincount_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {LessEqual, LessEqualInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns the truth value of (a <= b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.lessEqual(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction lessEqual_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'lessEqual', 'string_or_numeric');\n  let $b = convertToTensor(b, 'b', 'lessEqual', 'string_or_numeric');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: LessEqualInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(LessEqual, inputs as {} as NamedTensorMap);\n}\n\nexport const lessEqual = op({lessEqual_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Round, RoundInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes round of input `tf.Tensor` element-wise: `round(x)`.\n * It implements banker's rounding.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.round().print();  // or tf.round(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction round_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'round');\n  const inputs: RoundInputs = {x: $x};\n\n  return ENGINE.runKernel(Round, inputs as {} as NamedTensorMap);\n}\n\nexport const round = op({round_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Range, RangeAttrs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor1D} from '../tensor';\n\n/**\n * Creates a new `tf.Tensor1D` filled with the numbers in the range provided.\n *\n * The tensor is a is half-open interval meaning it includes start, but\n * excludes stop. Decrementing ranges and negative step values are also\n * supported.sv\n *\n *\n * ```js\n * tf.range(0, 9, 2).print();\n * ```\n *\n * @param start An integer start value\n * @param stop An integer stop value\n * @param step An integer increment (will default to 1 or -1)\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function range(\n    start: number, stop: number, step = 1,\n    dtype: 'float32'|'int32' = 'float32'): Tensor1D {\n  if (step === 0) {\n    throw new Error('Cannot have a step of zero');\n  }\n\n  const attrs: RangeAttrs = {start, stop, step, dtype};\n\n  return ENGINE.runKernel(Range, {} /* inputs */, attrs as {} as NamedAttrMap);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../../engine';\nimport {Transform, TransformAttrs, TransformInputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor2D, Tensor4D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\n\nimport {op} from '../operation';\n\n/**\n * Applies the given transform(s) to the image(s).\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n * @param transforms Projective transform matrix/matrices. A tensor1d of length\n *     8 or tensor of size N x 8. If one row of transforms is [a0, a1, a2, b0\n *     b1, b2, c0, c1], then it maps the output point (x, y) to a transformed\n *     input point (x', y') = ((a0 x + a1 y + a2) / k, (b0 x + b1 y + b2) / k),\n *     where k = c0 x + c1 y + 1. The transforms are inverted compared to the\n *     transform mapping input points to output points.\n * @param interpolation Interpolation mode.\n *     Supported values: 'nearest', 'bilinear'. Default to 'nearest'.\n * @param fillMode Points outside the boundaries of the input are filled\n *     according to the given mode, one of 'constant', 'reflect', 'wrap',\n *     'nearest'. Default to 'constant'.\n *     'reflect': (d c b a | a b c d | d c b a ) The input is extended by\n *     reflecting about the edge of the last pixel.\n *     'constant': (k k k k | a b c d | k k k k) The input is extended by\n *     filling all values beyond the edge with the same constant value k.\n *     'wrap': (a b c d | a b c d | a b c d) The input is extended by\n *     wrapping around to the opposite edge.\n *     'nearest': (a a a a | a b c d | d d d d) The input is extended by\n *     the nearest pixel.\n * @param fillValue A float represents the value to be filled outside the\n *     boundaries when fillMode is 'constant'.\n * @param Output dimension after the transform, [height, width]. If undefined,\n *     output is the same size as input image.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction transform_(\n    image: Tensor4D|TensorLike, transforms: Tensor2D|TensorLike,\n    interpolation: 'nearest'|'bilinear' = 'nearest',\n    fillMode: 'constant'|'reflect'|'wrap'|'nearest' = 'constant', fillValue = 0,\n    outputShape?: [number, number]): Tensor4D {\n  const $image = convertToTensor(image, 'image', 'transform', 'float32');\n  const $transforms =\n      convertToTensor(transforms, 'transforms', 'transform', 'float32');\n\n  util.assert(\n      $image.rank === 4,\n      () => 'Error in transform: image must be rank 4,' +\n          `but got rank ${$image.rank}.`);\n\n  util.assert(\n      $transforms.rank === 2 &&\n          ($transforms.shape[0] === $image.shape[0] ||\n           $transforms.shape[0] === 1) &&\n          $transforms.shape[1] === 8,\n      () => `Error in transform: Input transform should be batch x 8 or 1 x 8`);\n\n  util.assert(\n      outputShape == null || outputShape.length === 2,\n      () =>\n          'Error in transform: outputShape must be [height, width] or null, ' +\n          `but got ${outputShape}.`);\n\n  const inputs: TransformInputs = {image: $image, transforms: $transforms};\n  const attrs:\n      TransformAttrs = {interpolation, fillMode, fillValue, outputShape};\n\n  return ENGINE.runKernel(\n      Transform, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const transform = op({transform_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assert} from '../../util';\n\nimport {greaterEqual} from '../greater_equal';\nimport {lessEqual} from '../less_equal';\nimport {logicalAnd} from '../logical_and';\nimport {op} from '../operation';\nimport {range} from '../range';\nimport {reshape} from '../reshape';\nimport {scalar} from '../scalar';\nimport {stack} from '../stack';\nimport {sub} from '../sub';\nimport {unstack} from '../unstack';\nimport {where} from '../where';\nimport {zeros} from '../zeros';\n\n/**\n * Copy a tensor setting everything outside a central band in each innermost\n * matrix to zero.\n *\n * The band part is computed as follows: Assume input has `k` dimensions\n * `[I, J, K, ..., M, N]`, then the output is a tensor with the same shape where\n * `band[i, j, k, ..., m, n] = in_band(m, n) * input[i, j, k, ..., m, n]`.\n * The indicator function\n * `in_band(m, n) = (num_lower < 0 || (m-n) <= num_lower))`\n * `&& (num_upper < 0 || (n-m) <= num_upper)`\n *\n * ```js\n * const x = tf.tensor2d([[ 0,  1,  2, 3],\n *                        [-1,  0,  1, 2],\n *                        [-2, -1,  0, 1],\n *                        [-3, -2, -1, 0]]);\n * let y = tf.linalg.bandPart(x, 1, -1);\n * y.print(); // [[ 0,  1,  2, 3],\n *            //  [-1,  0,  1, 2],\n *            //  [ 0, -1,  0, 1],\n *            //  [ 0, 0 , -1, 0]]\n * let z = tf.linalg.bandPart(x, 2, 1);\n * z.print(); // [[ 0,  1,  0, 0],\n *            //  [-1,  0,  1, 0],\n *            //  [-2, -1,  0, 1],\n *            //  [ 0, -2, -1, 0]]\n * ```\n *\n * @param x Rank `k` tensor\n * @param numLower Number of subdiagonals to keep.\n *   If negative, keep entire lower triangle.\n * @param numUpper Number of subdiagonals to keep.\n *   If negative, keep entire upper triangle.\n * @returns Rank `k` tensor of the same shape as input.\n *   The extracted banded tensor.\n *\n * @doc {heading:'Operations', subheading:'Linear Algebra', namespace:'linalg'}\n */\nfunction bandPart_<T extends Tensor>(\n    a: T|TensorLike, numLower: number, numUpper: number): T {\n  assert(\n      numLower % 1 === 0,\n      () => `bandPart(): numLower must be an integer, got ${numLower}.`);\n  assert(\n      numUpper % 1 === 0,\n      () => `bandPart(): numUpper must be an integer, got ${numUpper}.`);\n\n  const $a = convertToTensor(a, 'a', 'bandPart');\n\n  assert(\n      $a.rank >= 2,\n      () => `bandPart(): Rank must be at least 2, got ${$a.rank}.`);\n\n  const shape = $a.shape;\n  const [M, N] = $a.shape.slice(-2);\n\n  if (!(numLower <= M)) {\n    throw new Error(\n        `bandPart(): numLower (${numLower})` +\n        ` must not be greater than the number of rows (${M}).`);\n  }\n  if (!(numUpper <= N)) {\n    throw new Error(\n        `bandPart(): numUpper (${numUpper})` +\n        ` must not be greater than the number of columns (${N}).`);\n  }\n\n  if (numLower < 0) {\n    numLower = M;\n  }\n  if (numUpper < 0) {\n    numUpper = N;\n  }\n\n  const i = reshape(range(0, M, 1, 'int32'), [-1, 1]);\n  const j = range(0, N, 1, 'int32');\n  const ij = sub(i, j);\n\n  const inBand = logicalAnd(\n      lessEqual(ij, scalar(+numLower, 'int32')),\n      greaterEqual(ij, scalar(-numUpper, 'int32')));\n\n  const zero = zeros([M, N], $a.dtype);\n\n  return reshape(\n             stack(unstack(reshape($a, [-1, M, N]))\n                       .map(mat => where(inBand, mat, zero))),\n             shape) as T;\n}\n\nexport const bandPart = op({bandPart_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {Tensor1D, Tensor2D} from '../../tensor';\nimport {assert} from '../../util';\n\nimport {div} from '../div';\nimport {mul} from '../mul';\nimport {norm} from '../norm';\nimport {op} from '../operation';\nimport {split} from '../split';\nimport {squeeze} from '../squeeze';\nimport {stack} from '../stack';\nimport {sub} from '../sub';\nimport {sum} from '../sum';\n\n/**\n * Gram-Schmidt orthogonalization.\n *\n * ```js\n * const x = tf.tensor2d([[1, 2], [3, 4]]);\n * let y = tf.linalg.gramSchmidt(x);\n * y.print();\n * console.log('Othogonalized:');\n * y.dot(y.transpose()).print();  // should be nearly the identity matrix.\n * console.log('First row direction maintained:');\n * const data = await y.array();\n * console.log(data[0][1] / data[0][0]);  // should be nearly 2.\n * ```\n *\n * @param xs The vectors to be orthogonalized, in one of the two following\n *   formats:\n *   - An Array of `tf.Tensor1D`.\n *   - A `tf.Tensor2D`, i.e., a matrix, in which case the vectors are the rows\n *     of `xs`.\n *   In each case, all the vectors must have the same length and the length\n *   must be greater than or equal to the number of vectors.\n * @returns The orthogonalized and normalized vectors or matrix.\n *   Orthogonalization means that the vectors or the rows of the matrix\n *   are orthogonal (zero inner products). Normalization means that each\n *   vector or each row of the matrix has an L2 norm that equals `1`.\n *\n * @doc {heading:'Operations', subheading:'Linear Algebra', namespace:'linalg'}\n */\nfunction gramSchmidt_(xs: Tensor1D[]|Tensor2D): Tensor1D[]|Tensor2D {\n  let inputIsTensor2D: boolean;\n  if (Array.isArray(xs)) {\n    inputIsTensor2D = false;\n    assert(\n        xs != null && xs.length > 0,\n        () => 'Gram-Schmidt process: input must not be null, undefined, or ' +\n            'empty');\n    const dim = xs[0].shape[0];\n    for (let i = 1; i < xs.length; ++i) {\n      assert(\n          xs[i].shape[0] === dim,\n          () =>\n              'Gram-Schmidt: Non-unique lengths found in the input vectors: ' +\n              `(${(xs as Tensor1D[])[i].shape[0]} vs. ${dim})`);\n    }\n  } else {\n    inputIsTensor2D = true;\n    xs = split(xs, xs.shape[0], 0).map(x => squeeze(x, [0]));\n  }\n\n  assert(\n      xs.length <= xs[0].shape[0],\n      () => `Gram-Schmidt: Number of vectors (${\n                (xs as Tensor1D[]).length}) exceeds ` +\n          `number of dimensions (${(xs as Tensor1D[])[0].shape[0]}).`);\n\n  const ys: Tensor1D[] = [];\n  const xs1d = xs;\n  for (let i = 0; i < xs.length; ++i) {\n    ys.push(ENGINE.tidy(() => {\n      let x = xs1d[i];\n      if (i > 0) {\n        for (let j = 0; j < i; ++j) {\n          const proj = mul(sum(mul(ys[j], x)), ys[j]);\n          x = sub(x, proj);\n        }\n      }\n      return div(x, norm(x, 'euclidean'));\n    }));\n  }\n\n  if (inputIsTensor2D) {\n    return stack(ys, 0) as Tensor2D;\n  } else {\n    return ys;\n  }\n}\n\nexport const gramSchmidt = op({gramSchmidt_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {parseAxisParam} from '../util';\n\nimport {abs} from './abs';\nimport * as axis_util from './axis_util';\nimport {max} from './max';\nimport {min} from './min';\nimport {op} from './operation';\nimport {pow} from './pow';\nimport {reshape} from './reshape';\nimport {scalar} from './scalar';\nimport {sqrt} from './sqrt';\nimport {square} from './square';\nimport {sum} from './sum';\n\n/**\n * Computes the norm of scalar, vectors, and matrices.\n * This function can compute several different vector norms (the 1-norm, the\n * Euclidean or 2-norm, the inf-norm, and in general the p-norm for p > 0)\n * and matrix norms (Frobenius, 1-norm, and inf-norm).\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.norm().print();  // or tf.norm(x)\n * ```\n *\n * @param x The input array.\n * @param ord Optional. Order of the norm. Supported norm types are\n * following:\n *\n *  | ord        | norm for matrices         | norm for vectors\n *  |------------|---------------------------|---------------------\n *  |'euclidean' |Frobenius norm             |2-norm\n *  |'fro'       |Frobenius norm\t           |\n *  |Infinity    |max(sum(abs(x), axis=1))   |max(abs(x))\n *  |-Infinity   |min(sum(abs(x), axis=1))   |min(abs(x))\n *  |1           |max(sum(abs(x), axis=0))   |sum(abs(x))\n *  |2           |                           |sum(abs(x)^2)^1/2*\n *\n * @param axis Optional. If axis is null (the default), the input is\n * considered a vector and a single vector norm is computed over the entire\n * set of values in the Tensor, i.e. norm(x, ord) is equivalent\n * to norm(x.reshape([-1]), ord). If axis is a integer, the input\n * is considered a batch of vectors, and axis determines the axis in x\n * over which to compute vector norms. If axis is a 2-tuple of integer it is\n * considered a batch of matrices and axis determines the axes in NDArray\n * over which to compute a matrix norm.\n * @param keepDims Optional. If true, the norm have the same dimensionality\n * as the input.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction norm_(\n    x: Tensor|TensorLike, ord: number|'euclidean'|'fro' = 'euclidean',\n    axis: number|number[] = null, keepDims = false): Tensor {\n  x = convertToTensor(x, 'x', 'norm');\n\n  const norm = normImpl(x, ord, axis);\n  let keepDimsShape = norm.shape;\n  if (keepDims) {\n    const axes = parseAxisParam(axis, x.shape);\n    keepDimsShape = axis_util.expandShapeToKeepDim(norm.shape, axes);\n  }\n  return reshape(norm, keepDimsShape);\n}\n\nfunction normImpl(\n    x: Tensor, p: number|string, axis: number|number[] = null): Tensor {\n  if (x.rank === 0) {\n    return abs(x);\n  }\n\n  // consider vector when no axis is specified\n  if (x.rank !== 1 && axis === null) {\n    return normImpl(reshape(x, [-1]), p, axis);\n  }\n\n  // vector\n  if (x.rank === 1 || typeof axis === 'number' ||\n      Array.isArray(axis) && axis.length === 1) {\n    if (p === 1) {\n      return sum(abs(x), axis);\n    }\n    if (p === Infinity) {\n      return max(abs(x), axis);\n    }\n    if (p === -Infinity) {\n      return min(abs(x), axis);\n    }\n    if (p === 'euclidean' || p === 2) {\n      // norm(x, 2) = sum(abs(xi) ^ 2) ^ 1/2\n      return sqrt(sum(pow(abs(x), scalar(2, 'int32')), axis));\n    }\n\n    throw new Error(`Error in norm: invalid ord value: ${p}`);\n  }\n\n  // matrix (assumption axis[0] < axis[1])\n  if (Array.isArray(axis) && axis.length === 2) {\n    if (p === 1) {\n      return max(sum(abs(x), axis[0]), axis[1] - 1);\n    }\n    if (p === Infinity) {\n      return max(sum(abs(x), axis[1]), axis[0]);\n    }\n    if (p === -Infinity) {\n      return min(sum(abs(x), axis[1]), axis[0]);\n    }\n    if (p === 'fro' || p === 'euclidean') {\n      // norm(x) = sqrt(sum(pow(x, 2)))\n      return sqrt(sum(square(x), axis));\n    }\n\n    throw new Error(`Error in norm: invalid ord value: ${p}`);\n  }\n\n  throw new Error(`Error in norm: invalid axis: ${axis}`);\n}\n\nexport const norm = op({norm_});\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Min, MinAttrs, MinInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the minimum value from the input.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the array is reduced by 1 for each entry in `axes`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axes` has no entries, all dimensions are reduced, and an array with a\n * single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.min().print();  // or tf.min(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.min(axis).print();  // or tf.min(x, axis)\n * ```\n *\n * @param x The input Tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction min_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  const $x = convertToTensor(x, 'x', 'min');\n\n  const inputs: MinInputs = {x: $x};\n  const attrs: MinAttrs = {axis, keepDims};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  return ENGINE.runKernel(\n             Min, inputs as {} as NamedTensorMap,\n             attrs as {} as NamedAttrMap) as T;\n}\n\nexport const min = op({min_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../../engine';\nimport {dispose} from '../../globals';\nimport {Tensor, Tensor2D} from '../../tensor';\nimport {assert} from '../../util';\n\nimport {clone} from '../clone';\nimport {concat} from '../concat';\nimport {div} from '../div';\nimport {eye} from '../eye';\nimport {greater} from '../greater';\nimport {matMul} from '../mat_mul';\nimport {mul} from '../mul';\nimport {neg} from '../neg';\nimport {norm} from '../norm';\nimport {op} from '../operation';\nimport {reshape} from '../reshape';\nimport {slice} from '../slice';\nimport {stack} from '../stack';\nimport {sub} from '../sub';\nimport {tensor2d} from '../tensor2d';\nimport {transpose} from '../transpose';\nimport {unstack} from '../unstack';\nimport {where} from '../where';\n\n/**\n * Compute QR decomposition of m-by-n matrix using Householder transformation.\n *\n * Implementation based on\n *   [http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf]\n * (http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf)\n *\n * ```js\n * const a = tf.tensor2d([[1, 2], [3, 4]]);\n * let [q, r] = tf.linalg.qr(a);\n * console.log('Q');\n * q.print();\n * console.log('R');\n * r.print();\n * console.log('Orthogonalized');\n * q.dot(q.transpose()).print()  // should be nearly the identity matrix.\n * console.log('Reconstructed');\n * q.dot(r).print(); // should be nearly [[1, 2], [3, 4]];\n * ```\n *\n * @param x The `tf.Tensor` to be QR-decomposed. Must have rank >= 2. Suppose\n *   it has the shape `[..., M, N]`.\n * @param fullMatrices An optional boolean parameter. Defaults to `false`.\n *   If `true`, compute full-sized `Q`. If `false` (the default),\n *   compute only the leading N columns of `Q` and `R`.\n * @returns An `Array` of two `tf.Tensor`s: `[Q, R]`. `Q` is a unitary matrix,\n *   i.e., its columns all have unit norm and are mutually orthogonal.\n *   If `M >= N`,\n *     If `fullMatrices` is `false` (default),\n *       - `Q` has a shape of `[..., M, N]`,\n *       - `R` has a shape of `[..., N, N]`.\n *     If `fullMatrices` is `true` (default),\n *       - `Q` has a shape of `[..., M, M]`,\n *       - `R` has a shape of `[..., M, N]`.\n *   If `M < N`,\n *     - `Q` has a shape of `[..., M, M]`,\n *     - `R` has a shape of `[..., M, N]`.\n * @throws If the rank of `x` is less than 2.\n *\n * @doc {heading:'Operations',\n *       subheading:'Linear Algebra',\n *       namespace:'linalg'}\n */\nfunction qr_(x: Tensor, fullMatrices = false): [Tensor, Tensor] {\n  assert(\n      x.rank >= 2,\n      () => `qr() requires input tensor to have a rank >= 2, but got rank ${\n          x.rank}`);\n\n  if (x.rank === 2) {\n    return qr2d(x as Tensor2D, fullMatrices);\n  } else {\n    // Rank > 2.\n    // TODO(cais): Below we split the input into individual 2D tensors,\n    //   perform QR decomposition on them and then stack the results back\n    //   together. We should explore whether this can be parallelized.\n    const outerDimsProd = x.shape.slice(0, x.shape.length - 2)\n                              .reduce((value, prev) => value * prev);\n    const x2ds = unstack(\n        reshape(\n            x,\n            [\n              outerDimsProd, x.shape[x.shape.length - 2],\n              x.shape[x.shape.length - 1]\n            ]),\n        0);\n    const q2ds: Tensor2D[] = [];\n    const r2ds: Tensor2D[] = [];\n    x2ds.forEach(x2d => {\n      const [q2d, r2d] = qr2d(x2d as Tensor2D, fullMatrices);\n      q2ds.push(q2d);\n      r2ds.push(r2d);\n    });\n    const q = reshape(stack(q2ds, 0), x.shape);\n    const r = reshape(stack(r2ds, 0), x.shape);\n    return [q, r];\n  }\n}\n\nfunction qr2d(x: Tensor2D, fullMatrices = false): [Tensor2D, Tensor2D] {\n  return ENGINE.tidy(() => {\n    assert(\n        x.shape.length === 2,\n        () => `qr2d() requires a 2D Tensor, but got a ${\n            x.shape.length}D Tensor.`);\n\n    const m = x.shape[0];\n    const n = x.shape[1];\n\n    let q = eye(m);    // Orthogonal transform so far.\n    let r = clone(x);  // Transformed matrix so far.\n\n    const one2D = tensor2d([[1]], [1, 1]);\n    let w: Tensor2D = clone(one2D);\n\n    const iters = m >= n ? n : m;\n    for (let j = 0; j < iters; ++j) {\n      // This tidy within the for-loop ensures we clean up temporary\n      // tensors as soon as they are no longer needed.\n      const rTemp = r;\n      const wTemp = w;\n      const qTemp = q;\n      [w, r, q] = ENGINE.tidy((): [Tensor2D, Tensor2D, Tensor2D] => {\n        // Find H = I - tau * w * w', to put zeros below R(j, j).\n        const rjEnd1 = slice(r, [j, j], [m - j, 1]);\n        const normX = norm(rjEnd1);\n        const rjj = slice(r, [j, j], [1, 1]);\n\n        // The sign() function returns 0 on 0, which causes division by zero.\n        const s = where(greater(rjj, 0), tensor2d([[-1]]), tensor2d([[1]]));\n\n        const u1 = sub(rjj, mul(s, normX));\n        const wPre = div(rjEnd1, u1);\n        if (wPre.shape[0] === 1) {\n          w = clone(one2D);\n        } else {\n          w = concat(\n              [\n                one2D,\n                slice(wPre, [1, 0], [wPre.shape[0] - 1, wPre.shape[1]]) as\n                    Tensor2D\n              ],\n              0);\n        }\n        const tau = neg(div(matMul(s, u1), normX)) as Tensor2D;\n\n        // -- R := HR, Q := QH.\n        const rjEndAll = slice(r, [j, 0], [m - j, n]);\n        const tauTimesW: Tensor2D = mul(tau, w);\n        const wT: Tensor2D = transpose(w);\n        if (j === 0) {\n          r = sub(rjEndAll, matMul(tauTimesW, matMul(wT, rjEndAll)));\n        } else {\n          const rTimesTau: Tensor2D =\n              sub(rjEndAll, matMul(tauTimesW, matMul(wT, rjEndAll)));\n          r = concat([slice(r, [0, 0], [j, n]), rTimesTau], 0);\n        }\n        const tawTimesWT: Tensor2D = transpose(tauTimesW);\n        const qAllJEnd = slice(q, [0, j], [m, q.shape[1] - j]);\n        if (j === 0) {\n          q = sub(qAllJEnd, matMul(matMul(qAllJEnd, w), tawTimesWT));\n        } else {\n          const qTimesTau: Tensor2D =\n              sub(qAllJEnd, matMul(matMul(qAllJEnd, w), tawTimesWT));\n          q = concat([slice(q, [0, 0], [m, j]), qTimesTau], 1);\n        }\n        return [w, r, q];\n      });\n      dispose([rTemp, wTemp, qTemp]);\n    }\n\n    if (!fullMatrices && m > n) {\n      q = slice(q, [0, 0], [m, n]);\n      r = slice(r, [0, 0], [n, n]);\n    }\n\n    return [q, r];\n  }) as [Tensor2D, Tensor2D];\n}\n\nexport const qr = op({qr_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assertShapesMatch} from '../../util';\nimport {abs} from '../abs';\nimport {Reduction} from '../loss_ops_utils';\nimport {op} from '../operation';\nimport {sub} from '../sub';\n\nimport {computeWeightedLoss} from './compute_weighted_loss';\n\n/**\n * Computes the absolute difference loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction absoluteDifference_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike,\n    weights?: Tensor|TensorLike,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $labels = convertToTensor(labels, 'labels', 'absoluteDifference');\n  const $predictions =\n      convertToTensor(predictions, 'predictions', 'absoluteDifference');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'absoluteDifference');\n  }\n  assertShapesMatch(\n      $labels.shape, $predictions.shape, 'Error in absoluteDifference: ');\n\n  const losses = abs(sub($labels, $predictions));\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\nexport const absoluteDifference = op({absoluteDifference_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport enum Reduction {\n  NONE,\n  MEAN,\n  SUM,\n  SUM_BY_NONZERO_WEIGHTS\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\n\nimport {cast} from '../cast';\nimport {div} from '../div';\nimport {Reduction} from '../loss_ops_utils';\nimport {mean} from '../mean';\nimport {mul} from '../mul';\nimport {notEqual} from '../not_equal';\nimport {ones} from '../ones';\nimport {op} from '../operation';\nimport {scalar} from '../scalar';\nimport {sum} from '../sum';\n\n/**\n * Computes the weighted loss between two tensors.\n *\n * @param losses Tensor of shape `[batch_size, d1, ... dN]`.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `losses`, and must be broadcastable to `losses` (i.e., all\n *    dimensions must be either `1`, or the same as the corresponding\n *    `losses` dimension).\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction computeWeightedLoss_<T extends Tensor, O extends Tensor>(\n    losses: T|TensorLike, weights?: Tensor|TensorLike,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $losses = convertToTensor(losses, 'losses', 'computeWeightedLoss');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'computeWeightedLoss');\n  }\n\n  const weightedLoss = ($weights == null) ? $losses : mul($losses, $weights);\n\n  if (reduction === Reduction.NONE) {\n    return weightedLoss as O;\n  }\n  if (reduction === Reduction.SUM) {\n    return sum(weightedLoss);\n  }\n  if (reduction === Reduction.MEAN) {\n    if ($weights == null) {\n      return mean(weightedLoss);\n    } else {\n      const broadcastFactor = $losses.size / $weights.size;\n      const result = div(sum(weightedLoss), sum($weights));\n      return broadcastFactor > 1 ? div(result, scalar(broadcastFactor)) :\n                                   result as O;\n    }\n  }\n  if (reduction === Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    if ($weights == null) {\n      return div(sum(weightedLoss), scalar($losses.size));\n    } else {\n      const broadcastedWeights = mul($weights, ones($losses.shape));\n\n      const numNonZeros =\n          cast(sum(notEqual(broadcastedWeights, scalar(0))), 'float32');\n      return div(sum(weightedLoss), numNonZeros);\n    }\n  }\n\n  throw Error(`Unknown reduction: ${reduction}`);\n}\nexport const computeWeightedLoss = op({computeWeightedLoss_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assertShapesMatch} from '../../util';\nimport {Reduction} from '../loss_ops_utils';\nimport {mul} from '../mul';\nimport {op} from '../operation';\nimport {scalar} from '../scalar';\nimport {sub} from '../sub';\nimport {sum} from '../sum';\n\nimport {computeWeightedLoss} from './compute_weighted_loss';\n\n/**\n * Computes the cosine distance loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param axis The dimension along which the cosine distance is computed.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction cosineDistance_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike, axis: number,\n    weights?: Tensor|TensorLike,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $labels = convertToTensor(labels, 'labels', 'cosineDistance');\n  const $predictions =\n      convertToTensor(predictions, 'predictions', 'cosineDistance');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'cosineDistance');\n  }\n  assertShapesMatch(\n      $labels.shape, $predictions.shape, 'Error in cosineDistance: ');\n\n  const one = scalar(1);\n  const losses = sub(one, sum(mul($labels, $predictions), axis, true));\n  return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const cosineDistance = op({cosineDistance_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assertShapesMatch} from '../../util';\nimport {Reduction} from '../loss_ops_utils';\nimport {mul} from '../mul';\nimport {op} from '../operation';\nimport {relu} from '../relu';\nimport {scalar} from '../scalar';\nimport {sub} from '../sub';\n\nimport {computeWeightedLoss} from './compute_weighted_loss';\n\n/**\n * Computes the Hinge loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction hingeLoss_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike,\n    weights?: Tensor|TensorLike,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  let $labels = convertToTensor(labels, 'labels', 'hingeLoss');\n  const $predictions = convertToTensor(predictions, 'predictions', 'hingeLoss');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'hingeLoss');\n  }\n  assertShapesMatch($labels.shape, $predictions.shape, 'Error in hingeLoss: ');\n\n  const one = scalar(1);\n  // Convert binary labels to (-1, 1)\n  $labels = sub(mul(scalar(2), $labels), one);\n  const losses = relu(sub(one, mul($labels, $predictions)));\n  return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const hingeLoss = op({hingeLoss_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assertShapesMatch} from '../../util';\nimport {abs} from '../abs';\nimport {add} from '../add';\nimport {Reduction} from '../loss_ops_utils';\nimport {minimum} from '../minimum';\nimport {mul} from '../mul';\nimport {op} from '../operation';\nimport {scalar} from '../scalar';\nimport {square} from '../square';\nimport {sub} from '../sub';\n\nimport {computeWeightedLoss} from './compute_weighted_loss';\n\n/**\n * Computes the huber loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param delta Point where huber loss changes from quadratic to linear.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`.\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction huberLoss_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike,\n    weights?: Tensor|TensorLike, delta = 1.0,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $labels = convertToTensor(labels, 'labels', 'huberLoss');\n  const $predictions = convertToTensor(predictions, 'predictions', 'huberLoss');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'huberLoss');\n  }\n  assertShapesMatch($labels.shape, $predictions.shape, 'Error in huberLoss: ');\n\n  const deltaScalar = scalar(delta);\n  const error = abs(sub($predictions, $labels));\n  const quadratic = minimum(error, deltaScalar);\n  const linear = sub(error, quadratic);\n\n  const losses =\n      add(mul(scalar(0.5), square(quadratic)), mul(deltaScalar, linear));\n  return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const huberLoss = op({huberLoss_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assertShapesMatch} from '../../util';\nimport {add} from '../add';\nimport {log} from '../log';\nimport {Reduction} from '../loss_ops_utils';\nimport {mul} from '../mul';\nimport {neg} from '../neg';\nimport {op} from '../operation';\nimport {scalar} from '../scalar';\nimport {sub} from '../sub';\n\nimport {computeWeightedLoss} from './compute_weighted_loss';\n\n/**\n * Computes the log loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param epsilon A small increment to avoid taking log of zero\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction logLoss_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike,\n    weights?: Tensor|TensorLike, epsilon = 1e-7,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $labels = convertToTensor(labels, 'labels', 'logLoss');\n  const $predictions = convertToTensor(predictions, 'predictions', 'logLoss');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'logLoss');\n  }\n  assertShapesMatch($labels.shape, $predictions.shape, 'Error in logLoss: ');\n\n  const one = scalar(1);\n  const epsilonScalar = scalar(epsilon);\n\n  const l1 = neg(mul($labels, log(add($predictions, epsilonScalar))));\n  const l2 =\n      mul(sub(one, $labels), log(add(sub(one, $predictions), epsilonScalar)));\n  const losses = sub(l1, l2);\n  return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const logLoss = op({logLoss_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assertShapesMatch} from '../../util';\nimport {Reduction} from '../loss_ops_utils';\nimport {op} from '../operation';\nimport {squaredDifference} from '../squared_difference';\n\nimport {computeWeightedLoss} from './compute_weighted_loss';\n\n/**\n * Computes the mean squared error between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction meanSquaredError_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike,\n    weights?: Tensor|TensorLike,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $labels = convertToTensor(labels, 'labels', 'meanSquaredError');\n  const $predictions =\n      convertToTensor(predictions, 'predictions', 'meanSquaredError');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'meanSquaredError');\n  }\n  assertShapesMatch(\n      $labels.shape, $predictions.shape, 'Error in meanSquaredError: ');\n\n  const losses = squaredDifference($labels, $predictions);\n  return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const meanSquaredError = op({meanSquaredError_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {SquaredDifference, SquaredDifferenceInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns (a - b) * (a - b) element-wise.\n * Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)\n * ```\n *\n * ```js\n * // Broadcast squared difference  a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction squaredDifference_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'squaredDifference');\n  let $b = convertToTensor(b, 'b', 'squaredDifference');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: SquaredDifferenceInputs = {a: $a, b: $b};\n  const attrs = {};\n\n  return ENGINE.runKernel(\n      SquaredDifference, inputs as unknown as NamedTensorMap, attrs);\n}\n\nexport const squaredDifference = op({squaredDifference_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assertShapesMatch} from '../../util';\nimport {abs} from '../abs';\nimport {add} from '../add';\nimport {exp} from '../exp';\nimport {log1p} from '../log1p';\nimport {Reduction} from '../loss_ops_utils';\nimport {mul} from '../mul';\nimport {neg} from '../neg';\nimport {op} from '../operation';\nimport {relu} from '../relu';\nimport {scalar} from '../scalar';\nimport {sub} from '../sub';\n\nimport {computeWeightedLoss} from './compute_weighted_loss';\n\nfunction sigmoidCrossEntropyWithLogits_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, logits: T|TensorLike): O {\n  const $labels =\n      convertToTensor(labels, 'labels', 'sigmoidCrossEntropyWithLogits');\n  const $logits =\n      convertToTensor(logits, 'logits', 'sigmoidCrossEntropyWithLogits');\n  assertShapesMatch(\n      $labels.shape, $logits.shape, 'Error in sigmoidCrossEntropyWithLogits: ');\n\n  /**\n   * Implementation Details:\n   *\n   * For brevity, let `x = logits`, `z = labels`.  The logistic loss is\n   *     z * -log(sigmoid(x)) + (1 - z) * -log(1 - sigmoid(x))\n   *   = z * -log(1 / (1 + exp(-x))) + (1 - z) * -log(exp(-x) / (1 + exp(-x)))\n   *   = z * log(1 + exp(-x)) + (1 - z) * (-log(exp(-x)) + log(1 + exp(-x)))\n   *   = z * log(1 + exp(-x)) + (1 - z) * (x + log(1 + exp(-x))\n   *   = (1 - z) * x + log(1 + exp(-x))\n   *   = x - x * z + log(1 + exp(-x))\n   *\n   *   For x < 0, to avoid overflow in exp(-x), we reformulate the above\n   *     x - x * z + log(1 + exp(-x))\n   *   = log(exp(x)) - x * z + log(1 + exp(-x))\n   *   = - x * z + log(1 + exp(x))\n   *\n   * Hence, to ensure stability and avoid overflow, the implementation uses\n   * this equivalent formulation:\n   *     max(x, 0) - x * z + log(1 + exp(-abs(x)))\n   */\n  const maxOutput = relu($logits);\n  const outputXTarget = mul($logits, $labels);\n  const sigmoidOutput = log1p(exp(neg(abs($logits))));\n\n  return add(sub(maxOutput, outputXTarget), sigmoidOutput);\n}\n\n/**\n * Computes the sigmoid cross entropy loss between two tensors.\n *\n * If labelSmoothing is nonzero, smooth the labels towards 1/2:\n *\n *   newMulticlassLabels = multiclassLabels * (1 - labelSmoothing)\n *                         + 0.5 * labelSmoothing\n *\n * @param multiClassLabels The ground truth output tensor of shape\n * [batch_size, num_classes], same dimensions as 'predictions'.\n * @param logits The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param labelSmoothing If greater than 0, then smooth the labels.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' }\n */\nfunction sigmoidCrossEntropy_<T extends Tensor, O extends Tensor>(\n    multiClassLabels: T|TensorLike, logits: T|TensorLike,\n    weights?: Tensor|TensorLike, labelSmoothing = 0,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  let $multiClassLabels = convertToTensor(\n      multiClassLabels, 'multiClassLabels', 'sigmoidCrossEntropy');\n  const $logits = convertToTensor(logits, 'logits', 'sigmoidCrossEntropy');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'sigmoidCrossEntropy');\n  }\n  assertShapesMatch(\n      $multiClassLabels.shape, $logits.shape, 'Error in sigmoidCrossEntropy: ');\n\n  if (labelSmoothing > 0) {\n    const labelSmoothingScalar = scalar(labelSmoothing);\n    const one = scalar(1);\n    const half = scalar(0.5);\n\n    $multiClassLabels =\n        add(mul($multiClassLabels, sub(one, labelSmoothingScalar)),\n            mul(half, labelSmoothingScalar));\n  }\n  const losses = sigmoidCrossEntropyWithLogits_($multiClassLabels, $logits);\n\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\nexport const sigmoidCrossEntropy = op({sigmoidCrossEntropy_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {customGrad} from '../../gradients';\nimport {Tensor} from '../../tensor';\nimport {GradSaveFunc} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assertShapesMatch} from '../../util';\nimport {add} from '../add';\nimport {expandShapeToKeepDim} from '../axis_util';\nimport {cast} from '../cast';\nimport {div} from '../div';\nimport {exp} from '../exp';\nimport {logSumExp} from '../log_sum_exp';\nimport {Reduction} from '../loss_ops_utils';\nimport {mul} from '../mul';\nimport {neg} from '../neg';\nimport {op} from '../operation';\nimport {reshape} from '../reshape';\nimport {scalar} from '../scalar';\nimport {sub} from '../sub';\nimport {sum} from '../sum';\n\nimport {computeWeightedLoss} from './compute_weighted_loss';\n\n/**\n * Computes softmax cross entropy between logits and labels.\n *\n * Measures the probability error in discrete classification tasks in which\n * the classes are mutually exclusive (each entry is in exactly one class).\n * For example, each CIFAR-10 image is labeled with one and only one label: an\n * image can be a dog or a truck, but not both.\n *\n * `NOTE`: While the classes are mutually exclusive, their probabilities need\n * not be. All that is required is that each row of labels is a valid\n * probability distribution. If they are not, the computation of the gradient\n * will be incorrect.\n *\n * `WARNING`: This op expects unscaled logits, since it performs a softmax on\n * logits internally for efficiency. Do not call this op with the output of\n * softmax, as it will produce incorrect results.\n *\n * logits and labels must have the same shape, e.g. [batch_size, num_classes]\n * and the same dtype.\n * @param labels The labels array.\n * @param logits The logits array.\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n */\nfunction softmaxCrossEntropyWithLogits_<T extends Tensor, O extends Tensor>(\n    labels: T, logits: T, dim = -1): O {\n  if (dim === -1) {\n    dim = logits.rank - 1;\n  }\n\n  if (dim !== logits.rank - 1) {\n    throw Error(\n        `Softmax cross entropy along a non-last dimension is not yet ` +\n        `supported. Labels / logits was rank ${logits.rank} ` +\n        `and dim was ${dim}`);\n  }\n  // Use a custom gradient for numerical stability.\n  const customOp =\n      customGrad((labels: Tensor, logits: Tensor, save: GradSaveFunc) => {\n        // Reference:\n        //   1. http://cs231n.github.io/linear-classify/#softmax\n        //   2. https://blog.feedly.com/tricks-of-the-trade-logsumexp/\n        const keepDims = true;\n        const lse = logSumExp(logits, [dim], keepDims);\n        const logResult = sub(cast(logits, 'float32'), lse);\n        save([labels, logResult]);\n\n        const costVector = neg(mul(logResult, labels));\n        const value: O = sum(costVector, [dim]);\n\n        const gradFunc = (dy: O, saved: Tensor[]) => {\n          const [labels, logResult] = saved;\n          const dyShape = expandShapeToKeepDim(dy.shape, [dim]);\n          return [\n            mul(reshape(dy, dyShape),\n                sub(cast(labels, 'float32'), exp(logResult))),\n            mul(reshape(dy, dyShape),\n                sub(exp(logResult), cast(labels, 'float32'))),\n          ];\n        };\n        return {value, gradFunc};\n      });\n\n  return customOp(labels, logits);\n}\n\n/**\n * Computes the softmax cross entropy loss between two tensors.\n *\n * If labelSmoothing is nonzero, smooth the labels towards 1/2:\n *\n *   newOnehotLabels = onehotLabels * (1 - labelSmoothing)\n *                         + labelSmoothing / numClasses\n *\n * @param onehotLabels One hot encoded labels\n *    [batch_size, num_classes], same dimensions as 'predictions'.\n * @param logits The predicted outputs.\n * @param weights Tensor whose rank is either 0, or 1, and must be\n *    broadcastable to `loss`  of shape [batch_size]\n * @param labelSmoothing If greater than 0, then smooth the labels.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' }\n */\nfunction softmaxCrossEntropy_<T extends Tensor, O extends Tensor>(\n    onehotLabels: T|TensorLike, logits: T|TensorLike,\n    weights?: Tensor|TensorLike, labelSmoothing = 0,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  let $onehotLabels =\n      convertToTensor(onehotLabels, 'onehotLabels', 'softmaxCrossEntropy');\n  const $logits = convertToTensor(logits, 'logits', 'softmaxCrossEntropy');\n  let $weights: Tensor = null;\n\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'softmaxCrossEntropy');\n  }\n\n  assertShapesMatch(\n      $onehotLabels.shape, $logits.shape, 'Error in softmaxCrossEntropy: ');\n\n  if (labelSmoothing > 0) {\n    const labelSmoothingScalar = scalar(labelSmoothing);\n    const one = scalar(1);\n    const numClasses = scalar($onehotLabels.shape[1]);\n\n    $onehotLabels =\n        add(mul($onehotLabels, sub(one, labelSmoothingScalar)),\n            div(labelSmoothingScalar, numClasses));\n  }\n\n  const losses = softmaxCrossEntropyWithLogits_($onehotLabels, $logits);\n\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\nexport const softmaxCrossEntropy = op({softmaxCrossEntropy_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {parseAxisParam} from '../util';\n\nimport {add} from './add';\nimport {expandShapeToKeepDim} from './axis_util';\nimport {exp} from './exp';\nimport {log} from './log';\nimport {max} from './max';\nimport {op} from './operation';\nimport {reshape} from './reshape';\nimport {sub} from './sub';\nimport {sum} from './sum';\n\n/**\n * Computes the log(sum(exp(elements across the reduction dimensions)).\n *\n * Reduces the input along the dimensions given in `axis`. Unless `keepDims`\n * is true, the rank of the array is reduced by 1 for each entry in `axis`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axis` has no entries, all dimensions are reduced, and an array with a\n * single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.logSumExp().print();  // or tf.logSumExp(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.logSumExp(axis).print();  // or tf.logSumExp(a, axis)\n * ```\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. If null (the default),\n *     reduces all dimensions.\n * @param keepDims If true, retains reduced dimensions with length\n *     of 1. Defaults to false.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction logSumExp_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  const $x = convertToTensor(x, 'x', 'logSumExp');\n\n  const axes = parseAxisParam(axis, $x.shape);\n  const xMax = max($x, axes, true /* keepDims */);\n  const a = sub($x, xMax);\n  const b = exp(a);\n  const c = sum(b, axes);\n  const d = log(c);\n  const res = add(reshape(xMax, d.shape), d);\n\n  if (keepDims) {\n    const newShape = expandShapeToKeepDim(res.shape, axes);\n    return reshape(res, newShape) as T;\n  }\n  return res as T;\n}\n\nexport const logSumExp = op({logSumExp_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {SparseFillEmptyRows, SparseFillEmptyRowsInputs} from '../../kernel_names';\nimport {Scalar, Tensor, Tensor1D, Tensor2D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {ScalarLike, TensorLike} from '../../types';\nimport {op} from '../operation';\n\n/**\n * The input SparseTensor is represented via the map of inputs {`indices`,\n * `values`, `denseShape`}. The output SparseTensor has the same `denseShape`\n * but with indices `outputIndices` and values `outputValues`. This op inserts a\n * single entry for every row that doesn't have any values. The index is created\n * as `[row, 0, ..., 0]` and the inserted value is `defaultValue`.\n *\n * For example, suppose `spInput` has shape [5, 6] and non-empty values:\n * [0, 1]: a\n * [0, 3]: b\n * [2, 0]: c\n * [3, 1]: d\n *\n * Rows 1 and 4 are empty, so the output will be of shape [5, 6] with values:\n * [0, 1]: a\n * [0, 3]: b\n * [1, 0]: `defaultValue`\n * [2, 0]: c\n * [3, 1]: d\n * [4, 0]: `defaultValue`\n *\n * The output SparseTensor will be in row-major order and will have the same\n * shape as the input.\n *\n * This op also returns an indicator vector shaped [dense_shape[0]] such that\n * emptyRowIndicator[i] = True iff row i was an empty row.\n *\n * And a reverse index map vector shaped [indices.shape[0]] that is used during\n * backpropagation, reverseIndexMap[i] = outi s.t. indices[i, j] ==\n * outputIndices[outi, j] for all j\n *\n * ```js\n * const result = tf.sparse.sparseFillEmptyRows(\n *   [[0, 0], [1, 0], [1, 3], [1, 4], [3, 2], [3, 3]],\n *   [0, 10, 13, 14, 32, 33], [5, 6], -1);\n * console.log(result);\n * result['outputIndices'].print(); // [[0, 0], [1, 0], [1, 3], [1, 4],\n *                                  //  [2, 0], [3, 2], [3, 3], [4, 0]]\n * result['outputValues'].print(); // [0, 10, 13, 14,-1, 32, 33, -1]\n * result['emptyRowIndicator'].print(); // [false, false, true, false, true]\n * result['reverseIndexMap'].print(); // [0, 1, 2, 3, 5, 6]\n * ```\n * @param indices: 2-D. the indices of the sparse tensor.\n * @param values: 1-D. the values of the sparse tensor.\n * @param denseShape: 1-D. the shape of the sparse tensor.\n * @param defaultValue: 0-D. default value to insert into location [row, 0, ...,\n *     0] for rows missing from the input sparse tensor.\n * @return A map with the following properties:\n *     - outputIndices\n *     - outputValues: 1-D. the values of the filled sparse tensor.\n *     - emptyRowIndicator: 1-D. whether the dense row was missing in the input\n * sparse tensor.\n *     - reverseIndexMap: 1-D. a map from the input indices to the output\n * indices.\n * @doc {heading: 'Operations', subheading: 'Sparse'}\n */\nfunction sparseFillEmptyRows_(\n    indices: Tensor2D|TensorLike, values: Tensor1D|TensorLike,\n    denseShape: Tensor1D|TensorLike,\n    defaultValue: Scalar|ScalarLike): NamedTensorMap {\n  const $indices =\n      convertToTensor(indices, 'indices', 'sparseFillEmptyRows', 'int32');\n  const $values = convertToTensor(values, 'values', 'sparseFillEmptyRows');\n  const $denseShape =\n      convertToTensor(denseShape, 'denseShape', 'sparseFillEmptyRows', 'int32');\n  const $defaultValue = convertToTensor(\n      defaultValue, 'defaultValue', 'sparseFillEmptyRows', $values.dtype);\n\n  if ($indices.rank !== 2) {\n    throw new Error(`Indices should be Tensor2D but received shape\n        ${$indices.shape}`);\n  }\n  if ($values.rank !== 1) {\n    throw new Error(\n        `Values should be Tensor1D but received shape ${$values.shape}`);\n  }\n  if ($denseShape.rank !== 1) {\n    throw new Error(`Dense shape should be Tensor1D but received shape ${\n        $denseShape.shape}`);\n  }\n  if ($defaultValue.rank !== 0) {\n    throw new Error(`Default value should be a scalar but received shape ${\n        $defaultValue.shape}`);\n  }\n\n  const inputs: SparseFillEmptyRowsInputs = {\n    indices: $indices,\n    values: $values,\n    denseShape: $denseShape,\n    defaultValue: $defaultValue\n  };\n\n  const result: Tensor[] = ENGINE.runKernel(SparseFillEmptyRows, inputs as {});\n  return {\n    outputIndices: result[0],\n    outputValues: result[1],\n    emptyRowIndicator: result[2],\n    reverseIndexMap: result[3]\n  };\n}\n\nexport const sparseFillEmptyRows = op({sparseFillEmptyRows_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {SparseReshape, SparseReshapeInputs} from '../../kernel_names';\nimport {Tensor, Tensor1D, Tensor2D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {op} from '../operation';\n\n/**\n * This operation has the same semantics as reshape on the represented dense\n * tensor. The `inputIndices` are recomputed based on the requested `newShape`.\n * If one component of `newShape` is the special value -1, the size of that\n * dimension is computed so that the total dense size remains constant. At most\n * one component of `newShape` can be -1. The number of dense elements implied\n * by `newShape` must be the same as the number of dense elements originally\n * implied by `inputShape`. Reshaping does not affect the order of values in the\n * SparseTensor. If the input tensor has rank R_in and N non-empty values, and\n * `newShape` has length R_out, then `inputIndices` has shape [N, R_in],\n * `inputShape` has length R_in, `outputIndices` has shape [N, R_out], and\n * `outputShape` has length R_out.\n *\n * ```js\n * const result = tf.sparse.sparseReshape(\n *   [[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 2, 3]],\n *   [2, 3, 6], [9, -1]);\n * console.log(result);\n * result['outputIndices'].print(); //[[0, 0], [0, 1], [1, 2], [4, 2], [8, 1]]\n * result['outputShape'].print(); // [9, 4]\n * ```\n * @param inputIndices: 2-D. N x R_in matrix with the indices of non-empty\n * values in a SparseTensor.\n * @param inputShape: 1-D. R_in Tensor1D with the input SparseTensor's dense\n * shape.\n * @param newShape: 1-D. R_out Tensor1D with the requested new dense shape.\n * @return A map with the following properties:\n *     - outputIndices: 2-D. N x R_out matrix with the updated indices of\n *       non-empty values in the output SparseTensor.\n *     - outputShape: 1-D. R_out vector with the full dense shape of the output\n *       SparseTensor. This is the same as newShape but with any -1 dimensions\n *        filled in.\n * @doc {heading: 'Operations', subheading: 'Sparse'}\n */\nfunction sparseReshape_(\n    inputIndices: Tensor2D|TensorLike, inputShape: Tensor1D|TensorLike,\n    newShape: Tensor1D|TensorLike): NamedTensorMap {\n  const $inputIndices =\n      convertToTensor(inputIndices, 'inputIndices', 'sparseReshape', 'int32');\n  const $inputShape =\n      convertToTensor(inputShape, 'inputShape', 'sparseReshape', 'int32');\n  const $newShape =\n      convertToTensor(newShape, 'newShape', 'sparseReshape', 'int32');\n\n  if ($inputIndices.rank !== 2) {\n    throw new Error(`Input indices should be Tensor2D but received shape\n        ${$inputIndices.shape}`);\n  }\n  if ($inputShape.rank !== 1) {\n    throw new Error(`Input shape should be Tensor1D but received shape ${\n        $inputShape.shape}`);\n  }\n  if ($newShape.rank !== 1) {\n    throw new Error(\n        `New shape should be Tensor1D but received shape ${$newShape.shape}`);\n  }\n\n  const inputs: SparseReshapeInputs = {\n    inputIndices: $inputIndices,\n    inputShape: $inputShape,\n    newShape: $newShape\n  };\n  const result: Tensor[] = ENGINE.runKernel(SparseReshape, inputs as {});\n  return {outputIndices: result[0], outputShape: result[1]};\n}\n\nexport const sparseReshape = op({sparseReshape_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {SparseSegmentMean, SparseSegmentMeanInputs} from '../../kernel_names';\nimport {Tensor, Tensor1D} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {op} from '../operation';\n\n/**\n * Computes the mean along sparse segments of a tensor.\n *\n * ```js\n * const c = tf.tensor2d([[1,2,3,4], [-1,-2,-3,-4], [6,7,8,9]]);\n * // Select two rows, one segment.\n * const result1 = tf.sparse.sparseSegmentMean(c,\n *                                           tf.tensor1d([0, 1], 'int32'),\n *                                           tf.tensor1d([0, 0], 'int32'));\n * result1.print(); // [[0, 0, 0, 0]]\n *\n * // Select two rows, two segments.\n * const result2 = tf.sparse.sparseSegmentMean(c,\n *                                             tf.tensor1d([0, 1], 'int32'),\n *                                             tf.tensor1d([0, 1], 'int32'));\n * result2.print(); // [[1, 2, 3, 4], [-1, -2, -3, -4]]\n *\n * // Select all rows, two segments.\n * const result3 = tf.sparse.sparseSegmentMean(c,\n *                                             tf.tensor1d([0, 1, 2], 'int32'),\n *                                             tf.tensor1d([0, 1, 1], 'int32'));\n * result3.print(); // [[1.0, 2.0, 3.0, 4.0], [2.5, 2.5, 2.5, 2.5]]\n * ```\n * @param data: A Tensor of at least one dimension with data that will be\n *     assembled in the output.\n * @param indices: A 1-D Tensor with indices into data. Has same rank as\n *     segmentIds.\n * @param segmentIds: A 1-D Tensor with indices into the output Tensor. Values\n *     should be sorted and can be repeated.\n * @return Has same shape as data, except for dimension 0 which has equal to\n *         the number of segments.\n *\n * @doc {heading: 'Operations', subheading: 'Sparse'}\n */\nfunction sparseSegmentMean_(\n    data: Tensor|TensorLike, indices: Tensor1D|TensorLike,\n    segmentIds: Tensor1D|TensorLike): Tensor {\n  const $data = convertToTensor(data, 'data', 'sparseSegmentMean');\n  const $indices =\n      convertToTensor(indices, 'indices', 'sparseSegmentMean', 'int32');\n  const $segmentIds =\n      convertToTensor(segmentIds, 'segmentIds', 'sparseSegmentMean', 'int32');\n\n  if ($data.rank < 1) {\n    throw new Error(\n        `Data should be at least 1 dimensional but received scalar`);\n  }\n  if ($indices.rank !== 1) {\n    throw new Error(`Indices should be Tensor1D but received shape\n          ${$indices.shape}`);\n  }\n  if ($segmentIds.rank !== 1) {\n    throw new Error(`Segment ids should be Tensor1D but received shape\n          ${$segmentIds.shape}`);\n  }\n\n  const inputs: SparseSegmentMeanInputs = {\n    data: $data,\n    indices: $indices,\n    segmentIds: $segmentIds\n  };\n\n  return ENGINE.runKernel(SparseSegmentMean, inputs as {});\n}\n\nexport const sparseSegmentMean = op({sparseSegmentMean_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {SparseSegmentSum, SparseSegmentSumInputs} from '../../kernel_names';\nimport {Tensor, Tensor1D} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {op} from '../operation';\n\n/**\n * Computes the sum along sparse segments of a tensor.\n *\n * ```js\n * const c = tf.tensor2d([[1,2,3,4], [-1,-2,-3,-4], [5,6,7,8]]);\n * // Select two rows, one segment.\n * const result1 = tf.sparse.sparseSegmentSum(c,\n *                                           tf.tensor1d([0, 1], 'int32'),\n *                                           tf.tensor1d([0, 0], 'int32'));\n * result1.print(); // [[0, 0, 0, 0]]\n *\n * // Select two rows, two segment.\n * const result2 = tf.sparse.sparseSegmentSum(c,\n *                                           tf.tensor1d([0, 1], 'int32'),\n *                                           tf.tensor1d([0, 1], 'int32'));\n * result2.print(); // [[1, 2, 3, 4], [-1, -2, -3, -4]]\n *\n * // Select all rows, two segments.\n * const result3 = tf.sparse.sparseSegmentSum(c,\n *                                           tf.tensor1d([0, 1, 2], 'int32'),\n *                                           tf.tensor1d([0, 0, 1], 'int32'));\n * result3.print(); // [[0, 0, 0, 0], [5, 6, 7, 8]]\n * ```\n * @param data: A Tensor of at least one dimension with data that will be\n *     assembled in the output.\n * @param indices: A 1-D Tensor with indices into data. Has same rank as\n *     segmentIds.\n * @param segmentIds: A 1-D Tensor with indices into the output Tensor. Values\n *     should be sorted and can be repeated.\n * @return Has same shape as data, except for dimension 0 which has equal to\n *         the number of segments.\n *\n * @doc {heading: 'Operations', subheading: 'Sparse'}\n */\nfunction sparseSegmentSum_(\n    data: Tensor|TensorLike, indices: Tensor1D|TensorLike,\n    segmentIds: Tensor1D|TensorLike): Tensor {\n  const $data = convertToTensor(data, 'data', 'sparseSegmentSum');\n  const $indices =\n      convertToTensor(indices, 'indices', 'sparseSegmentSum', 'int32');\n  const $segmentIds =\n      convertToTensor(segmentIds, 'segmentIds', 'sparseSegmentSum', 'int32');\n\n  if ($data.rank < 1) {\n    throw new Error(\n        `Data should be at least 1 dimensional but received scalar`);\n  }\n  if ($indices.rank !== 1) {\n    throw new Error(`Indices should be Tensor1D but received shape\n         ${$indices.shape}`);\n  }\n  if ($segmentIds.rank !== 1) {\n    throw new Error(`Segment ids should be Tensor1D but received shape\n         ${$segmentIds.shape}`);\n  }\n\n  const inputs: SparseSegmentSumInputs = {\n    data: $data,\n    indices: $indices,\n    segmentIds: $segmentIds\n  };\n\n  return ENGINE.runKernel(SparseSegmentSum, inputs as {});\n}\n\nexport const sparseSegmentSum = op({sparseSegmentSum_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {StringNGrams, StringNGramsAttrs, StringNGramsInputs} from '../../kernel_names';\nimport {Tensor, Tensor1D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {op} from '../operation';\n\n/**\n * Creates ngrams from ragged string data.\n *\n * This op accepts a ragged tensor with 1 ragged dimension containing only\n * strings and outputs a ragged tensor with 1 ragged dimension containing ngrams\n * of that string, joined along the innermost axis.\n *\n * ```js\n * const result = tf.string.stringNGrams(\n *   ['a', 'b', 'c', 'd'], tf.tensor1d([0, 2, 4], 'int32'),\n *   '|', [1, 2], 'LP', 'RP', -1, false);\n * result['nGrams'].print(); // ['a', 'b', 'LP|a', 'a|b', 'b|RP',\n *                           //  'c', 'd', 'LP|c', 'c|d', 'd|RP']\n * result['nGramsSplits'].print(); // [0, 5, 10]\n * ```\n * @param data: The values tensor of the ragged string tensor to make ngrams out\n *     of. Must be a 1D string tensor.\n * @param dataSplits: The splits tensor of the ragged string tensor to make\n *     ngrams out of.\n * @param separator: The string to append between elements of the token. Use \"\"\n *     for no separator.\n * @param nGramWidths: The sizes of the ngrams to create.\n * @param leftPad: The string to use to pad the left side of the ngram sequence.\n *     Only used if pad_width !== 0.\n * @param rightPad: The string to use to pad the right side of the ngram\n *     sequence. Only used if pad_width !== 0.\n * @param padWidth: The number of padding elements to add to each side of each\n *     sequence. Note that padding will never be greater than `nGramWidths`-1\n *     regardless of this value. If `padWidth`=-1 , then add max(`nGramWidths)-1\n *     elements.\n * @param preserveShortSequences: If true, then ensure that at least one ngram\n *     is generated for each input sequence. In particular, if an input sequence\n *     is shorter than min(ngramWidth) + 2*padWidth, then generate a single\n *     ngram containing the entire sequence. If false, then no ngrams are\n *     generated for these short input sequences.\n * @return A map with the following properties:\n *     - nGrams: The values tensor of the output ngrams ragged tensor.\n *     - nGramsSplits: The splits tensor of the output ngrams ragged tensor.\n *\n * @doc {heading: 'Operations', subheading: 'String'}\n */\nfunction stringNGrams_(\n    data: Tensor1D|TensorLike, dataSplits: Tensor|TensorLike, separator: string,\n    nGramWidths: number[], leftPad: string, rightPad: string, padWidth: number,\n    preserveShortSequences: boolean): NamedTensorMap {\n  const $data = convertToTensor(data, 'data', 'stringNGrams', 'string');\n  if ($data.dtype !== 'string') {\n    throw new Error('Data must be of datatype string');\n  }\n  if ($data.shape.length !== 1) {\n    throw new Error(`Data must be a vector, saw: ${$data.shape}`);\n  }\n\n  const $dataSplits = convertToTensor(dataSplits, 'dataSplits', 'stringNGrams');\n  if ($dataSplits.dtype !== 'int32') {\n    throw new Error('Data splits must be of datatype int32');\n  }\n\n  const attrs: StringNGramsAttrs = {\n    separator,\n    nGramWidths,\n    leftPad,\n    rightPad,\n    padWidth,\n    preserveShortSequences\n  };\n\n  const inputs: StringNGramsInputs = {data: $data, dataSplits: $dataSplits};\n  const result: Tensor[] =\n      ENGINE.runKernel(StringNGrams, inputs as {}, attrs as {});\n  return {nGrams: result[0], nGramsSplits: result[1]};\n}\n\nexport const stringNGrams = op({stringNGrams_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {StringSplit, StringSplitAttrs, StringSplitInputs} from '../../kernel_names';\nimport {Scalar, Tensor, Tensor1D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {ScalarLike, TensorLike} from '../../types';\nimport {op} from '../operation';\n\n/**\n * Split elements of `input` based on `delimiter` into a SparseTensor .\n *\n * Let N be the size of source (typically N will be the batch size). Split each\n * element of `input` based on `delimiter` and return a SparseTensor containing\n * the splitted tokens. Empty tokens are ignored if `skipEmpty` is set to True.\n *\n * `delimiter` can be empty, or a string of split characters. If `delimiter` is\n * an empty string, each element of `input` is split into individual\n * character strings. Otherwise every character of `delimiter` is a potential\n * split point.\n *\n * ```js\n * const result = tf.string.stringSplit(['hello world',  'a b c'], ' ');\n * result['indices'].print(); // [[0, 0], [0, 1], [1, 0], [1, 1], [1, 2]]\n * result['values'].print(); // ['hello', 'world', 'a', 'b', 'c']\n * result['shape'].print(); // [2, 3]\n * ```\n * @param input: 1-D. Strings to split.\n * @param delimiter: 0-D. Delimiter characters, or empty string.\n * @param skipEmpty: Optional. If true, skip the empty strings from the result.\n *     Defaults to true.\n * @return A map with the following properties:\n *     - indices: A dense matrix of int32 representing the indices of the sparse\n *       tensor.\n *     - values: A vector of strings corresponding to the splited values.\n *     - shape: a length-2 vector of int32 representing the shape of the sparse\n * tensor, where the first value is N and the second value is the maximum number\n * of tokens in a single input entry.\n *\n * @doc {heading: 'Operations', subheading: 'String'}\n */\nfunction stringSplit_(\n    input: Tensor1D|TensorLike, delimiter: Scalar|ScalarLike,\n    skipEmpty = true): NamedTensorMap {\n  const $input = convertToTensor(input, 'input', 'stringSplit', 'string');\n  const $delimiter =\n      convertToTensor(delimiter, 'delimiter', 'stringSplit', 'string');\n\n  if ($input.rank !== 1) {\n    throw new Error(\n        `Input should be Tensor1D but received shape ${$input.shape}`);\n  }\n  if ($delimiter.rank !== 0) {\n    throw new Error(\n        `Delimiter should be a scalar but received shape ${$delimiter.shape}`);\n  }\n\n  const attrs: StringSplitAttrs = {skipEmpty};\n  const inputs: StringSplitInputs = {input: $input, delimiter: $delimiter};\n  const result: Tensor[] =\n      ENGINE.runKernel(StringSplit, inputs as {}, attrs as {});\n  return {indices: result[0], values: result[1], shape: result[2]};\n}\n\nexport const stringSplit = op({stringSplit_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {StringToHashBucketFast, StringToHashBucketFastAttrs, StringToHashBucketFastInputs} from '../../kernel_names';\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {op} from '../operation';\n\n/**\n * Converts each string in the input Tensor to its hash mod by a number of\n * buckets.\n *\n * The hash function is deterministic on the content of the string within the\n * process and will never change. However, it is not suitable for cryptography.\n * This function may be used when CPU time is scarce and inputs are trusted or\n * unimportant. There is a risk of adversaries constructing inputs that all hash\n * to the same bucket.\n *\n * ```js\n * const result = tf.string.stringToHashBucketFast(\n *   ['Hello', 'TensorFlow', '2.x'], 3);\n * result.print(); // [0, 2, 2]\n * ```\n * @param input: The strings to assign a hash bucket.\n * @param numBuckets: The number of buckets.\n * @return A Tensor of the same shape as the input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'String'}\n */\nfunction stringToHashBucketFast_(\n    input: Tensor|TensorLike, numBuckets: number): Tensor {\n  const $input =\n      convertToTensor(input, 'input', 'stringToHashBucketFast', 'string');\n  const attrs: StringToHashBucketFastAttrs = {numBuckets};\n\n  if (numBuckets <= 0) {\n    throw new Error(`Number of buckets must be at least 1`);\n  }\n\n  const inputs: StringToHashBucketFastInputs = {input: $input};\n  return ENGINE.runKernel(StringToHashBucketFast, inputs as {}, attrs as {});\n}\n\nexport const stringToHashBucketFast = op({stringToHashBucketFast_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// So typings can propagate.\nimport {AdadeltaOptimizer} from './optimizers/adadelta_optimizer';\nimport {AdagradOptimizer} from './optimizers/adagrad_optimizer';\nimport {AdamOptimizer} from './optimizers/adam_optimizer';\nimport {AdamaxOptimizer} from './optimizers/adamax_optimizer';\nimport {MomentumOptimizer} from './optimizers/momentum_optimizer';\nimport {OptimizerConstructors} from './optimizers/optimizer_constructors';\nimport {RMSPropOptimizer} from './optimizers/rmsprop_optimizer';\nimport {SGDOptimizer} from './optimizers/sgd_optimizer';\n\n// tslint:disable-next-line:no-unused-expression\n[MomentumOptimizer, SGDOptimizer, AdadeltaOptimizer, AdagradOptimizer,\n RMSPropOptimizer, AdamaxOptimizer, AdamOptimizer];\n\nexport const train = {\n  sgd: OptimizerConstructors.sgd,\n  momentum: OptimizerConstructors.momentum,\n  adadelta: OptimizerConstructors.adadelta,\n  adagrad: OptimizerConstructors.adagrad,\n  rmsprop: OptimizerConstructors.rmsprop,\n  adamax: OptimizerConstructors.adamax,\n  adam: OptimizerConstructors.adam\n};\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AdadeltaOptimizer} from './adadelta_optimizer';\nimport {AdagradOptimizer} from './adagrad_optimizer';\nimport {AdamOptimizer} from './adam_optimizer';\nimport {AdamaxOptimizer} from './adamax_optimizer';\nimport {MomentumOptimizer} from './momentum_optimizer';\nimport {RMSPropOptimizer} from './rmsprop_optimizer';\nimport {SGDOptimizer} from './sgd_optimizer';\n\nexport class OptimizerConstructors {\n  /**\n   * Constructs a `tf.SGDOptimizer` that uses stochastic gradient descent.\n   *\n   * ```js\n   * // Fit a quadratic function by learning the coefficients a, b, c.\n   * const xs = tf.tensor1d([0, 1, 2, 3]);\n   * const ys = tf.tensor1d([1.1, 5.9, 16.8, 33.9]);\n   *\n   * const a = tf.scalar(Math.random()).variable();\n   * const b = tf.scalar(Math.random()).variable();\n   * const c = tf.scalar(Math.random()).variable();\n   *\n   * // y = a * x^2 + b * x + c.\n   * const f = x => a.mul(x.square()).add(b.mul(x)).add(c);\n   * const loss = (pred, label) => pred.sub(label).square().mean();\n   *\n   * const learningRate = 0.01;\n   * const optimizer = tf.train.sgd(learningRate);\n   *\n   * // Train the model.\n   * for (let i = 0; i < 10; i++) {\n   *   optimizer.minimize(() => loss(f(xs), ys));\n   * }\n   *\n   * // Make predictions.\n   * console.log(\n   *     `a: ${a.dataSync()}, b: ${b.dataSync()}, c: ${c.dataSync()}`);\n   * const preds = f(xs).dataSync();\n   * preds.forEach((pred, i) => {\n   *   console.log(`x: ${i}, pred: ${pred}`);\n   * });\n   * ```\n   *\n   * @param learningRate The learning rate to use for the SGD algorithm.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static sgd(learningRate: number): SGDOptimizer {\n    return new SGDOptimizer(learningRate);\n  }\n\n  /**\n   * Constructs a `tf.MomentumOptimizer` that uses momentum gradient\n   * descent.\n   *\n   * See\n   * [http://proceedings.mlr.press/v28/sutskever13.pdf](\n   * http://proceedings.mlr.press/v28/sutskever13.pdf)\n   *\n   * @param learningRate The learning rate to use for the Momentum gradient\n   * descent algorithm.\n   * @param momentum The momentum to use for the momentum gradient descent\n   * algorithm.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static momentum(learningRate: number, momentum: number, useNesterov = false):\n      MomentumOptimizer {\n    return new MomentumOptimizer(learningRate, momentum, useNesterov);\n  }\n\n  /**\n   * Constructs a `tf.RMSPropOptimizer` that uses RMSProp gradient\n   * descent. This implementation uses plain momentum and is not centered\n   * version of RMSProp.\n   *\n   * See\n   * [http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf](\n   * http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf)\n   *\n   * @param learningRate The learning rate to use for the RMSProp gradient\n   * descent algorithm.\n   * @param decay The discounting factor for the history/coming gradient.\n   * @param momentum The momentum to use for the RMSProp gradient descent\n   * algorithm.\n   * @param epsilon Small value to avoid zero denominator.\n   * @param centered If true, gradients are normalized by the estimated\n   * variance of the gradient.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static rmsprop(\n      learningRate: number, decay = .9, momentum = 0.0, epsilon: number = null,\n      centered = false): RMSPropOptimizer {\n    return new RMSPropOptimizer(\n        learningRate, decay, momentum, epsilon, centered);\n  }\n\n  /**\n   * Constructs a `tf.AdamOptimizer` that uses the Adam algorithm.\n   * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)\n   *\n   * @param learningRate The learning rate to use for the Adam gradient\n   * descent algorithm.\n   * @param beta1 The exponential decay rate for the 1st moment estimates.\n   * @param beta2 The exponential decay rate for the 2nd moment estimates.\n   * @param epsilon A small constant for numerical stability.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static adam(\n      learningRate = 0.001, beta1 = 0.9, beta2 = 0.999,\n      epsilon: number = null): AdamOptimizer {\n    return new AdamOptimizer(learningRate, beta1, beta2, epsilon);\n  }\n\n  /**\n   * Constructs a `tf.AdadeltaOptimizer` that uses the Adadelta algorithm.\n   * See [https://arxiv.org/abs/1212.5701](https://arxiv.org/abs/1212.5701)\n   *\n   * @param learningRate The learning rate to use for the Adadelta gradient\n   * descent algorithm.\n   * @param rho The learning rate decay over each update.\n   * @param epsilon A constant epsilon used to better condition the grad\n   * update.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static adadelta(learningRate = .001, rho = .95, epsilon: number = null):\n      AdadeltaOptimizer {\n    return new AdadeltaOptimizer(learningRate, rho, epsilon);\n  }\n\n  /**\n   * Constructs a `tf.AdamaxOptimizer` that uses the Adamax algorithm.\n   * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)\n   *\n   * @param learningRate The learning rate to use for the Adamax gradient\n   * descent algorithm.\n   * @param beta1 The exponential decay rate for the 1st moment estimates.\n   * @param beta2 The exponential decay rate for the 2nd moment estimates.\n   * @param epsilon A small constant for numerical stability.\n   * @param decay The learning rate decay over each update.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static adamax(\n      learningRate = 0.002, beta1 = 0.9, beta2 = 0.999, epsilon: number = null,\n      decay = 0.0): AdamaxOptimizer {\n    return new AdamaxOptimizer(learningRate, beta1, beta2, epsilon, decay);\n  }\n\n  /**\n   * Constructs a `tf.AdagradOptimizer` that uses the Adagrad algorithm.\n   * See\n   * [http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf](\n   * http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf)\n   * or\n   * [http://ruder.io/optimizing-gradient-descent/index.html#adagrad](\n   * http://ruder.io/optimizing-gradient-descent/index.html#adagrad)\n   *\n   * @param learningRate The learning rate to use for the Adagrad gradient\n   * descent algorithm.\n   * @param initialAccumulatorValue Starting value for the accumulators, must be\n   * positive.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static adagrad(learningRate: number, initialAccumulatorValue = 0.1):\n      AdagradOptimizer {\n    return new AdagradOptimizer(learningRate, initialAccumulatorValue);\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {add} from '../ops/add';\nimport {div} from '../ops/div';\nimport {mul} from '../ops/mul';\nimport {sqrt} from '../ops/ops';\nimport {square} from '../ops/square';\nimport {zerosLike} from '../ops/zeros_like';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {NamedTensor, NamedVariableMap} from '../tensor_types';\n\nimport {Optimizer, OptimizerVariable} from './optimizer';\n\n/** @doclink Optimizer */\nexport class AdadeltaOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'Adadelta';  // Name matters for Python compatibility.\n  private accumulatedGrads: OptimizerVariable[] = [];\n  private accumulatedUpdates: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, protected rho: number,\n      protected epsilon: number = null) {\n    super();\n\n    if (epsilon == null) {\n      this.epsilon = ENGINE.backend.epsilon();\n    }\n  }\n\n  applyGradients(variableGradients: NamedVariableMap|NamedTensor[]) {\n    const variableNames = Array.isArray(variableGradients) ?\n        variableGradients.map(item => item.name) :\n        Object.keys(variableGradients);\n\n    variableNames.forEach((name, i) => {\n      const value = ENGINE.registeredVariables[name];\n      const trainable = false;\n      if (this.accumulatedGrads[i] == null) {\n        this.accumulatedGrads[i] = {\n          originalName: `${name}/accum_grad`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n      if (this.accumulatedUpdates[i] == null) {\n        this.accumulatedUpdates[i] = {\n          originalName: `${name}/accum_var`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n\n      const gradient = Array.isArray(variableGradients) ?\n          variableGradients[i].tensor :\n          variableGradients[name];\n      if (gradient == null) {\n        return;\n      }\n\n      const accumulatedGrad = this.accumulatedGrads[i].variable;\n      const accumulatedUpdate = this.accumulatedUpdates[i].variable;\n\n      tidy(() => {\n        const newAccumulatedGrad =\n            add(mul(accumulatedGrad, this.rho),\n                mul(square(gradient), 1 - this.rho));\n\n        const updates =\n            mul(div(sqrt(add(accumulatedUpdate, this.epsilon)),\n                    sqrt(add(accumulatedGrad, this.epsilon))),\n                gradient);\n\n        const newAccumulatedUpdate =\n            add(mul(accumulatedUpdate, this.rho),\n                mul(square(updates), 1 - this.rho));\n\n        accumulatedGrad.assign(newAccumulatedGrad);\n        accumulatedUpdate.assign(newAccumulatedUpdate);\n\n        const newValue = add(mul(updates, -this.learningRate), value);\n        value.assign(newValue);\n      });\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    if (this.accumulatedUpdates != null) {\n      dispose(this.accumulatedGrads.map(v => v.variable));\n      dispose(this.accumulatedUpdates.map(v => v.variable));\n    }\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    // Order matters for Python compatibility.\n    const variables: OptimizerVariable[] =\n        [...this.accumulatedGrads, ...this.accumulatedUpdates];\n    return [await this.saveIterations()].concat(\n        variables.map(v => ({name: v.originalName, tensor: v.variable})));\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    const variableCount = weightValues.length / 2;\n    const trainable = false;\n    this.accumulatedGrads =\n        weightValues.slice(0, variableCount).map(v => ({\n                                                   originalName: v.name,\n                                                   variable: v.tensor.variable(\n                                                       trainable)\n                                                 }));\n    this.accumulatedUpdates =\n        weightValues.slice(variableCount, variableCount * 2)\n            .map(v => ({\n                   originalName: v.name,\n                   variable: v.tensor.variable(trainable)\n                 }));\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'rho': this.rho,\n      'epsilon': this.epsilon\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(config['learningRate'], config['rho'], config['epsilon']);\n  }\n}\nregisterClass(AdadeltaOptimizer);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {add} from '../ops/add';\nimport {div} from '../ops/div';\nimport {fill} from '../ops/fill';\nimport {mul} from '../ops/mul';\nimport {sqrt} from '../ops/sqrt';\nimport {square} from '../ops/square';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {NamedTensor, NamedVariableMap} from '../tensor_types';\n\nimport {Optimizer, OptimizerVariable} from './optimizer';\n\n/** @doclink Optimizer */\nexport class AdagradOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'Adagrad';  // Note: Name matters for Python compatibility.\n\n  private accumulatedGrads: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, private initialAccumulatorValue = 0.1) {\n    super();\n  }\n\n  applyGradients(variableGradients: NamedVariableMap|NamedTensor[]) {\n    const variableNames = Array.isArray(variableGradients) ?\n        variableGradients.map(item => item.name) :\n        Object.keys(variableGradients);\n\n    variableNames.forEach((name, i) => {\n      const value = ENGINE.registeredVariables[name];\n      if (this.accumulatedGrads[i] == null) {\n        const trainable = false;\n        this.accumulatedGrads[i] = {\n          originalName: `${name}/accumulator`,\n          variable: tidy(\n              () => fill(value.shape, this.initialAccumulatorValue)\n                        .variable(trainable))\n        };\n      }\n\n      const gradient = Array.isArray(variableGradients) ?\n          variableGradients[i].tensor :\n          variableGradients[name];\n      if (gradient == null) {\n        return;\n      }\n\n      const accumulatedGrad = this.accumulatedGrads[i].variable;\n\n      tidy(() => {\n        const newAccumulatedGrad = add(accumulatedGrad, square(gradient));\n        accumulatedGrad.assign(newAccumulatedGrad);\n\n        const newValue = add(\n            mul(div(gradient,\n                    sqrt(add(newAccumulatedGrad, ENGINE.backend.epsilon()))),\n                -this.learningRate),\n            value);\n        value.assign(newValue);\n      });\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    if (this.accumulatedGrads != null) {\n      dispose(this.accumulatedGrads.map(v => v.variable));\n    }\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    // Order matters for Python compatibility.\n    return [await this.saveIterations()].concat(this.accumulatedGrads.map(\n        v => ({name: v.originalName, tensor: v.variable})));\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    const trainable = false;\n    this.accumulatedGrads = weightValues.map(\n        v => ({originalName: v.name, variable: v.tensor.variable(trainable)}));\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'initialAccumulatorValue': this.initialAccumulatorValue,\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(config['learningRate'], config['initialAccumulatorValue']);\n  }\n}\nregisterClass(AdagradOptimizer);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {add} from '../ops/add';\nimport {div} from '../ops/div';\nimport {mul} from '../ops/mul';\nimport {pow} from '../ops/pow';\nimport {scalar} from '../ops/scalar';\nimport {sqrt} from '../ops/sqrt';\nimport {square} from '../ops/square';\nimport {sub} from '../ops/sub';\nimport {zerosLike} from '../ops/zeros_like';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {Variable} from '../tensor';\nimport {NamedTensor, NamedVariableMap} from '../tensor_types';\n\nimport {Optimizer, OptimizerVariable} from './optimizer';\n\nexport class AdamOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'Adam';  // Note: Name matters for Python compatibility.\n  private accBeta1: Variable;\n  private accBeta2: Variable;\n\n  private accumulatedFirstMoment: OptimizerVariable[] = [];\n  private accumulatedSecondMoment: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, protected beta1: number,\n      protected beta2: number, protected epsilon: number = null) {\n    super();\n    tidy(() => {\n      // accB* will be updated by batch.\n      this.accBeta1 = scalar(beta1).variable();\n      this.accBeta2 = scalar(beta2).variable();\n    });\n\n    if (epsilon == null) {\n      this.epsilon = ENGINE.backend.epsilon();\n    }\n  }\n\n  applyGradients(variableGradients: NamedVariableMap|NamedTensor[]) {\n    const varNames = Array.isArray(variableGradients) ?\n        variableGradients.map(v => v.name) :\n        Object.keys(variableGradients);\n    tidy(() => {\n      const oneMinusAccBeta1 = sub(1, this.accBeta1);\n      const oneMinusAccBeta2 = sub(1, this.accBeta2);\n\n      varNames.forEach((name, i) => {\n        const value = ENGINE.registeredVariables[name];\n        const trainable = false;\n        if (this.accumulatedFirstMoment[i] == null) {\n          this.accumulatedFirstMoment[i] = {\n            originalName: `${name}/m`,\n            variable: tidy(() => zerosLike(value).variable(trainable))\n          };\n        }\n        if (this.accumulatedSecondMoment[i] == null) {\n          this.accumulatedSecondMoment[i] = {\n            originalName: `${name}/v`,\n            variable: tidy(() => zerosLike(value).variable(trainable))\n          };\n        }\n\n        const gradient = Array.isArray(variableGradients) ?\n            variableGradients[i].tensor :\n            variableGradients[name];\n        if (gradient == null) {\n          return;\n        }\n\n        const firstMoment = this.accumulatedFirstMoment[i].variable;\n        const secondMoment = this.accumulatedSecondMoment[i].variable;\n\n        const newFirstMoment =\n            add(mul(firstMoment, this.beta1), mul(gradient, 1 - this.beta1));\n        const newSecondMoment =\n            add(mul(secondMoment, this.beta2),\n                mul(square(gradient), 1 - this.beta2));\n\n        const biasCorrectedFirstMoment = div(newFirstMoment, oneMinusAccBeta1);\n        const biasCorrectedSecondMoment =\n            div(newSecondMoment, oneMinusAccBeta2);\n\n        firstMoment.assign(newFirstMoment);\n        secondMoment.assign(newSecondMoment);\n\n        const newValue =\n            add(mul(div(biasCorrectedFirstMoment,\n                        add(sqrt(biasCorrectedSecondMoment), this.epsilon)),\n                    -this.learningRate),\n                value);\n        value.assign(newValue);\n      });\n\n      this.accBeta1.assign(mul(this.accBeta1, this.beta1));\n      this.accBeta2.assign(mul(this.accBeta2, this.beta2));\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    this.accBeta1.dispose();\n    this.accBeta2.dispose();\n\n    if (this.accumulatedFirstMoment != null) {\n      dispose(this.accumulatedFirstMoment.map(v => v.variable));\n    }\n    if (this.accumulatedSecondMoment != null) {\n      dispose(this.accumulatedSecondMoment.map(v => v.variable));\n    }\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    // Order matters for Python compatibility.\n    const variables: OptimizerVariable[] =\n        [...this.accumulatedFirstMoment, ...this.accumulatedSecondMoment];\n    return [await this.saveIterations()].concat(\n        variables.map(v => ({name: v.originalName, tensor: v.variable})));\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    tidy(() => {\n      this.accBeta1.assign(pow(this.beta1, this.iterations_ + 1));\n      this.accBeta2.assign(pow(this.beta2, this.iterations_ + 1));\n    });\n\n    const variableCount = weightValues.length / 2;\n    const trainable = false;\n    this.accumulatedFirstMoment =\n        weightValues.slice(0, variableCount).map(v => ({\n                                                   originalName: v.name,\n                                                   variable: v.tensor.variable(\n                                                       trainable)\n                                                 }));\n    this.accumulatedSecondMoment =\n        weightValues.slice(variableCount, variableCount * 2)\n            .map(v => ({\n                   originalName: v.name,\n                   variable: v.tensor.variable(trainable)\n                 }));\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'beta1': this.beta1,\n      'beta2': this.beta2,\n      'epsilon': this.epsilon,\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(\n        config['learningRate'], config['beta1'], config['beta2'],\n        config['epsilon']);\n  }\n}\nregisterClass(AdamOptimizer);\n","﻿/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {abs} from '../ops/abs';\nimport {add} from '../ops/add';\nimport {div} from '../ops/div';\nimport {maximum} from '../ops/maximum';\nimport {mul} from '../ops/mul';\nimport {scalar} from '../ops/scalar';\nimport {sub} from '../ops/sub';\nimport {zerosLike} from '../ops/zeros_like';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {Variable} from '../tensor';\nimport {NamedTensor, NamedVariableMap} from '../tensor_types';\n\nimport {Optimizer, OptimizerVariable} from './optimizer';\n\nexport class AdamaxOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'Adamax';  // Note: Name matters for Python compatbility.\n  private accBeta1: Variable;\n  private iteration: Variable;\n\n  private accumulatedFirstMoment: OptimizerVariable[] = [];\n  private accumulatedWeightedInfNorm: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, protected beta1: number,\n      protected beta2: number, protected epsilon: number = null,\n      protected decay = 0.0) {\n    super();\n\n    tidy(() => {\n      this.iteration = scalar(0).variable();\n      this.accBeta1 = scalar(beta1).variable();\n    });\n\n    if (epsilon == null) {\n      this.epsilon = ENGINE.backend.epsilon();\n    }\n  }\n\n  applyGradients(variableGradients: NamedVariableMap|NamedTensor[]) {\n    const variableNames = Array.isArray(variableGradients) ?\n        variableGradients.map(item => item.name) :\n        Object.keys(variableGradients);\n\n    tidy(() => {\n      const oneMinusAccBeta1 = sub(1, this.accBeta1);\n      const lr =\n          div(-this.learningRate, add(mul(this.iteration, this.decay), 1));\n\n      variableNames.forEach((name, i) => {\n        const value = ENGINE.registeredVariables[name];\n        const trainable = false;\n        if (this.accumulatedFirstMoment[i] == null) {\n          this.accumulatedFirstMoment[i] = {\n            originalName: `${name}/m`,\n            variable: zerosLike(value).variable(trainable)\n          };\n        }\n        if (this.accumulatedWeightedInfNorm[i] == null) {\n          this.accumulatedWeightedInfNorm[i] = {\n            originalName: `${name}/v`,\n            variable: zerosLike(value).variable(trainable)\n          };\n        }\n\n        const gradient = Array.isArray(variableGradients) ?\n            variableGradients[i].tensor :\n            variableGradients[name];\n        if (gradient == null) {\n          return;\n        }\n\n        const firstMoment = this.accumulatedFirstMoment[i].variable;\n        const weightedInfNorm = this.accumulatedWeightedInfNorm[i].variable;\n\n        const newFirstMoment =\n            add(mul(firstMoment, this.beta1), mul(gradient, 1 - this.beta1));\n\n        const ut0 = mul(weightedInfNorm, this.beta2);\n        const ut1 = abs(gradient);\n\n        const newWeightedInfNorm = maximum(ut0, ut1);\n\n        firstMoment.assign(newFirstMoment);\n        weightedInfNorm.assign(newWeightedInfNorm);\n\n        const newValue =\n            add(mul(div(lr, oneMinusAccBeta1),\n                    div(newFirstMoment, add(newWeightedInfNorm, this.epsilon))),\n                value);\n\n        value.assign(newValue);\n      });\n\n      this.iteration.assign(add(this.iteration, 1));\n      this.accBeta1.assign(mul(this.accBeta1, this.beta1));\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    this.accBeta1.dispose();\n    this.iteration.dispose();\n\n    if (this.accumulatedFirstMoment != null) {\n      dispose(this.accumulatedFirstMoment.map(v => v.variable));\n    }\n    if (this.accumulatedWeightedInfNorm != null) {\n      dispose(this.accumulatedWeightedInfNorm.map(v => v.variable));\n    }\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    throw new Error('getWeights() is not implemented for Adamax yet.');\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    throw new Error('setWeights() is not implemented for Adamax yet.');\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'beta1': this.beta1,\n      'beta2': this.beta2,\n      'epsilon': this.epsilon,\n      'decay': this.decay\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(\n        config['learningRate'], config['beta1'], config['beta2'],\n        config['epsilon'], config['decay']);\n  }\n}\nregisterClass(AdamaxOptimizer);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {add} from '../ops/add';\nimport {mul} from '../ops/mul';\nimport {scalar} from '../ops/scalar';\nimport {zerosLike} from '../ops/zeros_like';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {Scalar, Tensor} from '../tensor';\nimport {NamedTensor, NamedVariableMap} from '../tensor_types';\n\nimport {OptimizerVariable} from './optimizer';\nimport {SGDOptimizer} from './sgd_optimizer';\n\n/** @doclink Optimizer */\nexport class MomentumOptimizer extends SGDOptimizer {\n  /** @nocollapse */\n  static className = 'Momentum';  // Name matters for Python compatibility.\n  private m: Scalar;\n  private accumulations: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, private momentum: number,\n      private useNesterov = false) {\n    super(learningRate);\n    this.m = scalar(this.momentum);\n  }\n\n  applyGradients(variableGradients: NamedVariableMap|NamedTensor[]) {\n    const variableNames = Array.isArray(variableGradients) ?\n        variableGradients.map(item => item.name) :\n        Object.keys(variableGradients);\n\n    variableNames.forEach((name, i) => {\n      const value = ENGINE.registeredVariables[name];\n      if (this.accumulations[i] == null) {\n        const trainable = false;\n        this.accumulations[i] = {\n          originalName: `${name}/momentum`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n\n      const accumulation = this.accumulations[i].variable;\n      const gradient = Array.isArray(variableGradients) ?\n          variableGradients[i].tensor :\n          variableGradients[name];\n      if (gradient == null) {\n        return;\n      }\n\n      tidy(() => {\n        let newValue: Tensor;\n        const newAccumulation = add(mul(this.m, accumulation), gradient);\n        if (this.useNesterov) {\n          newValue = add(\n              mul(this.c, add(gradient, mul(newAccumulation, this.m))), value);\n        } else {\n          newValue = add(mul(this.c, newAccumulation), value);\n        }\n        accumulation.assign(newAccumulation);\n        value.assign(newValue);\n      });\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    this.m.dispose();\n    if (this.accumulations != null) {\n      dispose(this.accumulations.map(v => v.variable));\n    }\n  }\n\n  /**\n   * Sets the momentum of the optimizer.\n   *\n   * @param momentum\n   */\n  setMomentum(momentum: number) {\n    this.momentum = momentum;\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    // Order matters for Python compatibility.\n    return [await this.saveIterations()].concat(this.accumulations.map(\n        v => ({name: v.originalName, tensor: v.variable})));\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    const trainable = false;\n    this.accumulations = weightValues.map(\n        v => ({originalName: v.name, variable: v.tensor.variable(trainable)}));\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'momentum': this.momentum,\n      'useNesterov': this.useNesterov\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(\n        config['learningRate'], config['momentum'], config['useNesterov']);\n  }\n}\nregisterClass(MomentumOptimizer);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {keep, tidy} from '../globals';\nimport {add} from '../ops/add';\nimport {mul} from '../ops/mul';\nimport {scalar} from '../ops/scalar';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {Scalar} from '../tensor';\nimport {NamedTensor, NamedTensorMap} from '../tensor_types';\n\nimport {Optimizer} from './optimizer';\n\n/** @doclink Optimizer */\nexport class SGDOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'SGD';  // Note: Name matters for Python compatibility.\n  protected c: Scalar;\n\n  constructor(protected learningRate: number) {\n    super();\n    this.setLearningRate(learningRate);\n  }\n\n  applyGradients(variableGradients: NamedTensorMap|NamedTensor[]) {\n    const varNames = Array.isArray(variableGradients) ?\n        variableGradients.map(v => v.name) :\n        Object.keys(variableGradients);\n    varNames.forEach((name, i) => {\n      const gradient = Array.isArray(variableGradients) ?\n          variableGradients[i].tensor :\n          variableGradients[name];\n      if (gradient == null) {\n        return;\n      }\n      const value = ENGINE.registeredVariables[name];\n      tidy(() => {\n        const newValue = add(mul(this.c, gradient), value);\n        value.assign(newValue);\n      });\n    });\n    this.incrementIterations();\n  }\n\n  /**\n   * Sets the learning rate of the optimizer.\n   */\n  setLearningRate(learningRate: number) {\n    this.learningRate = learningRate;\n    if (this.c != null) {\n      this.c.dispose();\n    }\n    this.c = keep(scalar(-learningRate));\n  }\n\n  dispose() {\n    this.c.dispose();\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    return [await this.saveIterations()];\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    if (weightValues.length !== 0) {\n      throw new Error('SGD optimizer does not have settable weights.');\n    }\n  }\n\n  getConfig(): ConfigDict {\n    return {'learningRate': this.learningRate};\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(config['learningRate']);\n  }\n}\nregisterClass(SGDOptimizer);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {add} from '../ops/add';\nimport {div} from '../ops/div';\nimport {mul} from '../ops/mul';\nimport {sqrt} from '../ops/sqrt';\nimport {square} from '../ops/square';\nimport {sub} from '../ops/sub';\nimport {zerosLike} from '../ops/zeros_like';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {NamedTensor, NamedTensorMap} from '../tensor_types';\n\nimport {Optimizer, OptimizerVariable} from './optimizer';\n\n/** @doclink Optimizer */\nexport class RMSPropOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'RMSProp';  // Note: Name matters for Python compatibility.\n  private centered: boolean;\n\n  private accumulatedMeanSquares: OptimizerVariable[] = [];\n  private accumulatedMoments: OptimizerVariable[] = [];\n  private accumulatedMeanGrads: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, protected decay = 0.9,\n      protected momentum = 0.0, protected epsilon: number = null,\n      centered = false) {\n    super();\n\n    this.centered = centered;\n\n    if (epsilon == null) {\n      this.epsilon = ENGINE.backend.epsilon();\n    }\n    if (learningRate == null) {\n      throw new Error(`learningRate for RMSPropOptimizer must be defined.`);\n    }\n  }\n\n  applyGradients(variableGradients: NamedTensorMap|NamedTensor[]) {\n    const variableNames = Array.isArray(variableGradients) ?\n        variableGradients.map(item => item.name) :\n        Object.keys(variableGradients);\n\n    variableNames.forEach((name, i) => {\n      const value = ENGINE.registeredVariables[name];\n      const trainable = false;\n      if (this.accumulatedMeanSquares[i] == null) {\n        this.accumulatedMeanSquares[i] = {\n          originalName: `${name}/rms`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n      if (this.accumulatedMoments[i] == null) {\n        this.accumulatedMoments[i] = {\n          originalName: `${name}/momentum`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n      if (this.accumulatedMeanGrads[i] == null && this.centered) {\n        this.accumulatedMeanGrads[i] = {\n          originalName: `${name}/mg`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n\n      const gradient = Array.isArray(variableGradients) ?\n          variableGradients[i].tensor :\n          variableGradients[name];\n      if (gradient == null) {\n        return;\n      }\n\n      const accumulatedMeanSquare = this.accumulatedMeanSquares[i].variable;\n      const accumulatedMoments = this.accumulatedMoments[i].variable;\n      tidy(() => {\n        const newAccumulatedMeanSquare =\n            add(mul(accumulatedMeanSquare, this.decay),\n                mul(square(gradient), 1 - this.decay));\n\n        if (this.centered) {\n          const accumulatedMeanGrad = this.accumulatedMeanGrads[i].variable;\n          // Centered gradient\n          const newAccumulatedMeanGrad =\n              add(mul(accumulatedMeanGrad, this.decay),\n                  mul(gradient, 1 - this.decay));\n\n          const gradContribution =\n              div(mul(gradient, this.learningRate),\n                  sqrt(\n                      sub(newAccumulatedMeanSquare,\n                          add(square(newAccumulatedMeanGrad), this.epsilon))));\n          const newAccumulatedMoments =\n              add(mul(accumulatedMoments, this.momentum), gradContribution);\n\n          accumulatedMeanSquare.assign(newAccumulatedMeanSquare);\n          accumulatedMeanGrad.assign(newAccumulatedMeanGrad);\n          accumulatedMoments.assign(newAccumulatedMoments);\n\n          const newValue = sub(value, newAccumulatedMoments);\n          value.assign(newValue);\n        } else {\n          // Plain gradient\n          const newAccumulatedMeanSquare =\n              add(mul(accumulatedMeanSquare, this.decay),\n                  mul(square(gradient), 1 - this.decay));\n\n          const newAccumulatedMoments =\n              add(mul(accumulatedMoments, this.momentum),\n                  div(mul(gradient, this.learningRate),\n                      sqrt(add(newAccumulatedMeanSquare, this.epsilon))));\n\n          accumulatedMeanSquare.assign(newAccumulatedMeanSquare);\n          accumulatedMoments.assign(newAccumulatedMoments);\n\n          const newValue = sub(value, newAccumulatedMoments);\n          value.assign(newValue);\n        }\n      });\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    if (this.accumulatedMeanSquares != null) {\n      dispose(this.accumulatedMeanSquares.map(v => v.variable));\n    }\n    if (this.accumulatedMeanGrads != null && this.centered) {\n      dispose(this.accumulatedMeanGrads.map(v => v.variable));\n    }\n    if (this.accumulatedMoments != null) {\n      dispose(this.accumulatedMoments.map(v => v.variable));\n    }\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    // Order matters for Python compatibility.\n    const variables: OptimizerVariable[] =\n        [...this.accumulatedMeanSquares, ...this.accumulatedMoments];\n    if (this.centered) {\n      variables.push(...this.accumulatedMeanGrads);\n    }\n    return [await this.saveIterations()].concat(\n        variables.map(v => ({name: v.originalName, tensor: v.variable})));\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    const variableCount =\n        this.centered ? weightValues.length / 3 : weightValues.length / 2;\n    const trainable = false;\n    this.accumulatedMeanSquares =\n        weightValues.slice(0, variableCount).map(v => ({\n                                                   originalName: v.name,\n                                                   variable: v.tensor.variable(\n                                                       trainable)\n                                                 }));\n    this.accumulatedMoments =\n        weightValues.slice(variableCount, variableCount * 2)\n            .map(v => ({\n                   originalName: v.name,\n                   variable: v.tensor.variable(trainable)\n                 }));\n    if (this.centered) {\n      this.accumulatedMeanGrads =\n          weightValues.slice(variableCount * 2, variableCount * 3)\n              .map(v => ({\n                     originalName: v.name,\n                     variable: v.tensor.variable(trainable)\n                   }));\n    }\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'decay': this.decay,\n      'momentum': this.momentum,\n      'epsilon': this.epsilon,\n      'centered': this.centered\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(\n        config['learningRate'], config['decay'], config['momentum'],\n        config['epsilon'], config['centered']);\n  }\n}\nregisterClass(RMSPropOptimizer);\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst delayCallback: Function = (() => {\n  if (typeof requestAnimationFrame !== 'undefined') {\n    return requestAnimationFrame;\n  } else if (typeof setImmediate !== 'undefined') {\n    return setImmediate;\n  }\n  return (f: Function) => f();  // no delays\n})();\n\n/**\n * Returns a promise that resolve when a requestAnimationFrame has completed.\n *\n * On Node.js this uses setImmediate instead of requestAnimationFrame.\n *\n * This is simply a sugar method so that users can do the following:\n * `await tf.nextFrame();`\n *\n * @doc {heading: 'Performance', subheading: 'Timing'}\n */\nfunction nextFrame(): Promise<void> {\n  return new Promise<void>(resolve => delayCallback(() => resolve()));\n}\n\nexport {nextFrame};\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original source: keras/contraints.py */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {serialization, Tensor, tidy} from '@tensorflow/tfjs-core';\nimport {epsilon} from './backend/common';\nimport {deserializeKerasObject, serializeKerasObject} from './utils/generic_utils';\n\n/**\n * Helper function used by many of the Constraints to find the L2Norms.\n */\nfunction calcL2Norms(w: Tensor, axis: number): Tensor {\n  return tidy(() => tfc.sqrt(tfc.sum(tfc.mul(w, w), axis, true)));\n}\n\n/**\n * Base class for functions that impose constraints on weight values\n *\n * @doc {\n *   heading: 'Constraints',\n *   subheading: 'Classes',\n *   namespace: 'constraints'\n * }\n */\nexport abstract class Constraint extends serialization.Serializable {\n  /* Porting note: was __call__, apply chosen to match other similar choices */\n  abstract apply(w: Tensor): Tensor;\n  getConfig(): serialization.ConfigDict {\n    return {};\n  }\n}\n\nexport interface MaxNormArgs {\n  /**\n   * Maximum norm for incoming weights\n   */\n  maxValue?: number;\n  /**\n   * Axis along which to calculate norms.\n   *\n   *  For instance, in a `Dense` layer the weight matrix\n   *  has shape `[inputDim, outputDim]`,\n   *  set `axis` to `0` to constrain each weight vector\n   *  of length `[inputDim,]`.\n   *  In a `Conv2D` layer with `dataFormat=\"channels_last\"`,\n   *  the weight tensor has shape\n   *  `[rows, cols, inputDepth, outputDepth]`,\n   *  set `axis` to `[0, 1, 2]`\n   *  to constrain the weights of each filter tensor of size\n   *  `[rows, cols, inputDepth]`.\n   */\n  axis?: number;\n}\n\nexport class MaxNorm extends Constraint {\n  /** @nocollapse */\n  static readonly className = 'MaxNorm';\n  private maxValue: number;\n  private axis: number;\n  private readonly defaultMaxValue = 2;\n  private readonly defaultAxis = 0;\n\n  constructor(args: MaxNormArgs) {\n    super();\n    this.maxValue =\n        args.maxValue != null ? args.maxValue : this.defaultMaxValue;\n    this.axis = args.axis != null ? args.axis : this.defaultAxis;\n  }\n\n  apply(w: Tensor): Tensor {\n    return tidy(() => {\n      const norms = calcL2Norms(w, this.axis);\n      const desired = tfc.clipByValue(norms, 0, this.maxValue);\n      return tfc.mul(w, tfc.div(desired, tfc.add(epsilon(), norms)));\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    return {maxValue: this.maxValue, axis: this.axis};\n  }\n}\nserialization.registerClass(MaxNorm);\n\nexport interface UnitNormArgs {\n  /**\n   * Axis along which to calculate norms.\n   *\n   * For instance, in a `Dense` layer the weight matrix\n   * has shape `[inputDim, outputDim]`,\n   * set `axis` to `0` to constrain each weight vector\n   * of length `[inputDim,]`.\n   * In a `Conv2D` layer with `dataFormat=\"channels_last\"`,\n   * the weight tensor has shape\n   * [rows, cols, inputDepth, outputDepth]`,\n   * set `axis` to `[0, 1, 2]`\n   * to constrain the weights of each filter tensor of size\n   * `[rows, cols, inputDepth]`.\n   */\n  axis?: number;\n}\n\nexport class UnitNorm extends Constraint {\n  /** @nocollapse */\n  static readonly className = 'UnitNorm';\n  private axis: number;\n  private readonly defaultAxis = 0;\n  constructor(args: UnitNormArgs) {\n    super();\n    this.axis = args.axis != null ? args.axis : this.defaultAxis;\n  }\n\n  apply(w: Tensor): Tensor {\n    return tidy(\n        () => tfc.div(w, tfc.add(epsilon(), calcL2Norms(w, this.axis))));\n  }\n\n  getConfig(): serialization.ConfigDict {\n    return {axis: this.axis};\n  }\n}\nserialization.registerClass(UnitNorm);\n\nexport class NonNeg extends Constraint {\n  /** @nocollapse */\n  static readonly className = 'NonNeg';\n\n  apply(w: Tensor): Tensor {\n    return tfc.relu(w);\n  }\n}\nserialization.registerClass(NonNeg);\n\nexport interface MinMaxNormArgs {\n  /**\n   * Minimum norm for incoming weights\n   */\n  minValue?: number;\n  /**\n   * Maximum norm for incoming weights\n   */\n  maxValue?: number;\n  /**\n   * Axis along which to calculate norms.\n   * For instance, in a `Dense` layer the weight matrix\n   * has shape `[inputDim, outputDim]`,\n   * set `axis` to `0` to constrain each weight vector\n   * of length `[inputDim,]`.\n   * In a `Conv2D` layer with `dataFormat=\"channels_last\"`,\n   * the weight tensor has shape\n   * `[rows, cols, inputDepth, outputDepth]`,\n   * set `axis` to `[0, 1, 2]`\n   * to constrain the weights of each filter tensor of size\n   * `[rows, cols, inputDepth]`.\n   */\n  axis?: number;\n  /**\n   * Rate for enforcing the constraint: weights will be rescaled to yield:\n   * `(1 - rate) * norm + rate * norm.clip(minValue, maxValue)`.\n   * Effectively, this means that rate=1.0 stands for strict\n   * enforcement of the constraint, while rate<1.0 means that\n   * weights will be rescaled at each step to slowly move\n   * towards a value inside the desired interval.\n   */\n  rate?: number;\n}\n\nexport class MinMaxNorm extends Constraint {\n  /** @nocollapse */\n  static readonly className = 'MinMaxNorm';\n  private minValue: number;\n  private maxValue: number;\n  private rate: number;\n  private axis: number;\n  private readonly defaultMinValue = 0.0;\n  private readonly defaultMaxValue = 1.0;\n  private readonly defaultRate = 1.0;\n  private readonly defaultAxis = 0;\n\n  constructor(args: MinMaxNormArgs) {\n    super();\n    this.minValue =\n        args.minValue != null ? args.minValue : this.defaultMinValue;\n    this.maxValue =\n        args.maxValue != null ? args.maxValue : this.defaultMaxValue;\n    this.rate = args.rate != null ? args.rate : this.defaultRate;\n    this.axis = args.axis != null ? args.axis : this.defaultAxis;\n  }\n\n  apply(w: Tensor): Tensor {\n    return tidy(() => {\n      const norms = calcL2Norms(w, this.axis);\n      const desired = tfc.add(\n          tfc.mul(\n              this.rate, tfc.clipByValue(norms, this.minValue, this.maxValue)),\n          tfc.mul(1.0 - this.rate, norms));\n      return tfc.mul(w, tfc.div(desired, tfc.add(epsilon(), norms)));\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    return {\n      minValue: this.minValue,\n      maxValue: this.maxValue,\n      rate: this.rate,\n      axis: this.axis\n    };\n  }\n}\nserialization.registerClass(MinMaxNorm);\n\n/** @docinline */\nexport type ConstraintIdentifier =\n    'maxNorm'|'minMaxNorm'|'nonNeg'|'unitNorm'|string;\n\n// Maps the JavaScript-like identifier keys to the corresponding registry\n// symbols.\nexport const CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP:\n    {[identifier in ConstraintIdentifier]: string} = {\n      'maxNorm': 'MaxNorm',\n      'minMaxNorm': 'MinMaxNorm',\n      'nonNeg': 'NonNeg',\n      'unitNorm': 'UnitNorm'\n    };\n\nexport function serializeConstraint(constraint: Constraint):\n    serialization.ConfigDictValue {\n  return serializeKerasObject(constraint);\n}\n\nexport function deserializeConstraint(\n    config: serialization.ConfigDict,\n    customObjects: serialization.ConfigDict = {}): Constraint {\n  return deserializeKerasObject(\n      config, serialization.SerializationMap.getMap().classNameMap,\n      customObjects, 'constraint');\n}\n\nexport function getConstraint(identifier: ConstraintIdentifier|\n                              serialization.ConfigDict|Constraint): Constraint {\n  if (identifier == null) {\n    return null;\n  }\n  if (typeof identifier === 'string') {\n    const className = identifier in CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP ?\n        CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] :\n        identifier;\n    const config = {className, config: {}};\n    return deserializeConstraint(config);\n  } else if (identifier instanceof Constraint) {\n    return identifier;\n  } else {\n    return deserializeConstraint(identifier);\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {backend} from '@tensorflow/tfjs-core';\nimport {DataFormat} from '../keras_format/common';\n\nlet _epsilon: number;\n\n/**\n * Returns the value of the fuzz factor used in numeric expressions.\n */\nexport function epsilon() {\n  if (_epsilon == null) {\n    _epsilon = backend().epsilon();\n  }\n  return _epsilon;\n}\n\n/**\n * Sets the value of the fuzz factor used in numeric expressions.\n * @param e New value of epsilon.\n */\nexport function setEpsilon(e: number) {\n  _epsilon = e;\n}\n\n/**\n * Returns the default image data format convention.\n */\nexport function imageDataFormat(): DataFormat {\n  return 'channelsLast';\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original source: utils/generic_utils.py */\n\nimport {DataType, fused, serialization, util} from '@tensorflow/tfjs-core';\n\nimport {AssertionError, ValueError} from '../errors';\n\n// tslint:enable\n\n/**\n * If `value` is an Array, equivalent to Python's `value * numValues`.\n * If `value` is not an Array, equivalent to Python's `[value] * numValues`\n */\n// tslint:disable-next-line:no-any\nexport function pyListRepeat(value: any, numValues: number): any[] {\n  if (Array.isArray(value)) {\n    // tslint:disable-next-line:no-any\n    let newArray: any[] = [];\n    for (let i = 0; i < numValues; i++) {\n      newArray = newArray.concat(value);\n    }\n    return newArray;\n  } else {\n    const newArray = new Array(numValues);\n    newArray.fill(value);\n    return newArray;\n  }\n}\n\nexport function assert(val: boolean, message?: string): void {\n  if (!val) {\n    throw new AssertionError(message);\n  }\n}\n\n/**\n * Count the number of elements of the `array` that are equal to `reference`.\n */\nexport function count<T>(array: T[], refernce: T) {\n  let counter = 0;\n  for (const item of array) {\n    if (item === refernce) {\n      counter++;\n    }\n  }\n  return counter;\n}\n\n/**\n * If an array is of length 1, just return the first element. Otherwise, return\n * the full array.\n * @param tensors\n */\nexport function singletonOrArray<T>(xs: T[]): T|T[] {\n  if (xs.length === 1) {\n    return xs[0];\n  }\n  return xs;\n}\n\n/**\n * Normalizes a list/tensor into a list.\n *\n * If a tensor is passed, we return\n * a list of size 1 containing the tensor.\n *\n * @param x target object to be normalized.\n */\n// tslint:disable-next-line:no-any\nexport function toList(x: any): any[] {\n  if (Array.isArray(x)) {\n    return x;\n  }\n  return [x];\n}\n\n/**\n * Generate a UID for a list\n */\n// tslint:disable-next-line:no-any\nexport function objectListUid(objs: any|any[]): string {\n  const objectList = toList(objs);\n  let retVal = '';\n  for (const obj of objectList) {\n    if (obj.id == null) {\n      throw new ValueError(\n          `Object ${obj} passed to objectListUid without an id`);\n    }\n    if (retVal !== '') {\n      retVal = retVal + ', ';\n    }\n    retVal = `${retVal}${Math.abs(obj.id)}`;\n  }\n  return retVal;\n}\n/**\n * Converts string to snake-case.\n * @param name\n */\nexport function toSnakeCase(name: string): string {\n  const intermediate = name.replace(/(.)([A-Z][a-z0-9]+)/g, '$1_$2');\n  const insecure =\n      intermediate.replace(/([a-z])([A-Z])/g, '$1_$2').toLowerCase();\n  /*\n   If the class is private the name starts with \"_\" which is not secure\n   for creating scopes. We prefix the name with \"private\" in this case.\n   */\n  if (insecure[0] !== '_') {\n    return insecure;\n  }\n  return 'private' + insecure;\n}\n\nexport function toCamelCase(identifier: string): string {\n  // quick return for empty string or single character strings\n  if (identifier.length <= 1) {\n    return identifier;\n  }\n  // Check for the underscore indicating snake_case\n  if (identifier.indexOf('_') === -1) {\n    return identifier;\n  }\n  return identifier.replace(/[_]+(\\w|$)/g, (m, p1) => p1.toUpperCase());\n}\n\n// tslint:disable-next-line:no-any\nlet _GLOBAL_CUSTOM_OBJECTS = {} as {[objName: string]: any};\n\nexport function serializeKerasObject(instance: serialization.Serializable):\n    serialization.ConfigDictValue {\n  if (instance === null || instance === undefined) {\n    return null;\n  }\n  const dict: serialization.ConfigDictValue = {};\n  dict['className'] = instance.getClassName();\n  dict['config'] = instance.getConfig();\n  return dict;\n}\n\n/**\n * Replace ndarray-style scalar objects in serialization objects with numbers.\n *\n * Background: In some versions of tf.keras, certain scalar values in the HDF5\n * model save file can be serialized as: `{'type': 'ndarray', 'value': num}`,\n * where in `num` is a plain number. This method converts such serialization\n * to a `number`.\n *\n * @param config The keras-format serialization object to be processed\n *   (in place).\n */\nfunction convertNDArrayScalarsInConfig(config: serialization.ConfigDictValue):\n    void {\n  if (config == null || typeof config !== 'object') {\n    return;\n  } else if (Array.isArray(config)) {\n    config.forEach(configItem => convertNDArrayScalarsInConfig(configItem));\n  } else {\n    const fields = Object.keys(config);\n    for (const field of fields) {\n      const value = config[field];\n      if (value != null && typeof value === 'object') {\n        if (!Array.isArray(value) && value['type'] === 'ndarray' &&\n            typeof value['value'] === 'number') {\n          config[field] = value['value'];\n        } else {\n          convertNDArrayScalarsInConfig(value as serialization.ConfigDict);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Deserialize a saved Keras Object\n * @param identifier either a string ID or a saved Keras dictionary\n * @param moduleObjects a list of Python class names to object constructors\n * @param customObjects a list of Python class names to object constructors\n * @param printableModuleName debug text for the object being reconstituted\n * @param fastWeightInit Optional flag to use fast weight initialization\n *   during deserialization. This is applicable to cases in which\n *   the initialization will be immediately overwritten by loaded weight\n *   values. Default: `false`.\n * @returns a TensorFlow.js Layers object\n */\n// tslint:disable:no-any\nexport function deserializeKerasObject(\n    identifier: string|serialization.ConfigDict,\n    moduleObjects = {} as {[objName: string]: any},\n    customObjects = {} as {[objName: string]: any},\n    printableModuleName = 'object', fastWeightInit = false): any {\n  // tslint:enable\n  if (typeof identifier === 'string') {\n    const functionName = identifier;\n    let fn;\n    if (functionName in customObjects) {\n      fn = customObjects[functionName];\n    } else if (functionName in _GLOBAL_CUSTOM_OBJECTS) {\n      fn = _GLOBAL_CUSTOM_OBJECTS[functionName];\n    } else {\n      fn = moduleObjects[functionName];\n      if (fn == null) {\n        throw new ValueError(\n            `Unknown ${printableModuleName}: ${identifier}. ` +\n            `This may be due to one of the following reasons:\\n` +\n            `1. The ${printableModuleName} is defined in Python, in which ` +\n            `case it needs to be ported to TensorFlow.js or your JavaScript ` +\n            `code.\\n` +\n            `2. The custom ${printableModuleName} is defined in JavaScript, ` +\n            `but is not registered properly with ` +\n            `tf.serialization.registerClass().`);\n        // TODO(cais): Add link to tutorial page on custom layers.\n      }\n    }\n    return fn;\n  } else {\n    // In this case we are dealing with a Keras config dictionary.\n    const config = identifier;\n    if (config['className'] == null || config['config'] == null) {\n      throw new ValueError(\n          `${printableModuleName}: Improper config format: ` +\n          `${JSON.stringify(config)}.\\n` +\n          `'className' and 'config' must set.`);\n    }\n    const className = config['className'] as string;\n    let cls, fromConfig;\n    if (className in customObjects) {\n      [cls, fromConfig] = customObjects[className];\n    } else if (className in _GLOBAL_CUSTOM_OBJECTS) {\n      [cls, fromConfig] = _GLOBAL_CUSTOM_OBJECTS['className'];\n    } else if (className in moduleObjects) {\n      [cls, fromConfig] = moduleObjects[className];\n    }\n    if (cls == null) {\n      throw new ValueError(\n          `Unknown ${printableModuleName}: ${className}. ` +\n          `This may be due to one of the following reasons:\\n` +\n          `1. The ${printableModuleName} is defined in Python, in which ` +\n          `case it needs to be ported to TensorFlow.js or your JavaScript ` +\n          `code.\\n` +\n          `2. The custom ${printableModuleName} is defined in JavaScript, ` +\n          `but is not registered properly with ` +\n          `tf.serialization.registerClass().`);\n      // TODO(cais): Add link to tutorial page on custom layers.\n    }\n    if (fromConfig != null) {\n      // Porting notes: Instead of checking to see whether fromConfig accepts\n      // customObjects, we create a customObjects dictionary and tack it on to\n      // config['config'] as config['config'].customObjects. Objects can use it,\n      // if they want.\n\n      // tslint:disable-next-line:no-any\n      const customObjectsCombined = {} as {[objName: string]: any};\n      for (const key of Object.keys(_GLOBAL_CUSTOM_OBJECTS)) {\n        customObjectsCombined[key] = _GLOBAL_CUSTOM_OBJECTS[key];\n      }\n      for (const key of Object.keys(customObjects)) {\n        customObjectsCombined[key] = customObjects[key];\n      }\n      // Add the customObjects to config\n      const nestedConfig = config['config'] as serialization.ConfigDict;\n      nestedConfig['customObjects'] = customObjectsCombined;\n\n      const backupCustomObjects = {..._GLOBAL_CUSTOM_OBJECTS};\n      for (const key of Object.keys(customObjects)) {\n        _GLOBAL_CUSTOM_OBJECTS[key] = customObjects[key];\n      }\n      convertNDArrayScalarsInConfig(config['config']);\n      const returnObj =\n          fromConfig(cls, config['config'], customObjects, fastWeightInit);\n      _GLOBAL_CUSTOM_OBJECTS = {...backupCustomObjects};\n\n      return returnObj;\n    } else {\n      // Then `cls` may be a function returning a class.\n      // In this case by convention `config` holds\n      // the kwargs of the function.\n      const backupCustomObjects = {..._GLOBAL_CUSTOM_OBJECTS};\n      for (const key of Object.keys(customObjects)) {\n        _GLOBAL_CUSTOM_OBJECTS[key] = customObjects[key];\n      }\n      // In python this is **config['config'], for tfjs-layers we require\n      // classes that use this fall-through construction method to take\n      // a config interface that mimics the expansion of named parameters.\n      const returnObj = new cls(config['config']);\n      _GLOBAL_CUSTOM_OBJECTS = {...backupCustomObjects};\n      return returnObj;\n    }\n  }\n}\n\n/**\n * Compares two numbers for sorting.\n * @param a\n * @param b\n */\nexport function numberCompare(a: number, b: number) {\n  return (a < b) ? -1 : ((a > b) ? 1 : 0);\n}\n\n/**\n * Comparison of two numbers for reverse sorting.\n * @param a\n * @param b\n */\nexport function reverseNumberCompare(a: number, b: number) {\n  return -1 * numberCompare(a, b);\n}\n\n/**\n * Convert a string into the corresponding DType.\n * @param dtype\n * @returns An instance of DType.\n */\nexport function stringToDType(dtype: string): DataType {\n  switch (dtype) {\n    case 'float32':\n      return 'float32';\n    default:\n      throw new ValueError(`Invalid dtype: ${dtype}`);\n  }\n}\n\n/**\n * Test the element-by-element equality of two Arrays of strings.\n * @param xs First array of strings.\n * @param ys Second array of strings.\n * @returns Wether the two arrays are all equal, element by element.\n */\nexport function stringsEqual(xs: string[], ys: string[]): boolean {\n  if (xs == null || ys == null) {\n    return xs === ys;\n  }\n  if (xs.length !== ys.length) {\n    return false;\n  }\n  for (let i = 0; i < xs.length; ++i) {\n    if (xs[i] !== ys[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Get the unique elements of an array.\n * @param xs Array.\n * @returns An Array consisting of the unique elements in `xs`.\n */\nexport function unique<T>(xs: T[]): T[] {\n  if (xs == null) {\n    return xs;\n  }\n  const out: T[] = [];\n  // TODO(cais): Maybe improve performance by sorting.\n  for (const x of xs) {\n    if (out.indexOf(x) === -1) {\n      out.push(x);\n    }\n  }\n  return out;\n}\n\n/**\n * Determine if an Object is empty (i.e., does not have own properties).\n * @param obj Object\n * @returns Whether the Object is empty.\n * @throws ValueError: If object is `null` or `undefined`.\n */\nexport function isObjectEmpty(obj: {}): boolean {\n  if (obj == null) {\n    throw new ValueError(`Invalid value in obj: ${JSON.stringify(obj)}`);\n  }\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Helper function used to build type union/enum run-time checkers.\n * @param values The list of allowed values.\n * @param label A string name for the type\n * @param value The value to test.\n * @throws ValueError: If the value is not in values nor `undefined`/`null`.\n */\nexport function checkStringTypeUnionValue(\n    values: string[], label: string, value: string): void {\n  if (value == null) {\n    return;\n  }\n  if (values.indexOf(value) < 0) {\n    throw new ValueError(`${value} is not a valid ${label}.  Valid values are ${\n        values} or null/undefined.`);\n  }\n}\n\n/**\n * Helper function for verifying the types of inputs.\n *\n * Ensures that the elements of `x` are all of type `expectedType`.\n * Also verifies that the length of `x` is within bounds.\n *\n * @param x Object to test.\n * @param expectedType The string expected type of all of the elements in the\n * Array.\n * @param minLength Return false if x.length is less than this.\n * @param maxLength Return false if x.length is greater than this.\n * @returns true if and only if `x` is an `Array<expectedType>` with\n * length >= `minLength` and <= `maxLength`.\n */\n// tslint:disable:no-any\nexport function checkArrayTypeAndLength(\n    x: any, expectedType: string, minLength = 0,\n    maxLength = Infinity): boolean {\n  assert(minLength >= 0);\n  assert(maxLength >= minLength);\n  return (\n      Array.isArray(x) && x.length >= minLength && x.length <= maxLength &&\n      x.every(e => typeof e === expectedType));\n}\n// tslint:enable:no-any\n\n/**\n * Assert that a value or an array of value are positive integer.\n *\n * @param value The value being asserted on. May be a single number or an array\n *   of numbers.\n * @param name Name of the value, used to make the error message.\n */\nexport function assertPositiveInteger(value: number|number[], name: string) {\n  if (Array.isArray(value)) {\n    util.assert(\n        value.length > 0, () => `${name} is unexpectedly an empty array.`);\n    value.forEach(\n        (v, i) => assertPositiveInteger(v, `element ${i + 1} of ${name}`));\n  } else {\n    util.assert(\n        Number.isInteger(value) && value > 0,\n        () => `Expected ${name} to be a positive integer, but got ` +\n            `${formatAsFriendlyString(value)}.`);\n  }\n}\n\n/**\n * Format a value into a display-friendly, human-readable fashion.\n *\n * - `null` is formatted as `'null'`\n * - Strings are formated with flanking pair of quotes.\n * - Arrays are formatted with flanking pair of square brackets.\n *\n * @param value The value to display.\n * @return Formatted string.\n */\n// tslint:disable-next-line:no-any\nexport function formatAsFriendlyString(value: any): string {\n  if (value === null) {\n    return 'null';\n  } else if (Array.isArray(value)) {\n    return '[' + value.map(v => formatAsFriendlyString(v)).join(',') + ']';\n  } else if (typeof value === 'string') {\n    return `\"${value}\"`;\n  } else {\n    return `${value}`;\n  }\n}\n\n/**\n * Returns a function `f2` (decorator) which wraps the original function\n * `f`. `f2` guarantees that `f` can be called at most once\n * every `waitMs` ms. If `f2` is called more often, it will return\n * the last returned result of `f`.\n *\n * @param f The original function `f` to wrap.\n * @param waitMs The time between two consecutive calls to `f` in ms.\n */\nexport function debounce<T>(\n    f: (...args: Array<{}>) => T, waitMs: number,\n    nowFunc?: Function): (...args: Array<{}>) => T {\n  let lastTime = nowFunc != null ? nowFunc() : util.now();\n  let lastResult: T;\n  const f2 = (...args: Array<{}>) => {\n    const now = nowFunc != null ? nowFunc() : util.now();\n    if (now - lastTime < waitMs) {\n      return lastResult;\n    }\n    lastTime = now;\n    lastResult = f(...args);\n    return lastResult;\n  };\n  return f2;\n}\n\n/**\n * Returns the fusable activation given a layers identifier.\n *\n * @param activationName The layers identifier string.\n * @return The name of the fusable activation.\n */\nexport function mapActivationToFusedKernel(activationName: string):\n    fused.Activation {\n  if (activationName === 'relu') {\n    return 'relu';\n  }\n  if (activationName === 'linear') {\n    return 'linear';\n  }\n  if (activationName === 'elu') {\n    return 'elu';\n  }\n  return null;\n}\n\ntype PossibleValues = Array<Array<boolean|string|number>>;\n\n/**\n * Returns the cartesian product of sets of values.\n * This works the same as itertools.product in Python.\n *\n * Example:\n *\n * filters = [128, 256, 512]\n * paddings = ['same', 'valid']\n *\n * product = [ [128, 'same'], [128, 'valid'], [256, 'same'], [256, 'valid'],\n * [512, 'same'], [512, 'valid']]\n *\n * @param arrayOfValues List/array of values.\n * @return The cartesian product.\n */\nexport function getCartesianProductOfValues(...arrayOfValues: PossibleValues):\n    PossibleValues {\n  assert(arrayOfValues.length > 0, 'arrayOfValues is empty');\n\n  for (const values of arrayOfValues) {\n    assert(Array.isArray(values), 'one of the values is not an array');\n    assert(values.length > 0, 'one of the values is empty');\n  }\n\n  return arrayOfValues.reduce((products, values) => {\n    if (products.length === 0) {\n      return values.map(value => [value]);\n    }\n\n    return values\n        .map(value => {\n          return products.map((prevValue) => [...prevValue, value]);\n        })\n        .reduce((flattenedProduct, unflattenedProduct) => {\n          return flattenedProduct.concat(unflattenedProduct);\n        }, []);\n  }, [] as PossibleValues);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Explicit error types.\n *\n * See the following link for more information about why the code includes\n * calls to setPrototypeOf:\n *\n * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n */\n// tslint:enable\n\n/**\n * Equivalent of Python's AttributeError.\n */\nexport class AttributeError extends Error {\n  constructor(message?: string) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, AttributeError.prototype);\n  }\n}\n\n/**\n * Equivalent of Python's RuntimeError.\n */\nexport class RuntimeError extends Error {\n  constructor(message?: string) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, RuntimeError.prototype);\n  }\n}\n\n/**\n * Equivalent of Python's ValueError.\n */\nexport class ValueError extends Error {\n  constructor(message?: string) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, ValueError.prototype);\n  }\n}\n\n/**\n * Equivalent of Python's NotImplementedError.\n */\nexport class NotImplementedError extends Error {\n  constructor(message?: string) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, NotImplementedError.prototype);\n  }\n}\n\n/**\n * Equivalent of Python's AssertionError.\n */\nexport class AssertionError extends Error {\n  constructor(message?: string) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, AssertionError.prototype);\n  }\n}\n\n/**\n * Equivalent of Python's IndexError.\n */\nexport class IndexError extends Error {\n  constructor(message?: string) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, IndexError.prototype);\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {DataType, eye, linalg, mul, ones, randomUniform, scalar, serialization, Tensor, Tensor2D, tidy, transpose, truncatedNormal, zeros} from '@tensorflow/tfjs-core';\n\nimport * as K from './backend/tfjs_backend';\nimport {checkDataFormat} from './common';\nimport {NotImplementedError, ValueError} from './errors';\nimport {DataFormat, Shape} from './keras_format/common';\nimport {Distribution, FanMode, VALID_DISTRIBUTION_VALUES, VALID_FAN_MODE_VALUES} from './keras_format/initializer_config';\nimport {checkStringTypeUnionValue, deserializeKerasObject, serializeKerasObject} from './utils/generic_utils';\nimport {arrayProd} from './utils/math_utils';\n\nexport function checkFanMode(value?: string): void {\n  checkStringTypeUnionValue(VALID_FAN_MODE_VALUES, 'FanMode', value);\n}\n\nexport function checkDistribution(value?: string): void {\n  checkStringTypeUnionValue(VALID_DISTRIBUTION_VALUES, 'Distribution', value);\n}\n\n/**\n * Initializer base class.\n *\n * @doc {\n *   heading: 'Initializers', subheading: 'Classes', namespace: 'initializers'}\n */\nexport abstract class Initializer extends serialization.Serializable {\n  public fromConfigUsesCustomObjects(): boolean {\n    return false;\n  }\n  /**\n   * Generate an initial value.\n   * @param shape\n   * @param dtype\n   * @return The init value.\n   */\n  abstract apply(shape: Shape, dtype?: DataType): Tensor;\n\n  getConfig(): serialization.ConfigDict {\n    return {};\n  }\n}\n\nexport class Zeros extends Initializer {\n  /** @nocollapse */\n  static className = 'Zeros';\n\n  apply(shape: Shape, dtype?: DataType): Tensor {\n    return zeros(shape, dtype);\n  }\n}\nserialization.registerClass(Zeros);\n\nexport class Ones extends Initializer {\n  /** @nocollapse */\n  static className = 'Ones';\n\n  apply(shape: Shape, dtype?: DataType): Tensor {\n    return ones(shape, dtype);\n  }\n}\nserialization.registerClass(Ones);\n\nexport interface ConstantArgs {\n  /** The value for each element in the variable. */\n  value: number;\n}\n\nexport class Constant extends Initializer {\n  /** @nocollapse */\n  static className = 'Constant';\n  private value: number;\n  constructor(args: ConstantArgs) {\n    super();\n    if (typeof args !== 'object') {\n      throw new ValueError(\n          `Expected argument of type ConstantConfig but got ${args}`);\n    }\n    if (args.value === undefined) {\n      throw new ValueError(`config must have value set but got ${args}`);\n    }\n    this.value = args.value;\n  }\n\n  apply(shape: Shape, dtype?: DataType): Tensor {\n    return tidy(() => mul(scalar(this.value), ones(shape, dtype)));\n  }\n\n  getConfig(): serialization.ConfigDict {\n    return {\n      value: this.value,\n    };\n  }\n}\nserialization.registerClass(Constant);\n\nexport interface RandomUniformArgs {\n  /** Lower bound of the range of random values to generate. */\n  minval?: number;\n  /** Upper bound of the range of random values to generate. */\n  maxval?: number;\n  /** Used to seed the random generator. */\n  seed?: number;\n}\n\nexport class RandomUniform extends Initializer {\n  /** @nocollapse */\n  static className = 'RandomUniform';\n  readonly DEFAULT_MINVAL = -0.05;\n  readonly DEFAULT_MAXVAL = 0.05;\n  private minval: number;\n  private maxval: number;\n  private seed: number;\n\n  constructor(args: RandomUniformArgs) {\n    super();\n    this.minval = args.minval || this.DEFAULT_MINVAL;\n    this.maxval = args.maxval || this.DEFAULT_MAXVAL;\n    this.seed = args.seed;\n  }\n\n  apply(shape: Shape, dtype?: DataType): Tensor {\n    return randomUniform(shape, this.minval, this.maxval, dtype);\n  }\n\n  getConfig(): serialization.ConfigDict {\n    return {minval: this.minval, maxval: this.maxval, seed: this.seed};\n  }\n}\nserialization.registerClass(RandomUniform);\n\nexport interface RandomNormalArgs {\n  /** Mean of the random values to generate. */\n  mean?: number;\n  /** Standard deviation of the random values to generate. */\n  stddev?: number;\n  /** Used to seed the random generator. */\n  seed?: number;\n}\n\nexport class RandomNormal extends Initializer {\n  /** @nocollapse */\n  static className = 'RandomNormal';\n  readonly DEFAULT_MEAN = 0.;\n  readonly DEFAULT_STDDEV = 0.05;\n  private mean: number;\n  private stddev: number;\n  private seed: number;\n\n  constructor(args: RandomNormalArgs) {\n    super();\n    this.mean = args.mean || this.DEFAULT_MEAN;\n    this.stddev = args.stddev || this.DEFAULT_STDDEV;\n    this.seed = args.seed;\n  }\n\n  apply(shape: Shape, dtype?: DataType): Tensor {\n    dtype = dtype || 'float32';\n    if (dtype !== 'float32' && dtype !== 'int32') {\n      throw new NotImplementedError(\n          `randomNormal does not support dType ${dtype}.`);\n    }\n\n    return K.randomNormal(shape, this.mean, this.stddev, dtype, this.seed);\n  }\n\n  getConfig(): serialization.ConfigDict {\n    return {mean: this.mean, stddev: this.stddev, seed: this.seed};\n  }\n}\nserialization.registerClass(RandomNormal);\n\nexport interface TruncatedNormalArgs {\n  /** Mean of the random values to generate. */\n  mean?: number;\n  /** Standard deviation of the random values to generate. */\n  stddev?: number;\n  /** Used to seed the random generator. */\n  seed?: number;\n}\n\nexport class TruncatedNormal extends Initializer {\n  /** @nocollapse */\n  static className = 'TruncatedNormal';\n\n  readonly DEFAULT_MEAN = 0.;\n  readonly DEFAULT_STDDEV = 0.05;\n  private mean: number;\n  private stddev: number;\n  private seed: number;\n\n  constructor(args: TruncatedNormalArgs) {\n    super();\n    this.mean = args.mean || this.DEFAULT_MEAN;\n    this.stddev = args.stddev || this.DEFAULT_STDDEV;\n    this.seed = args.seed;\n  }\n\n  apply(shape: Shape, dtype?: DataType): Tensor {\n    dtype = dtype || 'float32';\n    if (dtype !== 'float32' && dtype !== 'int32') {\n      throw new NotImplementedError(\n          `truncatedNormal does not support dType ${dtype}.`);\n    }\n    return truncatedNormal(shape, this.mean, this.stddev, dtype, this.seed);\n  }\n\n  getConfig(): serialization.ConfigDict {\n    return {mean: this.mean, stddev: this.stddev, seed: this.seed};\n  }\n}\nserialization.registerClass(TruncatedNormal);\n\nexport interface IdentityArgs {\n  /**\n   * Multiplicative factor to apply to the identity matrix.\n   */\n  gain?: number;\n}\n\nexport class Identity extends Initializer {\n  /** @nocollapse */\n  static className = 'Identity';\n  private gain: number;\n  constructor(args: IdentityArgs) {\n    super();\n    this.gain = args.gain != null ? args.gain : 1.0;\n  }\n\n  apply(shape: Shape, dtype?: DataType): Tensor {\n    return tidy(() => {\n      if (shape.length !== 2 || shape[0] !== shape[1]) {\n        throw new ValueError(\n            'Identity matrix initializer can only be used for' +\n            ' 2D square matrices.');\n      } else {\n        return mul(this.gain, eye(shape[0]));\n      }\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    return {gain: this.gain};\n  }\n}\nserialization.registerClass(Identity);\n\n/**\n * Computes the number of input and output units for a weight shape.\n * @param shape Shape of weight.\n * @param dataFormat data format to use for convolution kernels.\n *   Note that all kernels in Keras are standardized on the\n *   CHANNEL_LAST ordering (even when inputs are set to CHANNEL_FIRST).\n * @return An length-2 array: fanIn, fanOut.\n */\nfunction computeFans(\n    shape: Shape, dataFormat: DataFormat = 'channelsLast'): number[] {\n  let fanIn: number;\n  let fanOut: number;\n  checkDataFormat(dataFormat);\n  if (shape.length === 2) {\n    fanIn = shape[0];\n    fanOut = shape[1];\n  } else if ([3, 4, 5].indexOf(shape.length) !== -1) {\n    if (dataFormat === 'channelsFirst') {\n      const receptiveFieldSize = arrayProd(shape, 2);\n      fanIn = shape[1] * receptiveFieldSize;\n      fanOut = shape[0] * receptiveFieldSize;\n    } else if (dataFormat === 'channelsLast') {\n      const receptiveFieldSize = arrayProd(shape, 0, shape.length - 2);\n      fanIn = shape[shape.length - 2] * receptiveFieldSize;\n      fanOut = shape[shape.length - 1] * receptiveFieldSize;\n    }\n  } else {\n    const shapeProd = arrayProd(shape);\n    fanIn = Math.sqrt(shapeProd);\n    fanOut = Math.sqrt(shapeProd);\n  }\n\n  return [fanIn, fanOut];\n}\n\nexport interface VarianceScalingArgs {\n  /** Scaling factor (positive float). */\n  scale?: number;\n\n  /** Fanning mode for inputs and outputs. */\n  mode?: FanMode;\n\n  /** Probabilistic distribution of the values. */\n  distribution?: Distribution;\n\n  /** Random number generator seed. */\n  seed?: number;\n}\n\nexport class VarianceScaling extends Initializer {\n  /** @nocollapse */\n  static className = 'VarianceScaling';\n  private scale: number;\n  private mode: FanMode;\n  private distribution: Distribution;\n  private seed: number;\n\n  /**\n   * Constructor of VarianceScaling.\n   * @throws ValueError for invalid value in scale.\n   */\n  constructor(args: VarianceScalingArgs) {\n    super();\n    if (args.scale < 0.0) {\n      throw new ValueError(\n          `scale must be a positive float. Got: ${args.scale}`);\n    }\n    this.scale = args.scale == null ? 1.0 : args.scale;\n    this.mode = args.mode == null ? 'fanIn' : args.mode;\n    checkFanMode(this.mode);\n    this.distribution =\n        args.distribution == null ? 'normal' : args.distribution;\n    checkDistribution(this.distribution);\n    this.seed = args.seed;\n  }\n\n  apply(shape: Shape, dtype?: DataType): Tensor {\n    const fans = computeFans(shape);\n    const fanIn = fans[0];\n    const fanOut = fans[1];\n    let scale = this.scale;\n    if (this.mode === 'fanIn') {\n      scale /= Math.max(1, fanIn);\n    } else if (this.mode === 'fanOut') {\n      scale /= Math.max(1, fanOut);\n    } else {\n      scale /= Math.max(1, (fanIn + fanOut) / 2);\n    }\n\n    if (this.distribution === 'normal') {\n      const stddev = Math.sqrt(scale);\n      dtype = dtype || 'float32';\n      if (dtype !== 'float32' && dtype !== 'int32') {\n        throw new NotImplementedError(\n            `${this.getClassName()} does not support dType ${dtype}.`);\n      }\n      return truncatedNormal(shape, 0, stddev, dtype, this.seed);\n    } else {\n      const limit = Math.sqrt(3 * scale);\n      return randomUniform(shape, -limit, limit, dtype);\n    }\n  }\n\n  getConfig(): serialization.ConfigDict {\n    return {\n      scale: this.scale,\n      mode: this.mode,\n      distribution: this.distribution,\n      seed: this.seed\n    };\n  }\n}\nserialization.registerClass(VarianceScaling);\n\nexport interface SeedOnlyInitializerArgs {\n  /** Random number generator seed. */\n  seed?: number;\n}\n\nexport class GlorotUniform extends VarianceScaling {\n  /** @nocollapse */\n  static className = 'GlorotUniform';\n\n  /**\n   * Constructor of GlorotUniform\n   * @param scale\n   * @param mode\n   * @param distribution\n   * @param seed\n   */\n  constructor(args?: SeedOnlyInitializerArgs) {\n    super({\n      scale: 1.0,\n      mode: 'fanAvg',\n      distribution: 'uniform',\n      seed: args == null ? null : args.seed\n    });\n  }\n\n  getClassName(): string {\n    // In Python Keras, GlorotUniform is not a class, but a helper method\n    // that creates a VarianceScaling object. Use 'VarianceScaling' as\n    // class name to be compatible with that.\n    return VarianceScaling.className;\n  }\n}\nserialization.registerClass(GlorotUniform);\n\nexport class GlorotNormal extends VarianceScaling {\n  /** @nocollapse */\n  static className = 'GlorotNormal';\n\n  /**\n   * Constructor of GlorotNormal.\n   * @param scale\n   * @param mode\n   * @param distribution\n   * @param seed\n   */\n  constructor(args?: SeedOnlyInitializerArgs) {\n    super({\n      scale: 1.0,\n      mode: 'fanAvg',\n      distribution: 'normal',\n      seed: args == null ? null : args.seed\n    });\n  }\n\n  getClassName(): string {\n    // In Python Keras, GlorotNormal is not a class, but a helper method\n    // that creates a VarianceScaling object. Use 'VarianceScaling' as\n    // class name to be compatible with that.\n    return VarianceScaling.className;\n  }\n}\nserialization.registerClass(GlorotNormal);\n\nexport class HeNormal extends VarianceScaling {\n  /** @nocollapse */\n  static className = 'HeNormal';\n\n  constructor(args?: SeedOnlyInitializerArgs) {\n    super({\n      scale: 2.0,\n      mode: 'fanIn',\n      distribution: 'normal',\n      seed: args == null ? null : args.seed\n    });\n  }\n\n  getClassName(): string {\n    // In Python Keras, HeNormal is not a class, but a helper method\n    // that creates a VarianceScaling object. Use 'VarianceScaling' as\n    // class name to be compatible with that.\n    return VarianceScaling.className;\n  }\n}\nserialization.registerClass(HeNormal);\n\nexport class HeUniform extends VarianceScaling {\n  /** @nocollapse */\n  static className = 'HeUniform';\n\n  constructor(args?: SeedOnlyInitializerArgs) {\n    super({\n      scale: 2.0,\n      mode: 'fanIn',\n      distribution: 'uniform',\n      seed: args == null ? null : args.seed\n    });\n  }\n\n  getClassName(): string {\n    // In Python Keras, HeUniform is not a class, but a helper method\n    // that creates a VarianceScaling object. Use 'VarianceScaling' as\n    // class name to be compatible with that.\n    return VarianceScaling.className;\n  }\n}\nserialization.registerClass(HeUniform);\n\nexport class LeCunNormal extends VarianceScaling {\n  /** @nocollapse */\n  static className = 'LeCunNormal';\n\n  constructor(args?: SeedOnlyInitializerArgs) {\n    super({\n      scale: 1.0,\n      mode: 'fanIn',\n      distribution: 'normal',\n      seed: args == null ? null : args.seed\n    });\n  }\n\n  getClassName(): string {\n    // In Python Keras, LeCunNormal is not a class, but a helper method\n    // that creates a VarianceScaling object. Use 'VarianceScaling' as\n    // class name to be compatible with that.\n    return VarianceScaling.className;\n  }\n}\nserialization.registerClass(LeCunNormal);\n\nexport class LeCunUniform extends VarianceScaling {\n  /** @nocollapse */\n  static className = 'LeCunNormal';\n\n  constructor(args?: SeedOnlyInitializerArgs) {\n    super({\n      scale: 1.0,\n      mode: 'fanIn',\n      distribution: 'uniform',\n      seed: args == null ? null : args.seed\n    });\n  }\n\n  getClassName(): string {\n    // In Python Keras, LeCunUniform is not a class, but a helper method\n    // that creates a VarianceScaling object. Use 'VarianceScaling' as\n    // class name to be compatible with that.\n    return VarianceScaling.className;\n  }\n}\nserialization.registerClass(LeCunUniform);\n\nexport interface OrthogonalArgs extends SeedOnlyInitializerArgs {\n  /**\n   * Multiplicative factor to apply to the orthogonal matrix. Defaults to 1.\n   */\n  gain?: number;\n}\n\nexport class Orthogonal extends Initializer {\n  /** @nocollapse */\n  static className = 'Orthogonal';\n  readonly DEFAULT_GAIN = 1;\n  protected readonly gain: number;\n  protected readonly seed: number;\n\n  constructor(args?: OrthogonalArgs) {\n    super();\n    this.gain = args.gain == null ? this.DEFAULT_GAIN : args.gain;\n    this.seed = args.seed;\n\n    if (this.seed != null) {\n      throw new NotImplementedError(\n          'Random seed is not implemented for Orthogonal Initializer yet.');\n    }\n  }\n\n  apply(shape: Shape, dtype?: DataType): Tensor {\n    return tidy(() => {\n      if (shape.length < 2) {\n        throw new NotImplementedError('Shape must be at least 2D.');\n      }\n      if (shape[0] * shape[1] > 2000) {\n        console.warn(\n            `Orthogonal initializer is being called on a matrix with more ` +\n            `than 2000 (${shape[0] * shape[1]}) elements: ` +\n            `Slowness may result.`);\n      }\n\n      // TODO(cais): Add seed support.\n      const normalizedShape =\n          shape[0] > shape[1] ? [shape[1], shape[0]] : shape;\n      const a = K.randomNormal(normalizedShape, 0, 1, 'float32') as Tensor2D;\n      let q = linalg.gramSchmidt(a) as Tensor2D;\n      if (shape[0] > shape[1]) {\n        q = transpose(q);\n      }\n      return mul(this.gain, q);\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    return {\n      gain: this.gain,\n      seed: this.seed,\n    };\n  }\n}\nserialization.registerClass(Orthogonal);\n\n/** @docinline */\nexport type InitializerIdentifier =\n    'constant'|'glorotNormal'|'glorotUniform'|'heNormal'|'heUniform'|'identity'|\n    'leCunNormal'|'leCunUniform'|'ones'|'orthogonal'|'randomNormal'|\n    'randomUniform'|'truncatedNormal'|'varianceScaling'|'zeros'|string;\n\n// Maps the JavaScript-like identifier keys to the corresponding registry\n// symbols.\nexport const INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP:\n    {[identifier in InitializerIdentifier]: string} = {\n      'constant': 'Constant',\n      'glorotNormal': 'GlorotNormal',\n      'glorotUniform': 'GlorotUniform',\n      'heNormal': 'HeNormal',\n      'heUniform': 'HeUniform',\n      'identity': 'Identity',\n      'leCunNormal': 'LeCunNormal',\n      'leCunUniform': 'LeCunUniform',\n      'ones': 'Ones',\n      'orthogonal': 'Orthogonal',\n      'randomNormal': 'RandomNormal',\n      'randomUniform': 'RandomUniform',\n      'truncatedNormal': 'TruncatedNormal',\n      'varianceScaling': 'VarianceScaling',\n      'zeros': 'Zeros'\n    };\n\nfunction deserializeInitializer(\n    config: serialization.ConfigDict,\n    customObjects: serialization.ConfigDict = {}): Initializer {\n  return deserializeKerasObject(\n      config, serialization.SerializationMap.getMap().classNameMap,\n      customObjects, 'initializer');\n}\n\nexport function serializeInitializer(initializer: Initializer):\n    serialization.ConfigDictValue {\n  return serializeKerasObject(initializer);\n}\n\nexport function getInitializer(identifier: InitializerIdentifier|Initializer|\n                               serialization.ConfigDict): Initializer {\n  if (typeof identifier === 'string') {\n    const className = identifier in INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP ?\n        INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] :\n        identifier;\n    /* We have four 'helper' classes for common initializers that\n    all get serialized as 'VarianceScaling' and shouldn't go through\n    the deserializeInitializer pathway. */\n    if (className === 'GlorotNormal') {\n      return new GlorotNormal();\n    } else if (className === 'GlorotUniform') {\n      return new GlorotUniform();\n    } else if (className === 'HeNormal') {\n      return new HeNormal();\n    } else if (className === 'HeUniform') {\n      return new HeUniform();\n    } else if (className === 'LeCunNormal') {\n      return new LeCunNormal();\n    } else if (className === 'LeCunUniform') {\n      return new LeCunUniform();\n    } else {\n      const config: serialization.ConfigDict = {};\n      config['className'] = className;\n      config['config'] = {};\n      return deserializeInitializer(config);\n    }\n  } else if (identifier instanceof Initializer) {\n    return identifier;\n  } else {\n    return deserializeInitializer(identifier);\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * deeplearn.js backend.\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {onesLike as coreOnesLike, scalar, Tensor, Tensor1D, tensor1d, Tensor2D, Tensor3D, Tensor4D, Tensor5D, tidy, where, zerosLike as coreZerosLike} from '@tensorflow/tfjs-core';\nimport {checkDataFormat} from '../common';\nimport {NotImplementedError, ValueError} from '../errors';\nimport {DataFormat, Shape} from '../keras_format/common';\nimport {HasShape} from '../types';\nimport * as math_utils from '../utils/math_utils';\n\nimport {imageDataFormat} from './common';\n\n// tslint:enable\n\n/* Setting and getting backend from deeplearn.js. */\n\n// Default deeplearn.js backend is WebGL (GPU).\nlet backend: 'cpu'|'webgl' = 'webgl';\n\nexport function setBackend(requestedBackend: 'cpu'|'webgl') {\n  tfc.setBackend(requestedBackend);\n  backend = requestedBackend;\n}\n\nexport function getBackend(): 'cpu'|'webgl' {\n  return backend;\n}\n\n/**\n * Indicates whether the backend is operating symbolically.\n *\n * This function will be used to determine how to interpret user code. If\n * it returns true, calls to the backend construct a symbolic graph; if\n * it returns false, calls to the backend execute immediately.\n */\nexport function isBackendSymbolic(): boolean {\n  return false;\n}\n\n/**\n * Get the number of elements in a Tensor.\n * @param x The Tensor.\n * @return Number of elements in `x`.\n */\nexport function countParams(x: HasShape): number {\n  const shape = x.shape;\n  if (shape.length > 0) {\n    return shape.reduce((a: number, b: number) => a * b);\n  } else {\n    // Scalar.\n    return 1;\n  }\n}\n\n/**\n * Casts a tensor to a different dtype and returns it.\n * @param x Input tensor.\n * @param dtype String: 'float32'|'int32'|'bool'.\n * @returns Tensor of the specified `dtype`.\n */\nexport function cast(x: Tensor, dtype: tfc.DataType): Tensor {\n  return tfc.cast(x, dtype);\n}\n\n/**\n * Adds a 1-sized dimension at index \"axis\".\n * @param x Input tensor.\n * @param axis Position where to add the new axis.\n * @returns Result of the dimension expansion.\n */\nexport function expandDims(x: Tensor, axis = -1): Tensor {\n  const outShape = x.shape.slice();\n  if (axis < 0) {\n    axis = outShape.length + axis + 1;\n  }\n  outShape.splice(axis, 0, 1);\n  return tfc.reshape(x, outShape);\n}\n\n/**\n * Repeats a 2D tensor.\n *\n * If `x` has shape `[samples, dim]` and `n` is 2, for example, the output\n * will have shape `[samples, 2, dim]`.\n *\n * @param x Input tensor.\n * @param n Integer, number of times to repeat.\n * @returns The result of the repeat operation.\n * @throws ValueError: If input tensor is not 2D.\n */\nexport function repeat(x: Tensor, n: number): Tensor {\n  return tidy(() => {\n    if (x.shape.length !== 2) {\n      throw new ValueError(\n          `repeat() expects a rank-2 tensor, but received a ` +\n          `rank-${x.shape.length} tensor.`);\n    }\n    const y = expandDims(x, 1);\n    return tile(y, [1, n, 1]);\n  });\n}\n\n/**\n * Flatten a Tensor into 1D.\n * @param x Input tensor.\n * @return The result of the flattening `x`.\n */\nexport function flatten(x: Tensor): Tensor {\n  const newShape = [math_utils.arrayProd(x.shape)];\n  return tfc.reshape(x, newShape);\n}\n\n/**\n * Turn a nD tensor into a 2D tensor with same 0th dimension.\n * In other words, it flattens each data samples of a batch.\n *\n * @param x The tensor to flatten. The rank of this tensor is required to be 2\n *   or higher.\n * @return The result of the flattening.\n */\nexport function batchFlatten(x: Tensor): Tensor {\n  if (x.rank <= 1) {\n    throw new ValueError(\n        `batchFlatten requires a minimum rank of 2. Got rank: ${x.rank}.`);\n  }\n  const newShape = [x.shape[0], math_utils.arrayProd(x.shape, 1)];\n  return tfc.reshape(x, newShape);\n}\n\n/**\n * Do slicing along the first axis.\n * @param array input `tf.Tensor`.\n * @param start starting index, inclusive.\n * @param size size of the slice along the first axis.\n * @returns result of the slicing.\n * @throws ValueError: If `array` is of an unsupported subtype of `tf.Tensor`.\n */\nexport function sliceAlongFirstAxis(\n    array: Tensor, start: number, size: number): Tensor {\n  return tidy(() => {\n    switch (array.rank) {\n      case 1:\n        return tfc.slice1d(array as Tensor1D, start, size);\n      case 2:\n        return tfc.slice2d(\n            array as Tensor2D, [start, 0], [size, array.shape[1]]);\n      case 3:\n        return tfc.slice3d(\n            array as Tensor3D, [start, 0, 0],\n            [size, array.shape[1], array.shape[2]]);\n      case 4:\n        return tfc.slice4d(\n            array as Tensor4D, [start, 0, 0, 0],\n            [size, array.shape[1], array.shape[2], array.shape[3]]);\n      case 5:\n        return tfc.slice(array as Tensor5D, [start, 0, 0, 0, 0], [\n          size, array.shape[1], array.shape[2], array.shape[3], array.shape[4]\n        ]);\n      case 6:\n        return tfc.slice(array, [start, 0, 0, 0, 0, 0], [\n          size, array.shape[1], array.shape[2], array.shape[3], array.shape[4],\n          array.shape[5]\n        ]);\n      default:\n        throw new ValueError(\n            `sliceAlongFirstAxis() received an unsupported tensor rank: ` +\n            `${array.rank}`);\n    }\n  });\n}\n\n/**\n * Do slicing along the last axis.\n * @param array input `tf.Tensor`.\n * @param start starting index, inclusive.\n * @param size size of the slice along the last axis.\n * @returns result of the slicing.\n * @throws ValueError: If `array` is of an unsupported subtype of `tf.Tensor`.\n */\nexport function sliceAlongLastAxis(\n    array: Tensor, start: number, size: number): Tensor {\n  return tidy(() => {\n    switch (array.rank) {\n      case 1:\n        return tfc.slice1d(array as Tensor1D, start, size);\n      case 2:\n        return tfc.slice2d(\n            array as Tensor2D, [0, start], [array.shape[0], size]);\n      case 3:\n        return tfc.slice3d(\n            array as Tensor3D, [0, 0, start],\n            [array.shape[0], array.shape[1], size]);\n      case 4:\n        return tfc.slice4d(\n            array as Tensor4D, [0, 0, 0, start],\n            [array.shape[0], array.shape[1], array.shape[2], size]);\n      default:\n        throw new ValueError(\n            `sliceAlongLastAxis() received an unsupported tensor rank: ` +\n            `${array.rank}`);\n    }\n  });\n}\n\n/**\n * Do slicing along the sepcified axis.\n * @param array input `tf.Tensor`.\n * @param start starting index, inclusive.\n * @param size of the slice along the chosen axis.\n * @param choose an axis.\n * @returns result of the slicing.\n * @throws ValueError: If `array` is of an unsupported subtype of `tf.Tensor`.\n */\nexport function sliceAlongAxis(\n    array: Tensor, start: number, size: number, axis: number): Tensor {\n  return tidy(() => {\n    switch (array.rank) {\n      case 1:\n        return tfc.slice1d(array as Tensor1D, start, size);\n      case 2:\n        switch (axis) {\n          case 1:\n            return sliceAlongFirstAxis(array, start, size);\n          case 2:\n            return sliceAlongLastAxis(array, start, size);\n          default:\n            throw new ValueError(\n                `The axis is not within the rank of the tensor ` +\n                `${axis}`);\n        }\n      case 3:\n        switch (axis) {\n          case 1:\n            return sliceAlongFirstAxis(array, start, size);\n          case 2:\n            return tfc.slice3d(\n                array as Tensor3D, [0, start, 0],\n                [array.shape[0], size, array.shape[2]]);\n          case 3:\n            return sliceAlongLastAxis(array, start, size);\n          default:\n            throw new ValueError(\n                `The axis is not within the rank of the tensor ` +\n                `${axis}`);\n        }\n      case 4:\n        switch (axis) {\n          case 1:\n            return sliceAlongFirstAxis(array, start, size);\n          case 2:\n            return tfc.slice4d(\n                array as Tensor4D, [0, start, 0, 0],\n                [array.shape[0], size, array.shape[2], array.shape[3]]);\n          case 3:\n            return tfc.slice4d(\n                array as Tensor4D, [0, 0, start, 0],\n                [array.shape[0], array.shape[1], size, array.shape[3]]);\n          case 4:\n            return sliceAlongLastAxis(array, start, size);\n          default:\n            throw new ValueError(\n                `The axis is not within the rank of the tensor ` +\n                `${axis}`);\n        }\n      default:\n        throw new ValueError(\n            `sliceAlongLastAxis() received an unsupported tensor rank: ` +\n            `${array.rank}`);\n    }\n  });\n}\n\n/**\n * Concatenates a list of tensors alongside the specified axis.\n * @param tensors `Array` of tensors to concatenate.\n * @param axis Concatenation axis.\n * @returns The result of the concatenation.\n */\nexport function concatenate(tensors: Tensor[], axis = -1): Tensor {\n  let rank: number;\n  if (axis < 0) {\n    rank = tensors[0].rank;\n    if (rank !== 0) {\n      axis = rank;\n    } else {\n      axis = 0;\n    }\n  }\n  if (axis === tensors[0].rank) {\n    // Porting Note: This is necessary because tfc.concat() requires axis to be\n    //   in the interval [-rank, rank).\n    axis = -1;\n  }\n  // Porting Note: Sparse concat is not supported yet.\n  return tfc.concat(tensors, axis);\n}\n\n/**\n * Concatenate two arrays along the first dimension.\n * @param a The 1st `tf.Tensor` to concatenate.\n * @param b The 2nd `tf.Tensor` to concatenate.\n * @returns Result of the concatenation.\n * @throws ValueError: If `a` is of an unsupported subtype of `tf.Tensor`.\n */\nexport function concatAlongFirstAxis(a: Tensor, b: Tensor): Tensor {\n  switch (a.rank) {\n    case 1:\n      return tfc.concat1d([a as Tensor1D, b as Tensor1D]);\n    case 2:\n      return tfc.concat2d([a as Tensor2D, b as Tensor2D], 0);\n    case 3:\n      return tfc.concat3d([a as Tensor3D, b as Tensor3D], 0);\n    case 4:\n      return tfc.concat4d([a as Tensor4D, b as Tensor4D], 0);\n    default:\n      throw new ValueError(\n          `concatAlongFirstAxis() received an unsupported ` +\n          `tensor rank: ${a.rank}`);\n  }\n}\n\n/**\n * Creates a tensor by tiling `x` by `n`.\n * @param x A tensor.\n * @param n An Array of integers or a single integer. If an Array, the length\n *   must be the same as the number of dimensions in `x`. If a single integer,\n *   it will be treated as an Array of length 1.\n */\nexport function tile(x: Tensor, n: number|number[]): Tensor {\n  if (!Array.isArray(n)) {\n    n = [n];\n  }\n  if (x.rank !== n.length) {\n    throw new ValueError(\n        `The length of input n (${n.length}) does not match ` +\n        `the number of dimensions in input x (${x.rank})`);\n  }\n  return tfc.tile(x, n);\n}\n\n/* Creation of random tensors. */\n\n/**\n * Get a tensor with normal distribution of values.\n *\n * @param shape Shape of the tensor.\n * @param mean mean value of the normal distribution.\n * @param stddev standard deviation of the normal distribution.\n * @param dtype\n * @param seed\n * @return The normal tensor.\n */\nexport function randomNormal(\n    shape: Shape, mean = 0.0, stddev = 1.0, dtype?: 'float32'|'int32',\n    seed?: number): Tensor {\n  return tfc.randomNormal(shape, mean, stddev, dtype, seed);\n}\n\n/* Linear Algebra */\n\n/**\n * Multiply two tensors and returns the result as a tensor.\n *\n * For 2D tensors, this is equivalent to matrix multiplication (matMul).\n * For tensors of higher ranks, it follows the Theano behavior,\n * (e.g. `(2, 3) * (4, 3, 5) -> (2, 4, 5)`).  From the Theano documentation:\n *\n * For N dimensions it is a sum product over the last axis of x and the\n * second-to-last of y:\n *\n * @param a A tensor of at least rank 2.\n * @param b A tensor of at least rank 2.\n * @param activation (optional) A string identifying the activation\n *   function.\n * @return Result of the dot operation.\n */\nexport function dot(\n    a: Tensor, b: Tensor, activation?: tfc.fused.Activation,\n    bias?: Tensor): Tensor {\n  if ((a.rank < 2) || (b.rank < 2)) {\n    throw new NotImplementedError(\n        `dot requires both inputs to be rank >= 2` +\n        ` but got x shape = ${a.shape} and y shape = ${b.shape}`);\n  }\n  if (b.rank >= 3) {\n    const xLastDim = a.shape.slice(-1)[0];\n    const ySecondLastDim = b.shape.slice(-2)[0];\n    if (xLastDim !== ySecondLastDim) {\n      throw new NotImplementedError(\n          `If rank y >= 3, then the second last dim` +\n          ` of y must equal the last dim of x but got x shape = ${\n              a.shape} and ` +\n          ` y shape = ${b.shape}`);\n    }\n  }\n  // Handle basic 2D x 2D case.\n  if ((a.rank === 2) && (b.rank === 2)) {\n    const transposeA = false;\n    const transposeB = false;\n    // tfc.fused.matMul only fuses certain activation functions. Unsupported\n    // activation functions are treated as 'linear' activations, which is\n    // equivalent to a no-op.\n    return tfc.fused.matMul({\n      a,\n      b: b as Tensor2D,\n      transposeA,\n      transposeB,\n      bias: bias ? reshapeBias(a.rank, bias, imageDataFormat()) : null,\n      activation\n    });\n  } else {\n    // Reshape x into the analogous 2D Tensor.\n    const aFirstDims = a.shape.slice();  // Holds all but the last dim of x.\n    const aLastDim = aFirstDims.pop();\n    a = tfc.reshape(a, [-1, aLastDim]);\n\n    // Reshape y into the analogous 2D Tensor, and keep track of the\n    // required dimensions to reproduce the output shape.\n    const bShape = b.shape.slice();\n    const bLastDim = bShape.pop();\n    const ySecondLastDim = bShape.pop();\n    const yOtherDims = [...bShape, bLastDim];\n    // permutation should be like [r-2, 0, 1, 2, ... r-4, r-3, r-1]\n    // where r is the rank of y.\n    const perm = Array.from({length: b.rank}, (_, i) => {\n      if (i === 0) {\n        return b.rank - 2;\n      } else if (i <= b.rank - 2) {\n        return i - 1;\n      }\n      return i;\n    });\n    b = tfc.reshape(tfc.transpose(b, perm), [ySecondLastDim, -1]);\n\n    // Multiply x and y as 2D Tensors, and then reshape back to original.\n    const outputShape = [...aFirstDims, ...yOtherDims];\n    const transposeA = false;\n    const transposeB = false;\n    return tfc.reshape(\n        tfc.fused.matMul({\n          a,\n          b,\n          transposeA,\n          transposeB,\n          bias: bias ? reshapeBias(a.rank, bias, imageDataFormat()) : null,\n          activation\n        }),\n        outputShape);\n  }\n}\n\n/**\n * Compute the sign Tensor of an input Tensor.\n *\n * Elements of the input `tf.Tensor` that are === 0 are mapped to 0.\n * Elements of the input `tf.Tensor` that are > 0 are mapped to 1.\n * Elements of the input `tf.Tensor` that are < 0 are mapped to -1.\n *\n * @param x Input `tf.Tensor`.\n * @return The sign `tf.Tensor`.\n */\nexport function sign(x: Tensor): Tensor {\n  // TODO(cais): Move to the core.\n  return tidy(() => {\n    const zerosLikeX = coreZerosLike(x);\n    const onesLikeX = coreOnesLike(x);\n    return where(\n        tfc.equal(x, zerosLikeX), zerosLikeX,\n        where(\n            tfc.greater(x, coreZerosLike(x)), onesLikeX,\n            tfc.mul(-1, onesLikeX)));\n  });\n}\n\n/**\n * Computes the one-hot representation of an integer tensor.\n * @param indices nD integer tensor of shape\n *   `(batch_size, dim1, dim2, ... dim(n-1))`\n * @param numClasses Integer, number of classes to consider.\n * @returns (n + 1)D one hot representation of the input\n *   with shape `(batch_size, dim1, dim2, ... dim(n-1), num_classes)`\n */\nexport function oneHot(indices: Tensor, numClasses: number): Tensor {\n  return tidy(() => {\n    if (indices.rank !== 1) {\n      throw new Error(\n          'Only 1D one-hot tensors are supported in the ' +\n          'deeplearn backend, at present.');\n    }\n    indices = tfc.cast(indices, 'int32');\n    return tfc.cast(tfc.oneHot(indices as Tensor1D, numClasses), 'float32');\n  });\n}\n\n/* Elementary math functions. */\n\n/**\n * Retrieves the elements of indices `indices` in the tensor `reference`.\n * @param reference A tensor.\n * @param indices An integer tensor of indices or an `Array` of integers.\n * @param axis Axis along which to perform the gather operation.\n * @returns The result of the gathering as a tensor.\n */\nexport function gather(\n    reference: Tensor, indices: number[]|Tensor1D, axis?: number): Tensor {\n  return tidy(() => {\n    if (Array.isArray(indices)) {\n      indices = tensor1d(indices, 'int32');\n    } else {\n      indices = tfc.cast(indices, 'int32');\n    }\n    return tfc.gather(reference, indices, axis);\n  });\n}\n\n/**\n * Element-wise square.\n * @param x Input tensor.\n * @return element-wise x^2\n */\nexport function square(x: Tensor): Tensor {\n  return tfc.mul(x, x);\n}\n\n/**\n * Element-wise exponentiation.\n *\n * Porting Note: In PyKeras, `a` (the exponent) is a Python integer, which\n *   takes advatnage of the backend's (e.g., TensorFlow's) automatic\n * conversion to tensor. Here we allow `a` to be either a number or a tensor.\n *\n * @param x The base tensor.\n * @param a The exponent, tensor or number. If a number, it is rounded to the\n *   nearest integer and converted to a tensor.\n * @returns A tensor of the same shape as `x`.\n */\nexport function pow(x: Tensor, a: Tensor|number): Tensor {\n  return tidy(() => {\n    if (typeof (a) === 'number') {\n      a = scalar(Math.round(a), 'int32');\n    }\n    if (a.dtype !== 'int32') {\n      throw new NotImplementedError(\n          `Non-int32 dtype (${a.dtype}) is not supported by pow() yet`);\n    }\n    return tfc.pow(x, a);\n  });\n}\n\n/**\n * Reshapes bias tensor according to rank of x.\n */\nfunction reshapeBias(xRank: number, bias: Tensor, dataFormat: string) {\n  const biasShape = bias.shape;\n\n  if (bias.rank !== 1 && bias.rank !== xRank) {\n    throw new ValueError(\n        `Unexpected bias dimensions: ${bias.rank}` +\n        `; expected it to be 1 or ${xRank}`);\n  }\n\n  if (xRank === 5) {\n    if (dataFormat === 'channelsFirst') {\n      if (biasShape.length === 1) {\n        return tfc.reshape(bias, [1, biasShape[0], 1, 1, 1]);\n      } else {\n        return tfc.reshape(\n            bias, [1, biasShape[3], biasShape[0], biasShape[1], biasShape[2]]);\n      }\n    } else if (dataFormat === 'channelsLast') {\n      if (biasShape.length === 1) {\n        return tfc.reshape(bias, [1, 1, 1, 1, biasShape[0]]);\n      } else {\n        return tfc.reshape(bias, [1].concat(biasShape));\n      }\n    }\n  } else if (xRank === 4) {\n    if (dataFormat === 'channelsFirst') {\n      if (biasShape.length === 1) {\n        return tfc.reshape(bias, [1, biasShape[0], 1, 1]);\n      } else {\n        return tfc.reshape(bias, [1, biasShape[2], biasShape[0], biasShape[1]]);\n      }\n    } else if (dataFormat === 'channelsLast') {\n      if (biasShape.length === 1) {\n        return tfc.reshape(bias, [1, 1, 1, biasShape[0]]);\n      } else {\n        return tfc.reshape(bias, [1].concat(biasShape));\n      }\n    }\n  } else if (xRank === 3) {\n    if (dataFormat === 'channelsFirst') {\n      if (biasShape.length === 1) {\n        return tfc.reshape(bias, [1, biasShape[0], 1]);\n      } else {\n        return tfc.reshape(bias, [1, biasShape[1], biasShape[0]]);\n      }\n    } else if (dataFormat === 'channelsLast') {\n      if (biasShape.length === 1) {\n        return tfc.reshape(bias, [1, 1, biasShape[0]]);\n      } else {\n        return tfc.reshape(bias, [1].concat(biasShape));\n      }\n    }\n  } else if (xRank < 3) {\n    return bias;\n  }\n  throw new ValueError(`Unsupported input rank by biasAdd: ${bias.rank}`);\n}\n\n/* Neural-network operations. */\n\n/**\n * Add a bias to a tensor.\n *\n * @param x The tensor to add the bias to.\n * @param bias The bias to add to `x`. Must be 1D or the same rank as `x`.\n * @return Result of the bias adding.\n * @throws ValueError: If the rank of `bias` is incorrect.\n */\nexport function biasAdd(\n    x: Tensor, bias: Tensor, dataFormat?: DataFormat): Tensor {\n  return tidy(() => {\n    if (dataFormat == null) {\n      dataFormat = imageDataFormat();\n    }\n    checkDataFormat(dataFormat);\n\n    return tfc.add(x, reshapeBias(x.rank, bias, dataFormat));\n  });\n}\n\n/**\n * Exponential linear unit (ELU).\n * @param x A tensor or variable to compute the activation function for.\n * @param alpha: A scalar, a scaling factor for the negative section.\n * @return Output of the ELU operation.\n */\nexport function elu(x: Tensor, alpha = 1): Tensor {\n  // TODO(cais): Add support for alpha values other than 1.\n  if (alpha !== 1) {\n    throw new NotImplementedError(\n        `Support for alpha values other than 1 (${alpha}) is not implemented ` +\n        `yet.`);\n  }\n  return tfc.elu(x);\n}\n\n/**\n * Softsign of a tensor.\n *\n * Defined as x / (abs(x) + 1), element-wise.\n *\n * @param x: Input.\n * @returns Output.\n */\nexport function softsign(x: Tensor): Tensor {\n  return tidy(() => tfc.div(x, tfc.add(tfc.abs(x), 1)));\n}\n\n/**\n * Sets entries in `x` to zero at random, while scaling the entire tensor.\n *\n * @param x input tensor.\n * @param level fraction of the entries in the tensor that will be set to 0.\n * @param noiseShape shape of randomly generated keep/drop flags, must be\n *   broadcastable to the shape of `x`. Optional.\n * @param seed random seed to ensure determinism. Optional.\n * @returns Result of the dropout operation.\n */\nexport function dropout(\n    x: Tensor, level: number, noiseShape?: number[], seed?: number): Tensor {\n  return tidy(() => tfc.dropout(x, level, noiseShape, seed));\n}\n\n/**\n * Element-wise, segment-wise linear approximation of sigmoid.\n *\n * Returns `0.` if `x < -2.5`, `1.` if `x > 2.5`.\n * In `-2.5 <= x <= 2.5`, returns `0.2 * x + 0.5`.\n *\n * @param x Input tensor.\n * @returns Output tensor.\n */\nexport function hardSigmoid(x: Tensor): Tensor {\n  return tidy(() => {\n    const y = tfc.add(.5, tfc.mul(.2, x));\n    return tfc.clipByValue(y, 0, 1);\n  });\n}\n\n/**\n * Invoke `x` in the training phase, and `alt` otherwise.\n *\n * Porting Note: We do not create placeholder tensors for the `training`\n * boolean flag here, because there is no such thing in the TF.js imperative\n * backend.\n *\n * @param x The function to invoke iff `training` is `true`.\n * @param alt The function to invoke iff `training` is `false`.\n * @param training Boolean flag for whether training phase is active.\n * @returns The return value of `x()` if `training` is `true`, or the return\n *   value of `alt()` if `training` is `false`.\n */\nexport function inTrainPhase<T>(x: () => T, alt: () => T, training = false): T {\n  return training ? x() : alt();\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Common functions for TensorFlow.js Layers.\n */\nimport {VALID_DATA_FORMAT_VALUES, VALID_INTERPOLATION_FORMAT_VALUES, VALID_PADDING_MODE_VALUES, VALID_POOL_MODE_VALUES} from './keras_format/common';\nimport {checkStringTypeUnionValue} from './utils/generic_utils';\n\n// A map from the requested scoped name of a Tensor to the number of Tensors\n// wanting that name so far.  This allows enforcing name uniqueness by appending\n// an incrementing index, e.g. scope/name, scope/name_1, scope/name_2, etc.\nconst nameMap: Map<string, number> = new Map<string, number>();\n\nexport function checkDataFormat(value?: string): void {\n  checkStringTypeUnionValue(VALID_DATA_FORMAT_VALUES, 'DataFormat', value);\n}\n\nexport function checkInterpolationFormat(value?: string): void {\n  checkStringTypeUnionValue(\n      VALID_INTERPOLATION_FORMAT_VALUES, 'InterpolationFormat', value);\n}\n\nexport function checkPaddingMode(value?: string): void {\n  checkStringTypeUnionValue(VALID_PADDING_MODE_VALUES, 'PaddingMode', value);\n}\n\nexport function checkPoolMode(value?: string): void {\n  checkStringTypeUnionValue(VALID_POOL_MODE_VALUES, 'PoolMode', value);\n}\n\nconst _nameScopeStack: string[] = [];\nconst _nameScopeDivider = '/';\n\n/**\n * Enter namescope, which can be nested.\n */\nexport function nameScope<T>(name: string, fn: () => T): T {\n  _nameScopeStack.push(name);\n  try {\n    const val: T = fn();\n    _nameScopeStack.pop();\n    return val;\n  } catch (e) {\n    _nameScopeStack.pop();\n    throw e;\n  }\n}\n\n/**\n * Get the current namescope as a flat, concatenated string.\n */\nfunction currentNameScopePrefix(): string {\n  if (_nameScopeStack.length === 0) {\n    return '';\n  } else {\n    return _nameScopeStack.join(_nameScopeDivider) + _nameScopeDivider;\n  }\n}\n\n/**\n * Get the name a Tensor (or Variable) would have if not uniqueified.\n * @param tensorName\n * @return Scoped name string.\n */\nexport function getScopedTensorName(tensorName: string): string {\n  if (!isValidTensorName(tensorName)) {\n    throw new Error('Not a valid tensor name: \\'' + tensorName + '\\'');\n  }\n  return currentNameScopePrefix() + tensorName;\n}\n\n/**\n * Get unique names for Tensors and Variables.\n * @param scopedName The fully-qualified name of the Tensor, i.e. as produced by\n *  `getScopedTensorName()`.\n * @return A unique version of the given fully scoped name.\n *   If this is the first time that the scoped name is seen in this session,\n *   then the given `scopedName` is returned unaltered.  If the same name is\n *   seen again (producing a collision), an incrementing suffix is added to the\n *   end of the name, so it takes the form 'scope/name_1', 'scope/name_2', etc.\n */\nexport function getUniqueTensorName(scopedName: string): string {\n  if (!isValidTensorName(scopedName)) {\n    throw new Error('Not a valid tensor name: \\'' + scopedName + '\\'');\n  }\n  if (!nameMap.has(scopedName)) {\n    nameMap.set(scopedName, 0);\n  }\n  const index = nameMap.get(scopedName);\n  nameMap.set(scopedName, nameMap.get(scopedName) + 1);\n\n  if (index > 0) {\n    const result = `${scopedName}_${index}`;\n    // Mark the composed name as used in case someone wants\n    // to call getUniqueTensorName(\"name_1\").\n    nameMap.set(result, 1);\n    return result;\n  } else {\n    return scopedName;\n  }\n}\n\nconst tensorNameRegex = new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\\._\\/]*$/);\n\n/**\n * Determine whether a string is a valid tensor name.\n * @param name\n * @returns A Boolean indicating whether `name` is a valid tensor name.\n */\nexport function isValidTensorName(name: string): boolean {\n  return !!name.match(tensorNameRegex);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n// TODO(huan): add layer-specific input shape types (see: https://github.com/tensorflow/tfjs-layers/pull/492)\n/** @docalias (null | number)[] */\nexport type Shape = Array<null | number>;\n\n// The tfjs-core version of DataType must stay synced with this.\nexport type DataType = 'float32'|'int32'|'bool'|'complex64'|'string';\n\n// TODO(soergel): Move the CamelCase versions back out of keras_format\n// e.g. to src/common.ts.  Maybe even duplicate *all* of these to be pedantic?\n/** @docinline */\nexport type DataFormat = 'channelsFirst'|'channelsLast';\nexport const VALID_DATA_FORMAT_VALUES = ['channelsFirst', 'channelsLast'];\n\nexport type InterpolationFormat = 'nearest'|'bilinear';\nexport const VALID_INTERPOLATION_FORMAT_VALUES = ['nearest', 'bilinear'];\n// These constants have a snake vs. camel distinction.\nexport type DataFormatSerialization = 'channels_first'|'channels_last';\n\n/** @docinline */\nexport type PaddingMode = 'valid'|'same'|'causal';\nexport const VALID_PADDING_MODE_VALUES = ['valid', 'same', 'causal'];\n\n/** @docinline */\nexport type PoolMode = 'max'|'avg';\nexport const VALID_POOL_MODE_VALUES = ['max', 'avg'];\n\n/** @docinline */\nexport type BidirectionalMergeMode = 'sum'|'mul'|'concat'|'ave';\nexport const VALID_BIDIRECTIONAL_MERGE_MODES = ['sum', 'mul', 'concat', 'ave'];\n\n/** @docinline */\nexport type SampleWeightMode = 'temporal';\nexport const VALID_SAMPLE_WEIGHT_MODES = ['temporal'];\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Math utility functions.\n *\n * This file contains some frequently used math function that operates on\n * number[] or Float32Array and return a number. Many of these functions are\n * not-so-thick wrappers around TF.js Core functions. But they offer the\n * convenience of\n * 1) not having to convert the inputs into Tensors,\n * 2) not having to convert the returned Tensors to numbers.\n */\n\nimport {ValueError} from '../errors';\n\nexport type ArrayTypes = Uint8Array|Int32Array|Float32Array;\n\n/**\n * Determine if a number is an integer.\n */\nexport function isInteger(x: number): boolean {\n  return x === parseInt(x.toString(), 10);\n}\n\n/**\n * Calculate the product of an array of numbers.\n * @param array The array to calculate the product over.\n * @param begin Beginning index, inclusive.\n * @param end Ending index, exclusive.\n * @return The product.\n */\nexport function arrayProd(\n    array: number[]|ArrayTypes, begin?: number, end?: number): number {\n  if (begin == null) {\n    begin = 0;\n  }\n  if (end == null) {\n    end = array.length;\n  }\n\n  let prod = 1;\n  for (let i = begin; i < end; ++i) {\n    prod *= array[i];\n  }\n  return prod;\n}\n\n/**\n * Compute minimum value.\n * @param array\n * @return minimum value.\n */\nexport function min(array: number[]|Float32Array): number {\n  // same behavior as tf.min()\n  if (array.length === 0) {\n    return Number.NaN;\n  }\n  let min = Number.POSITIVE_INFINITY;\n  for (let i = 0; i < array.length; i++) {\n    const value = array[i];\n    if (value < min) {\n      min = value;\n    }\n  }\n  return min;\n}\n\n/**\n * Compute maximum value.\n * @param array\n * @return maximum value\n */\nexport function max(array: number[]|Float32Array): number {\n  // same behavior as tf.max()\n  if (array.length === 0) {\n    return Number.NaN;\n  }\n  let max = Number.NEGATIVE_INFINITY;\n  for (let i = 0; i < array.length; i++) {\n    const value = array[i];\n    if (value > max) {\n      max = value;\n    }\n  }\n  return max;\n}\n\n/**\n * Compute sum of array.\n * @param array\n * @return The sum.\n */\nexport function sum(array: number[]|Float32Array): number {\n  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    const value = array[i];\n    sum += value;\n  }\n  return sum;\n}\n\n/**\n * Compute mean of array.\n * @param array\n * @return The mean.\n */\nexport function mean(array: number[]|Float32Array): number {\n  return sum(array) / array.length;\n}\n\n/**\n * Compute variance of array.\n * @param array\n * @return The variance.\n */\nexport function variance(array: number[]|Float32Array): number {\n  const meanValue = mean(array);\n  const demeaned = array.map((value: number) => value - meanValue);\n  let sumSquare = 0;\n  for (let i = 0; i < demeaned.length; i++) {\n    const value = demeaned[i];\n    sumSquare += value * value;\n  }\n  return sumSquare / array.length;\n}\n\n/**\n * Compute median of array.\n * @param array\n * @return The median value.\n */\nexport function median(array: number[]|Float32Array): number {\n  const arraySorted = array.slice().sort((a, b) => a - b);\n  const lowIdx = Math.floor((arraySorted.length - 1) / 2);\n  const highIdx = Math.ceil((arraySorted.length - 1) / 2);\n  if (lowIdx === highIdx) {\n    return arraySorted[lowIdx];\n  }\n  return (arraySorted[lowIdx] + arraySorted[highIdx]) / 2;\n}\n\n/**\n * Generate an array of integers in [begin, end).\n * @param begin Beginning integer, inclusive.\n * @param end Ending integer, exclusive.\n * @returns Range array.\n * @throws ValueError, iff `end` < `begin`.\n */\nexport function range(begin: number, end: number): number[] {\n  if (end < begin) {\n    throw new ValueError(`end (${end}) < begin (${begin}) is forbidden.`);\n  }\n  const out: number[] = [];\n  for (let i = begin; i < end; ++i) {\n    out.push(i);\n  }\n  return out;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {BaseSerialization} from './types';\n\n// TODO(soergel): Move the CamelCase versions back out of keras_format\n// e.g. to src/common.ts.  Maybe even duplicate *all* of these to be pedantic?\n/** @docinline */\nexport type FanMode = 'fanIn'|'fanOut'|'fanAvg';\nexport const VALID_FAN_MODE_VALUES = ['fanIn', 'fanOut', 'fanAvg'];\n\n// These constants have a snake vs. camel distinction.\nexport type FanModeSerialization = 'fan_in'|'fan_out'|'fan_avg';\n\n/** @docinline */\nexport type Distribution = 'normal'|'uniform'|'truncatedNormal';\nexport const VALID_DISTRIBUTION_VALUES =\n    ['normal', 'uniform', 'truncatedNormal'];\n// These constants have a snake vs. camel distinction.\nexport type DistributionSerialization = 'normal'|'uniform'|'truncated_normal';\n\nexport type ZerosSerialization = BaseSerialization<'Zeros', {}>;\n\nexport type OnesSerialization = BaseSerialization<'Ones', {}>;\n\nexport type ConstantConfig = {\n  value: number;\n};\n\nexport type ConstantSerialization =\n    BaseSerialization<'Constant', ConstantConfig>;\n\nexport type RandomNormalConfig = {\n  mean?: number;\n  stddev?: number;\n  seed?: number;\n};\n\nexport type RandomNormalSerialization =\n    BaseSerialization<'RandomNormal', RandomNormalConfig>;\n\nexport type RandomUniformConfig = {\n  minval?: number;\n  maxval?: number;\n  seed?: number;\n};\n\nexport type RandomUniformSerialization =\n    BaseSerialization<'RandomUniform', RandomUniformConfig>;\n\nexport type TruncatedNormalConfig = {\n  mean?: number;\n  stddev?: number;\n  seed?: number;\n};\n\nexport type TruncatedNormalSerialization =\n    BaseSerialization<'TruncatedNormal', TruncatedNormalConfig>;\n\nexport type VarianceScalingConfig = {\n  scale?: number;\n\n  mode?: FanModeSerialization;\n  distribution?: DistributionSerialization;\n  seed?: number;\n};\n\nexport type VarianceScalingSerialization =\n    BaseSerialization<'VarianceScaling', VarianceScalingConfig>;\n\nexport type OrthogonalConfig = {\n  seed?: number;\n  gain?: number;\n};\n\nexport type OrthogonalSerialization =\n    BaseSerialization<'Orthogonal', OrthogonalConfig>;\n\nexport type IdentityConfig = {\n  gain?: number;\n};\n\nexport type IdentitySerialization =\n    BaseSerialization<'Identity', IdentityConfig>;\n\n// Update initializerClassNames below in concert with this.\nexport type InitializerSerialization = ZerosSerialization|OnesSerialization|\n    ConstantSerialization|RandomUniformSerialization|RandomNormalSerialization|\n    TruncatedNormalSerialization|IdentitySerialization|\n    VarianceScalingSerialization|OrthogonalSerialization;\n\nexport type InitializerClassName = InitializerSerialization['class_name'];\n\n// We can't easily extract a string[] from the string union type, but we can\n// recapitulate the list, enforcing at compile time that the values are valid\n// and that we have the right number of them.\n\n/**\n * A string array of valid Initializer class names.\n *\n * This is guaranteed to match the `InitializerClassName` union type.\n */\nexport const initializerClassNames: InitializerClassName[] = [\n  'Zeros', 'Ones', 'Constant', 'RandomNormal', 'RandomUniform',\n  'TruncatedNormal', 'VarianceScaling', 'Orthogonal', 'Identity'\n];\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {DataType, serialization, Tensor} from '@tensorflow/tfjs-core';\n\nimport {getUid} from '../backend/state';\nimport {ValueError} from '../errors';\nimport {Shape} from '../keras_format/common';\nimport {Kwargs} from '../types';\n\nimport {DisposeResult, Layer, Node, SymbolicTensor} from './topology';\n\n/**\n * Constructor arguments for InputLayer.\n *\n * Note: You should provide only inputShape or batchInputShape (not both).\n * If only inputShape is provided, then the batchInputShape is determined by\n * the batchSize argument and the inputShape: [batchSize].concat(inputShape).\n */\nexport declare interface InputLayerArgs {\n  /** Input shape, not including the batch axis. */\n  inputShape?: Shape;\n  /** Optional input batch size (integer or null). */\n  batchSize?: number;\n  /** Batch input shape, including the batch axis. */\n  batchInputShape?: Shape;\n  /** Datatype of the input.  */\n  dtype?: DataType;\n  /**\n   * Whether the placeholder created is meant to be sparse.\n   */\n  sparse?: boolean;  // TODO(michaelterry): Not clear whether we'll need this.\n\n  /** Name of the layer. */\n  name?: string;\n}\n\nexport class InputLayer extends Layer {\n  /** @nocollapse */\n  static readonly className = 'InputLayer';\n  sparse: boolean;\n  constructor(args: InputLayerArgs) {\n    super({\n      dtype: args.dtype,\n      name: args.name != null ? args.name : getUid('input').toString()\n    });\n    // Normalize config.batchSize and config.sparse\n    if (args.batchSize == null) {\n      args.batchSize = null;\n    }\n    if (args.sparse == null) {\n      args.sparse = false;\n    }\n\n    this.trainable = false;\n    this.built = true;\n    this.sparse = args.sparse;\n\n    if (args.inputShape != null && args.batchInputShape != null) {\n      throw new ValueError(\n          'Only provide the inputShape OR ' +\n          'batchInputShape argument to inputLayer, not both at the same time.');\n    }\n    let batchInputShape = args.batchInputShape;\n    if (batchInputShape == null) {\n      if (args.inputShape == null) {\n        throw new ValueError(\n            'An InputLayer should be passed either a ' +\n            '`batchInputShape` or an `inputShape`.');\n      } else {\n        batchInputShape = [args.batchSize].concat(args.inputShape);\n      }\n    } else {\n      // TODO(michaelterry): Backport to PyKeras\n      if (args.batchSize != null) {\n        throw new ValueError(\n            'Cannot specify batchSize if batchInputShape is ' +\n            'specified when creating an InputLayer.');\n      }\n    }\n\n    const dtype = args.dtype || 'float32';\n\n    this.batchInputShape = batchInputShape;\n    this.dtype = dtype;\n    // TODO(michaelterry): Backport this to PyKeras?\n    this.inputSpec = [{shape: batchInputShape}];\n\n    const inputTensor = new SymbolicTensor(\n        this.dtype, this.batchInputShape, this, [], {}, this.name);\n    inputTensor.nodeIndex = 0;\n    inputTensor.tensorIndex = 0;\n\n    // Create an input node to add to this.outboundNode.\n    // (This call has side effects.)\n    // tslint:disable-next-line:no-unused-expression\n    new Node({\n      outboundLayer: this,\n      inboundLayers: [],\n      nodeIndices: [],\n      tensorIndices: [],\n      inputTensors: [inputTensor],\n      outputTensors: [inputTensor],\n      inputMasks: [null],\n      outputMasks: [null],\n      inputShapes: [batchInputShape],\n      outputShapes: [batchInputShape]\n    });\n  }\n\n  apply(\n      inputs: Tensor|Tensor[]|SymbolicTensor|SymbolicTensor[],\n      kwargs?: Kwargs): Tensor|Tensor[]|SymbolicTensor {\n    throw new ValueError(\n        'Cannot pass any input to an ' +\n        `InputLayer's apply() method. InputLayer name: ${this.name}`);\n  }\n\n  dispose(): DisposeResult {\n    // dispose() for InputLayer is overridden as no-op.\n    return {refCountAfterDispose: this._refCount, numDisposedVariables: 0};\n  }\n\n  getConfig(): serialization.ConfigDict {\n    return {\n      batchInputShape: this.batchInputShape,\n      dtype: this.dtype,\n      sparse: this.sparse,\n      name: this.name\n    };\n  }\n}\nserialization.registerClass(InputLayer);\n\n/**\n * Config for the Input function.\n *\n * Note: You should provide only shape or batchShape (not both).\n * If only shape is provided, then the batchShape becomes\n * [null].concat(inputShape).\n */\nexport interface InputConfig {\n  /**\n   * A shape, not including the batch size. For instance, `shape=[32]`\n   * indicates that the expected input will be batches of 32-dimensional\n   * vectors.\n   */\n  shape?: Shape;\n  /**\n   * A shape tuple (integer), including the batch size. For instance,\n   * `batchShape=[10, 32]` indicates that the expected input will be batches of\n   * 10 32-dimensional vectors. `batchShape=[null, 32]` indicates batches of an\n   * arbitrary number of 32-dimensional vectors.\n   */\n  batchShape?: Shape;\n  /**\n   * An optional name string for the layer. Should be unique in a model (do not\n   * reuse the same name twice). It will be autogenerated if it isn't provided.\n   */\n  name?: string;\n  dtype?: DataType;\n  /**\n   * A boolean specifying whether the placeholder to be created is sparse.\n   */\n  sparse?: boolean;\n}\n\nexport function Input(config: InputConfig): SymbolicTensor {\n  if (config.batchShape == null && config.shape == null) {\n    throw new Error(\n        'Please provide to Input either a `shape`' +\n        ' or a `batchShape` argument. Note that ' +\n        '`shape` does not include the batch ' +\n        'dimension.');\n  }\n  if (config.batchShape != null && config.shape != null) {\n    // TODO(michaelterry): Backport to PyKeras.\n    throw new ValueError(\n        'Please provide either a `shape` or `batchShape` ' +\n        'argument to Input, but not both.');\n  }\n  let batchShape = config.batchShape;\n  if (config.shape != null && batchShape == null) {\n    batchShape = [null].concat(config.shape);\n  }\n\n  let dtype = config.dtype;\n  if (dtype == null) {\n    dtype = 'float32';\n  }\n\n  const inputLayer = new InputLayer({\n    batchInputShape: batchShape,\n    name: config.name,\n    dtype,\n    sparse: config.sparse\n  });\n\n  const outputs = inputLayer.inboundNodes[0].outputTensors;\n  return outputs[0];\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Utilities related to persistent state in the backend.\n */\n\n/**\n * An ID to track `tf.SymbolicTensor`s and derived classes.\n * Required in different places in engine/topology.ts to identify unique\n * tensors.\n */\nlet _nextUniqueTensorId = 0;\n\nexport function getNextUniqueTensorId(): number {\n  return _nextUniqueTensorId++;\n}\n\nconst _uidPrefixes: {[prefix: string]: number} = {};\n\n/**\n * Provides a unique UID given a string prefix.\n *\n * @param prefix\n */\nexport function getUid(prefix = ''): string {\n  if (!(prefix in _uidPrefixes)) {\n    _uidPrefixes[prefix] = 0;\n  }\n  _uidPrefixes[prefix] += 1;\n  return prefix + _uidPrefixes[prefix].toString();\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original source: keras/engine/topology.py */\n\nimport {DataType, Scalar, serialization, Tensor, tidy, util} from '@tensorflow/tfjs-core';\n\nimport {getNextUniqueTensorId, getUid} from '../backend/state';\nimport {getScopedTensorName, getUniqueTensorName, nameScope} from '../common';\nimport {Constraint} from '../constraints';\nimport {AttributeError, NotImplementedError, RuntimeError, ValueError} from '../errors';\nimport {getInitializer, Initializer} from '../initializers';\nimport {Shape} from '../keras_format/common';\nimport {Regularizer} from '../regularizers';\nimport {Kwargs, RegularizerFn} from '../types';\nimport * as generic_utils from '../utils/generic_utils';\nimport * as types_utils from '../utils/types_utils';\nimport * as variable_utils from '../utils/variable_utils';\nimport {batchGetValue, batchSetValue, LayerVariable} from '../variables';\n\n// TODO(michaelterry): This is a stub until it's defined.\nexport type Op = (x: LayerVariable) => LayerVariable;\n\n/**\n * Constructor arguments for InputSpec.\n */\nexport interface InputSpecArgs {\n  /** Expected datatype of the input. */\n  dtype?: DataType;\n  /** Expected shape of the input (may include null for unchecked axes). */\n  shape?: Shape;\n  /** Expected rank of the input. */\n  ndim?: number;\n  /** Maximum rank of the input. */\n  maxNDim?: number;\n  /** Minimum rank of the input. */\n  minNDim?: number;\n  /** Dictionary mapping integer axes to a specific dimension value. */\n  axes?: {[axis: number]: number};\n}\n\n/**\n * Specifies the ndim, dtype and shape of every input to a layer.\n *\n * Every layer should expose (if appropriate) an `inputSpec` attribute:\n * a list of instances of InputSpec (one per input tensor).\n *\n * A null entry in a shape is compatible with any dimension,\n * a null shape is compatible with any shape.\n */\nexport class InputSpec {\n  /** Expected datatype of the input. */\n  dtype?: DataType;\n  /** Expected shape of the input (may include null for unchecked axes). */\n  shape?: Shape;\n  /** Expected rank of the input. */\n  ndim?: number;\n  /** Maximum rank of the input. */\n  maxNDim?: number;\n  /** Minimum rank of the input. */\n  minNDim?: number;\n  /** Dictionary mapping integer axes to a specific dimension value. */\n  axes?: {[axis: number]: number};\n\n  constructor(args: InputSpecArgs) {\n    this.dtype = args.dtype;\n    this.shape = args.shape;\n    /*\n      TODO(michaelterry): Could throw error if ndim and shape are both defined\n        (then backport).\n    */\n    if (args.shape != null) {\n      this.ndim = args.shape.length;\n    } else {\n      this.ndim = args.ndim;\n    }\n    this.maxNDim = args.maxNDim;\n    this.minNDim = args.minNDim;\n    this.axes = args.axes || {};\n  }\n}\n\n/**\n * `tf.SymbolicTensor` is a placeholder for a Tensor without any concrete value.\n *\n * They are most often encountered when building a graph of `Layer`s for a\n * a `tf.LayersModel` and the input data's shape, but not values are known.\n *\n * @doc {heading: 'Models', 'subheading': 'Classes'}\n */\nexport class SymbolicTensor {\n  /* A unique ID for the tensor to be able to differentiate tensors. */\n  readonly id: number;\n  // The fully scoped name of this Variable, including a unique suffix if needed\n  readonly name: string;\n  // The originally requested fully scoped name of this Variable, not including\n  // any unique suffix.  This may be needed when restoring weights because this\n  // original name is used as a key.\n  readonly originalName?: string;\n  /**\n   * Rank/dimensionality of the tensor.\n   */\n  readonly rank: number;\n  /**\n   * Replacement for _keras_history.\n   */\n  nodeIndex: number;\n  /**\n   * Replacement for _keras_history.\n   */\n  tensorIndex: number;\n\n  /**\n   *\n   * @param dtype\n   * @param shape\n   * @param sourceLayer The Layer that produced this symbolic tensor.\n   * @param inputs The inputs passed to sourceLayer's __call__() method.\n   * @param nodeIndex\n   * @param tensorIndex\n   * @param callArgs The keyword arguments passed to the __call__() method.\n   * @param name\n   * @param outputTensorIndex The index of this tensor in the list of outputs\n   *   returned by apply().\n   */\n  constructor(\n      readonly dtype: DataType, readonly shape: Shape,\n      public sourceLayer: Layer, readonly inputs: SymbolicTensor[],\n      readonly callArgs: Kwargs, name?: string,\n      readonly outputTensorIndex?: number) {\n    this.id = getNextUniqueTensorId();\n    if (name != null) {\n      this.originalName = getScopedTensorName(name);\n      this.name = getUniqueTensorName(this.originalName);\n    }\n    this.rank = shape.length;\n  }\n}\n\n/**\n * Constructor arguments for Node.\n */\nexport interface NodeArgs {\n  /**\n   * The layer that takes `inputTensors` and turns them into `outputTensors`.\n   * (the node gets created when the `call` method of the layer is called).\n   */\n  outboundLayer: Layer;\n  /**\n   * A list of layers, the same length as `inputTensors`, the layers from where\n   * `inputTensors` originate.\n   */\n  inboundLayers: Layer[];\n  /**\n   * A list of integers, the same length as `inboundLayers`. `nodeIndices[i]` is\n   * the origin node of `inputTensors[i]` (necessary since each inbound layer\n   * might have several nodes, e.g. if the layer is being shared with a\n   * different data stream).\n   */\n  nodeIndices: number[];\n  /**\n   * A list of integers, the same length as `inboundLayers`. `tensorIndices[i]`\n   * is the index of `inputTensors[i]` within the output of the inbound layer\n   * (necessary since each inbound layer might have multiple tensor outputs,\n   * with each one being independently manipulable).\n   */\n  tensorIndices: number[];\n  /** List of input tensors. */\n  inputTensors: SymbolicTensor[];\n  /** List of output tensors. */\n  outputTensors: SymbolicTensor[];\n  /** List of input masks (a mask can be a tensor, or null). */\n  inputMasks: Tensor[];\n  /** List of output masks (a mask can be a tensor, or null). */\n  outputMasks: Tensor[];\n  /** List of input shape tuples. */\n  inputShapes: Shape|Shape[];\n  /** List of output shape tuples. */\n  outputShapes: Shape|Shape[];\n}\n\n/**\n * The type of the return value of Layer.dispose() and Container.dispose().\n */\nexport interface DisposeResult {\n  /**\n   * Reference count after the dispose call.\n   */\n  refCountAfterDispose: number;\n\n  /**\n   * Number of variables dispose in this dispose call.\n   */\n  numDisposedVariables: number;\n}\n\nlet _nextNodeID = 0;\n\n/**\n * A `Node` describes the connectivity between two layers.\n *\n * Each time a layer is connected to some new input,\n * a node is added to `layer.inboundNodes`.\n *\n * Each time the output of a layer is used by another layer,\n * a node is added to `layer.outboundNodes`.\n *\n * `nodeIndices` and `tensorIndices` are basically fine-grained coordinates\n * describing the origin of the `inputTensors`, verifying the following:\n *\n * `inputTensors[i] ==\n * inboundLayers[i].inboundNodes[nodeIndices[i]].outputTensors[\n *   tensorIndices[i]]`\n *\n * A node from layer A to layer B is added to:\n *     A.outboundNodes\n *     B.inboundNodes\n */\nexport class Node {\n  /**\n   * The layer that takes `inputTensors` and turns them into `outputTensors`\n   * (the node gets created when the `call` method of the layer is called).\n   */\n  outboundLayer: Layer;\n  /**\n   * A list of layers, the same length as `inputTensors`, the layers from where\n   * `inputTensors` originate.\n   */\n  inboundLayers: Layer[];\n  /**\n   * A list of integers, the same length as `inboundLayers`. `nodeIndices[i]` is\n   * the origin node of `inputTensors[i]` (necessary since each inbound layer\n   * might have several nodes, e.g. if the layer is being shared with a\n   * different data stream).\n   */\n  nodeIndices: number[];\n  /**\n   * A list of integers, the same length as `inboundLayers`. `tensorIndices[i]`\n   * is the index of `inputTensors[i]` within the output of the inbound layer\n   * (necessary since each inbound layer might have multiple tensor outputs,\n   * with each one being independently manipulable).\n   */\n  tensorIndices: number[];\n  /** List of input tensors. */\n  inputTensors: SymbolicTensor[];\n  /** List of output tensors. */\n  outputTensors: SymbolicTensor[];\n  /** List of input masks (a mask can be a tensor, or null). */\n  inputMasks: Tensor[];\n  /** List of output masks (a mask can be a tensor, or null). */\n  outputMasks: Tensor[];\n  /** List of input shape tuples. */\n  inputShapes: Shape|Shape[];\n  /** List of output shape tuples. */\n  outputShapes: Shape|Shape[];\n\n  readonly id: number;\n\n  constructor(\n      args: NodeArgs,\n      // TODO(michaelterry): Define actual type for this.\n      public callArgs?: Kwargs) {\n    this.id = _nextNodeID++;\n    /*\n      Layer instance (NOT a list).\n      this is the layer that takes a list of input tensors\n      and turns them into a list of output tensors.\n      the current node will be added to\n      the inboundNodes of outboundLayer.\n    */\n    this.outboundLayer = args.outboundLayer;\n\n    /*\n        The following 3 properties describe where\n        the input tensors come from: which layers,\n        and for each layer, which node and which\n        tensor output of each node.\n    */\n\n    // List of layer instances.\n    this.inboundLayers = args.inboundLayers;\n    // List of integers, 1:1 mapping with inboundLayers.\n    this.nodeIndices = args.nodeIndices;\n    // List of integers, 1:1 mapping with inboundLayers.\n    this.tensorIndices = args.tensorIndices;\n\n    /*\n        Following 2 properties:\n        tensor inputs and outputs of outboundLayer.\n    */\n\n    // List of tensors. 1:1 mapping with inboundLayers.\n    this.inputTensors = args.inputTensors;\n    // List of tensors, created by outboundLayer.call().\n    this.outputTensors = args.outputTensors;\n\n    /*\n        Following 2 properties: input and output masks.\n        List of tensors, 1:1 mapping with inputTensor.\n    */\n    this.inputMasks = args.inputMasks;\n    // List of tensors, created by outboundLayer.computeMask().\n    this.outputMasks = args.outputMasks;\n\n    // Following 2 properties: input and output shapes.\n\n    // List of shape tuples, shapes of inputTensors.\n    this.inputShapes = args.inputShapes;\n    // List of shape tuples, shapes of outputTensors.\n    this.outputShapes = args.outputShapes;\n\n    // Add nodes to all layers involved.\n    for (const layer of args.inboundLayers) {\n      if (layer != null) {\n        layer.outboundNodes.push(this);\n      }\n    }\n    args.outboundLayer.inboundNodes.push(this);\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const inboundNames: string[] = [];\n    for (const layer of this.inboundLayers) {\n      if (layer != null) {\n        inboundNames.push(layer.name);\n      } else {\n        inboundNames.push(null);\n      }\n    }\n    return {\n      outboundLayer: this.outboundLayer ? this.outboundLayer.name : null,\n      inboundLayers: inboundNames,\n      nodeIndices: this.nodeIndices,\n      tensorIndices: this.tensorIndices\n    };\n  }\n}\n\n/** Constructor arguments for Layer. */\nexport declare interface LayerArgs {\n  /**\n   * If defined, will be used to create an input layer to insert before this\n   * layer. If both `inputShape` and `batchInputShape` are defined,\n   * `batchInputShape` will be used. This argument is only applicable to input\n   * layers (the first layer of a model).\n   */\n  inputShape?: Shape;\n  /**\n   * If defined, will be used to create an input layer to insert before this\n   * layer. If both `inputShape` and `batchInputShape` are defined,\n   * `batchInputShape` will be used. This argument is only applicable to input\n   * layers (the first layer of a model).\n   */\n  batchInputShape?: Shape;\n  /**\n   * If `inputShape` is specified and `batchInputShape` is *not* specified,\n   * `batchSize` is used to construct the `batchInputShape`: `[batchSize,\n   * ...inputShape]`\n   */\n  batchSize?: number;\n  /**\n   * The data-type for this layer. Defaults to 'float32'.\n   * This argument is only applicable to input layers (the first layer of a\n   * model).\n   */\n  dtype?: DataType;\n  /** Name for this layer. */\n  name?: string;\n  /**\n   * Whether the weights of this layer are updatable by `fit`.\n   * Defaults to true.\n   */\n  trainable?: boolean;\n  /**\n   * Initial weight values of the layer.\n   */\n  weights?: Tensor[];\n  /** Legacy support. Do not use for new code. */\n  inputDType?: DataType;\n}\n\n// If necessary, add `output` arguments to the CallHook function.\n// This is currently used for testing only, but may be used for debugger-related\n// purposes in the future.\nexport type CallHook = (inputs: Tensor|Tensor[], kwargs: Kwargs) => void;\n\nlet _nextLayerID = 0;\n\n/**\n * A layer is a grouping of operations and weights that can be composed to\n * create a `tf.LayersModel`.\n *\n * Layers are constructed by using the functions under the\n * [tf.layers](#Layers-Basic) namespace.\n *\n * @doc {heading: 'Layers', subheading: 'Classes', namespace: 'layers'}\n */\nexport abstract class Layer extends serialization.Serializable {\n  /** Name for this layer. Must be unique within a model. */\n  name: string;\n  /**\n   * List of InputSpec class instances.\n   *\n   * Each entry describes one required input:\n   * - ndim\n   * - dtype\n   * A layer with `n` input tensors must have an `inputSpec` of length `n`.\n   */\n  inputSpec: InputSpec[];\n  supportsMasking: boolean;\n  /** Whether the layer weights will be updated during training. */\n  protected trainable_: boolean;\n  batchInputShape: Shape;\n  dtype: DataType;\n  initialWeights: Tensor[];\n\n  inboundNodes: Node[];\n  outboundNodes: Node[];\n\n  activityRegularizer: Regularizer;\n\n  protected _trainableWeights: LayerVariable[];\n  private _nonTrainableWeights: LayerVariable[];\n  private _losses: RegularizerFn[];\n  // TODO(cais): _updates is currently unused.\n  private _updates: Tensor[];\n  private _built: boolean;\n  private _callHook: CallHook = null;\n\n  private _addedWeightNames: string[] = [];\n\n  readonly id: number;\n\n  // Porting Notes: PyKeras does not have this property in this base Layer\n  //   class. Instead lets Layer subclass set it dynamically and checks the\n  //   value with `hasattr`. In tfjs-layers, we let this be a member of this\n  //   base class.\n  protected _stateful = false;\n\n  protected _refCount: number|null;\n\n  // A flag for whether fast (i.e., all-zero) weight initialization is to\n  // be used during `build()` call. This speeds up weight initialization\n  // by saving unnecessary calls to expensive initializers in cases where\n  // the initialized values will be overwritten by loaded weight values\n  // during model loading.\n  private fastWeightInitDuringBuild: boolean;\n\n  constructor(args: LayerArgs = {}) {\n    super();\n    this.id = _nextLayerID++;\n\n    this.activityRegularizer = null;\n\n    this.inputSpec = null;\n    this.supportsMasking = false;\n\n    // These properties will be set upon call of this.build()\n    this._trainableWeights = [];\n    this._nonTrainableWeights = [];\n    this._losses = [];\n    this._updates = [];\n    this._built = false;\n\n    /*\n      These lists will be filled via successive calls\n      to this.addInboundNode().\n     */\n    this.inboundNodes = [];\n    this.outboundNodes = [];\n\n    let name = args.name;\n    if (!name) {\n      const prefix = this.getClassName();\n      name = generic_utils.toSnakeCase(prefix) + '_' + getUid(prefix);\n    }\n    this.name = name;\n\n    this.trainable_ = args.trainable == null ? true : args.trainable;\n\n    if (args.inputShape != null || args.batchInputShape != null) {\n      /*\n        In this case we will later create an input layer\n        to insert before the current layer\n       */\n      let batchInputShape: Shape;\n      if (args.batchInputShape != null) {\n        batchInputShape = args.batchInputShape;\n      } else if (args.inputShape != null) {\n        let batchSize: number = null;\n        if (args.batchSize != null) {\n          batchSize = args.batchSize;\n        }\n        batchInputShape = [batchSize].concat(args.inputShape);\n      }\n      this.batchInputShape = batchInputShape;\n\n      // Set dtype.\n      let dtype = args.dtype;\n      if (dtype == null) {\n        dtype = args.inputDType;\n      }\n      if (dtype == null) {\n        dtype = 'float32';\n      }\n      this.dtype = dtype;\n    }\n\n    if (args.weights != null) {\n      this.initialWeights = args.weights;\n    } else {\n      this.initialWeights = null;\n    }\n\n    // The value of `_refCount` is initialized to null. When the layer is used\n    // in a symbolic way for the first time, it will be set to 1.\n    this._refCount = null;\n\n    this.fastWeightInitDuringBuild = false;\n  }\n\n  /**\n   * Converts a layer and its index to a unique (immutable type) name.\n   * This function is used internally with `this.containerNodes`.\n   * @param layer The layer.\n   * @param nodeIndex The layer's position (e.g. via enumerate) in a list of\n   *   nodes.\n   *\n   * @returns The unique name.\n   */\n  protected static nodeKey(layer: Layer, nodeIndex: number) {\n    return layer.name + '_ib-' + nodeIndex.toString();\n  }\n\n  /**\n   * Returns this.inboundNode at index nodeIndex.\n   *\n   * Porting note: This is a replacement for _get_node_attribute_at_index()\n   * @param nodeIndex\n   * @param attrName The name of the attribute related to request for this node.\n   */\n  private getNodeAtIndex(nodeIndex: number, attrName: string): Node {\n    if (this.inboundNodes.length === 0) {\n      throw new RuntimeError(\n          'The layer has never been called ' +\n          `and thus has no defined ${attrName}.`);\n    }\n    if (this.inboundNodes.length <= nodeIndex) {\n      throw new ValueError(\n          `Asked to get ${attrName} at node ${nodeIndex}, ` +\n          `but the layer has only ${this.inboundNodes.length} inbound nodes.`);\n    }\n    return this.inboundNodes[nodeIndex];\n  }\n\n  /**\n   * Retrieves the input tensor(s) of a layer at a given node.\n   *\n   * @param nodeIndex Integer, index of the node from which to retrieve the\n   *   attribute. E.g. `nodeIndex=0` will correspond to the first time the layer\n   *   was called.\n   *\n   * @return A tensor (or list of tensors if the layer has multiple inputs).\n   */\n  getInputAt(nodeIndex: number): SymbolicTensor|SymbolicTensor[] {\n    return generic_utils.singletonOrArray(\n        this.getNodeAtIndex(nodeIndex, 'input').inputTensors);\n  }\n\n  /**\n   * Retrieves the output tensor(s) of a layer at a given node.\n   *\n   * @param nodeIndex Integer, index of the node from which to retrieve the\n   *   attribute. E.g. `nodeIndex=0` will correspond to the first time the layer\n   *   was called.\n   *\n   * @return A tensor (or list of tensors if the layer has multiple outputs).\n   */\n  getOutputAt(nodeIndex: number): SymbolicTensor|SymbolicTensor[] {\n    return generic_utils.singletonOrArray(\n        this.getNodeAtIndex(nodeIndex, 'output').outputTensors);\n  }\n\n  // Properties\n\n  /**\n   * Retrieves the input tensor(s) of a layer.\n   *\n   * Only applicable if the layer has exactly one inbound node,\n   * i.e. if it is connected to one incoming layer.\n   *\n   * @return Input tensor or list of input tensors.\n   *\n   * @exception AttributeError if the layer is connected to more than one\n   *   incoming layers.\n   */\n  get input(): SymbolicTensor|SymbolicTensor[] {\n    if (this.inboundNodes.length > 1) {\n      throw new AttributeError(\n          `Layer ${this.name}` +\n          ' has multiple inbound nodes, ' +\n          'hence the notion of \"layer input\" ' +\n          'is ill-defined. ' +\n          'Use `getInputAt(nodeIndex)` instead.');\n    } else if (this.inboundNodes.length === 0) {\n      throw new AttributeError(\n          `Layer ${this.name}` +\n          ' is not connected, no input to return.');\n    }\n    return generic_utils.singletonOrArray(\n        this.getNodeAtIndex(0, 'input').inputTensors);\n  }\n\n  /**\n   * Retrieves the output tensor(s) of a layer.\n   *\n   * Only applicable if the layer has exactly one inbound node,\n   * i.e. if it is connected to one incoming layer.\n   *\n   * @return Output tensor or list of output tensors.\n   *\n   * @exception AttributeError if the layer is connected to more than one\n   *   incoming layers.\n   */\n  get output(): SymbolicTensor|SymbolicTensor[] {\n    if (this.inboundNodes.length === 0) {\n      throw new AttributeError(\n          `Layer ${this.name}` +\n          ' has no inbound nodes.');\n    }\n    if (this.inboundNodes.length > 1) {\n      throw new AttributeError(\n          `Layer ${this.name}` +\n          ' has multiple inbound nodes, ' +\n          'hence the notion of \"layer output\" ' +\n          'is ill-defined. ' +\n          'Use `getOutputAt(nodeIndex)` instead.');\n    }\n    return generic_utils.singletonOrArray(\n        this.getNodeAtIndex(0, 'output').outputTensors);\n  }\n\n  get losses(): RegularizerFn[] {\n    return this._losses;\n  }\n\n  /**\n   * Retrieves the Layer's current loss values.\n   *\n   * Used for regularizers during training.\n   */\n  calculateLosses(): Scalar[] {\n    // Porting Node: This is an augmentation to Layer.loss in PyKeras.\n    //   In PyKeras, Layer.loss returns symbolic tensors. Here a concrete\n    //   Tensor (specifically Scalar) values are returned. This is due to the\n    //   imperative backend.\n    return this.losses.map(lossFn => lossFn());\n  }\n\n  get updates(): Tensor[] {\n    return this._updates;\n  }\n\n  get built(): boolean {\n    return this._built;\n  }\n\n  set built(built: boolean) {\n    this._built = built;\n  }\n\n  get trainable(): boolean {\n    return this.trainable_;\n  }\n\n  set trainable(trainable: boolean) {\n    this._trainableWeights.forEach(w => w.trainable = trainable);\n    this.trainable_ = trainable;\n  }\n\n  get trainableWeights(): LayerVariable[] {\n    if (this.trainable_) {\n      return this._trainableWeights.filter(w => w.trainable);\n    } else {\n      return [];\n    }\n  }\n\n  set trainableWeights(weights: LayerVariable[]) {\n    this._trainableWeights = weights;\n  }\n\n  get nonTrainableWeights(): LayerVariable[] {\n    if (this.trainable) {\n      return this._trainableWeights.filter(w => !w.trainable)\n          .concat(this._nonTrainableWeights);\n    } else {\n      return this._trainableWeights.concat(this._nonTrainableWeights);\n    }\n  }\n\n  set nonTrainableWeights(weights: LayerVariable[]) {\n    this._nonTrainableWeights = weights;\n  }\n\n  /**\n   * The concatenation of the lists trainableWeights and nonTrainableWeights\n   * (in this order).\n   */\n  get weights(): LayerVariable[] {\n    return this.trainableWeights.concat(this.nonTrainableWeights);\n  }\n\n  get stateful(): boolean {\n    return this._stateful;\n  }\n\n  /**\n   * Reset the states of the layer.\n   *\n   * This method of the base Layer class is essentially a no-op.\n   * Subclasses that are stateful (e.g., stateful RNNs) should override this\n   * method.\n   */\n  resetStates(): void {\n    if (!this.stateful) {\n      throw new Error(\n          'Cannot call the resetStates() method of a non-stateful Layer ' +\n          'object.');\n    }\n  }\n\n  /**\n   * Checks compatibility between the layer and provided inputs.\n   *\n   * This checks that the tensor(s) `input`\n   * verify the input assumptions of the layer\n   * (if any). If not, exceptions are raised.\n   *\n   * @param inputs Input tensor or list of input tensors.\n   *\n   * @exception ValueError in case of mismatch between\n   *   the provided inputs and the expectations of the layer.\n   */\n  protected assertInputCompatibility(inputs: Tensor|Tensor[]|SymbolicTensor|\n                                     SymbolicTensor[]): void {\n    inputs = generic_utils.toList(inputs);\n    if (this.inputSpec == null || this.inputSpec.length === 0) {\n      return;\n    }\n    const inputSpec = generic_utils.toList(this.inputSpec);\n    if (inputs.length !== inputSpec.length) {\n      throw new ValueError(\n          `Layer ${this.name} expects ${inputSpec.length} inputs, ` +\n          `but it received ${inputs.length} input tensors. ` +\n          `Input received: ${inputs}`);\n    }\n    for (let inputIndex = 0; inputIndex < inputs.length; inputIndex++) {\n      const x = inputs[inputIndex];\n      const spec: InputSpec = inputSpec[inputIndex];\n      if (spec == null) {\n        continue;\n      }\n\n      // Check ndim.\n      const ndim = x.rank;\n      if (spec.ndim != null) {\n        if (ndim !== spec.ndim) {\n          throw new ValueError(\n              `Input ${inputIndex} is incompatible with layer ${this.name}: ` +\n              `expected ndim=${spec.ndim}, found ndim=${ndim}`);\n        }\n      }\n      if (spec.maxNDim != null) {\n        if (ndim > spec.maxNDim) {\n          throw new ValueError(\n              `Input ${inputIndex} is incompatible with layer ${this.name}` +\n              `: expected max_ndim=${spec.maxNDim}, found ndim=${ndim}`);\n        }\n      }\n      if (spec.minNDim != null) {\n        if (ndim < spec.minNDim) {\n          throw new ValueError(\n              `Input ${inputIndex} is incompatible with layer ${this.name}` +\n              `: expected min_ndim=${spec.minNDim}, found ndim=${ndim}.`);\n        }\n      }\n\n      // Check dtype.\n      if (spec.dtype != null) {\n        if (x.dtype !== spec.dtype) {\n          throw new ValueError(\n              `Input ${inputIndex} is incompatible with layer ${this.name} ` +\n              `: expected dtype=${spec.dtype}, found dtype=${x.dtype}.`);\n        }\n      }\n\n      // Check specific shape axes.\n      if (spec.axes) {\n        const xShape = x.shape;\n        for (const key in spec.axes) {\n          const axis = Number(key);\n          const value = spec.axes[key];\n          // Perform Python-style slicing in case axis < 0;\n          // TODO(cais): Use https://github.com/alvivi/typescript-underscore to\n          // ensure type safety through Underscore calls.\n          const xShapeAtAxis =\n              axis >= 0 ? xShape[axis] : xShape[xShape.length + axis];\n          if (value != null && [value, null].indexOf(xShapeAtAxis) === -1) {\n            throw new ValueError(\n                `Input ${inputIndex} is incompatible with layer ` +\n                `${this.name}: expected axis ${axis} of input shape to ` +\n                `have value ${value} but got shape ${xShape}.`);\n          }\n        }\n      }\n\n      // Check shape.\n      if (spec.shape != null) {\n        for (let i = 0; i < spec.shape.length; ++i) {\n          const specDim = spec.shape[i];\n          const dim = x.shape[i];\n          if (specDim != null && dim != null) {\n            if (specDim !== dim) {\n              throw new ValueError(\n                  `Input ${inputIndex} is incompatible with layer ` +\n                  `${this.name}: expected shape=${spec.shape}, ` +\n                  `found shape=${x.shape}.`);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * This is where the layer's logic lives.\n   *\n   * @param inputs Input tensor, or list/tuple of input tensors.\n   * @param kwargs Additional keyword arguments.\n   *\n   * @return A tensor or list/tuple of tensors.\n   */\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return inputs;\n  }\n\n  protected invokeCallHook(inputs: Tensor|Tensor[], kwargs: Kwargs) {\n    if (this._callHook != null) {\n      this._callHook(inputs, kwargs);\n    }\n  }\n\n  /**\n   * Set call hook.\n   * This is currently used for testing only.\n   * @param callHook\n   */\n  setCallHook(callHook: CallHook) {\n    this._callHook = callHook;\n  }\n\n  /**\n   * Clear call hook.\n   * This is currently used for testing only.\n   */\n  clearCallHook() {\n    this._callHook = null;\n  }\n\n  /**\n   * Builds or executes a `Layer's logic.\n   *\n   * When called with `tf.Tensor`(s), execute the `Layer`s computation and\n   * return Tensor(s). For example:\n   *\n   * ```js\n   * const denseLayer = tf.layers.dense({\n   *   units: 1,\n   *   kernelInitializer: 'zeros',\n   *   useBias: false\n   * });\n   *\n   * // Invoke the layer's apply() method with a `tf.Tensor` (with concrete\n   * // numeric values).\n   * const input = tf.ones([2, 2]);\n   * const output = denseLayer.apply(input);\n   *\n   * // The output's value is expected to be [[0], [0]], due to the fact that\n   * // the dense layer has a kernel initialized to all-zeros and does not have\n   * // a bias.\n   * output.print();\n   * ```\n   *\n   * When called with `tf.SymbolicTensor`(s), this will prepare the layer for\n   * future execution.  This entails internal book-keeping on shapes of\n   * expected Tensors, wiring layers together, and initializing weights.\n   *\n   * Calling `apply` with `tf.SymbolicTensor`s are typically used during the\n   * building of non-`tf.Sequential` models. For example:\n   *\n   * ```js\n   * const flattenLayer = tf.layers.flatten();\n   * const denseLayer = tf.layers.dense({units: 1});\n   *\n   * // Use tf.layers.input() to obtain a SymbolicTensor as input to apply().\n   * const input = tf.input({shape: [2, 2]});\n   * const output1 = flattenLayer.apply(input);\n   *\n   * // output1.shape is [null, 4]. The first dimension is the undetermined\n   * // batch size. The second dimension comes from flattening the [2, 2]\n   * // shape.\n   * console.log(JSON.stringify(output1.shape));\n   *\n   * // The output SymbolicTensor of the flatten layer can be used to call\n   * // the apply() of the dense layer:\n   * const output2 = denseLayer.apply(output1);\n   *\n   * // output2.shape is [null, 1]. The first dimension is the undetermined\n   * // batch size. The second dimension matches the number of units of the\n   * // dense layer.\n   * console.log(JSON.stringify(output2.shape));\n   *\n   * // The input and output and be used to construct a model that consists\n   * // of the flatten and dense layers.\n   * const model = tf.model({inputs: input, outputs: output2});\n   * ```\n   *\n   * @param inputs a `tf.Tensor` or `tf.SymbolicTensor` or an Array of them.\n   * @param kwargs Additional keyword arguments to be passed to `call()`.\n   *\n   * @return Output of the layer's `call` method.\n   *\n   * @exception ValueError error in case the layer is missing shape information\n   *   for its `build` call.\n   *\n   * @doc {heading: 'Models', 'subheading': 'Classes'}\n   */\n  // Porting Note: This is a replacement for __call__() in Python.\n  apply(\n      inputs: Tensor|Tensor[]|SymbolicTensor|SymbolicTensor[],\n      kwargs?: Kwargs): Tensor|Tensor[]|SymbolicTensor|SymbolicTensor[] {\n    kwargs = kwargs || {};\n\n    this.assertNotDisposed();\n\n    // Ensure inputs are all the same type.\n    const inputsList = generic_utils.toList(inputs);\n\n    let allAreSymbolic = true;\n    for (const input of inputsList) {\n      if (!(input instanceof SymbolicTensor)) {\n        allAreSymbolic = false;\n        break;\n      }\n    }\n    let noneAreSymbolic = true;\n    for (const input of inputsList) {\n      if (input instanceof SymbolicTensor) {\n        noneAreSymbolic = false;\n        break;\n      }\n    }\n\n    if (allAreSymbolic === noneAreSymbolic) {\n      throw new ValueError(\n          'Arguments to apply() must be all ' +\n          'SymbolicTensors or all Tensors');\n    }\n\n    // TODO(michaelterry): nameScope() may not be necessary.\n    return nameScope(this.name, () => {\n      // Handle laying building (weight creating, input spec locking).\n      if (!this.built) {\n        /*\n          Throw exceptions in case the input is not compatible\n          with the inputSpec specified in the layer constructor.\n         */\n        this.assertInputCompatibility(inputs);\n\n        // Collect input shapes to build layer.\n        const inputShapes: Shape[] = [];\n        for (const xElem of generic_utils.toList(inputs)) {\n          inputShapes.push(xElem.shape);\n        }\n        this.build(generic_utils.singletonOrArray(inputShapes));\n        this.built = true;\n\n        // Load weights that were specified at layer instantiation.\n        if (this.initialWeights) {\n          this.setWeights(this.initialWeights);\n        }\n\n        if (this._refCount === null && noneAreSymbolic) {\n          // The first use of this layer is a non-symbolic call, set ref count\n          // to 1 so the Layer can be properly disposed if its dispose() method\n          // is called.\n          this._refCount = 1;\n        }\n      }\n\n      /*\n        Throw exceptions in case the input is not compatible\n        with the inputSpec set at build time.\n      */\n      this.assertInputCompatibility(inputs);\n\n      // Handle mask propagation.\n      // TODO(michaelterry): Mask propagation not currently implemented.\n\n      // Actually call the layer, collecting output(s), mask(s), and shape(s).\n      if (noneAreSymbolic) {\n        let output = this.call(inputs as Tensor | Tensor[], kwargs);\n        // TODO(michaelterry): Compute the outputMask\n\n        // If the layer returns tensors from its inputs, unmodified,\n        // we copy them to avoid loss of tensor metadata.\n        const outputList: Tensor[] = generic_utils.toList(output);\n        const outputListCopy: Tensor[] = [];\n        // TODO(michaelterry): This copying may not be necessary given our eager\n        // backend.\n        for (let x of outputList) {\n          if (inputsList.indexOf(x) !== -1) {\n            x = x.clone();\n          }\n          outputListCopy.push(x);\n        }\n        output = generic_utils.singletonOrArray(outputListCopy);\n\n        if (this.activityRegularizer != null) {\n          throw new NotImplementedError(\n              'Layer invocation in the presence of activity ' +\n              'regularizer(s) is not supported yet.');\n        }\n\n        // TODO(michaelterry): Call addInboundNode()?\n        return output;\n      } else {\n        const inputShape = collectInputShape(inputs);\n        const outputShape = this.computeOutputShape(inputShape);\n        let output: SymbolicTensor|SymbolicTensor[];\n        const outputDType = guessOutputDType(inputs);\n        this.warnOnIncompatibleInputShape(\n            Array.isArray(inputs) ? inputShape[0] as Shape :\n                                    inputShape as Shape);\n\n        if (outputShape != null && outputShape.length > 0 &&\n            Array.isArray(outputShape[0])) {\n          // We have multiple output shapes. Create multiple output tensors.\n          output = (outputShape as Shape[])\n                       .map(\n                           (shape, index) => new SymbolicTensor(\n                               outputDType, shape, this,\n                               generic_utils.toList(inputs), kwargs, this.name,\n                               index));\n        } else {\n          output = new SymbolicTensor(\n              outputDType, outputShape as Shape, this,\n              generic_utils.toList(inputs), kwargs, this.name);\n        }\n\n        /*\n          Add an inbound node to the layer, so that it keeps track\n          of the call and of all new variables created during the call.\n          This also updates the layer history of the output tensor(s).\n          If the input tensor(s) had no previous history,\n          this does nothing.\n        */\n        this.addInboundNode(\n            inputs as SymbolicTensor | SymbolicTensor[], output, null, null,\n            inputShape, outputShape, kwargs);\n        this._refCount++;\n\n        if (this.activityRegularizer != null) {\n          throw new NotImplementedError(\n              'Layer invocation in the presence of activity ' +\n              'regularizer(s) is not supported yet.');\n        }\n\n        return output;\n      }\n    });\n  }\n\n  /**\n   * Check compatibility between input shape and this layer's batchInputShape.\n   *\n   * Print warning if any incompatibility is found.\n   *\n   * @param inputShape Input shape to be checked.\n   */\n  protected warnOnIncompatibleInputShape(inputShape: Shape) {\n    if (this.batchInputShape == null) {\n      return;\n    } else if (inputShape.length !== this.batchInputShape.length) {\n      console.warn(\n          `The rank of the input tensor provided (shape: ` +\n          `${JSON.stringify(inputShape)}) does not match that of the ` +\n          `batchInputShape (${JSON.stringify(this.batchInputShape)}) ` +\n          `of the layer ${this.name}`);\n    } else {\n      let dimMismatch = false;\n      this.batchInputShape.forEach((dimension, i) => {\n        if (dimension != null && inputShape[i] != null &&\n            inputShape[i] !== dimension) {\n          dimMismatch = true;\n        }\n      });\n      if (dimMismatch) {\n        console.warn(\n            `The shape of the input tensor ` +\n            `(${JSON.stringify(inputShape)}) does not ` +\n            `match the expectation of layer ${this.name}: ` +\n            `${JSON.stringify(this.batchInputShape)}`);\n      }\n    }\n  }\n\n  /**\n   * Retrieves the output shape(s) of a layer.\n   *\n   * Only applicable if the layer has only one inbound node, or if all inbound\n   * nodes have the same output shape.\n   *\n   * @returns Output shape or shapes.\n   * @throws AttributeError: if the layer is connected to more than one incoming\n   *   nodes.\n   *\n   * @doc {heading: 'Models', 'subheading': 'Classes'}\n   */\n  get outputShape(): Shape|Shape[] {\n    if (this.inboundNodes == null || this.inboundNodes.length === 0) {\n      throw new AttributeError(\n          `The layer ${this.name} has never been called and thus has no ` +\n          `defined output shape.`);\n    }\n    const allOutputShapes: string[] = [];\n    for (const node of this.inboundNodes) {\n      const shapeString = JSON.stringify(node.outputShapes);\n      if (allOutputShapes.indexOf(shapeString) === -1) {\n        allOutputShapes.push(shapeString);\n      }\n    }\n    if (allOutputShapes.length === 1) {\n      const outputShapes = this.inboundNodes[0].outputShapes;\n      if (Array.isArray(outputShapes) && Array.isArray(outputShapes[0]) &&\n          outputShapes.length === 1) {\n        return (outputShapes as Shape[])[0];\n      } else {\n        return outputShapes;\n      }\n\n    } else {\n      throw new AttributeError(\n          `The layer ${this.name} has multiple inbound nodes with different ` +\n          `output shapes. Hence the notion of \"output shape\" is ill-defined ` +\n          `for the layer.`);\n      // TODO(cais): Implement getOutputShapeAt().\n    }\n  }\n\n  /**\n   * Counts the total number of numbers (e.g., float32, int32) in the\n   * weights.\n   *\n   * @returns An integer count.\n   * @throws RuntimeError: If the layer is not built yet (in which case its\n   *   weights are not defined yet.)\n   *\n   * @doc {heading: 'Models', 'subheading': 'Classes'}\n   */\n  countParams(): number {\n    if (!this.built) {\n      throw new RuntimeError(\n          `You tried to call countParams() on ${this.name}, ` +\n          `but the layer is not built yet. Build it first by calling ` +\n          `build(batchInputShape).`);\n    }\n    return variable_utils.countParamsInWeights(this.weights);\n  }\n\n  /**\n   * Creates the layer weights.\n   *\n   * Must be implemented on all layers that have weights.\n   *\n   * Called when apply() is called to construct the weights.\n   *\n   * @param inputShape A `Shape` or array of `Shape` (unused).\n   *\n   * @doc {heading: 'Models', 'subheading': 'Classes'}\n   */\n  build(inputShape: Shape|Shape[]) {\n    this.built = true;\n  }\n\n  /**\n   * Returns the current values of the weights of the layer.\n   *\n   * @param trainableOnly Whether to get the values of only trainable weights.\n   * @returns Weight values as an `Array` of `tf.Tensor`s.\n   *\n   * @doc {heading: 'Models', 'subheading': 'Classes'}\n   */\n  getWeights(trainableOnly = false): Tensor[] {\n    return batchGetValue(trainableOnly ? this.trainableWeights : this.weights);\n  }\n\n  /**\n   * Sets the weights of the layer, from Tensors.\n   *\n   * @param weights a list of Tensors. The number of arrays and their shape\n   *   must match number of the dimensions of the weights of the layer (i.e.\n   *   it should match the output of `getWeights`).\n   *\n   * @exception ValueError If the provided weights list does not match the\n   *   layer's specifications.\n   *\n   * @doc {heading: 'Models', 'subheading': 'Classes'}\n   */\n  setWeights(weights: Tensor[]): void {\n    tidy(() => {\n      const params = this.weights;\n      if (params.length !== weights.length) {\n        // TODO(cais): Restore the following and use `providedWeights`, instead\n        // of `weights` in the error message, once the deeplearn.js bug is\n        // fixed: https://github.com/PAIR-code/deeplearnjs/issues/498 const\n        // providedWeights = JSON.stringify(weights).substr(0, 50);\n        throw new ValueError(\n            `You called setWeights(weights) on layer \"${this.name}\" ` +\n            `with a weight list of length ${weights.length}, ` +\n            `but the layer was expecting ${params.length} weights. ` +\n            `Provided weights: ${weights}...`);\n      }\n      if (params.length === 0) {\n        return;\n      }\n      const weightValueTuples: Array<[LayerVariable, Tensor]> = [];\n      const paramValues = batchGetValue(params);\n      for (let i = 0; i < paramValues.length; ++i) {\n        const pv = paramValues[i];\n        const p = params[i];\n        const w = weights[i];\n        if (!util.arraysEqual(pv.shape, w.shape)) {\n          throw new ValueError(\n              `Layer weight shape ${pv.shape} ` +\n              `not compatible with provided weight shape ${w.shape}`);\n        }\n        weightValueTuples.push([p, w]);\n      }\n      batchSetValue(weightValueTuples);\n    });\n  }\n\n  /**\n   * Adds a weight variable to the layer.\n   *\n   * @param name Name of the new weight variable.\n   * @param shape The shape of the weight.\n   * @param dtype The dtype of the weight.\n   * @param initializer An initializer instance.\n   * @param regularizer A regularizer instance.\n   * @param trainable Whether the weight should be trained via backprop or not\n   *   (assuming that the layer itself is also trainable).\n   * @param constraint An optional trainable.\n   * @return The created weight variable.\n   *\n   * @doc {heading: 'Models', 'subheading': 'Classes'}\n   */\n  protected addWeight(\n      name: string, shape: Shape, dtype?: DataType, initializer?: Initializer,\n      regularizer?: Regularizer, trainable?: boolean, constraint?: Constraint,\n      getInitializerFunc?: Function): LayerVariable {\n    // Reject duplicate weight names.\n    if (this._addedWeightNames.indexOf(name) !== -1) {\n      throw new ValueError(\n          `Duplicate weight name ${name} for layer ${this.name}`);\n    }\n    this._addedWeightNames.push(name);\n\n    if (dtype == null) {\n      dtype = 'float32';\n    }\n\n    if (this.fastWeightInitDuringBuild) {\n      initializer = getInitializerFunc != null ? getInitializerFunc() :\n                                                 getInitializer('zeros');\n    }\n    const initValue = initializer.apply(shape, dtype);\n    const weight =\n        new LayerVariable(initValue, dtype, name, trainable, constraint);\n    initValue.dispose();\n    // Request backend not to dispose the weights of the model on scope() exit.\n    if (regularizer != null) {\n      this.addLoss(() => regularizer.apply(weight.read()));\n    }\n    if (trainable == null) {\n      trainable = true;\n    }\n    if (trainable) {\n      this._trainableWeights.push(weight);\n    } else {\n      this._nonTrainableWeights.push(weight);\n    }\n    return weight;\n  }\n\n  /**\n   * Set the fast-weight-initialization flag.\n   *\n   * In cases where the initialized weight values will be immediately\n   * overwritten by loaded weight values during model loading, setting\n   * the flag to `true` saves unnecessary calls to potentially expensive\n   * initializers and speeds up the loading process.\n   *\n   * @param value Target value of the flag.\n   */\n  setFastWeightInitDuringBuild(value: boolean) {\n    this.fastWeightInitDuringBuild = value;\n  }\n\n  /**\n   * Add losses to the layer.\n   *\n   * The loss may potentionally be conditional on some inputs tensors,\n   * for instance activity losses are conditional on the layer's inputs.\n   *\n   * @doc {heading: 'Models', 'subheading': 'Classes'}\n   */\n  addLoss(losses: RegularizerFn|RegularizerFn[]): void {\n    if (losses == null || Array.isArray(losses) && losses.length === 0) {\n      return;\n    }\n    // Update this.losses\n    losses = generic_utils.toList(losses);\n    if (this._losses !== undefined && this._losses !== null) {\n      this.losses.push(...losses);\n    }\n  }\n\n  /**\n   * Computes the output shape of the layer.\n   *\n   * Assumes that the layer will be built to match that input shape provided.\n   *\n   * @param inputShape A shape (tuple of integers) or a list of shape tuples\n   *   (one per output tensor of the layer). Shape tuples can include null for\n   *   free dimensions, instead of an integer.\n   *\n   * @doc {heading: 'Models', 'subheading': 'Classes'}\n   */\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    return inputShape;\n  }\n\n  /**\n   * Computes an output mask tensor.\n   *\n   * @param inputs Tensor or list of tensors.\n   * @param mask Tensor or list of tensors.\n   *\n   * @return null or a tensor (or list of tensors, one per output tensor of the\n   * layer).\n   */\n  computeMask(inputs: Tensor|Tensor[], mask?: Tensor|Tensor[]): Tensor\n      |Tensor[] {\n    if (!this.supportsMasking) {\n      if (mask != null) {\n        if (Array.isArray(mask)) {\n          mask.forEach(maskElement => {\n            if (maskElement != null) {\n              throw new TypeError(\n                  `Layer ${this.name} does not support masking, ` +\n                  'but was passed an inputMask.');\n            }\n          });\n        } else {\n          throw new TypeError(\n              `Layer ${this.name} does not support masking, ` +\n              'but was passed an inputMask.');\n        }\n      }\n      // masking not explicitly supported: return null as mask\n      return null;\n    }\n    // if masking is explictly supported, by default\n    // carry over the input mask\n    return mask;\n  }\n\n  /**\n   * Internal method to create an inbound node for the layer.\n   *\n   * @param inputTensors List of input tensors.\n   * @param outputTensors List of output tensors.\n   * @param inputMasks List of input masks (a mask can be a tensor, or null).\n   * @param outputMasks List of output masks (a mask can be a tensor, or null).\n   * @param inputShapes List of input shape tuples.\n   * @param outputShapes List of output shape tuples.\n   * @param kwargs Dictionary of keyword arguments that were passed to the\n   *   `call` method of the layer at the call that created the node.\n   */\n  private addInboundNode(\n      inputTensors: SymbolicTensor|SymbolicTensor[],\n      outputTensors: SymbolicTensor|SymbolicTensor[],\n      inputMasks: Tensor|Tensor[], outputMasks: Tensor|Tensor[],\n      inputShapes: Shape|Shape[], outputShapes: Shape|Shape[],\n      kwargs: {} = null): void {\n    const inputTensorList: SymbolicTensor[] =\n        generic_utils.toList(inputTensors);\n    outputTensors = generic_utils.toList(outputTensors);\n    inputMasks = generic_utils.toList(inputMasks);\n    outputMasks = generic_utils.toList(outputMasks);\n    inputShapes = types_utils.normalizeShapeList(inputShapes);\n    outputShapes = types_utils.normalizeShapeList(outputShapes);\n\n    // Collect input tensor(s) coordinates.\n    const inboundLayers: Layer[] = [];\n    const nodeIndices: number[] = [];\n    const tensorIndices: number[] = [];\n    for (const x of inputTensorList) {\n      /*\n       * TODO(michaelterry): Keras adds this value to tensors; it's not\n       * clear whether we'll use this or not.\n       */\n      inboundLayers.push(x.sourceLayer);\n      nodeIndices.push(x.nodeIndex);\n      tensorIndices.push(x.tensorIndex);\n    }\n\n    // Create node, add it to inbound nodes.\n    // (This call has side effects.)\n    // tslint:disable-next-line:no-unused-expression\n    new Node(\n        {\n          outboundLayer: this,\n          inboundLayers,\n          nodeIndices,\n          tensorIndices,\n          inputTensors: inputTensorList,\n          outputTensors,\n          inputMasks,\n          outputMasks,\n          inputShapes,\n          outputShapes\n        },\n        kwargs);\n\n    // Update tensor history\n    for (let i = 0; i < outputTensors.length; i++) {\n      // TODO(michaelterry: _uses_learning_phase not tracked.\n      outputTensors[i].sourceLayer = this;\n      outputTensors[i].nodeIndex = this.inboundNodes.length - 1;\n      outputTensors[i].tensorIndex = i;\n    }\n  }\n\n  /**\n   * Returns the config of the layer.\n   *\n   * A layer config is a TS dictionary (serializable)\n   * containing the configuration of a layer.\n   * The same layer can be reinstantiated later\n   * (without its trained weights) from this configuration.\n   *\n   * The config of a layer does not include connectivity\n   * information, nor the layer class name.  These are handled\n   * by 'Container' (one layer of abstraction above).\n   *\n   * Porting Note: The TS dictionary follows TS naming standrds for\n   * keys, and uses tfjs-layers type-safe Enums.  Serialization methods\n   * should use a helper function to convert to the pythonic storage\n   * standard. (see serialization_utils.convertTsToPythonic)\n   *\n   * @returns TS dictionary of configuration.\n   *\n   * @doc {heading: 'Models', 'subheading': 'Classes'}\n   */\n  getConfig(): serialization.ConfigDict {\n    const config:\n        serialization.ConfigDict = {name: this.name, trainable: this.trainable};\n    if (this.batchInputShape != null) {\n      config['batchInputShape'] = this.batchInputShape;\n    }\n    if (this.dtype != null) {\n      config['dtype'] = this.dtype;\n    }\n    return config;\n  }\n\n  /**\n   * Dispose the weight variables that this Layer instance holds.\n   *\n   * @returns {number} Number of disposed variables.\n   */\n  protected disposeWeights(): number {\n    this.weights.forEach(weight => weight.dispose());\n    return this.weights.length;\n  }\n\n  protected assertNotDisposed() {\n    if (this._refCount === 0) {\n      throw new Error(`Layer '${this.name}' is already disposed.`);\n    }\n  }\n\n  /**\n   * Attempt to dispose layer's weights.\n   *\n   * This method decrease the reference count of the Layer object by 1.\n   *\n   * A Layer is reference-counted. Its reference count is incremented by 1\n   * the first item its `apply()` method is called and when it becomes a part\n   * of a new `Node` (through calling the `apply()`) method on a\n   * `tf.SymbolicTensor`).\n   *\n   * If the reference count of a Layer becomes 0, all the weights will be\n   * disposed and the underlying memory (e.g., the textures allocated in WebGL)\n   * will be freed.\n   *\n   * Note: If the reference count is greater than 0 after the decrement, the\n   * weights of the Layer will *not* be disposed.\n   *\n   * After a Layer is disposed, it cannot be used in calls such as `apply()`,\n   * `getWeights()` or `setWeights()` anymore.\n   *\n   * @returns A DisposeResult Object with the following fields:\n   *   - refCountAfterDispose: The reference count of the Container after this\n   *     `dispose()` call.\n   *   - numDisposedVariables: Number of `tf.Variable`s (i.e., weights) disposed\n   *     during this `dispose()` call.\n   * @throws {Error} If the layer is not built yet, or if the layer has already\n   *   been disposed.\n   *\n   * @doc {heading: 'Models', 'subheading': 'Classes'}\n   */\n  dispose(): DisposeResult {\n    if (!this.built) {\n      throw new Error(\n          `Cannot dispose Layer ${this.name} because it has not been ` +\n          `built yet.`);\n    }\n\n    if (this._refCount === null) {\n      throw new Error(\n          `Cannot dispose Layer ${this.name} because it has not been used ` +\n          `yet.`);\n    }\n\n    this.assertNotDisposed();\n\n    let numDisposedVariables = 0;\n    if (--this._refCount === 0) {\n      numDisposedVariables = this.disposeWeights();\n    }\n\n    return {refCountAfterDispose: this._refCount, numDisposedVariables};\n  }\n}\n\n/**\n * Collects the input shape(s) of a list of `tf.Tensor`s or\n * `tf.SymbolicTensor`s.\n *\n * TODO(michaelterry): Update PyKeras docs (backport).\n *\n * @param inputTensors List of input tensors (or single input tensor).\n *\n * @return List of shape tuples (or single tuple), one tuple per input.\n */\nfunction collectInputShape(inputTensors: SymbolicTensor|SymbolicTensor[]|Tensor|\n                           Tensor[]): Shape|Shape[] {\n  inputTensors =\n      generic_utils.toList(inputTensors) as SymbolicTensor[] | Tensor[];\n  const shapes: Shape[] = [];\n  for (const x of inputTensors) {\n    shapes.push(x.shape);\n  }\n  return generic_utils.singletonOrArray(shapes);\n}\n\n/**\n * Guesses output dtype based on inputs.\n *\n * At present, just returns 'float32' for any input.\n *\n * @param inputTensors List of input tensors (or single input tensor).\n *\n * @return The guessed DType. At present, always returns 'float32'.\n */\nfunction guessOutputDType(inputTensors: SymbolicTensor|SymbolicTensor[]|Tensor|\n                          Tensor[]): DataType {\n  return 'float32';\n}\n\n/**\n * Returns the list of input tensors necessary to compute `tensor`.\n *\n * Output will always be a list of tensors (potentially with 1 element).\n *\n * @param tensor The tensor to start from.\n * @param layer Origin layer of the tensor.\n * @param nodeIndex Origin node index of the tensor.\n *\n * @return Array of input tensors.\n */\nexport function getSourceInputs(\n    tensor: SymbolicTensor, layer?: Layer,\n    nodeIndex?: number): SymbolicTensor[] {\n  if (layer == null || (nodeIndex != null && nodeIndex > 0)) {\n    layer = tensor.sourceLayer;\n    nodeIndex = tensor.nodeIndex;\n  }\n  if (layer.inboundNodes.length === 0) {\n    return [tensor];\n  } else {\n    const node = layer.inboundNodes[nodeIndex];\n    if (node.inboundLayers.length === 0) {\n      return node.inputTensors;\n    } else {\n      const sourceTensors: SymbolicTensor[] = [];\n      for (let i = 0; i < node.inboundLayers.length; i++) {\n        const x = node.inputTensors[i];\n        const layer = node.inboundLayers[i];\n        const nodeIndex = node.nodeIndices[i];\n        const previousSources = getSourceInputs(x, layer, nodeIndex);\n        // Avoid input redundancy.\n        for (const x of previousSources) {\n          if (sourceTensors.indexOf(x) === -1) {\n            sourceTensors.push(x);\n          }\n        }\n      }\n      return sourceTensors;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original source: utils/generic_utils.py */\n\nimport {Tensor} from '@tensorflow/tfjs-core';\nimport {ValueError} from '../errors';\nimport {Shape} from '../keras_format/common';\n// tslint:enable\n\n/**\n * Determine whether the input is an Array of Shapes.\n */\nexport function isArrayOfShapes(x: Shape|Shape[]): boolean {\n  return Array.isArray(x) && Array.isArray(x[0]);\n}\n\n/**\n * Special case of normalizing shapes to lists.\n *\n * @param x A shape or list of shapes to normalize into a list of Shapes.\n * @return A list of Shapes.\n */\nexport function normalizeShapeList(x: Shape|Shape[]): Shape[] {\n  if (x.length === 0) {\n    return [];\n  }\n  if (!Array.isArray(x[0])) {\n    return [x] as Shape[];\n  }\n  return x as Shape[];\n}\n\n/**\n * Helper function to obtain exactly one Tensor.\n * @param xs: A single `tf.Tensor` or an `Array` of `tf.Tensor`s.\n * @return A single `tf.Tensor`. If `xs` is an `Array`, return the first one.\n * @throws ValueError: If `xs` is an `Array` and its length is not 1.\n */\nexport function getExactlyOneTensor(xs: Tensor|Tensor[]): Tensor {\n  let x: Tensor;\n  if (Array.isArray(xs)) {\n    if (xs.length !== 1) {\n      throw new ValueError(`Expected Tensor length to be 1; got ${xs.length}`);\n    }\n    x = xs[0];\n  } else {\n    x = xs;\n  }\n  return x;\n}\n\n/**\n * Helper function to obtain exactly on instance of Shape.\n *\n * @param shapes Input single `Shape` or Array of `Shape`s.\n * @returns If input is a single `Shape`, return it unchanged. If the input is\n *   an `Array` containing exactly one instance of `Shape`, return the instance.\n *   Otherwise, throw a `ValueError`.\n * @throws ValueError: If input is an `Array` of `Shape`s, and its length is not\n *   1.\n */\nexport function getExactlyOneShape(shapes: Shape|Shape[]): Shape {\n  if (Array.isArray(shapes) && Array.isArray(shapes[0])) {\n    if (shapes.length === 1) {\n      shapes = shapes as Shape[];\n      return shapes[0];\n    } else {\n      throw new ValueError(`Expected exactly 1 Shape; got ${shapes.length}`);\n    }\n  } else {\n    return shapes as Shape;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {LayerVariable} from '../variables';\n\n/**\n * Count the elements in an Array of LayerVariables.\n *\n * @param weights: The LayerVariables of which the constituent numbers are to\n *   be counted.\n * @returns A count of the elements in all the LayerVariables\n */\nexport function countParamsInWeights(weights: LayerVariable[]): number {\n  let count = 0;\n  for (const weight of weights) {\n    if (weight.shape.length === 0) {\n      count += 1;\n    } else {\n      count += weight.shape.reduce((a, b) => a * b);\n    }\n  }\n  return count;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {DataType, Tensor, variableGrads} from '@tensorflow/tfjs-core';\n\nimport {getNextUniqueTensorId} from './backend/state';\nimport {getScopedTensorName, getUniqueTensorName} from './common';\nimport {Constraint} from './constraints';\nimport {NotImplementedError} from './errors';\nimport {Shape} from './keras_format/common';\nimport {HasShape} from './types';\n\nconst DEFAULT_VARIABLE_NAME_PREFIX = 'Variable';\n\n/**\n * A `tf.layers.LayerVariable` is similar to a `tf.Tensor` in that it has a\n * dtype and shape, but its value is mutable.  The value is itself represented\n * as a`tf.Tensor`, and can be read with the `read()` method and updated with\n * the `write()` method.\n */\nexport class LayerVariable {\n  readonly dtype: DataType;\n  readonly shape: Shape;\n\n  readonly id: number;\n  // The fully scoped name of this Variable, including a unique suffix if needed\n  readonly name: string;\n  // The originally requested fully scoped name of this Variable, not including\n  // any unique suffix.  This may be needed when restoring weights because this\n  // original name is used as a key.\n  readonly originalName: string;\n  private trainable_: boolean;\n\n  protected readonly val: tfc.Variable;\n  readonly constraint: Constraint;\n  /**\n   * Construct Variable from a `tf.Tensor`.\n   *\n   * If not explicitly named, the Variable will be given a name with the\n   * prefix 'Variable'. Variable names are unique. In the case of name\n   * collision, suffixies '_<num>' will be added to the name.\n   *\n   * @param val Initial value of the Variable.\n   * @param name Name of the variable. If `null` or `undefined` is provided, it\n   *   will default a name with the prefix 'Variable'.\n   * @param constraint Optional, projection function to be applied to the\n   * variable after optimize updates\n   * @throws ValueError if `name` is `null` or `undefined`.\n   */\n  constructor(\n      val: Tensor, dtype: DataType = 'float32',\n      name = DEFAULT_VARIABLE_NAME_PREFIX, trainable = true,\n      constraint: Constraint = null) {\n    this.dtype = dtype == null ? 'float32' : dtype;\n    this.shape = val.shape;\n    this.id = getNextUniqueTensorId();\n\n    name = name == null ? DEFAULT_VARIABLE_NAME_PREFIX : name;\n    this.originalName = getScopedTensorName(name);\n    this.name = getUniqueTensorName(this.originalName);\n\n    this.trainable_ = trainable;\n    this.constraint = constraint;\n\n    this.val = tfc.variable(val, this.trainable_, this.name, this.dtype);\n  }\n\n  /**\n   * Get a snapshot of the Variable's value.\n   *\n   * The returned value is a snapshot of the Variable's value at the time of\n   * the invocation. Future mutations in the value of the tensor will only\n   * be reflected by future calls to this method.\n   */\n  read(): Tensor {\n    this.assertNotDisposed();\n    return this.val;\n  }\n\n  /**\n   * Update the value of the Variable.\n   *\n   * @param newVal: The new value to update to. Must be consistent with the\n   *   dtype and shape of the Variable.\n   * @return This Variable.\n   */\n  write(newVal: Tensor) {\n    // TODO(cais): Once  TF.js Core supports Tensor.dtype, check dtype match.\n    this.assertNotDisposed();\n    checkShapesMatch(this.val, newVal);\n    // Skip updating if this is the exact same tensor.\n    if (this.val.id !== newVal.id) {\n      this.val.assign(newVal);\n      if (this.constraint != null) {\n        this.val.assign(this.constraint.apply(this.val));\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Dispose this LayersVariable instance from memory.\n   */\n  dispose(): void {\n    this.assertNotDisposed();\n    this.val.dispose();\n  }\n\n  protected assertNotDisposed(): void {\n    if (this.val.isDisposed) {\n      throw new Error(`LayersVariable ${this.name} is already disposed.`);\n    }\n  }\n\n  get trainable(): boolean {\n    return this.trainable_;\n  }\n\n  set trainable(trainable: boolean) {\n    this.trainable_ = trainable;\n    this.val.trainable = trainable;\n  }\n}\n\nfunction checkShapesMatch(x: HasShape, y: HasShape): void {\n  if (x.shape.toString() !== y.shape.toString()) {\n    throw new Error(\n        'Shape mismatch: ' + JSON.stringify(x.shape) + ' vs. ' +\n        JSON.stringify(y.shape));\n  }\n}\n\n/**\n * Create a Variable.\n * @param x The initial value of the `Variable`.\n * @param dtype optional, the type of the variable.\n * @param name optional, the name of the variable, default provided by\n * Variable.\n * @param constraint optional, a constraint to be applied after every update.\n * @return The newly instantiated `Variable`.\n */\nexport function variable(\n    x: Tensor, dtype?: DataType, name?: string,\n    constraint?: Constraint): LayerVariable {\n  return new LayerVariable(x, dtype, name, true, constraint);\n}\n\n/**\n * Instantiates an all-zeros Variable and returns it.\n *\n * @param shape Shape of the tensor.\n * @param dtype DType of the tensor.\n * @param name Name of the tensor.\n * @return An all-zero Variable.\n */\nexport function zerosVariable(\n    shape: Shape, dtype?: DataType, name?: string): LayerVariable {\n  // TODO(cais): Implement logic for dtype.\n  return new LayerVariable(tfc.zeros(shape), dtype, name);\n}\n\n/**\n * Instantiates an all-zeros tensor of the same shape as another tensor.\n *\n * @param x The other tensor.\n * @param dtype DType of the tensor.\n * @param name Name of the tensor.\n * @return A newly instantiated Variable.\n */\nexport function zerosLike(\n    x: Tensor, dtype?: DataType, name?: string): LayerVariable {\n  return new LayerVariable(tfc.zerosLike(x), dtype, name);\n}\n\n/**\n * Instantiates an all-ones tensor and returns it.\n *\n * @param shape Shape of the tensor.\n * @param dtype DType of the tensor.\n * @param name Name of the tensor.\n * @return An all-ones Variable.\n */\nexport function onesVariable(\n    shape: Shape, dtype?: DataType, name?: string): LayerVariable {\n  // TODO(cais): Implement logic for dtype.\n  const allocated = tfc.ones(shape);\n  return new LayerVariable(allocated, dtype, name);\n}\n\n/**\n * Instantiates an all-ones tensor of the same shape as another tensor.\n *\n * @param x The other tensor.\n * @param dtype DType of the tensor.\n * @param name Name of the tensor.\n * @return A newly instantiated Variable.\n */\nexport function onesLike(\n    x: Tensor, dtype?: DataType, name?: string): LayerVariable {\n  const allocated = tfc.onesLike(x);\n  return new LayerVariable(allocated, dtype, name);\n}\n\n/**\n * Instantiate an identity matrix and returns it, as a Variable\n *\n * @param size Number of rows/columns.\n * @param dtype Data type of returned Variable.\n * @param name Name of returned Variable.\n * @return A Variable, an identity matrix.\n */\nexport function eyeVariable(\n    size: number, dtype?: DataType, name?: string): LayerVariable {\n  return new LayerVariable(tfc.eye(size), dtype, name);\n}\n\n/**\n * Get a Variable with uniform distribution of values.\n * @param shape Shape of the tensor.\n * @param minval Lower bound of the uniform distribution.\n * @param maxval Upper bound of the uniform distribution.\n * @param dtype\n * @param seed\n * @param name Optional name.\n * @return The uniform-random Variable.\n */\nexport function randomUniformVariable(\n    shape: Shape, minval: number, maxval: number, dtype?: DataType,\n    seed?: number, name = 'randomUniform'): LayerVariable {\n  return new LayerVariable(\n      tfc.randomUniform(shape, minval, maxval, dtype), dtype, name);\n}\n\n/**\n * Get a Variable with truncated-normal distribution of values.\n * @param shape Shape of the tensor.\n * @param mean mean value of the normal distribution.\n * @param stddev standard deviation of the normal distribution.\n * @param dtype\n * @param seed\n * @param name Optional name.\n * @return The truncated-normal-random Variable.\n */\nexport function truncatedNormalVariable(\n    shape: Shape, mean = 0.0, stddev = 1.0, dtype?: DataType, seed?: number,\n    name = 'truncatedNormal'): LayerVariable {\n  // TODO(cais): Implement logic for dtype and seed once they are supported\n  // by deeplearn.js.\n  dtype = dtype || 'float32';\n  if (dtype !== 'float32' && dtype !== 'int32') {\n    throw new NotImplementedError(\n        `randomNormal does not support dType ${dtype}.`);\n  }\n  return new LayerVariable(\n      tfc.truncatedNormal(shape, mean, stddev, dtype, seed), dtype, name);\n}\n/**\n * Get a Variable with normal distribution of values.\n * @param shape Shape of the tensor.\n * @param mean mean value of the normal distribution.\n * @param stddev standard deviation of the normal distribution.\n * @param dtype\n * @param seed\n * @param name Optional name.\n * @return The truncated-normal-random Variable.\n */\nexport function randomNormalVariable(\n    shape: Shape, mean = 0.0, stddev = 1.0, dtype?: DataType, seed?: number,\n    name = 'randomNormal'): LayerVariable {\n  dtype = dtype || 'float32';\n  if (dtype !== 'float32' && dtype !== 'int32') {\n    throw new NotImplementedError(\n        `randomNormalVariable does not support dType ${dtype}.`);\n  }\n  return new LayerVariable(\n      tfc.randomNormal(shape, mean, stddev, dtype, seed), dtype, name);\n}\n\n/**\n * Update the value of a Variable.\n * @param x The Variable to be updated.\n * @param xNew The new value to update to.\n * @return The Variable updated.\n */\nexport function update(x: LayerVariable, xNew: Tensor): LayerVariable {\n  return x.write(xNew);\n}\n\n/**\n * Update the value of a Variable by adding an increment.\n * @param x The Variable to be updated.\n * @param increment The incrment to add to `x`.\n * @return The Variable updated.\n */\nexport function updateAdd(x: LayerVariable, increment: Tensor): LayerVariable {\n  return x.write(tfc.add(x.read(), increment));\n}\n\n/**\n * Update the value of a Variable by subtracting a decrement.\n * @param x The Variable to be updated.\n * @param decrement The decrement to subtract from `x`.\n * @return The Variable updated.\n */\nexport function updateSub(x: LayerVariable, decrement: Tensor): LayerVariable {\n  return x.write(tfc.sub(x.read(), decrement));\n}\n\n/**\n * Get the values of an array of Variables.\n *\n * @param tensors An `Array` of `Variable`s to get the values of.\n * @return The values of the inputs, as an `Array` of`tf.Tensor`s.\n */\nexport function batchGetValue(xs: LayerVariable[]): Tensor[] {\n  return xs.map(x => x.read());\n}\n\n/**\n * Update the value of multiple Variables at once.\n *\n * @param variablesAndValues An `Array`, each element is of type\n *   [Variable, Tensor]. The first item is the\n *   `Variable` of which the value is to be updated. The second item\n *   carries the new value.\n */\nexport function batchSetValue(\n    variablesAndValues: Array<[LayerVariable, Tensor]>): void {\n  variablesAndValues.forEach(variableAndValue => {\n    const variable: LayerVariable = variableAndValue[0];\n    variable.write(variableAndValue[1]);\n  });\n}\n\n/**\n * Returns the gradients of `variables` w.r.t. the return value of `lossFn`.\n * @param lossFn A function which returns a Scalar to be used as the function\n *   value (i.e., numerator) for differentiation.\n * @param variables List of variables to be used as the independent variables\n *   (i.e., denominator) for differentiation.\n * @returns An Array of gradients tensors.\n */\nexport function gradients(\n    lossFn: () => tfc.Scalar, variables: LayerVariable[]): Tensor[] {\n  // TODO(cais): The return type signature can be simplified if deeplearn makes\n  //   the corresponding type public.\n  const variableList =\n      variables.map(variable => variable.read() as tfc.Variable);\n  const valudAndGrads = variableGrads(lossFn, variableList);\n  return variables.map(variable => valudAndGrads.grads[variable.name]);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Exported functions.\n */\n\nimport {io} from '@tensorflow/tfjs-core';\n\nimport {BaseCallbackConstructor, CallbackConstructorRegistry} from './base_callbacks';\nimport {ContainerArgs} from './engine/container';\nimport {Input, InputConfig,} from './engine/input_layer';\nimport {SymbolicTensor} from './engine/topology';\nimport {LayersModel} from './engine/training';\nimport {loadLayersModelInternal, Sequential, SequentialArgs} from './models';\n\n// TODO(cais): Add doc string to all the public static functions in this\n//   class; include exectuable JavaScript code snippets where applicable\n//   (b/74074458).\n\n// LayersModel and related factory methods.\n\n/**\n * A model is a data structure that consists of `Layers` and defines inputs\n * and outputs.\n *\n * The key difference between `tf.model` and `tf.sequential` is that\n * `tf.model` is more generic, supporting an arbitrary graph (without\n * cycles) of layers. `tf.sequential` is less generic and supports only a linear\n * stack of layers.\n *\n * When creating a `tf.LayersModel`, specify its input(s) and output(s). Layers\n * are used to wire input(s) to output(s).\n *\n * For example, the following code snippet defines a model consisting of\n * two `dense` layers, with 10 and 4 units, respectively.\n *\n * ```js\n * // Define input, which has a size of 5 (not including batch dimension).\n * const input = tf.input({shape: [5]});\n *\n * // First dense layer uses relu activation.\n * const denseLayer1 = tf.layers.dense({units: 10, activation: 'relu'});\n * // Second dense layer uses softmax activation.\n * const denseLayer2 = tf.layers.dense({units: 4, activation: 'softmax'});\n *\n * // Obtain the output symbolic tensor by applying the layers on the input.\n * const output = denseLayer2.apply(denseLayer1.apply(input));\n *\n * // Create the model based on the inputs.\n * const model = tf.model({inputs: input, outputs: output});\n *\n * // The model can be used for training, evaluation and prediction.\n * // For example, the following line runs prediction with the model on\n * // some fake data.\n * model.predict(tf.ones([2, 5])).print();\n * ```\n * See also:\n *   `tf.sequential`, `tf.loadLayersModel`.\n *\n * @doc {heading: 'Models', subheading: 'Creation'}\n */\nexport function model(args: ContainerArgs): LayersModel {\n  return new LayersModel(args);\n}\n\n/**\n * Creates a `tf.Sequential` model.  A sequential model is any model where the\n * outputs of one layer are the inputs to the next layer, i.e. the model\n * topology is a simple 'stack' of layers, with no branching or skipping.\n *\n * This means that the first layer passed to a `tf.Sequential` model should have\n * a defined input shape. What that means is that it should have received an\n * `inputShape` or `batchInputShape` argument, or for some type of layers\n * (recurrent, Dense...) an `inputDim` argument.\n *\n * The key difference between `tf.model` and `tf.sequential` is that\n * `tf.sequential` is less generic, supporting only a linear stack of layers.\n * `tf.model` is more generic and supports an arbitrary graph (without\n * cycles) of layers.\n *\n * Examples:\n *\n * ```js\n * const model = tf.sequential();\n *\n * // First layer must have an input shape defined.\n * model.add(tf.layers.dense({units: 32, inputShape: [50]}));\n * // Afterwards, TF.js does automatic shape inference.\n * model.add(tf.layers.dense({units: 4}));\n *\n * // Inspect the inferred shape of the model's output, which equals\n * // `[null, 4]`. The 1st dimension is the undetermined batch dimension; the\n * // 2nd is the output size of the model's last layer.\n * console.log(JSON.stringify(model.outputs[0].shape));\n * ```\n *\n * It is also possible to specify a batch size (with potentially undetermined\n * batch dimension, denoted by \"null\") for the first layer using the\n * `batchInputShape` key. The following example is equivalent to the above:\n *\n * ```js\n * const model = tf.sequential();\n *\n * // First layer must have a defined input shape\n * model.add(tf.layers.dense({units: 32, batchInputShape: [null, 50]}));\n * // Afterwards, TF.js does automatic shape inference.\n * model.add(tf.layers.dense({units: 4}));\n *\n * // Inspect the inferred shape of the model's output.\n * console.log(JSON.stringify(model.outputs[0].shape));\n * ```\n *\n * You can also use an `Array` of already-constructed `Layer`s to create\n * a `tf.Sequential` model:\n *\n * ```js\n * const model = tf.sequential({\n *   layers: [tf.layers.dense({units: 32, inputShape: [50]}),\n *            tf.layers.dense({units: 4})]\n * });\n * console.log(JSON.stringify(model.outputs[0].shape));\n * ```\n *\n * @doc {heading: 'Models', subheading: 'Creation'}\n */\nexport function sequential(config?: SequentialArgs): Sequential {\n  return new Sequential(config);\n}\n\n/**\n * Load a model composed of Layer objects, including its topology and optionally\n * weights. See the Tutorial named \"How to import a Keras Model\" for usage\n * examples.\n *\n * This method is applicable to:\n *\n * 1. Models created with the `tf.layers.*`, `tf.sequential`, and\n * `tf.model` APIs of TensorFlow.js and later saved with the\n * `tf.LayersModel.save` method.\n * 2. Models converted from Keras or TensorFlow tf.keras using the\n * [tensorflowjs_converter](https://github.com/tensorflow/tfjs/tree/master/tfjs-converter).\n *\n * This mode is *not* applicable to TensorFlow `SavedModel`s or their converted\n * forms. For those models, use `tf.loadGraphModel`.\n *\n * Example 1. Load a model from an HTTP server.\n *\n * ```js\n * const model = await tf.loadLayersModel(\n *     'https://storage.googleapis.com/tfjs-models/tfjs/iris_v1/model.json');\n * model.summary();\n * ```\n *\n * Example 2: Save `model`'s topology and weights to browser [local\n * storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage);\n * then load it back.\n *\n * ```js\n * const model = tf.sequential(\n *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});\n * console.log('Prediction from original model:');\n * model.predict(tf.ones([1, 3])).print();\n *\n * const saveResults = await model.save('localstorage://my-model-1');\n *\n * const loadedModel = await tf.loadLayersModel('localstorage://my-model-1');\n * console.log('Prediction from loaded model:');\n * loadedModel.predict(tf.ones([1, 3])).print();\n * ```\n *\n * Example 3. Saving `model`'s topology and weights to browser\n * [IndexedDB](https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API);\n * then load it back.\n *\n * ```js\n * const model = tf.sequential(\n *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});\n * console.log('Prediction from original model:');\n * model.predict(tf.ones([1, 3])).print();\n *\n * const saveResults = await model.save('indexeddb://my-model-1');\n *\n * const loadedModel = await tf.loadLayersModel('indexeddb://my-model-1');\n * console.log('Prediction from loaded model:');\n * loadedModel.predict(tf.ones([1, 3])).print();\n * ```\n *\n * Example 4. Load a model from user-selected files from HTML\n * [file input\n * elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file).\n *\n * ```js\n * // Note: this code snippet will not work without the HTML elements in the\n * //   page\n * const jsonUpload = document.getElementById('json-upload');\n * const weightsUpload = document.getElementById('weights-upload');\n *\n * const model = await tf.loadLayersModel(\n *     tf.io.browserFiles([jsonUpload.files[0], weightsUpload.files[0]]));\n * ```\n *\n * @param pathOrIOHandler Can be either of the two formats\n *   1. A string path to the `ModelAndWeightsConfig` JSON describing\n *      the model in the canonical TensorFlow.js format. For file://\n *      (tfjs-node-only), http:// and https:// schemas, the path can be\n *      either absolute or relative.\n *   2. An `tf.io.IOHandler` object that loads model artifacts with its `load`\n *      method.\n * @param options Optional configuration arguments for the model loading,\n *   including:\n *   - `strict`: Require that the provided weights exactly match those required\n *     by the layers.  Default true.  Passing false means that both extra\n *     weights and missing weights will be silently ignored.\n *   - `onProgress`: A function of the signature `(fraction: number) => void',\n *     that can be used as the progress callback for the model loading.\n * @returns A `Promise` of `tf.LayersModel`, with the topology and weights\n *     loaded.\n *\n * @doc {heading: 'Models', subheading: 'Loading'}\n */\nexport function loadLayersModel(\n    pathOrIOHandler: string|io.IOHandler,\n    options?: io.LoadOptions): Promise<LayersModel> {\n  if (options == null) {\n    options = {};\n  }\n  return loadLayersModelInternal(pathOrIOHandler, options);\n}\n\n/**\n * Used to instantiate an input to a model as a `tf.SymbolicTensor`.\n *\n * Users should call the `input` factory function for\n * consistency with other generator functions.\n *\n * Example:\n *\n * ```js\n * // Defines a simple logistic regression model with 32 dimensional input\n * // and 3 dimensional output.\n * const x = tf.input({shape: [32]});\n * const y = tf.layers.dense({units: 3, activation: 'softmax'}).apply(x);\n * const model = tf.model({inputs: x, outputs: y});\n * model.predict(tf.ones([2, 32])).print();\n * ```\n *\n * Note: `input` is only necessary when using `model`. When using\n * `sequential`, specify `inputShape` for the first layer or use `inputLayer`\n * as the first layer.\n *\n * @doc {heading: 'Models', subheading: 'Inputs'}\n */\nexport function input(config: InputConfig): SymbolicTensor {\n  return Input(config);\n}\n\nexport function registerCallbackConstructor(\n    verbosityLevel: number,\n    callbackConstructor: BaseCallbackConstructor): void {\n  CallbackConstructorRegistry.registerCallbackConstructor(\n      verbosityLevel, callbackConstructor);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original source: keras/callbacks.py */\n\nimport {add, div, keep, mul, nextFrame, Scalar, Tensor, tidy, util} from '@tensorflow/tfjs-core';\n\nimport {Container} from './engine/container';\nimport {ValueError} from './errors';\nimport {Logs, resolveScalarsInLogs, UnresolvedLogs} from './logs';\nimport * as generic_utils from './utils/generic_utils';\n\n/** Verbosity logging level when fitting a model. */\nexport enum ModelLoggingVerbosity {\n  SILENT = 0,\n  VERBOSE = 1\n}\n\n/** How often to yield to the main thread when training (in ms). */\nexport const DEFAULT_YIELD_EVERY_MS = 125;\n\nexport type Params = {\n  [key: string]: number|string|boolean|number[]|string[]|boolean[];\n};\n\nexport type YieldEveryOptions = 'auto'|'batch'|'epoch'|'never'|number;\n\n/**\n * Abstract base class used to build new callbacks.\n *\n * The `logs` dictionary that callback methods take as argument will contain\n * keys for quantities relevant to the current batch or epoch.\n *\n * Currently, the `.fit()` method of the `Sequential` model class\n * will include the following quantities in the `logs` that\n * it passes to its callbacks:\n *\n * onEpochEnd: Logs include `acc` and `loss`, and optionally include `valLoss`\n *   (if validation is enabled in `fit`), and `valAcc` (if validation and\n *   accuracy monitoring are enabled).\n * onBatchBegin: Logs include `size`, the number of samples in the current\n *   batch.\n * onBatchEnd: Logs include `loss`, and optionally `acc` (if accuracy monitoring\n *   is enabled).\n */\nexport abstract class BaseCallback {\n  // TODO(michaelterry): This type is a best guess.\n  validationData: Tensor|Tensor[] = null;\n  /**\n   * Training parameters (eg. verbosity, batch size, number of epochs...).\n   */\n  params: Params;\n\n  setParams(params: Params): void {\n    this.params = params;\n  }\n\n  async onEpochBegin(epoch: number, logs?: UnresolvedLogs) {}\n\n  async onEpochEnd(epoch: number, logs?: UnresolvedLogs) {}\n\n  async onBatchBegin(batch: number, logs?: UnresolvedLogs) {}\n\n  async onBatchEnd(batch: number, logs?: UnresolvedLogs) {}\n\n  async onTrainBegin(logs?: UnresolvedLogs) {}\n\n  async onTrainEnd(logs?: UnresolvedLogs) {}\n\n  // LayersModel needs to call Callback.setModel(), but cannot actually depend\n  // on Callback because that creates a cyclic dependency.  Providing this no-op\n  // method on BaseCallback breaks the cycle: this way LayersModel can depend on\n  // BaseCallback but not on Callback.  The argument is typed as `Container`\n  // (the superclass of LayersModel) to avoid recapitulating the cycle. Callback\n  // overrides this method and enforces that the argument is really a\n  // LayersModel.\n  setModel(model: Container): void {\n    // Do nothing. Use Callback instead of BaseCallback to track the model.\n  }\n}\n\n/**\n * Container abstracting a list of callbacks.\n */\nexport class CallbackList {\n  callbacks: BaseCallback[];\n  queueLength: number;\n\n  // TODO(cais): When the need arises, uncomment the following lines and\n  // implement the queue for time values.\n  // private deltaTBatch: number;\n  // private deltaTsBatchBegin: Array<number>;\n  // private deltaTsBatchEnd: Array<number>;\n\n  /**\n   * Constructor of CallbackList.\n   * @param callbacks Array of `Callback` instances.\n   * @param queueLength Queue length for keeping running statistics over\n   *   callback execution time.\n   */\n  constructor(callbacks?: BaseCallback[], queueLength = 10) {\n    // TODO(cais): Make use of queueLength when implementing the queue for time\n    // values.\n    if (callbacks == null) {\n      callbacks = [];\n    }\n    this.callbacks = callbacks;\n    this.queueLength = queueLength;\n  }\n\n  append(callback: BaseCallback): void {\n    this.callbacks.push(callback);\n  }\n\n  setParams(params: Params): void {\n    for (const callback of this.callbacks) {\n      callback.setParams(params);\n    }\n  }\n\n  setModel(model: Container): void {\n    for (const callback of this.callbacks) {\n      callback.setModel(model);\n    }\n  }\n\n  /**\n   * Called at the start of an epoch.\n   * @param epoch Index of epoch.\n   * @param logs Dictionary of logs.\n   */\n  async onEpochBegin(epoch: number, logs?: UnresolvedLogs) {\n    if (logs == null) {\n      logs = {};\n    }\n    for (const callback of this.callbacks) {\n      await callback.onEpochBegin(epoch, logs);\n    }\n  }\n\n  /**\n   * Called at the end of an epoch.\n   * @param epoch Index of epoch.\n   * @param logs Dictionary of logs.\n   */\n  async onEpochEnd(epoch: number, logs?: UnresolvedLogs) {\n    if (logs == null) {\n      logs = {};\n    }\n    for (const callback of this.callbacks) {\n      await callback.onEpochEnd(epoch, logs);\n    }\n  }\n\n  /**\n   * Called  right before processing a batch.\n   * @param batch Index of batch within the current epoch.\n   * @param logs Dictionary of logs.\n   */\n  async onBatchBegin(batch: number, logs?: UnresolvedLogs) {\n    if (logs == null) {\n      logs = {};\n    }\n    for (const callback of this.callbacks) {\n      await callback.onBatchBegin(batch, logs);\n    }\n  }\n\n  /**\n   * Called at the end of a batch.\n   * @param batch Index of batch within the current epoch.\n   * @param logs Dictionary of logs.\n   */\n  async onBatchEnd(batch: number, logs?: UnresolvedLogs) {\n    if (logs == null) {\n      logs = {};\n    }\n    for (const callback of this.callbacks) {\n      await callback.onBatchEnd(batch, logs);\n    }\n  }\n\n  /**\n   * Called at the beginning of training.\n   * @param logs Dictionary of logs.\n   */\n  async onTrainBegin(logs?: UnresolvedLogs) {\n    if (logs == null) {\n      logs = {};\n    }\n    for (const callback of this.callbacks) {\n      await callback.onTrainBegin(logs);\n    }\n  }\n\n  /**\n   * Called at the end of training.\n   * @param logs Dictionary of logs.\n   */\n  async onTrainEnd(logs?: UnresolvedLogs) {\n    if (logs == null) {\n      logs = {};\n    }\n    for (const callback of this.callbacks) {\n      await callback.onTrainEnd(logs);\n    }\n  }\n}\n\n/**\n * Callback that accumulates epoch averages of metrics.\n *\n * This callback is automatically applied to every LayersModel.\n */\nexport class BaseLogger extends BaseCallback {\n  private seen: number;\n  private totals: UnresolvedLogs;\n\n  constructor() {\n    super();\n  }\n\n  async onEpochBegin(epoch: number) {\n    this.seen = 0;\n    this.totals = {};\n  }\n\n  async onBatchEnd(batch: number, logs?: UnresolvedLogs) {\n    if (logs == null) {\n      logs = {};\n    }\n    const batchSize = logs['size'] == null ? 0 : logs['size'] as number;\n    this.seen += batchSize;\n    for (const key in logs) {\n      const value = logs[key];\n      if (typeof value === 'number') {\n        if (!this.totals.hasOwnProperty(key)) {\n          this.totals[key] = 0;\n        }\n        this.totals[key] = this.totals[key] as number + value * batchSize;\n      } else {\n        let oldTotalsToDispose: Scalar;\n        if (key in this.totals) {\n          oldTotalsToDispose = this.totals[key] as Scalar;\n        } else {\n          this.totals[key] = 0;\n        }\n        const total: Scalar =\n            tidy(() => add((this.totals[key]), mul(value, batchSize)));\n        this.totals[key] = total;\n        if (oldTotalsToDispose != null) {\n          oldTotalsToDispose.dispose();\n        }\n      }\n    }\n  }\n\n  async onEpochEnd(epoch: number, logs?: UnresolvedLogs) {\n    if (logs != null) {\n      for (const key of this.params['metrics'] as string[]) {\n        if (this.totals[key] == null) {\n          continue;\n        }\n        if (typeof this.totals[key] === 'number') {\n          logs[key] = this.totals[key] as number / this.seen;\n        } else {\n          tidy(() => {\n            const log: Scalar = mul(div(1, this.seen), this.totals[key]);\n            logs[key] = log;\n            (this.totals[key] as Tensor).dispose();\n            keep(logs[key] as Scalar);\n          });\n        }\n      }\n    }\n  }\n}\n\n/**\n * Callback that records events into a `History` object. This callback is\n * automatically applied to every TF.js Layers model. The `History` object\n * gets returned by the `fit` method of models.\n */\nexport class History extends BaseCallback {\n  epoch: number[];\n  history: {[key: string]: Array<number|Tensor>};\n\n  async onTrainBegin(logs?: UnresolvedLogs) {\n    this.epoch = [];\n    this.history = {};\n  }\n\n  async onEpochEnd(epoch: number, logs?: UnresolvedLogs) {\n    if (logs == null) {\n      logs = {};\n    }\n    this.epoch.push(epoch);\n    for (const key in logs) {\n      if (this.history[key] == null) {\n        this.history[key] = [];\n      }\n      this.history[key].push(logs[key]);\n    }\n  }\n\n  /**\n   * Await the values of all losses and metrics.\n   */\n  async syncData() {\n    const promises: Array<Promise<Float32Array|Int32Array|Uint8Array>> = [];\n    const keys: string[] = [];\n    const indices: number[] = [];\n    for (const key in this.history) {\n      const valueArray = this.history[key];\n      for (let i = 0; i < valueArray.length; ++i) {\n        if (typeof valueArray[i] !== 'number') {\n          const valueScalar = valueArray[i] as Tensor;\n          promises.push(valueScalar.data());\n          keys.push(key);\n          indices.push(i);\n        }\n      }\n    }\n    const values = await Promise.all(promises);\n    for (let n = 0; n < values.length; ++n) {\n      const tensorToDispose = this.history[keys[n]][indices[n]] as Tensor;\n      tensorToDispose.dispose();\n      this.history[keys[n]][indices[n]] = values[n][0];\n    }\n  }\n}\n\nexport interface CustomCallbackArgs {\n  onTrainBegin?: (logs?: Logs) => void | Promise<void>;\n  onTrainEnd?: (logs?: Logs) => void | Promise<void>;\n  onEpochBegin?: (epoch: number, logs?: Logs) => void | Promise<void>;\n  onEpochEnd?: (epoch: number, logs?: Logs) => void | Promise<void>;\n  onBatchBegin?: (batch: number, logs?: Logs) => void | Promise<void>;\n  onBatchEnd?: (batch: number, logs?: Logs) => void | Promise<void>;\n  onYield?: (epoch: number, batch: number, logs: Logs) => void | Promise<void>;\n  // Used for test DI mocking.\n  nowFunc?: Function;\n  nextFrameFunc?: Function;\n}\n\n/**\n * Custom callback for training.\n */\nexport class CustomCallback extends BaseCallback {\n  protected readonly trainBegin: (logs?: Logs) => void | Promise<void>;\n  protected readonly trainEnd: (logs?: Logs) => void | Promise<void>;\n  protected readonly epochBegin:\n      (epoch: number, logs?: Logs) => void | Promise<void>;\n  protected readonly epochEnd:\n      (epoch: number, logs?: Logs) => void | Promise<void>;\n  protected readonly batchBegin:\n      (batch: number, logs?: Logs) => void | Promise<void>;\n  protected readonly batchEnd:\n      (batch: number, logs?: Logs) => void | Promise<void>;\n  protected readonly yield:\n      (epoch: number, batch: number, logs: Logs) => void | Promise<void>;\n\n  private yieldEvery: YieldEveryOptions;\n  private currentEpoch = 0;\n  public nowFunc: Function;\n  public nextFrameFunc: Function;\n\n  constructor(args: CustomCallbackArgs, yieldEvery?: YieldEveryOptions) {\n    super();\n    this.nowFunc = args.nowFunc;\n    this.nextFrameFunc = args.nextFrameFunc || nextFrame;\n    this.yieldEvery = yieldEvery || 'auto';\n    if (this.yieldEvery === 'auto') {\n      this.yieldEvery = DEFAULT_YIELD_EVERY_MS;\n    }\n    if (this.yieldEvery === 'never' && args.onYield != null) {\n      throw new Error(\n          'yieldEvery is `never` but you provided an `onYield` callback. ' +\n          'Either change `yieldEvery` or remove the callback');\n    }\n    if (util.isNumber(this.yieldEvery)) {\n      // Decorate `maybeWait` so it will be called at most once every\n      // `yieldEvery` ms.\n      this.maybeWait = generic_utils.debounce(\n          this.maybeWait.bind(this), this.yieldEvery as number, this.nowFunc);\n    }\n    this.trainBegin = args.onTrainBegin;\n    this.trainEnd = args.onTrainEnd;\n    this.epochBegin = args.onEpochBegin;\n    this.epochEnd = args.onEpochEnd;\n    this.batchBegin = args.onBatchBegin;\n    this.batchEnd = args.onBatchEnd;\n    this.yield = args.onYield;\n  }\n\n  async maybeWait(epoch: number, batch: number, logs: UnresolvedLogs) {\n    const ps: Array<void|Promise<void>> = [];\n    if (this.yield != null) {\n      await resolveScalarsInLogs(logs);\n      ps.push(this.yield(epoch, batch, logs as Logs));\n    }\n    ps.push(this.nextFrameFunc());\n    await Promise.all(ps);\n  }\n\n  async onEpochBegin(epoch: number, logs?: UnresolvedLogs): Promise<void> {\n    this.currentEpoch = epoch;\n    if (this.epochBegin != null) {\n      await resolveScalarsInLogs(logs);\n      await this.epochBegin(epoch, logs as Logs);\n    }\n  }\n\n  async onEpochEnd(epoch: number, logs?: UnresolvedLogs): Promise<void> {\n    const ps: Array<void|Promise<void>> = [];\n    if (this.epochEnd != null) {\n      await resolveScalarsInLogs(logs);\n      ps.push(this.epochEnd(epoch, logs as Logs));\n    }\n    if (this.yieldEvery === 'epoch') {\n      ps.push(this.nextFrameFunc());\n    }\n    await Promise.all(ps);\n  }\n\n  async onBatchBegin(batch: number, logs?: UnresolvedLogs): Promise<void> {\n    if (this.batchBegin != null) {\n      await resolveScalarsInLogs(logs);\n      await this.batchBegin(batch, logs as Logs);\n    }\n  }\n\n  async onBatchEnd(batch: number, logs?: UnresolvedLogs): Promise<void> {\n    const ps: Array<void|Promise<void>> = [];\n    if (this.batchEnd != null) {\n      await resolveScalarsInLogs(logs);\n      ps.push(this.batchEnd(batch, logs as Logs));\n    }\n    if (this.yieldEvery === 'batch') {\n      ps.push(this.nextFrameFunc());\n    } else if (util.isNumber(this.yieldEvery)) {\n      ps.push(this.maybeWait(this.currentEpoch, batch, logs));\n    }\n    await Promise.all(ps);\n  }\n\n  async onTrainBegin(logs?: UnresolvedLogs): Promise<void> {\n    if (this.trainBegin != null) {\n      await resolveScalarsInLogs(logs);\n      await this.trainBegin(logs as Logs);\n    }\n  }\n\n  async onTrainEnd(logs?: UnresolvedLogs): Promise<void> {\n    if (this.trainEnd != null) {\n      await resolveScalarsInLogs(logs);\n      await this.trainEnd(logs as Logs);\n    }\n  }\n}\n\n/**\n * Standardize callbacks or configurations of them to an Array of callbacks.\n */\nexport function standardizeCallbacks(\n    callbacks: BaseCallback|BaseCallback[]|CustomCallbackArgs|\n    CustomCallbackArgs[],\n    yieldEvery: YieldEveryOptions): BaseCallback[] {\n  if (callbacks == null) {\n    callbacks = {} as BaseCallback;\n  }\n  if (callbacks instanceof BaseCallback) {\n    return [callbacks];\n  }\n  if (Array.isArray(callbacks) && callbacks[0] instanceof BaseCallback) {\n    return callbacks as BaseCallback[];\n  }\n  // Convert custom callback configs to custom callback objects.\n  const callbackConfigs =\n      generic_utils.toList(callbacks) as CustomCallbackArgs[];\n  return callbackConfigs.map(\n      callbackConfig => new CustomCallback(callbackConfig, yieldEvery));\n}\n\nexport declare type BaseCallbackConstructor = {\n  new (): BaseCallback\n};\n\n/**\n * A global registry for callback constructors to be used during\n * LayersModel.fit().\n */\nexport class CallbackConstructorRegistry {\n  private static constructors:\n      {[verbosityLevel: number]: BaseCallbackConstructor[]} = {};\n\n  /**\n   * Blocks public access to constructor.\n   */\n  private constructor() {}\n\n  /**\n   * Register a tf.LayersModel.fit() callback constructor.\n   *\n   * The registered callback constructor will be used to instantiate\n   * callbacks for every tf.LayersModel.fit() call afterwards.\n   *\n   * @param verbosityLevel Level of verbosity at which the `callbackConstructor`\n   *   is to be reigstered.\n   * @param callbackConstructor A no-arg constructor for `tf.Callback`.\n   * @throws Error, if the same callbackConstructor has been registered before,\n   *   either at the same or a different `verbosityLevel`.\n   */\n  static registerCallbackConstructor(\n      verbosityLevel: number, callbackConstructor: BaseCallbackConstructor) {\n    util.assert(\n        verbosityLevel >= 0 && Number.isInteger(verbosityLevel),\n        () => `Verbosity level is expected to be an integer >= 0, ` +\n            `but got ${verbosityLevel}`);\n    CallbackConstructorRegistry.checkForDuplicate(callbackConstructor);\n    if (CallbackConstructorRegistry.constructors[verbosityLevel] == null) {\n      CallbackConstructorRegistry.constructors[verbosityLevel] = [];\n    }\n    CallbackConstructorRegistry.constructors[verbosityLevel].push(\n        callbackConstructor);\n  }\n\n  private static checkForDuplicate(callbackConstructor:\n                                       BaseCallbackConstructor) {\n    for (const levelName in CallbackConstructorRegistry.constructors) {\n      const constructors = CallbackConstructorRegistry.constructors[+levelName];\n      constructors.forEach(ctor => {\n        if (ctor === callbackConstructor) {\n          throw new ValueError('Duplicate callback constructor.');\n        }\n      });\n    }\n  }\n\n  /**\n   * Clear all registered callback constructors.\n   */\n  protected static clear() {\n    CallbackConstructorRegistry.constructors = {};\n  }\n\n  /**\n   * Create callbacks using the registered callback constructors.\n   *\n   * Given `verbosityLevel`, all constructors registered at that level or above\n   * will be called and the instantiated callbacks will be used.\n   *\n   * @param verbosityLevel: Level of verbosity.\n   */\n  static createCallbacks(verbosityLevel: number): BaseCallback[] {\n    const constructors: BaseCallbackConstructor[] = [];\n    for (const levelName in CallbackConstructorRegistry.constructors) {\n      const level = +levelName;\n      if (verbosityLevel >= level) {\n        constructors.push(...CallbackConstructorRegistry.constructors[level]);\n      }\n    }\n    return constructors.map(ctor => new ctor());\n  }\n}\n\nexport function configureCallbacks(\n    callbacks: BaseCallback[], verbose: ModelLoggingVerbosity, epochs: number,\n    initialEpoch: number, numTrainSamples: number, stepsPerEpoch: number,\n    batchSize: number, doValidation: boolean,\n    callbackMetrics: string[]): {callbackList: CallbackList, history: History} {\n  const history = new History();\n  const actualCallbacks: BaseCallback[] = [\n    new BaseLogger(), ...CallbackConstructorRegistry.createCallbacks(verbose)\n  ];\n  if (callbacks != null) {\n    actualCallbacks.push(...callbacks);\n  }\n  actualCallbacks.push(history);\n  const callbackList = new CallbackList(actualCallbacks);\n\n  // TODO(cais): Figure out when this LayersModel instance can have a\n  // dynamically\n  //   set property called 'callback_model' as in PyKeras.\n\n  callbackList.setParams({\n    epochs,\n    initialEpoch,\n    samples: numTrainSamples,\n    steps: stepsPerEpoch,\n    batchSize,\n    verbose,\n    doValidation,\n    metrics: callbackMetrics,\n  });\n  return {callbackList, history};\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {dispose, Scalar} from '@tensorflow/tfjs-core';\n\n/**\n * Logs in which values can be either numbers or Tensors (Scalars).\n *\n * Used internally.\n */\nexport type UnresolvedLogs = {\n  [key: string]: number|Scalar;\n};\n\n/**\n * Turn any Scalar values in a Logs object into actual number values.\n *\n * @param logs The `Logs` object to be resolved in place.\n */\nexport async function resolveScalarsInLogs(logs: UnresolvedLogs) {\n  if (logs == null) {\n    return;\n  }\n  const promises: Array<Promise<Float32Array|Int32Array|Uint8Array>> = [];\n  const keys: string[] = [];\n  const scalarsToDispose: Scalar[] = [];\n  for (const key in logs) {\n    const value = logs[key];\n    if (typeof value !== 'number') {\n      const valueScalar = value;\n      promises.push(valueScalar.data());\n      keys.push(key);\n      scalarsToDispose.push(valueScalar);\n    }\n  }\n  if (promises.length > 0) {\n    const values = await Promise.all(promises);\n    for (let i = 0; i < values.length; ++i) {\n      logs[keys[i]] = values[i][0];\n    }\n    // Dispose the original scalar tensors.\n    dispose(scalarsToDispose);\n  }\n}\n\n/**\n * Dispose all Tensors in an UnresolvedLogs object.\n *\n * @param logs An `UnresolvedLogs` object potentially containing `tf.Tensor`s in\n *   places where the values can be `tf.Tensor` or `number`.\n */\nexport function disposeTensorsInLogs(logs: UnresolvedLogs) {\n  if (logs == null) {\n    return;\n  }\n  for (const key in logs) {\n    const value = logs[key];\n    if (typeof value !== 'number') {\n      value.dispose();\n    }\n  }\n}\n\n/**\n * Logs in which values can only be numbers.\n *\n * Used when calling client-provided custom callbacks.\n */\nexport type Logs = {\n  [key: string]: number;\n};\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original Source: engine/training.py */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {io, ModelPredictConfig as ModelPredictArgs, NamedTensorMap, Optimizer, Scalar, scalar, serialization, Tensor, Tensor1D, tensor1d, util} from '@tensorflow/tfjs-core';\n\nimport * as K from '../backend/tfjs_backend';\nimport {History, ModelLoggingVerbosity} from '../base_callbacks';\nimport {nameScope} from '../common';\nimport {NotImplementedError, RuntimeError, ValueError} from '../errors';\nimport {Shape} from '../keras_format/common';\nimport {LossIdentifier} from '../keras_format/loss_config';\nimport {OptimizerSerialization} from '../keras_format/optimizer_config';\nimport {MetricsIdentifier, TrainingConfig} from '../keras_format/training_config';\nimport {deserialize} from '../layers/serialization';\nimport * as losses from '../losses';\nimport * as Metrics from '../metrics';\nimport * as optimizers from '../optimizers';\nimport {LossOrMetricFn, NamedTensor} from '../types';\nimport {checkUserDefinedMetadata} from '../user_defined_metadata';\nimport {count, pyListRepeat, singletonOrArray, toCamelCase, toSnakeCase, unique} from '../utils/generic_utils';\nimport {printSummary} from '../utils/layer_utils';\nimport {range} from '../utils/math_utils';\nimport {convertPythonicToTs} from '../utils/serialization_utils';\nimport {LayerVariable} from '../variables';\nimport {version} from '../version';\n\nimport {Container, ContainerArgs} from './container';\nimport {Dataset} from './dataset_stub';\nimport {execute, FeedDict} from './executor';\nimport {DisposeResult, SymbolicTensor} from './topology';\nimport {evaluateDataset, fitDataset, ModelEvaluateDatasetArgs, ModelFitDatasetArgs} from './training_dataset';\nimport {checkBatchSize, disposeNewTensors, ensureTensorsRank2OrHigher, fitTensors, makeBatches, ModelFitArgs, sliceArrays, sliceArraysByIndices} from './training_tensors';\nimport {ClassWeight, ClassWeightMap, computeWeightedLoss, standardizeClassWeights, standardizeWeights} from './training_utils';\n\n/**\n * Helper function for polymorphic input data: 1. singleton Tensor.\n */\nexport function isDataTensor(x: Tensor|Tensor[]|{[inputName: string]: Tensor}|\n                             {[inputName: string]: Tensor[]}): boolean {\n  return x instanceof Tensor;\n}\n\n/**\n * Helper function for polymorphic input data: 2. Array of Tensor.\n */\nexport function isDataArray(x: Tensor|Tensor[]|\n                            {[inputName: string]: Tensor}): boolean {\n  return Array.isArray(x);\n}\n\n/**\n * Helper function for polymorphic input data: 3. \"dict\" of Tensor.\n */\nexport function isDataDict(x: Tensor|Tensor[]|\n                           {[inputName: string]: Tensor}): boolean {\n  return !isDataTensor(x) && !isDataArray(x);\n}\n\n/**\n * Normalizes inputs and targets provided by users.\n * @param data User-provided input data (polymorphic).\n * @param names An Array of expected Tensor names.\n * @param shapes Optional Array of expected Tensor shapes.\n * @param checkBatchAxis Whether to check that the batch axis of the arrays\n *   match  the expected value found in `shapes`.\n * @param exceptionPrefix String prefix used for exception formatting.\n * @returns List of standardized input Tensors (one Tensor per model input).\n * @throws ValueError: in case of improperly formatted user data.\n */\nexport function standardizeInputData(\n    data: Tensor|Tensor[]|{[inputName: string]: Tensor}, names: string[],\n    shapes?: Shape[], checkBatchAxis = true, exceptionPrefix = ''): Tensor[] {\n  if (names == null || names.length === 0) {\n    // Check for the case where the model expected no data, but some data got\n    // sent.\n    if (data != null) {\n      let gotUnexpectedData = false;\n      if (isDataArray(data) && (data as Tensor[]).length > 0) {\n        gotUnexpectedData = true;\n      } else if (isDataDict(data)) {\n        for (const key in data) {\n          if (data.hasOwnProperty(key)) {\n            gotUnexpectedData = true;\n            break;\n          }\n        }\n      } else {\n        // `data` is a singleton Tensor in this case.\n        gotUnexpectedData = true;\n      }\n      if (gotUnexpectedData) {\n        throw new ValueError(\n            `Error when checking model ${exceptionPrefix} expected no data, ` +\n            `but got ${data}`);\n      }\n    }\n    return [];\n  }\n  if (data == null) {\n    return names.map(name => null);\n  }\n\n  let arrays: Tensor[];\n  if (isDataDict(data)) {\n    data = data as {[inputName: string]: Tensor};\n    arrays = [];\n    for (const name of names) {\n      if (data[name] == null) {\n        throw new ValueError(\n            `No data provided for \"${name}\". Need data for each key in: ` +\n            `${names}`);\n      }\n      arrays.push(data[name]);\n    }\n  } else if (isDataArray(data)) {\n    data = data as Tensor[];\n    if (data.length !== names.length) {\n      throw new ValueError(\n          `Error when checking model ${exceptionPrefix}: the Array of ` +\n          `Tensors that you are passing to your model is not the size the ` +\n          `model expected. Expected to see ${names.length} Tensor(s), but ` +\n          `instead got the following list of Tensor(s): ${data}`);\n    }\n    arrays = data;\n  } else {\n    data = data as Tensor;\n    if (names.length > 1) {\n      throw new ValueError(\n          `The model ${exceptionPrefix} expects ${names.length} Tensor(s), ` +\n          `but only received one Tensor. Found: Tensor with shape ${\n              data.shape}`);\n    }\n    arrays = [data];\n  }\n\n  arrays = ensureTensorsRank2OrHigher(arrays);\n\n  // Check shape compatibility.\n  if (shapes != null) {\n    for (let i = 0; i < names.length; ++i) {\n      if (shapes[i] == null) {\n        continue;\n      }\n      const array = arrays[i];\n      if (array.shape.length !== shapes[i].length) {\n        throw new ValueError(\n            `Error when checking ${exceptionPrefix}: expected ${names[i]} ` +\n            `to have ${shapes[i].length} dimension(s). but got array with ` +\n            `shape ${array.shape}`);\n      }\n      for (let j = 0; j < shapes[i].length; ++j) {\n        if (j === 0 && !checkBatchAxis) {\n          // Skip the first (batch) axis.\n          continue;\n        }\n        const dim = array.shape[j];\n        const refDim = shapes[i][j];\n        if (refDim != null && refDim >= 0 && dim !== refDim) {\n          throw new ValueError(\n              `${exceptionPrefix} expected a batch of elements where each ` +\n              `example has shape [${shapes[i].slice(1, shapes[i].length)}] ` +\n              `(i.e.,tensor shape [*,${\n                  shapes[i].slice(1, shapes[i].length)}])` +\n              ` but the ${exceptionPrefix} received an input with ${\n                  array.shape[0]}` +\n              ` examples, each with shape [${\n                  array.shape.slice(1, array.shape.length)}]` +\n              ` (tensor shape [${array.shape}])`);\n        }\n      }\n    }\n  }\n  return arrays;\n}\n\n/**\n * User input validation for Tensors.\n * @param inputs `Array` of `tf.Tensor`s for inputs.\n * @param targets `Array` of `tf.Tensor`s for targets.\n * @param weights Optional `Array` of `tf.Tensor`s for sample weights.\n * @throws ValueError: in case of incorrectly formatted data.\n */\nexport function checkArrayLengths(\n    inputs: Tensor[], targets: Tensor[], weights?: Tensor[]) {\n  const setX = unique(inputs.map(input => input.shape[0]));\n  setX.sort();\n  const setY = unique(targets.map(target => target.shape[0]));\n  setY.sort();\n  // TODO(cais): Check `weights` as well.\n  if (setX.length > 1) {\n    throw new ValueError(\n        `All input Tensors (x) should have the same number of samples. ` +\n        `Got array shapes: ` +\n        `${JSON.stringify(inputs.map(input => input.shape))}`);\n  }\n  if (setY.length > 1) {\n    throw new ValueError(\n        `All target Tensors (y) should have the same number of samples. ` +\n        `Got array shapes: ` +\n        `${JSON.stringify(targets.map(target => target.shape))}`);\n  }\n  if (setX.length > 0 && setY.length > 0 && !util.arraysEqual(setX, setY)) {\n    throw new ValueError(\n        `Input Tensors should have the same number of samples as target ` +\n        `Tensors. Found ${setX[0]} input sample(s) and ${setY[0]} target ` +\n        `sample(s).`);\n  }\n}\n\n/**\n * Validation on the compatibility of targes and loss functions.\n *\n * This helps prevent users from using loss functions incorrectly.\n *\n * @param targets `Array` of `tf.Tensor`s of targets.\n * @param lossFns `Array` of loss functions.\n * @param outputShapes `Array` of shapes of model outputs.\n */\nfunction checkLossAndTargetCompatibility(\n    targets: Tensor[], lossFns: LossOrMetricFn[], outputShapes: Shape[]) {\n  // TODO(cais): Dedicated test coverage?\n  const keyLosses = [\n    losses.meanSquaredError, losses.binaryCrossentropy,\n    losses.categoricalCrossentropy\n  ];\n  for (let i = 0; i < targets.length; ++i) {\n    const y = targets[i];\n    const loss = lossFns[i];\n    const shape = outputShapes[i];\n    if (loss == null) {\n      continue;\n    }\n    if (loss === losses.categoricalCrossentropy) {\n      if (y.shape[y.shape.length - 1] === 1) {\n        throw new ValueError(\n            `You are passing a target array of shape ${y.shape} while using ` +\n            `a loss 'categorical_crossentropy'. 'categorical_crossentropy'` +\n            `expects targets to be binary matrices (1s and 0s) of shape ` +\n            `[samples, classes].`);\n        // TODO(cais): Example code in error message.\n      }\n    }\n    if (keyLosses.indexOf(loss) !== -1) {\n      const slicedYShape = y.shape.slice(1);\n      const slicedShape = shape.slice(1);\n      for (let j = 0; j < slicedYShape.length; ++j) {\n        const targetDim = slicedYShape[j];\n        const outDim = slicedShape[j];\n        if (outDim != null && targetDim !== outDim) {\n          throw new ValueError(\n              `A target Tensor with shape ${y.shape} was passed for an ` +\n              `output of shape ${shape}, while using a loss function that ` +\n              `expects targets to have the same shape as the output.`);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Check inputs provided by the user.\n *\n * Porting Note: This corresponds to _standardize_input_data() in Python\n *   Keras. Because of the strong typing in TF.js, we do not need to convert\n *   the data. Specifically:\n *   1) in PyKeras, `data` can be `DataFrame` instances from pandas, for\n *      example. We don't need to worry about that here because there is no\n *      widely popular javascript/typesdcript equivalent of pandas (so far).\n *      If one becomes available in the future, we can add support.\n *   2) in PyKeras, inputs can be Python dict. But here we are stipulating\n * that the data is either a single `tf.Tensor` or an Array of `tf.Tensor`s. We\n * may add support for `Object` data inputs in the future when the need\n * arises.\n *\n * Instead, we perform basic checks for number of parameters and shapes.\n *\n * @param data: The input data.\n * @param names: Name for the inputs, from the model.\n * @param shapes: Expected shapes for the input data, from the model.\n * @param checkBatchAxis: Whether the size along the batch axis (i.e., the\n *   first dimension) will be checked for matching.\n * @param exceptionPrefix: Execption prefix message, used in generating error\n *   messages.\n * @throws ValueError: on incorrect number of inputs or mismatches in shapes.\n */\nfunction checkInputData(\n    data: Tensor|Tensor[], names: string[], shapes?: Shape[],\n    checkBatchAxis = true, exceptionPrefix = '') {\n  let arrays: Tensor[];\n  if (Array.isArray(data)) {\n    if (data.length !== names.length) {\n      throw new ValueError(\n          `Error when checking model ${exceptionPrefix}: the Array of ` +\n          `Tensors that you are passing to your model is not the size the ` +\n          `the model expected. Expected to see ${names.length} Tensor(s),` +\n          ` but instead got ${data.length} Tensors(s).`);\n    }\n    arrays = data;\n  } else {\n    if (names.length > 1) {\n      throw new ValueError(\n          `The model expects ${names.length} ${exceptionPrefix} Tensors, ` +\n          `but only received one Tensor. Found: array with shape ` +\n          `${JSON.stringify(data.shape)}.`);\n    }\n    arrays = [data];\n  }\n\n  if (shapes != null) {\n    for (let i = 0; i < names.length; ++i) {\n      if (shapes[i] == null) {\n        continue;\n      }\n      const array = arrays[i];\n      if (array.shape.length !== shapes[i].length) {\n        throw new ValueError(\n            `Error when checking ${exceptionPrefix}: expected ${names[i]} ` +\n            `to have ${shapes[i].length} dimension(s), but got array with ` +\n            `shape ${JSON.stringify(array.shape)}`);\n      }\n      for (let j = 0; j < shapes[i].length; ++j) {\n        if (j === 0 && !checkBatchAxis) {\n          continue;\n        }\n        const dim = array.shape[j];\n        const refDim = shapes[i][j];\n        if (refDim != null) {\n          if (refDim !== dim) {\n            throw new ValueError(\n                `Error when checking ${exceptionPrefix}: expected ` +\n                `${names[i]} to have shape ${JSON.stringify(shapes[i])} but ` +\n                `got array with shape ${JSON.stringify(array.shape)}.`);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Maps metric functions to model outputs.\n * @param metrics An shortcut strings name, metric function, `Array` or dict\n *   (`Object`) of metric functions.\n * @param outputNames An `Array` of the names of model outputs.\n * @returns An `Array` (one entry per model output) of `Array` of metric\n *   functions. For instance, if the model has 2 outputs, and for the first\n *   output we want to compute `binaryAccuracy` and `binaryCrossentropy`,\n *   and just `binaryAccuracy` for the second output, the `Array` would look\n *   like:\n *     `[[binaryAccuracy, binaryCrossentropy],  [binaryAccuracy]]`\n * @throws TypeError: incompatible metrics format.\n */\nexport function collectMetrics(\n    metrics: string|LossOrMetricFn|Array<string|LossOrMetricFn>|\n    {[outputName: string]: string | LossOrMetricFn},\n    outputNames: string[]): Array<Array<string|LossOrMetricFn>> {\n  if (metrics == null || Array.isArray(metrics) && metrics.length === 0) {\n    return outputNames.map(name => []);\n  }\n\n  let wrappedMetrics: Array<string|LossOrMetricFn>|\n      {[outputName: string]: string | LossOrMetricFn};\n  if (typeof metrics === 'string' || typeof metrics === 'function') {\n    wrappedMetrics = [metrics];\n  } else if (Array.isArray(metrics) || typeof metrics === 'object') {\n    wrappedMetrics = metrics as Array<string|LossOrMetricFn>|\n        {[outputName: string]: string} | {[outputName: string]: LossOrMetricFn};\n  } else {\n    throw new TypeError(\n        'Type of metrics argument not understood. Expected an string,' +\n        `function, Array, or Object, found: ${metrics}`);\n  }\n\n  if (Array.isArray(wrappedMetrics)) {\n    // We then apply all metrics to all outputs.\n    return outputNames.map(\n        name => wrappedMetrics as Array<string|LossOrMetricFn>);\n  } else {\n    // In this case, metrics is a dict.\n    const nestedMetrics: Array<Array<string|LossOrMetricFn>> = [];\n    for (const name of outputNames) {\n      let outputMetrics: string|LossOrMetricFn|Array<string|LossOrMetricFn> =\n          wrappedMetrics.hasOwnProperty(name) ? wrappedMetrics[name] : [];\n      if (!Array.isArray(outputMetrics)) {\n        outputMetrics = [outputMetrics];\n      }\n      nestedMetrics.push(outputMetrics);\n    }\n    return nestedMetrics;\n  }\n}\n\nexport interface ModelEvaluateArgs {\n  /**\n   * Batch size (Integer). If unspecified, it will default to 32.\n   */\n  batchSize?: number;\n\n  /**\n   * Verbosity mode.\n   */\n  verbose?: ModelLoggingVerbosity;\n\n  /**\n   * Tensor of weights to weight the contribution of different samples to the\n   * loss and metrics.\n   */\n  sampleWeight?: Tensor;\n\n  /**\n   * integer: total number of steps (batches of samples)\n   * before declaring the evaluation round finished. Ignored with the default\n   * value of `undefined`.\n   */\n  steps?: number;\n}\n\n/**\n * Configuration for calls to `LayersModel.compile()`.\n */\nexport interface ModelCompileArgs {\n  /**\n   * An instance of `tf.train.Optimizer` or a string name for an Optimizer.\n   */\n  optimizer: string|Optimizer;\n\n  /**\n   * Object function(s) or name(s) of object function(s).\n   * If the model has multiple outputs, you can use a different loss\n   * on each output by passing a dictionary or an Array of losses.\n   * The loss value that will be minimized by the model will then be the sum\n   * of all individual losses.\n   */\n  loss: string|string[]|{[outputName: string]: string}|LossOrMetricFn|\n      LossOrMetricFn[]|{[outputName: string]: LossOrMetricFn};\n\n  /**\n   * List of metrics to be evaluated by the model during training and testing.\n   * Typically you will use `metrics=['accuracy']`.\n   * To specify different metrics for different outputs of a multi-output\n   * model, you could also pass a dictionary.\n   */\n  metrics?: string|LossOrMetricFn|Array<string|LossOrMetricFn>|\n      {[outputName: string]: string | LossOrMetricFn};\n\n  // TODO(cais): Add lossWeights, sampleWeightMode, weightedMetrics, and\n  //   targetTensors.\n}\n\nconst LAYERS_MODEL_FORMAT_NAME = 'layers-model';\n\n/**\n * A `tf.LayersModel` is a directed, acyclic graph of `tf.Layer`s plus methods\n * for training, evaluation, prediction and saving.\n *\n * `tf.LayersModel` is the basic unit of training, inference and evaluation in\n * TensorFlow.js. To create a `tf.LayersModel`, use `tf.LayersModel`.\n *\n * See also:\n *   `tf.Sequential`, `tf.loadLayersModel`.\n *\n * @doc {heading: 'Models', subheading: 'Classes'}\n */\nexport class LayersModel extends Container implements tfc.InferenceModel {\n  // The class name is 'Model' rather than 'LayersModel' for backwards\n  // compatibility since this class name shows up in the serialization format.\n  /** @nocollapse */\n  static className = 'Model';\n  protected optimizer_: Optimizer;\n  // Whether the model instance owns the optimizer: `true` if and only if\n  // `optimizer` is created from a string parameter during `compile()` call.\n  protected isOptimizerOwned: boolean;\n\n  loss: string|string[]|{[outputName: string]: string}|LossOrMetricFn|\n      LossOrMetricFn[]|{[outputName: string]: LossOrMetricFn};\n  lossFunctions: LossOrMetricFn[];\n\n  // TODO(cais): These private variables should probably not have the string\n  //   'feed' in their names, because we are not dealing with a symbolic\n  //   backend.\n  private feedOutputShapes: Shape[];\n  private feedLossFns: LossOrMetricFn[];\n  private collectedTrainableWeights: LayerVariable[];\n  private testFunction: (data: Tensor[]) => Scalar[];\n  history: History;\n\n  // A public property that can be set by Callbacks to order early stopping\n  // during `fit()` calls.\n  protected stopTraining_: boolean;\n  protected isTraining: boolean;\n\n  metrics: string|LossOrMetricFn|Array<string|LossOrMetricFn>|\n      {[outputName: string]: string | LossOrMetricFn};\n  metricsNames: string[];\n  // Porting Note: `metrics_tensors` in PyKeras is a symbolic tensor. But given\n  //   the imperative nature of tfjs-core, `metricsTensors` is a\n  //   TypeScript function here.\n  //   Also note that due to the imperative nature of tfjs-core, `metricsTensor`\n  //   here needs an output index to keep track of which output of the\n  //   LayersModel a metric belongs to. This is unlike `metrics_tensors` in\n  //   PyKeras, which is a `list` of symbolic tensors, each of which has\n  //   implicit \"knowledge\" of the outputs it depends on.\n  metricsTensors: Array<[LossOrMetricFn, number]>;\n\n  // User defind metadata (if any).\n  private userDefinedMetadata: {};\n\n  constructor(args: ContainerArgs) {\n    super(args);\n    this.isTraining = false;\n  }\n\n  /**\n   * Print a text summary of the model's layers.\n   *\n   * The summary includes\n   * - Name and type of all layers that comprise the model.\n   * - Output shape(s) of the layers\n   * - Number of weight parameters of each layer\n   * - If the model has non-sequential-like topology, the inputs each layer\n   *   receives\n   * - The total number of trainable and non-trainable parameters of the model.\n   *\n   * ```js\n   * const input1 = tf.input({shape: [10]});\n   * const input2 = tf.input({shape: [20]});\n   * const dense1 = tf.layers.dense({units: 4}).apply(input1);\n   * const dense2 = tf.layers.dense({units: 8}).apply(input2);\n   * const concat = tf.layers.concatenate().apply([dense1, dense2]);\n   * const output =\n   *     tf.layers.dense({units: 3, activation: 'softmax'}).apply(concat);\n   *\n   * const model = tf.model({inputs: [input1, input2], outputs: output});\n   * model.summary();\n   * ```\n   *\n   * @param lineLength Custom line length, in number of characters.\n   * @param positions Custom widths of each of the columns, as either\n   *   fractions of `lineLength` (e.g., `[0.5, 0.75, 1]`) or absolute number\n   *   of characters (e.g., `[30, 50, 65]`). Each number corresponds to\n   *   right-most (i.e., ending) position of a column.\n   * @param printFn Custom print function. Can be used to replace the default\n   *   `console.log`. For example, you can use `x => {}` to mute the printed\n   *   messages in the console.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  summary(\n      lineLength?: number, positions?: number[],\n      printFn:\n          // tslint:disable-next-line:no-any\n      (message?: any, ...optionalParams: any[]) => void = console.log) {\n    if (!this.built) {\n      throw new ValueError(\n          `This model has never been called, thus its weights have not been ` +\n          `created yet. So no summary can be displayed. Build the model ` +\n          `first (e.g., by calling it on some test data).`);\n    }\n    printSummary(this, lineLength, positions, printFn);\n  }\n\n  /**\n   * Configures and prepares the model for training and evaluation.  Compiling\n   * outfits the model with an optimizer, loss, and/or metrics.  Calling `fit`\n   * or `evaluate` on an un-compiled model will throw an error.\n   *\n   * @param args a `ModelCompileArgs` specifying the loss, optimizer, and\n   * metrics to be used for fitting and evaluating this model.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  compile(args: ModelCompileArgs): void {\n    if (args.loss == null) {\n      args.loss = [];\n    }\n    this.loss = args.loss;\n\n    if (typeof args.optimizer === 'string') {\n      this.optimizer_ = optimizers.getOptimizer(args.optimizer);\n      this.isOptimizerOwned = true;\n    } else {\n      if (!(args.optimizer instanceof Optimizer)) {\n        throw new ValueError(\n            `User-defined optimizer must be an instance of tf.Optimizer.`);\n      }\n      this.optimizer_ = args.optimizer;\n      this.isOptimizerOwned = false;\n    }\n\n    // TODO(cais): Add lossWeights.\n    // TODO(cais): Add sampleWeightMode.\n\n    // Prepare loss functions.\n    let lossFunctions: LossOrMetricFn[] = [];\n    if (!Array.isArray(args.loss) && typeof args.loss !== 'string' &&\n        typeof args.loss !== 'function') {\n      args.loss = args.loss as {[outputName: string]: string};\n      for (const name in args.loss) {\n        if (this.outputNames.indexOf(name) === -1) {\n          throw new ValueError(\n              `Unknown entry in loss dictionary: \"${name}\". ` +\n              `Only expected the following keys: ${this.outputNames}`);\n        }\n      }\n      for (const name of this.outputNames) {\n        if (args.loss[name] == null) {\n          console.warn(\n              `Output \"${name}\" is missing from loss dictionary. We assume ` +\n              `this was done on purpose, and we will not be expecting data ` +\n              `to be passed to ${name} during training`);\n        }\n        lossFunctions.push(losses.get(args.loss[name]));\n      }\n    } else if (Array.isArray(args.loss)) {\n      if (args.loss.length !== this.outputs.length) {\n        throw new ValueError(\n            `When passing an Array as loss, it should have one entry per ` +\n            `model output. The model has ${this.outputs.length} output(s), ` +\n            `but you passed loss=${args.loss}.`);\n      }\n      const theLosses = args.loss as Array<string|LossOrMetricFn>;\n      lossFunctions = theLosses.map(l => losses.get(l));\n    } else {\n      const lossFunction = losses.get(args.loss);\n      this.outputs.forEach(_ => {\n        lossFunctions.push(lossFunction);\n      });\n    }\n\n    this.lossFunctions = lossFunctions;\n\n    this.feedOutputNames = [];\n    this.feedOutputShapes = [];\n    this.feedLossFns = [];\n    for (let i = 0; i < this.outputs.length; ++i) {\n      // TODO(cais): Logic for skipping target(s).\n      const shape = this.internalOutputShapes[i];\n      const name = this.outputNames[i];\n      this.feedOutputNames.push(name);\n      this.feedOutputShapes.push(shape);\n      this.feedLossFns.push(this.lossFunctions[i]);\n    }\n\n    // TODO(cais): Add logic for output masks.\n    // TODO(cais): Add logic for sample weights.\n    const skipTargetIndices: number[] = [];\n\n    // Prepare metrics.\n    this.metrics = args.metrics;\n    // TODO(cais): Add weightedMetrics.\n    this.metricsNames = ['loss'];\n    this.metricsTensors = [];\n\n    // Compute total loss.\n    // Porting Note: In PyKeras, metrics_tensors are symbolic tensor objects.\n    //   Here, metricsTensors are TypeScript functions. This difference is due\n    //   to the difference in symbolic/imperative property of the backends.\n    nameScope('loss', () => {\n      for (let i = 0; i < this.outputs.length; ++i) {\n        if (skipTargetIndices.indexOf(i) !== -1) {\n          continue;\n        }\n        // TODO(cais): Add weightedLoss, sampleWeight and mask.\n        //   The following line should be weightedLoss\n        const weightedLoss = this.lossFunctions[i];\n        if (this.outputs.length > 1) {\n          this.metricsTensors.push([weightedLoss, i]);\n          this.metricsNames.push(this.outputNames[i] + '_loss');\n        }\n      }\n\n      // Porting Note: Due to the imperative nature of the backend, we calculate\n      //   the regularizer penalties in the totalLossFunction, instead of here.\n    });\n\n    const nestedMetrics = collectMetrics(args.metrics, this.outputNames);\n    // TODO(cais): Add nestedWeightedMetrics.\n\n    /**\n     * Helper function used in loop below.\n     */\n    const appendMetric =\n        (outputIndex: number, metricName: string,\n         metricTensor: LossOrMetricFn) => {\n          if (this.outputNames.length > 1) {\n            metricName = this.outputNames[outputIndex] + '_' + metricName;\n          }\n          this.metricsNames.push(metricName);\n          this.metricsTensors.push([metricTensor, outputIndex]);\n        };\n\n    nameScope('metric', () => {\n      for (let i = 0; i < this.outputs.length; ++i) {\n        if (skipTargetIndices.indexOf(i) !== -1) {\n          continue;\n        }\n        const outputMetrics = nestedMetrics[i];\n        // TODO(cais): Add weights and outputWeightedMetrics.\n\n        // TODO(cais): Add optional arg `weights` to the following function.\n        const handleMetrics = (metrics: Array<string|LossOrMetricFn>) => {\n          const metricNamePrefix = '';\n          let metricName: string;\n          let accFn: LossOrMetricFn;\n          let weightedMetricFn: LossOrMetricFn;\n          //  TODO(cais): Use 'weights_' for weighted metrics.\n\n          for (const metric of metrics) {\n            if (typeof metric === 'string' &&\n                ['accuracy', 'acc', 'crossentropy', 'ce'].indexOf(metric) !==\n                    -1) {\n              const outputShape = this.internalOutputShapes[i];\n\n              if (outputShape[outputShape.length - 1] === 1 ||\n                  this.lossFunctions[i] === losses.binaryCrossentropy) {\n                // case: binary accuracy/crossentropy.\n                if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                  accFn = Metrics.binaryAccuracy;\n                } else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                  accFn = Metrics.binaryCrossentropy;\n                }\n              } else if (\n                  this.lossFunctions[i] ===\n                  losses.sparseCategoricalCrossentropy) {\n                // case: categorical accuracy / crossentropy with sparse\n                // targets.\n                if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                  accFn = Metrics.sparseCategoricalAccuracy;\n                } else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                  accFn = Metrics.sparseCategoricalCrossentropy;\n                }\n              } else {\n                // case: categorical accuracy / crossentropy.\n                if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                  accFn = Metrics.categoricalAccuracy;\n                } else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                  accFn = Metrics.categoricalCrossentropy;\n                }\n              }\n              let suffix: string;\n              if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                suffix = 'acc';\n              } else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                suffix = 'ce';\n              }\n              // TODO(cais): Add weighting actually.\n              weightedMetricFn = accFn;\n              metricName = metricNamePrefix + suffix;\n            } else {\n              const metricFn = Metrics.get(metric);\n              // TODO(cais): Add weighting actually.\n              weightedMetricFn = metricFn;\n              metricName =\n                  metricNamePrefix + Metrics.getLossOrMetricName(metric);\n            }\n\n            // TODO(cais): Add weighting and masking to metricResult.\n            let metricResult: LossOrMetricFn;\n            nameScope(metricName, () => {\n              metricResult = weightedMetricFn;\n            });\n            appendMetric(i, metricName, metricResult);\n          }\n        };\n\n        handleMetrics(outputMetrics);\n        // TODO(cais): Call handleMetrics with weights.\n      }\n    });\n\n    // Porting Notes: Given the imperative backend of tfjs-core,\n    //   there is no need for constructing the symbolic graph and placeholders.\n    this.collectedTrainableWeights = this.trainableWeights;\n  }\n\n  /**\n   * Check trainable weights count consistency.\n   *\n   * This will raise a warning if `this.trainableWeights` and\n   * `this.collectedTrainableWeights` are inconsistent (i.e., have different\n   * numbers of parameters).\n   * Inconsistency will typically arise when one modifies `model.trainable`\n   * without calling `model.compile()` again.\n   */\n  protected checkTrainableWeightsConsistency(): void {\n    if (this.collectedTrainableWeights == null) {\n      return;\n    }\n    if (this.trainableWeights.length !==\n        this.collectedTrainableWeights.length) {\n      console.warn(\n          'Discrepancy between trainableweights and collected trainable ' +\n          'weights. Did you set `model.trainable` without calling ' +\n          '`model.compile()` afterwards?');\n    }\n  }\n\n  /**\n   * Returns the loss value & metrics values for the model in test mode.\n   *\n   * Loss and metrics are specified during `compile()`, which needs to happen\n   * before calls to `evaluate()`.\n   *\n   * Computation is done in batches.\n   *\n   * ```js\n   * const model = tf.sequential({\n   *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]\n   * });\n   * model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});\n   * const result = model.evaluate(\n   *     tf.ones([8, 10]), tf.ones([8, 1]), {batchSize: 4});\n   * result.print();\n   * ```\n   *\n   * @param x `tf.Tensor` of test data, or an `Array` of `tf.Tensor`s if the\n   * model has multiple inputs.\n   * @param y `tf.Tensor` of target data, or an `Array` of `tf.Tensor`s if the\n   * model has multiple outputs.\n   * @param args A `ModelEvaluateArgs`, containing optional fields.\n   *\n   * @return `Scalar` test loss (if the model has a single output and no\n   *   metrics) or `Array` of `Scalar`s (if the model has multiple outputs\n   *   and/or metrics). The attribute `model.metricsNames`\n   *   will give you the display labels for the scalar outputs.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  evaluate(\n      x: Tensor|Tensor[], y: Tensor|Tensor[],\n      args: ModelEvaluateArgs = {}): Scalar|Scalar[] {\n    const batchSize = args.batchSize == null ? 32 : args.batchSize;\n    checkBatchSize(batchSize);\n\n    // TODO(cais): Standardize `config.sampleWeights` as well.\n    // Validate user data.\n    const checkBatchAxis = true;\n    const standardizedOuts =\n        this.standardizeUserDataXY(x, y, checkBatchAxis, batchSize);\n    try {\n      // TODO(cais): If uses `useLearningPhase`, set the corresponding element\n      // of the input to 0.\n      const ins = standardizedOuts[0].concat(standardizedOuts[1]);\n      this.makeTestFunction();\n      const f = this.testFunction;\n      const testOuts =\n          this.testLoop(f, ins, batchSize, args.verbose, args.steps);\n      return singletonOrArray(testOuts);\n    } finally {\n      disposeNewTensors(standardizedOuts[0], x);\n      disposeNewTensors(standardizedOuts[1], y);\n    }\n  }\n\n  // TODO(cais): Add code snippet below once real dataset objects are\n  //   available.\n  /**\n   * Evaluate model using a dataset object.\n   *\n   * Note: Unlike `evaluate()`, this method is asynchronous (`async`);\n   *\n   * @param dataset A dataset object. Its `iterator()` method is expected\n   *   to generate a dataset iterator object, the `next()` method of which\n   *   is expected to produce data batches for evaluation. The return value\n   *   of the `next()` call ought to contain a boolean `done` field and a\n   *   `value` field. The `value` field is expected to be an array of two\n   *   `tf.Tensor`s or an array of two nested `tf.Tensor` structures. The former\n   *   case is for models with exactly one input and one output (e.g..\n   *   a sequential model). The latter case is for models with multiple\n   *   inputs and/or multiple outputs. Of the two items in the array, the\n   *   first is the input feature(s) and the second is the output target(s).\n   * @param args A configuration object for the dataset-based evaluation.\n   * @returns Loss and metric values as an Array of `Scalar` objects.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  async evaluateDataset(dataset: Dataset<{}>, args?: ModelEvaluateDatasetArgs):\n      Promise<Scalar|Scalar[]> {\n    this.makeTestFunction();\n    return evaluateDataset(this, dataset, args);\n  }\n\n  /**\n   * Get number of samples provided for training, evaluation or prediction.\n   *\n   * @param ins Input `tf.Tensor`.\n   * @param batchSize Integer batch size, optional.\n   * @param steps Total number of steps (batches of samples) before\n   * declaring loop finished. Optional.\n   * @param stepsName The public API's parameter name for `steps`.\n   * @returns Number of samples provided.\n   */\n  private checkNumSamples(\n      ins: Tensor|Tensor[], batchSize?: number, steps?: number,\n      stepsName = 'steps'): number {\n    let numSamples: number;\n    if (steps != null) {\n      numSamples = null;\n      if (batchSize != null) {\n        throw new ValueError(\n            `If ${stepsName} is set, batchSize must be null or undefined.` +\n            `Got batchSize = ${batchSize}`);\n      }\n    } else if (ins != null) {\n      if (Array.isArray(ins)) {\n        numSamples = ins[0].shape[0];\n      } else {\n        numSamples = ins.shape[0];\n      }\n    } else {\n      throw new ValueError(\n          `Either the input data should have a defined shape, or ` +\n          `${stepsName} shoud be specified.`);\n    }\n    return numSamples;\n  }\n\n  /**\n   * Execute internal tensors of the model with input data feed.\n   * @param inputs Input data feed. Must match the inputs of the model.\n   * @param outputs Names of the output tensors to be fetched. Must match\n   *   names of the SymbolicTensors that belong to the graph.\n   * @returns Fetched values for `outputs`.\n   */\n  execute(inputs: Tensor|Tensor[]|NamedTensorMap, outputs: string|string[]):\n      Tensor|Tensor[] {\n    if (Array.isArray(outputs) && outputs.length === 0) {\n      throw new ValueError(\n          '`outputs` is an empty Array, which is not allowed.');\n    }\n\n    const outputsIsArray = Array.isArray(outputs);\n    const outputNames =\n        (outputsIsArray ? outputs as string[] : [outputs as string]);\n    const outputSymbolicTensors = this.retrieveSymbolicTensors(outputNames);\n\n    // Format the input into a FeedDict.\n    const feedDict = new FeedDict();\n    if (inputs instanceof Tensor) {\n      inputs = [inputs];\n    }\n    if (Array.isArray(inputs)) {\n      if (inputs.length !== this.inputs.length) {\n        throw new ValueError(\n            `The number of inputs provided (${inputs.length}) ` +\n            `does not match the number of inputs of this model ` +\n            `(${this.inputs.length}).`);\n      }\n      for (let i = 0; i < this.inputs.length; ++i) {\n        feedDict.add(this.inputs[i], inputs[i]);\n      }\n    } else {\n      for (const input of this.inputs) {\n        const tensorValue = inputs[input.name];\n        if (tensorValue == null) {\n          throw new ValueError(\n              `No value is provided for the model's input ${input.name}`);\n        }\n        feedDict.add(input, tensorValue);\n      }\n    }\n\n    // Run execution.\n    const executeOutputs = execute(outputSymbolicTensors, feedDict) as Tensor[];\n    return outputsIsArray ? executeOutputs : executeOutputs[0];\n  }\n\n  /**\n   * Retrieve the model's internal symbolic tensors from symbolic-tensor names.\n   */\n  private retrieveSymbolicTensors(symbolicTensorNames: string[]):\n      SymbolicTensor[] {\n    const outputSymbolicTensors: SymbolicTensor[] =\n        pyListRepeat(null, symbolicTensorNames.length);\n    let outputsRemaining = symbolicTensorNames.length;\n    for (const layer of this.layers) {\n      const layerOutputs: SymbolicTensor[] =\n          Array.isArray(layer.output) ? layer.output : [layer.output];\n      const layerOutputNames = layerOutputs.map(output => output.name);\n      for (let i = 0; i < symbolicTensorNames.length; ++i) {\n        const index = layerOutputNames.indexOf(symbolicTensorNames[i]);\n        if (index !== -1) {\n          outputSymbolicTensors[i] = layerOutputs[index];\n          outputsRemaining--;\n        }\n        if (outputsRemaining === 0) {\n          break;\n        }\n      }\n      if (outputsRemaining === 0) {\n        break;\n      }\n    }\n\n    if (outputsRemaining > 0) {\n      const remainingNames: string[] = [];\n      outputSymbolicTensors.forEach((tensor, i) => {\n        if (tensor == null) {\n          remainingNames.push(symbolicTensorNames[i]);\n        }\n      });\n      throw new ValueError(\n          `Cannot find SymbolicTensors for output name(s): ` +\n          `${JSON.stringify(remainingNames)}`);\n    }\n    return outputSymbolicTensors;\n  }\n\n  /**\n   * Helper method to loop over some data in batches.\n   *\n   * Porting Note: Not using the functional approach in the Python equivalent\n   *   due to the imperative backend.\n   * Porting Note: Does not support step mode currently.\n   *\n   * @param ins: input data\n   * @param batchSize: integer batch size.\n   * @param verbose: verbosity model\n   * @returns: Predictions as `tf.Tensor` (if a single output) or an `Array` of\n   *   `tf.Tensor` (if multipe outputs).\n   */\n  private predictLoop(ins: Tensor|Tensor[], batchSize = 32, verbose = false):\n      Tensor|Tensor[] {\n    return tfc.tidy(() => {\n      const numSamples = this.checkNumSamples(ins);\n      if (verbose) {\n        throw new NotImplementedError(\n            'Verbose predictLoop() is not implemented yet.');\n      }\n\n      // Sample-based predictions.\n      // Porting Note: Tensor currently does not support sliced assignments as\n      //   in numpy, e.g., x[1:3] = y. Therefore we use concatenation while\n      //   iterating over the batches.\n\n      const batches = makeBatches(numSamples, batchSize);\n      const outsBatches: Tensor[][] = this.outputs.map(output => []);\n\n      // TODO(cais): Can the scope() be pushed down inside the for loop?\n      for (let batchIndex = 0; batchIndex < batches.length; ++batchIndex) {\n        const batchOuts = tfc.tidy(() => {\n          const batchStart = batches[batchIndex][0];\n          const batchEnd = batches[batchIndex][1];\n          // TODO(cais): Take care of the case of the last element is a flag for\n          //   training/test.\n          const insBatch = sliceArrays(ins, batchStart, batchEnd);\n\n          // Construct the feeds for execute();\n          const feeds = [];\n          if (Array.isArray(insBatch)) {\n            for (let i = 0; i < insBatch.length; ++i) {\n              feeds.push({key: this.inputs[i], value: insBatch[i]});\n            }\n          } else {\n            feeds.push({key: this.inputs[0], value: insBatch});\n          }\n          const feedDict = new FeedDict(feeds);\n          return execute(this.outputs, feedDict) as Tensor[];\n        });\n        batchOuts.forEach((batchOut, i) => outsBatches[i].push(batchOut));\n      }\n      return singletonOrArray(\n          outsBatches.map(batches => tfc.concat(batches, 0)));\n    });\n  }\n\n  /**\n   * Generates output predictions for the input samples.\n   *\n   * Computation is done in batches.\n   *\n   * Note: the \"step\" mode of predict() is currently not supported.\n   *   This is because the TensorFlow.js core backend is imperative only.\n   *\n   * ```js\n   * const model = tf.sequential({\n   *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]\n   * });\n   * model.predict(tf.ones([8, 10]), {batchSize: 4}).print();\n   * ```\n   *\n   * @param x The input data, as a Tensor, or an `Array` of `tf.Tensor`s if\n   *   the model has multiple inputs.\n   * @param args A `ModelPredictArgs` object containing optional fields.\n   *\n   * @return Prediction results as a `tf.Tensor`(s).\n   *\n   * @exception ValueError In case of mismatch between the provided input data\n   *   and the model's expectations, or in case a stateful model receives a\n   *   number of samples that is not a multiple of the batch size.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  predict(x: Tensor|Tensor[], args: ModelPredictArgs = {}): Tensor|Tensor[] {\n    const xsRank2OrHigher = ensureTensorsRank2OrHigher(x);\n    checkInputData(\n        xsRank2OrHigher, this.inputNames, this.feedInputShapes, false);\n    try {\n      // TODO(cais): Take care of stateful models.\n      //   if (this.stateful) ...\n      // TODO(cais): Take care of the learning_phase boolean flag.\n      //   if (this.useLearningPhase) ...\n      const batchSize = args.batchSize == null ? 32 : args.batchSize;\n      checkBatchSize(batchSize);\n      return this.predictLoop(xsRank2OrHigher, batchSize);\n    } finally {\n      disposeNewTensors(xsRank2OrHigher, x);\n    }\n  }\n\n  /**\n   * Returns predictions for a single batch of samples.\n   *\n   * ```js\n   * const model = tf.sequential({\n   *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]\n   * });\n   * model.predictOnBatch(tf.ones([8, 10])).print();\n   * ```\n   * @param x: Input samples, as a Tensor (for models with exactly one\n   *   input) or an array of Tensors (for models with more than one input).\n   * @return Tensor(s) of predictions\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  predictOnBatch(x: Tensor|Tensor[]): Tensor|Tensor[] {\n    checkInputData(x, this.inputNames, this.feedInputShapes, true);\n    // TODO(cais): Take care of the learning_phase boolean flag.\n    //   if (this.useLearningPhase) ...\n    const batchSize = (Array.isArray(x) ? x[0] : x).shape[0];\n    return this.predictLoop(x, batchSize);\n  }\n\n  protected standardizeUserDataXY(\n      x: Tensor|Tensor[]|{[inputName: string]: Tensor},\n      y: Tensor|Tensor[]|{[inputName: string]: Tensor}, checkBatchAxis = true,\n      batchSize?: number): [Tensor[], Tensor[]] {\n    // TODO(cais): Add sampleWeight, classWeight\n    if (this.optimizer_ == null) {\n      throw new RuntimeError(\n          'You must compile a model before training/testing. Use ' +\n          'LayersModel.compile(modelCompileArgs).');\n    }\n    const outputShapes: Shape[] = [];\n    for (let i = 0; i < this.feedOutputShapes.length; ++i) {\n      const outputShape = this.feedOutputShapes[i];\n      const lossFn = this.feedLossFns[i];\n      if (lossFn === losses.sparseCategoricalCrossentropy) {\n        outputShapes.push(\n            outputShape.slice(0, outputShape.length - 1).concat([1]));\n      } else {\n        // Porting Note: Because of strong typing `lossFn` must be a function.\n        outputShapes.push(outputShape);\n      }\n    }\n    x = standardizeInputData(\n        x, this.feedInputNames, this.feedInputShapes, false, 'input');\n    y = standardizeInputData(\n        y, this.feedOutputNames, outputShapes, false, 'target');\n    // TODO(cais): Standardize sampleWeights & classWeights.\n    checkArrayLengths(x, y, null);\n    // TODO(cais): Check sampleWeights as well.\n    checkLossAndTargetCompatibility(y, this.feedLossFns, this.feedOutputShapes);\n    if (this.stateful && batchSize != null && batchSize > 0) {\n      if (x[0].shape[0] % batchSize !== 0) {\n        throw new ValueError(\n            `In a stateful network, you should only pass inputs with a ` +\n            `number of samples that is divisible by the batch size ` +\n            `${batchSize}. Found: ${x[0].shape[0]} sample(s).`);\n      }\n    }\n    return [x, y];\n  }\n\n  protected async standardizeUserData(\n      x: Tensor|Tensor[]|{[inputName: string]: Tensor},\n      y: Tensor|Tensor[]|{[inputName: string]: Tensor},\n      sampleWeight?: Tensor|Tensor[]|{[outputName: string]: Tensor},\n      classWeight?: ClassWeight|ClassWeight[]|ClassWeightMap,\n      checkBatchAxis = true,\n      batchSize?: number): Promise<[Tensor[], Tensor[], Tensor[]]> {\n    const [standardXs, standardYs] =\n        this.standardizeUserDataXY(x, y, checkBatchAxis, batchSize);\n    // TODO(cais): Handle sampleWeights.\n    if (sampleWeight != null) {\n      throw new Error('sample weight is not supported yet.');\n    }\n\n    let standardSampleWeights: Tensor[] = null;\n    if (classWeight != null) {\n      const classWeights =\n          standardizeClassWeights(classWeight, this.outputNames);\n      standardSampleWeights = [];\n      for (let i = 0; i < classWeights.length; ++i) {\n        standardSampleWeights.push(\n            await standardizeWeights(standardYs[i], null, classWeights[i]));\n      }\n    }\n\n    // TODO(cais): Deal with the case of model.stateful == true.\n    return [standardXs, standardYs, standardSampleWeights];\n  }\n\n  /**\n   * Loop over some test data in batches.\n   * @param f A Function returning a list of tensors.\n   * @param ins Array of tensors to be fed to `f`.\n   * @param batchSize Integer batch size or `null` / `undefined`.\n   * @param verbose verbosity mode.\n   * @param steps Total number of steps (batches of samples) before\n   * declaring test finished. Ignored with the default value of `null` /\n   * `undefined`.\n   * @returns Array of Scalars.\n   */\n  private testLoop(\n      f: (data: Tensor[]) => Scalar[], ins: Tensor[], batchSize?: number,\n      verbose = 0, steps?: number): Scalar[] {\n    return tfc.tidy(() => {\n      const numSamples = this.checkNumSamples(ins, batchSize, steps, 'steps');\n      const outs: Scalar[] = [];\n      if (verbose > 0) {\n        throw new NotImplementedError('Verbose mode is not implemented yet.');\n      }\n      // TODO(cais): Use `indicesForConversionToDense' to prevent slow down.\n      if (steps != null) {\n        throw new NotImplementedError(\n            'steps mode in testLoop() is not implemented yet');\n      } else {\n        const batches = makeBatches(numSamples, batchSize);\n        const indexArray = tensor1d(range(0, numSamples));\n        for (let batchIndex = 0; batchIndex < batches.length; ++batchIndex) {\n          const batchStart = batches[batchIndex][0];\n          const batchEnd = batches[batchIndex][1];\n          const batchIds =\n              K.sliceAlongFirstAxis(\n                  indexArray, batchStart, batchEnd - batchStart) as Tensor1D;\n          // TODO(cais): In ins, train flag can be a number, instead of an\n          //   Tensor? Do we need to handle this in tfjs-layers?\n          const insBatch = sliceArraysByIndices(ins, batchIds) as Scalar[];\n          const batchOuts = f(insBatch);\n          if (batchIndex === 0) {\n            for (let i = 0; i < batchOuts.length; ++i) {\n              outs.push(scalar(0));\n            }\n          }\n          for (let i = 0; i < batchOuts.length; ++i) {\n            const batchOut = batchOuts[i];\n            outs[i] =\n                tfc.add(outs[i], tfc.mul(batchEnd - batchStart, batchOut));\n          }\n        }\n        for (let i = 0; i < outs.length; ++i) {\n          outs[i] = tfc.div(outs[i], numSamples);\n        }\n      }\n      return outs;\n    });\n  }\n\n  protected getDedupedMetricsNames(): string[] {\n    const outLabels = this.metricsNames;\n    // Rename duplicated metrics names (can happen with an output layer\n    // shared among multiple dataflows).\n    const dedupedOutLabels = [];\n    for (let i = 0; i < outLabels.length; ++i) {\n      const label = outLabels[i];\n      let newLabel = label;\n      if (count(outLabels, label) > 1) {\n        const dupIndex = count(outLabels.slice(0, i), label);\n        newLabel += `_${dupIndex}`;\n      }\n      dedupedOutLabels.push(newLabel);\n    }\n    return dedupedOutLabels;\n  }\n\n  /**\n   * Creates a function that performs the following actions:\n   *\n   * 1. computes the losses\n   * 2. sums them to get the total loss\n   * 3. call the optimizer computes the gradients of the LayersModel's\n   *    trainable weights w.r.t. the total loss and update the variables\n   * 4. calculates the metrics\n   * 5. returns the values of the losses and metrics.\n   */\n  protected makeTrainFunction(): (data: Tensor[]) => Scalar[] {\n    return (data: Tensor[]) => {\n      const lossValues: Scalar[] = [];\n\n      const inputs = data.slice(0, this.inputs.length);\n      const targets = data.slice(\n          this.inputs.length, this.inputs.length + this.outputs.length);\n      const sampleWeights = data.slice(\n          this.inputs.length + this.outputs.length,\n          this.inputs.length + this.outputs.length * 2);\n\n      const metricsValues: Scalar[] = [];\n\n      // Create a function that computes the total loss based on the\n      // inputs. This function is used for obtaining gradients through\n      // backprop.\n      const totalLossFunction = () => {\n        const feeds = [];\n        for (let i = 0; i < this.inputs.length; ++i) {\n          feeds.push({key: this.inputs[i], value: inputs[i]});\n        }\n        const feedDict = new FeedDict(feeds);\n        const outputs =\n            execute(this.outputs, feedDict, {'training': true}) as Tensor[];\n        // TODO(cais): Take care of the case of multiple outputs from a\n        //   single layer?\n\n        let totalLoss: Tensor;\n        for (let i = 0; i < this.lossFunctions.length; ++i) {\n          const lossFunction = this.lossFunctions[i];\n          let loss = lossFunction(targets[i], outputs[i]);\n          if (sampleWeights[i] != null) {\n            loss = computeWeightedLoss(loss, sampleWeights[i]);\n          }\n\n          // TODO(cais): push Scalar instead.\n          const meanLoss: Scalar = tfc.mean(loss);\n          // TODO(cais): Use a scope() instead, to avoid ownership.\n          lossValues.push(meanLoss);\n          if (i === 0) {\n            totalLoss = loss;\n          } else {\n            totalLoss = tfc.add(totalLoss, loss);\n          }\n        }\n\n        // Compute the metrics.\n        // TODO(cais): These should probably be calculated outside\n        //   totalLossFunction to benefit speed?\n        for (let i = 0; i < this.metricsTensors.length; ++i) {\n          let weightedMetric: Scalar;\n\n          if (this.outputs.length > 1 && i < this.outputs.length) {\n            weightedMetric = lossValues[i];\n          } else {\n            const metric = this.metricsTensors[i][0];\n            const outputIndex = this.metricsTensors[i][1];\n            weightedMetric =\n                tfc.mean(metric(targets[outputIndex], outputs[outputIndex]));\n          }\n\n          tfc.keep(weightedMetric);\n          // TODO(cais): Use a scope() instead, to avoid ownership.\n          metricsValues.push(weightedMetric);\n        }\n\n        totalLoss = tfc.mean(totalLoss);\n\n        // Add regularizer penalties.\n        this.calculateLosses().forEach(regularizerLoss => {\n          totalLoss = tfc.add(totalLoss, regularizerLoss);\n        });\n\n        return totalLoss as Scalar;\n      };\n\n      const variables = this.collectedTrainableWeights.map(\n          param => param.read() as tfc.Variable);\n      const returnCost = true;\n      const totalLossValue =\n          this.optimizer_.minimize(totalLossFunction, returnCost, variables);\n\n      return [totalLossValue].concat(metricsValues);\n    };\n  }\n\n  /**\n   * Create a function which, when invoked with an array of `tf.Tensor`s as a\n   * batch of inputs, returns the prespecified loss and metrics of the model\n   * under the batch of input data.\n   */\n  private makeTestFunction() {\n    this.testFunction = (data: Tensor[]) => {\n      return tfc.tidy(() => {\n        const valOutputs: Scalar[] = [];\n        let totalLoss: Scalar;\n        const inputs = data.slice(0, this.inputs.length);\n        const targets = data.slice(\n            this.inputs.length, this.inputs.length + this.outputs.length);\n        const feeds = [];\n        for (let i = 0; i < this.inputs.length; ++i) {\n          feeds.push({key: this.inputs[i], value: inputs[i]});\n        }\n        const feedDict = new FeedDict(feeds);\n        const outputs = execute(this.outputs, feedDict) as Tensor[];\n        // Compute total loss.\n        for (let i = 0; i < this.lossFunctions.length; ++i) {\n          const lossFunction = this.lossFunctions[i];\n          // TODO(cais): Add sample weighting and replace the simple\n          // averaging.\n          const loss: Scalar = tfc.mean(lossFunction(targets[i], outputs[i]));\n          if (i === 0) {\n            totalLoss = loss;\n          } else {\n            totalLoss = tfc.add(totalLoss, loss);\n          }\n          valOutputs.push(totalLoss);\n        }\n        // Compute the metrics.\n        for (let i = 0; i < this.metricsTensors.length; ++i) {\n          const metric = this.metricsTensors[i][0];\n          const outputIndex = this.metricsTensors[i][1];\n          // TODO(cais): Replace K.mean() with a proper weighting function.\n          const meanMetric =\n              tfc.mean(metric(targets[outputIndex], outputs[outputIndex]));\n          valOutputs.push(meanMetric as Scalar);\n        }\n        return valOutputs;\n      });\n    };\n  }\n\n  /**\n   * Trains the model for a fixed number of epochs (iterations on a\n   * dataset).\n   *\n   * ```js\n   * const model = tf.sequential({\n   *     layers: [tf.layers.dense({units: 1, inputShape: [10]})]\n   * });\n   * model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});\n   * for (let i = 1; i < 5 ; ++i) {\n   *   const h = await model.fit(tf.ones([8, 10]), tf.ones([8, 1]), {\n   *       batchSize: 4,\n   *       epochs: 3\n   *   });\n   *   console.log(\"Loss after Epoch \" + i + \" : \" + h.history.loss[0]);\n   * }\n   * ```\n   *\n   * @param x `tf.Tensor` of training data, or an array of `tf.Tensor`s if the\n   * model has multiple inputs. If all inputs in the model are named, you\n   * can also pass a dictionary mapping input names to `tf.Tensor`s.\n   * @param y `tf.Tensor` of target (label) data, or an array of `tf.Tensor`s if\n   * the model has multiple outputs. If all outputs in the model are named,\n   * you can also pass a dictionary mapping output names to `tf.Tensor`s.\n   * @param args A `ModelFitArgs`, containing optional fields.\n   *\n   * @return A `History` instance. Its `history` attribute contains all\n   *   information collected during training.\n   *\n   * @exception ValueError In case of mismatch between the provided input\n   * data and what the model expects.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  async fit(\n      x: Tensor|Tensor[]|{[inputName: string]: Tensor},\n      y: Tensor|Tensor[]|{[inputName: string]: Tensor},\n      args: ModelFitArgs = {}): Promise<History> {\n    return fitTensors(this, x, y, args);\n  }\n\n  // TODO(cais): Add code snippet below when it's possible to instantiate\n  //   actual dataset objects.\n  /**\n   * Trains the model using a dataset object.\n   *\n   * @param dataset A dataset object. Its `iterator()` method is expected\n   *   to generate a dataset iterator object, the `next()` method of which\n   *   is expected to produce data batches for training. The return value\n   *   of the `next()` call ought to contain a boolean `done` field and a\n   *   `value` field. The `value` field is expected to be an array of two\n   *   `tf.Tensor`s or an array of two nested `tf.Tensor` structures. The former\n   *   case is for models with exactly one input and one output (e.g..\n   *   a sequential model). The latter case is for models with multiple\n   *   inputs and/or multiple outputs.\n   *   Of the two items in the array, the first is the input feature(s) and\n   *   the second is the output target(s).\n   * @param args A `ModelFitDatasetArgs`, containing optional fields.\n   *\n   * @return A `History` instance. Its `history` attribute contains all\n   *   information collected during training.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  async fitDataset<T>(dataset: Dataset<T>, args: ModelFitDatasetArgs<T>):\n      Promise<History> {\n    return fitDataset(this, dataset, args);\n  }\n\n  /**\n   * Runs a single gradient update on a single batch of data.\n   *\n   * This method differs from `fit()` and `fitDataset()` in the following\n   * regards:\n   *   - It operates on exactly one batch of data.\n   *   - It returns only the loss and matric values, instead of\n   *     returning the batch-by-batch loss and metric values.\n   *   - It doesn't support fine-grained options such as verbosity and\n   *     callbacks.\n   *\n   * @param x Input data. It could be one of the following:\n   *   - A `tf.Tensor`, or an Array of `tf.Tensor`s (in case the model has\n   *     multiple inputs).\n   *   - An Object mapping input names to corresponding `tf.Tensor` (if the\n   *     model has named inputs).\n   * @param y Target darta. It could be either a `tf.Tensor` a multiple\n   *   `tf.Tensor`s. It should be consistent with `x`.\n   * @returns Training loss or losses (in case the model has\n   *   multiple outputs), along with metrics (if any), as numbers.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  async trainOnBatch(\n      x: Tensor|Tensor[]|{[inputName: string]: Tensor},\n      y: Tensor|Tensor[]|\n      {[inputName: string]: Tensor}): Promise<number|number[]> {\n    // TODO(cais): Support sampleWeight and classWeight.\n    // TODO(cais): Support Dataset objects.\n    const standardizeOut = await this.standardizeUserData(x, y);\n    const inputs = standardizeOut[0];\n    const targets = standardizeOut[1];\n    const trainFunction = this.makeTrainFunction();\n    const losses = trainFunction(inputs.concat(targets));\n    const lossValues: number[] = [];\n    for (const loss of losses) {\n      const v = await loss.data();\n      lossValues.push(v[0]);\n    }\n    tfc.dispose(losses);\n    disposeNewTensors(standardizeOut[0], x);\n    disposeNewTensors(standardizeOut[1], y);\n    return singletonOrArray(lossValues);\n  }\n\n  /**\n   * Extract weight values of the model.\n   *\n   * @param config: An instance of `io.SaveConfig`, which specifies\n   * model-saving options such as whether only trainable weights are to be\n   * saved.\n   * @returns A `NamedTensorMap` mapping original weight names (i.e.,\n   *   non-uniqueified weight names) to their values.\n   */\n  protected getNamedWeights(config?: io.SaveConfig): NamedTensor[] {\n    const namedWeights: NamedTensor[] = [];\n\n    const trainableOnly = config != null && config.trainableOnly;\n    const weights = trainableOnly ? this.trainableWeights : this.weights;\n    const weightValues = this.getWeights(trainableOnly);\n    for (let i = 0; i < weights.length; ++i) {\n      if (trainableOnly && !weights[i].trainable) {\n        // Optionally skip non-trainable weights.\n        continue;\n      }\n      namedWeights.push(\n          {name: weights[i].originalName, tensor: weightValues[i]});\n    }\n    return namedWeights;\n  }\n\n  /**\n   * Setter used for force stopping of LayersModel.fit() (i.e., training).\n   *\n   * Example:\n   *\n   * ```js\n   * const input = tf.input({shape: [10]});\n   * const output = tf.layers.dense({units: 1}).apply(input);\n   * const model = tf.model({inputs: [input], outputs: [output]});\n   * model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});\n   * const xs = tf.ones([8, 10]);\n   * const ys = tf.zeros([8, 1]);\n   *\n   * const history = await model.fit(xs, ys, {\n   *   epochs: 10,\n   *   callbacks: {\n   *     onEpochEnd: async (epoch, logs) => {\n   *       if (epoch === 2) {\n   *         model.stopTraining = true;\n   *       }\n   *     }\n   *   }\n   * });\n   *\n   * // There should be only 3 values in the loss array, instead of 10\n   * values,\n   * // due to the stopping after 3 epochs.\n   * console.log(history.history.loss);\n   * ```\n   */\n  set stopTraining(stop: boolean) {\n    this.stopTraining_ = stop;\n  }\n\n  get stopTraining(): boolean {\n    return this.stopTraining_;\n  }\n\n  get optimizer(): Optimizer {\n    return this.optimizer_;\n  }\n\n  set optimizer(optimizer: Optimizer) {\n    if (this.optimizer_ !== optimizer) {\n      this.optimizer_ = optimizer;\n      this.isOptimizerOwned = false;\n    }\n  }\n\n  dispose(): DisposeResult {\n    const result = super.dispose();\n    if (result.refCountAfterDispose === 0 && this.optimizer != null &&\n        this.isOptimizerOwned) {\n      const numTensorsBeforeOptmizerDisposal = tfc.memory().numTensors;\n      this.optimizer_.dispose();\n      result.numDisposedVariables +=\n          numTensorsBeforeOptmizerDisposal - tfc.memory().numTensors;\n    }\n    return result;\n  }\n\n  private getLossIdentifiers(): LossIdentifier|LossIdentifier[]|\n      {[outputName: string]: LossIdentifier} {\n    let lossNames: LossIdentifier|LossIdentifier[]|\n        {[outputName: string]: LossIdentifier};\n    if (typeof this.loss === 'string') {\n      lossNames = toSnakeCase(this.loss) as LossIdentifier;\n    } else if (Array.isArray(this.loss)) {\n      for (const loss of this.loss) {\n        if (typeof loss !== 'string') {\n          throw new Error('Serialization of non-string loss is not supported.');\n        }\n      }\n      lossNames = (this.loss as string[]).map(name => toSnakeCase(name)) as\n          LossIdentifier[];\n    } else {\n      const outputNames = Object.keys(this.loss);\n      lossNames = {} as {[outputName: string]: LossIdentifier};\n      const losses =\n          this.loss as {[outputName: string]: LossOrMetricFn | string};\n      for (const outputName of outputNames) {\n        if (typeof losses[outputName] === 'string') {\n          lossNames[outputName] =\n              toSnakeCase(losses[outputName] as string) as LossIdentifier;\n        } else {\n          throw new Error('Serialization of non-string loss is not supported.');\n        }\n      }\n    }\n    return lossNames;\n  }\n\n  private getMetricIdentifiers(): MetricsIdentifier[]|\n      {[key: string]: MetricsIdentifier} {\n    if (typeof this.metrics === 'string' ||\n        typeof this.metrics === 'function') {\n      return [toSnakeCase(Metrics.getLossOrMetricName(this.metrics))];\n    } else if (Array.isArray(this.metrics)) {\n      return this.metrics.map(\n          metric => toSnakeCase(Metrics.getLossOrMetricName(metric)));\n    } else {\n      const metricsIdentifiers: {[key: string]: MetricsIdentifier} = {};\n      for (const key in this.metrics) {\n        metricsIdentifiers[key] =\n            toSnakeCase(Metrics.getLossOrMetricName(this.metrics[key]));\n      }\n      return metricsIdentifiers;\n    }\n  }\n\n  protected getTrainingConfig(): TrainingConfig {\n    return {\n      loss: this.getLossIdentifiers(),\n      metrics: this.getMetricIdentifiers(),\n      optimizer_config: {\n        class_name: this.optimizer.getClassName(),\n        config: this.optimizer.getConfig()\n      } as OptimizerSerialization\n    };\n    // TODO(cais): Add weight_metrics when they are supported.\n    // TODO(cais): Add sample_weight_mode when it's supported.\n    // TODO(cais): Add loss_weights when it's supported.\n  }\n\n  loadTrainingConfig(trainingConfig: TrainingConfig) {\n    if (trainingConfig.weighted_metrics != null) {\n      throw new Error('Loading weight_metrics is not supported yet.');\n    }\n    if (trainingConfig.loss_weights != null) {\n      throw new Error('Loading loss_weights is not supported yet.');\n    }\n    if (trainingConfig.sample_weight_mode != null) {\n      throw new Error('Loading sample_weight_mode is not supported yet.');\n    }\n\n    const tsConfig = convertPythonicToTs(trainingConfig.optimizer_config) as\n        serialization.ConfigDict;\n    const optimizer = deserialize(tsConfig) as Optimizer;\n\n    let loss;\n    if (typeof trainingConfig.loss === 'string') {\n      loss = toCamelCase(trainingConfig.loss);\n    } else if (Array.isArray(trainingConfig.loss)) {\n      loss = trainingConfig.loss.map(lossEntry => toCamelCase(lossEntry));\n    } else if (trainingConfig.loss != null) {\n      loss = {} as {[outputName: string]: LossIdentifier};\n      for (const key in trainingConfig.loss) {\n        loss[key] = toCamelCase(trainingConfig.loss[key]) as LossIdentifier;\n      }\n    }\n\n    let metrics;\n    if (Array.isArray(trainingConfig.metrics)) {\n      metrics = trainingConfig.metrics.map(metric => toCamelCase(metric));\n    } else if (trainingConfig.metrics != null) {\n      metrics = {} as {[outputName: string]: MetricsIdentifier};\n      for (const key in trainingConfig.metrics) {\n        metrics[key] = toCamelCase(trainingConfig.metrics[key]);\n      }\n    }\n\n    this.compile({loss, metrics, optimizer});\n  }\n\n  /**\n   * Save the configuration and/or weights of the LayersModel.\n   *\n   * An `IOHandler` is an object that has a `save` method of the proper\n   * signature defined. The `save` method manages the storing or\n   * transmission of serialized data (\"artifacts\") that represent the\n   * model's topology and weights onto or via a specific medium, such as\n   * file downloads, local storage, IndexedDB in the web browser and HTTP\n   * requests to a server. TensorFlow.js provides `IOHandler`\n   * implementations for a number of frequently used saving mediums, such as\n   * `tf.io.browserDownloads` and `tf.io.browserLocalStorage`. See `tf.io`\n   * for more details.\n   *\n   * This method also allows you to refer to certain types of `IOHandler`s\n   * as URL-like string shortcuts, such as 'localstorage://' and\n   * 'indexeddb://'.\n   *\n   * Example 1: Save `model`'s topology and weights to browser [local\n   * storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage);\n   * then load it back.\n   *\n   * ```js\n   * const model = tf.sequential(\n   *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});\n   * console.log('Prediction from original model:');\n   * model.predict(tf.ones([1, 3])).print();\n   *\n   * const saveResults = await model.save('localstorage://my-model-1');\n   *\n   * const loadedModel = await tf.loadLayersModel('localstorage://my-model-1');\n   * console.log('Prediction from loaded model:');\n   * loadedModel.predict(tf.ones([1, 3])).print();\n   * ```\n   *\n   * Example 2. Saving `model`'s topology and weights to browser\n   * [IndexedDB](https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API);\n   * then load it back.\n   *\n   * ```js\n   * const model = tf.sequential(\n   *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});\n   * console.log('Prediction from original model:');\n   * model.predict(tf.ones([1, 3])).print();\n   *\n   * const saveResults = await model.save('indexeddb://my-model-1');\n   *\n   * const loadedModel = await tf.loadLayersModel('indexeddb://my-model-1');\n   * console.log('Prediction from loaded model:');\n   * loadedModel.predict(tf.ones([1, 3])).print();\n   * ```\n   *\n   * Example 3. Saving `model`'s topology and weights as two files\n   * (`my-model-1.json` and `my-model-1.weights.bin`) downloaded from\n   * browser.\n   *\n   * ```js\n   * const model = tf.sequential(\n   *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});\n   * const saveResults = await model.save('downloads://my-model-1');\n   * ```\n   *\n   * Example 4. Send  `model`'s topology and weights to an HTTP server.\n   * See the documentation of `tf.io.http` for more details\n   * including specifying request parameters and implementation of the\n   * server.\n   *\n   * ```js\n   * const model = tf.sequential(\n   *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});\n   * const saveResults = await model.save('http://my-server/model/upload');\n   * ```\n   *\n   * @param handlerOrURL An instance of `IOHandler` or a URL-like,\n   * scheme-based string shortcut for `IOHandler`.\n   * @param config Options for saving the model.\n   * @returns A `Promise` of `SaveResult`, which summarizes the result of\n   * the saving, such as byte sizes of the saved artifacts for the model's\n   *   topology and weight values.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}\n   */\n  async save(handlerOrURL: io.IOHandler|string, config?: io.SaveConfig):\n      Promise<io.SaveResult> {\n    if (typeof handlerOrURL === 'string') {\n      const handlers = io.getSaveHandlers(handlerOrURL);\n      if (handlers.length === 0) {\n        throw new ValueError(\n            `Cannot find any save handlers for URL '${handlerOrURL}'`);\n      } else if (handlers.length > 1) {\n        throw new ValueError(\n            `Found more than one (${handlers.length}) save handlers for ` +\n            `URL '${handlerOrURL}'`);\n      }\n      handlerOrURL = handlers[0];\n    }\n    if (handlerOrURL.save == null) {\n      throw new ValueError(\n          'LayersModel.save() cannot proceed because the IOHandler ' +\n          'provided does not have the `save` attribute defined.');\n    }\n\n    const weightDataAndSpecs =\n        await io.encodeWeights(this.getNamedWeights(config));\n\n    const returnString = false;\n    const unusedArg: {} = null;\n    const modelConfig = this.toJSON(unusedArg, returnString);\n    const modelArtifacts: io.ModelArtifacts = {\n      modelTopology: modelConfig,\n      format: LAYERS_MODEL_FORMAT_NAME,\n      generatedBy: `TensorFlow.js tfjs-layers v${version}`,\n      convertedBy: null,\n    };\n\n    const includeOptimizer = config == null ? false : config.includeOptimizer;\n    if (includeOptimizer && this.optimizer != null) {\n      modelArtifacts.trainingConfig = this.getTrainingConfig();\n      const weightType = 'optimizer';\n      const {data: optimizerWeightData, specs: optimizerWeightSpecs} =\n          await io.encodeWeights(await this.optimizer.getWeights(), weightType);\n      weightDataAndSpecs.specs.push(...optimizerWeightSpecs);\n      weightDataAndSpecs.data = io.concatenateArrayBuffers(\n          [weightDataAndSpecs.data, optimizerWeightData]);\n    }\n\n    if (this.userDefinedMetadata != null) {\n      // Check serialized size of user-defined metadata.\n      const checkSize = true;\n      checkUserDefinedMetadata(this.userDefinedMetadata, this.name, checkSize);\n      modelArtifacts.userDefinedMetadata = this.userDefinedMetadata;\n    }\n\n    modelArtifacts.weightData = weightDataAndSpecs.data;\n    modelArtifacts.weightSpecs = weightDataAndSpecs.specs;\n    return handlerOrURL.save(modelArtifacts);\n  }\n\n  /**\n   * Set user-defined metadata.\n   *\n   * The set metadata will be serialized together with the topology\n   * and weights of the model during `save()` calls.\n   *\n   * @param setUserDefinedMetadata\n   */\n  setUserDefinedMetadata(userDefinedMetadata: {}): void {\n    checkUserDefinedMetadata(userDefinedMetadata, this.name);\n    this.userDefinedMetadata = userDefinedMetadata;\n  }\n\n  /**\n   * Get user-defined metadata.\n   *\n   * The metadata is supplied via one of the two routes:\n   *   1. By calling `setUserDefinedMetadata()`.\n   *   2. Loaded during model loading (if the model is constructed\n   *      via `tf.loadLayersModel()`.)\n   *\n   * If no user-defined metadata is available from either of the\n   * two routes, this function will return `undefined`.\n   */\n  getUserDefinedMetadata(): {} {\n    return this.userDefinedMetadata;\n  }\n}\nserialization.registerClass(LayersModel);\n\n/**\n * A `tf.Functional` is an alias to `tf.LayersModel`.\n *\n * See also:\n *   `tf.LayersModel`, `tf.Sequential`, `tf.loadLayersModel`.\n */\n/** @doc {heading: 'Models', subheading: 'Classes'} */\nexport class Functional extends LayersModel {\n  static className = 'Functional';\n}\nserialization.registerClass(Functional);\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original Source layers/__init__.py */\nimport {serialization} from '@tensorflow/tfjs-core';\n\nimport {deserializeKerasObject} from '../utils/generic_utils';\n\n/**\n * Instantiate a layer from a config dictionary.\n * @param config dict of the form {class_name: str, config: dict}\n * @param customObjects dict mapping class names (or function names)\n *   of custom (non-Keras) objects to class/functions\n * @param fastWeightInit Optional flag to use fast weight initialization\n *   during deserialization. This is applicable to cases in which\n *   the initialization will be immediately overwritten by loaded weight\n *   values. Default: `false`.\n * @returns Layer instance (may be LayersModel, Sequential, Layer...)\n */\nexport function deserialize(\n    config: serialization.ConfigDict,\n    customObjects = {} as serialization.ConfigDict,\n    fastWeightInit = false): serialization.Serializable {\n  return deserializeKerasObject(\n      config, serialization.SerializationMap.getMap().classNameMap,\n      customObjects, 'layer', fastWeightInit);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original Source: losses.py */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {Tensor, Tensor1D, tidy, util} from '@tensorflow/tfjs-core';\n\nimport {epsilon} from './backend/common';\nimport * as K from './backend/tfjs_backend';\nimport {ValueError} from './errors';\nimport {LossOrMetricFn} from './types';\n\n/**\n * Normalizes a tensor wrt the L2 norm alongside the specified axis.\n * @param x\n * @param axis Axis along which to perform normalization.\n */\nexport function l2Normalize(x: Tensor, axis?: number): Tensor {\n  return tidy(() => {\n    if (x.dtype !== 'float32') {\n      x = tfc.cast(x, 'float32');\n    }\n    const squareSum = tfc.sum(K.square(x), axis, true);\n    const epsilonTensor = tfc.fill(squareSum.shape, epsilon());\n    const norm = tfc.sqrt(tfc.maximum(squareSum, epsilonTensor));\n    return tfc.div(x, norm);\n  });\n}\n\nexport function meanSquaredError(yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => tfc.mean(K.square(tfc.sub(yPred, yTrue)), -1));\n}\n\nexport function meanAbsoluteError(yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => tfc.mean(tfc.abs(tfc.sub(yPred, yTrue)), -1));\n}\n\nexport function meanAbsolutePercentageError(\n    yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => {\n    const diff = tfc.sub(yTrue, yPred);\n    const clippedTrue =\n        tfc.clipByValue(tfc.abs(yTrue), epsilon(), Number.MAX_VALUE);\n    const absResult = tfc.abs(tfc.div(diff, clippedTrue));\n    return tfc.mul(100, tfc.mean(absResult, -1));\n  });\n}\n\nexport function meanSquaredLogarithmicError(\n    yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => {\n    const clippedPred = tfc.clipByValue(yPred, epsilon(), Number.MAX_VALUE);\n    const firstLog = tfc.log(tfc.add(1, clippedPred));\n\n    const clippedTrue = tfc.clipByValue(yTrue, epsilon(), Number.MAX_VALUE);\n    const secondLog = tfc.log(tfc.add(1, clippedTrue));\n\n    return tfc.mean(K.square(tfc.sub(firstLog, secondLog)), -1);\n  });\n}\n\nexport function squaredHinge(yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => {\n    const maxResult = tfc.maximum(0, tfc.sub(1, tfc.mul(yTrue, yPred)));\n    return tfc.mean(K.square(maxResult), -1);\n  });\n}\n\nexport function hinge(yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => {\n    const maxResult = tfc.maximum(0, tfc.sub(1, tfc.mul(yTrue, yPred)));\n    return tfc.mean(maxResult, -1);\n  });\n}\n\nexport function categoricalHinge(yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => {\n    const pos = tfc.sum(tfc.mul(yTrue, yPred), -1);\n    const neg = tfc.max(tfc.mul(tfc.sub(1, yTrue), yPred), -1);\n    return tfc.maximum(0, tfc.add(1, tfc.sub(neg, pos)));\n  });\n}\n\n/**\n * Logarithm of the hyperbolic cosine of the prediction error.\n *\n * `log(cosh(x))` is approximately equal to `(x ** 2) / 2` for small `x` and\n * to `abs(x) - log(2)` for large `x`. This means that 'logcosh' works mostly\n * like the mean squared error, but will not be so strongly affected by the\n * occasional wildly incorrect prediction.\n */\nexport function logcosh(yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => {\n    const log2 = Math.log(2);\n    const predictionDiff = tfc.sub(yPred, yTrue);\n    const logcoshResult = tfc.sub(\n        tfc.add(predictionDiff, tfc.softplus(tfc.mul(-2, predictionDiff))),\n        log2);\n    return tfc.mean(logcoshResult, -1);\n  });\n}\n\nexport function categoricalCrossentropy(\n    target: Tensor, output: Tensor, fromLogits = false): Tensor {\n  return tidy(() => {\n    if (fromLogits) {\n      output = tfc.softmax(output);\n    } else {\n      // scale preds so that the class probabilities of each sample sum to 1.\n      const outputSum = tfc.sum(output, output.shape.length - 1, true);\n      output = tfc.div(output, outputSum);\n    }\n    output = tfc.clipByValue(output, epsilon(), 1 - epsilon());\n    return tfc.neg(tfc.sum(\n        tfc.mul(tfc.cast(target, 'float32'), tfc.log(output)),\n        output.shape.length - 1));\n  });\n}\n\n/**\n * Categorical crossentropy with integer targets.\n *\n * @param target An integer tensor.\n * @param output A tensor resulting from a softmax (unless `fromLogits` is\n *  `true`, in which case `output` is expected to be the logits).\n * @param fromLogits Boolean, whether `output` is the result of a softmax, or is\n *   a tensor of logits.\n */\nexport function sparseCategoricalCrossentropy(\n    target: Tensor, output: Tensor, fromLogits = false): Tensor {\n  return tidy(() => {\n    const flatTarget =\n        tfc.cast(tfc.floor(K.flatten(target)), 'int32') as Tensor1D;\n    output = tfc.clipByValue(output, epsilon(), 1 - epsilon());\n    const outputShape = output.shape;\n    const oneHotTarget = tfc.reshape(\n        tfc.oneHot(flatTarget, outputShape[outputShape.length - 1]),\n        outputShape);\n    return categoricalCrossentropy(oneHotTarget, output, fromLogits);\n  });\n}\n\n/**\n * From TensorFlow's implementation in nn_impl.py:\n *\n * For brevity, let `x = logits`, `z = labels`.  The logistic loss is\n *      z * -log(sigmoid(x)) + (1 - z) * -log(1 - sigmoid(x))\n *    = z * -log(1 / (1 + exp(-x))) + (1 - z) * -log(exp(-x) / (1 + exp(-x)))\n *    = z * log(1 + exp(-x)) + (1 - z) * (-log(exp(-x)) + log(1 + exp(-x)))\n *    = z * log(1 + exp(-x)) + (1 - z) * (x + log(1 + exp(-x))\n *    = (1 - z) * x + log(1 + exp(-x))\n *    = x - x * z + log(1 + exp(-x))\n * For x < 0, to avoid overflow in exp(-x), we reformulate the above\n *      x - x * z + log(1 + exp(-x))\n *    = log(exp(x)) - x * z + log(1 + exp(-x))\n *    = - x * z + log(1 + exp(x))\n * Hence, to ensure stability and avoid overflow, the implementation uses this\n * equivalent formulation\n *    max(x, 0) - x * z + log(1 + exp(-abs(x)))\n *\n * @param labels The labels.\n * @param logits The logits.\n */\nexport function sigmoidCrossEntropyWithLogits(\n    labels: Tensor, logits: Tensor): Tensor {\n  if (!util.arraysEqual(labels.shape, logits.shape)) {\n    throw new ValueError(\n        `logits and labels must have the same shape, but got shapes ` +\n        `${JSON.stringify(labels.shape)} and ${JSON.stringify(logits.shape)}`);\n  }\n  return tidy(() => {\n    // The logistic loss formula from above is\n    //   x - x * z + log(1 + exp(-x))\n    // For x < 0, a more numerically stable formula is\n    //   -x * z + log(1 + exp(x))\n    // Note that these two expressions can be combined into the following:\n    //   max(x, 0) - x * z + log(1 + exp(-abs(x)))\n    const reluLogits = tfc.relu(logits);\n    const negAbsLogits = tfc.neg(tfc.abs(logits));\n    return tfc.add(\n        tfc.sub(reluLogits, tfc.mul(logits, labels)),\n        tfc.log1p(tfc.exp(negAbsLogits)));\n  });\n}\n\nexport function binaryCrossentropy(yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => {\n    let y: Tensor;\n    y = tfc.clipByValue(yPred, epsilon(), 1 - epsilon());\n    y = tfc.log(tfc.div(y, tfc.sub(1, y)));\n    return tfc.mean(sigmoidCrossEntropyWithLogits(yTrue, y), -1);\n  });\n}\n\nexport function kullbackLeiblerDivergence(\n    yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => {\n    const clippedTrue = tfc.clipByValue(yTrue, epsilon(), 1);\n    const clippedPred = tfc.clipByValue(yPred, epsilon(), 1);\n    return tfc.sum(\n        tfc.mul(yTrue, tfc.log(tfc.div(clippedTrue, clippedPred))), -1);\n  });\n}\n\nexport function poisson(yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => {\n    const logPred = tfc.log(tfc.add(epsilon(), yPred));\n    return tfc.mean(tfc.sub(yPred, tfc.mul(yTrue, logPred)), -1);\n  });\n}\n\nexport function cosineProximity(yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => {\n    const trueNormalized = l2Normalize(yTrue, -1);\n    const predNormalized = l2Normalize(yPred, -1);\n    const trueXPred = tfc.mul(trueNormalized, predNormalized);\n    return tfc.neg(tfc.sum(trueXPred, -1));\n  });\n}\n\nexport const mse = meanSquaredError;\nexport const MSE = meanSquaredError;\nexport const mae = meanAbsoluteError;\nexport const MAE = meanAbsoluteError;\nexport const mape = meanAbsolutePercentageError;\nexport const MAPE = meanAbsolutePercentageError;\nexport const msle = meanSquaredLogarithmicError;\nexport const MSLE = meanSquaredLogarithmicError;\nexport const kld = kullbackLeiblerDivergence;\nexport const KLD = kullbackLeiblerDivergence;\nexport const cosine = cosineProximity;\n\n// TODO(michaelterry): Add deserialize() function.\n\nexport const lossesMap: {[functionName: string]: LossOrMetricFn} = {\n  meanSquaredError,\n  meanAbsoluteError,\n  meanAbsolutePercentageError,\n  meanSquaredLogarithmicError,\n  squaredHinge,\n  hinge,\n  categoricalHinge,\n  logcosh,\n  categoricalCrossentropy,\n  sparseCategoricalCrossentropy,\n  binaryCrossentropy,\n  kullbackLeiblerDivergence,\n  poisson,\n  cosineProximity\n};\n\n// Porting note: This diverges from the PyKeras implementation and may need to\n// change based on (de)serialization requirements.\nexport function get(identifierOrFn: string|LossOrMetricFn): LossOrMetricFn {\n  if (typeof identifierOrFn === 'string') {\n    if (identifierOrFn in lossesMap) {\n      return lossesMap[identifierOrFn];\n    }\n    let errMsg = `Unknown loss ${identifierOrFn}`;\n    if (identifierOrFn.toLowerCase().includes('softmaxcrossentropy')) {\n      errMsg = `Unknown loss ${identifierOrFn}. ` +\n          'Use \"categoricalCrossentropy\" as the string name for ' +\n          'tf.losses.softmaxCrossEntropy';\n    }\n    throw new ValueError(errMsg);\n  } else {\n    return identifierOrFn;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Built-in metrics.\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {Tensor, tidy} from '@tensorflow/tfjs-core';\n\nimport * as K from './backend/tfjs_backend';\nimport {NotImplementedError, ValueError} from './errors';\nimport {categoricalCrossentropy as categoricalCrossentropyLoss, cosineProximity, meanAbsoluteError, meanAbsolutePercentageError, meanSquaredError, sparseCategoricalCrossentropy as sparseCategoricalCrossentropyLoss} from './losses';\nimport {binaryCrossentropy as lossBinaryCrossentropy} from './losses';\nimport {lossesMap} from './losses';\nimport {LossOrMetricFn} from './types';\nimport * as util from './utils/generic_utils';\n\nexport function binaryAccuracy(yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => {\n    const threshold = tfc.mul(.5, tfc.onesLike(yPred));\n    const yPredThresholded = K.cast(tfc.greater(yPred, threshold), yTrue.dtype);\n    return tfc.mean(tfc.equal(yTrue, yPredThresholded), -1);\n  });\n}\n\nexport function categoricalAccuracy(yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(\n      () => K.cast(\n          tfc.equal(tfc.argMax(yTrue, -1), tfc.argMax(yPred, -1)), 'float32'));\n}\n\nfunction truePositives(yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => {\n    return tfc.cast(\n        tfc.sum(tfc.logicalAnd(tfc.equal(yTrue, 1), tfc.equal(yPred, 1))),\n        'float32');\n  });\n}\n\nfunction falseNegatives(yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => {\n    return tfc.cast(\n        tfc.sum(tfc.logicalAnd(tfc.equal(yTrue, 1), tfc.equal(yPred, 0))),\n        'float32');\n  });\n}\n\nfunction falsePositives(yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => {\n    return tfc.cast(\n        tfc.sum(tfc.logicalAnd(tfc.equal(yTrue, 0), tfc.equal(yPred, 1))),\n        'float32');\n  });\n}\n\nexport function precision(yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => {\n    const tp = truePositives(yTrue, yPred);\n    const fp = falsePositives(yTrue, yPred);\n\n    const denominator = tfc.add(tp, fp);\n\n    return tfc.cast(\n        tfc.where(tfc.greater(denominator, 0), tfc.div(tp, denominator), 0),\n        'float32');\n  });\n}\n\nexport function recall(yTrue: Tensor, yPred: Tensor): Tensor {\n  return tidy(() => {\n    const tp = truePositives(yTrue, yPred);\n    const fn = falseNegatives(yTrue, yPred);\n\n    const denominator = tfc.add(tp, fn);\n\n    return tfc.cast(\n        tfc.where(tfc.greater(denominator, 0), tfc.div(tp, denominator), 0),\n        'float32');\n  });\n}\n\nexport function binaryCrossentropy(yTrue: Tensor, yPred: Tensor): Tensor {\n  return lossBinaryCrossentropy(yTrue, yPred);\n}\n\nexport function sparseCategoricalAccuracy(\n    yTrue: Tensor, yPred: Tensor): Tensor {\n  if (yTrue.rank === yPred.rank) {\n    yTrue = tfc.squeeze(yTrue, [yTrue.rank - 1]);\n  }\n  yPred = tfc.argMax(yPred, -1);\n  if (yPred.dtype !== yTrue.dtype) {\n    yPred = tfc.cast(yPred, yTrue.dtype);\n  }\n  return tfc.cast(tfc.equal(yTrue, yPred), 'float32');\n}\n\nexport function topKCategoricalAccuracy(yTrue: Tensor, yPred: Tensor): Tensor {\n  throw new NotImplementedError();\n}\n\nexport function sparseTopKCategoricalAccuracy(\n    yTrue: Tensor, yPred: Tensor): Tensor {\n  throw new NotImplementedError();\n}\n\n// Aliases.\nexport const mse = meanSquaredError;\nexport const MSE = meanSquaredError;\nexport const mae = meanAbsoluteError;\nexport const MAE = meanAbsoluteError;\nexport const mape = meanAbsolutePercentageError;\nexport const MAPE = meanAbsolutePercentageError;\nexport const categoricalCrossentropy = categoricalCrossentropyLoss;\nexport const cosine = cosineProximity;\nexport const sparseCategoricalCrossentropy = sparseCategoricalCrossentropyLoss;\n\n// TODO(cais, nielsene): Add serialize().\n\nexport const metricsMap: {[functionName: string]: LossOrMetricFn} = {\n  binaryAccuracy,\n  categoricalAccuracy,\n  precision,\n  categoricalCrossentropy,\n  sparseCategoricalCrossentropy,\n  mse,\n  MSE,\n  mae,\n  MAE,\n  mape,\n  MAPE,\n  cosine\n};\n\nexport function get(identifier: string|LossOrMetricFn): LossOrMetricFn {\n  if (typeof identifier === 'string' && identifier in metricsMap) {\n    return metricsMap[identifier];\n  } else if (typeof identifier !== 'string' && identifier != null) {\n    return identifier;\n  } else {\n    throw new ValueError(`Unknown metric ${identifier}`);\n  }\n}\n\n/**\n * Get the shortcut function name.\n *\n * If the fn name is a string,\n *   directly return the string name.\n * If the function is included in metricsMap or lossesMap,\n *   return key of the map.\n *   - If the function relative to multiple keys,\n *     return the first found key as the function name.\n *   - If the function exists in both lossesMap and metricsMap,\n *     search lossesMap first.\n * If the function is not included in metricsMap or lossesMap,\n *   return the function name.\n *\n * @param fn loss function, metric function, or short cut name.\n * @returns Loss or Metric name in string.\n */\nexport function getLossOrMetricName(fn: string|LossOrMetricFn): string {\n  util.assert(fn !== null, `Unknown LossOrMetricFn ${fn}`);\n  if (typeof fn === 'string') {\n    return fn;\n  } else {\n    let fnName;\n    for (const key of Object.keys(lossesMap)) {\n      if (lossesMap[key] === fn) {\n        fnName = key;\n        break;\n      }\n    }\n    if (fnName !== undefined) {\n      return fnName;\n    }\n    for (const key of Object.keys(metricsMap)) {\n      if (metricsMap[key] === fn) {\n        fnName = key;\n        break;\n      }\n    }\n    if (fnName !== undefined) {\n      return fnName;\n    }\n    return (fn as Function).name;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Optimizers.\n */\n\nimport {Optimizer, train} from '@tensorflow/tfjs-core';\n\nimport {epsilon} from './backend/common';\n\nimport {ValueError} from './errors';\n\n// Add (de)serialize()\n\n// Porting note: This diverges from the PyKeras implementation and may need to\n// change based on (de)serialization requirements.\nexport function getOptimizer(identifier: string): Optimizer {\n  const optimizerMap: {[optimizerName: string]: () => Optimizer} = {\n    'Adagrad': () => train.adagrad(0.01),\n    'Adadelta': () => train.adadelta(1, 0.95, epsilon()),\n    'Adam': () => train.adam(0.001, 0.9, 0.999, epsilon()),\n    'Adamax': () => train.adamax(0.002, 0.9, 0.999, epsilon(), 0),\n    'RMSProp': () => train.rmsprop(0.001, 0.9, 0, epsilon()),\n    'SGD': () => train.sgd(0.01)\n  };\n  optimizerMap['adagrad'] = optimizerMap['Adagrad'];\n  optimizerMap['adadelta'] = optimizerMap['Adadelta'];\n  optimizerMap['adam'] = optimizerMap['Adam'];\n  optimizerMap['adamax'] = optimizerMap['Adamax'];\n  optimizerMap['rmsprop'] = optimizerMap['RMSProp'];\n  optimizerMap['sgd'] = optimizerMap['SGD'];\n\n  if (identifier in optimizerMap) {\n    return optimizerMap[identifier]();\n  }\n  throw new ValueError(`Unknown Optimizer ${identifier}`);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/** Utility functions related to user-defined metadata. */\n\n// Maximum recommended serialized size for user-defined metadata.\n// Beyond this limit, a warning message will be printed during model loading and\n// saving.\nexport const MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH = 1 * 1024 * 1024;\n\n/**\n * Check validity of user-defined metadata.\n *\n * @param userDefinedMetadata\n * @param modelName Name of the model that the user-defined metadata belongs to.\n *   Used during construction of error messages.\n * @param checkSize Whether to check the size of the metadata is under\n *   recommended limit. Default: `false`. If `true`, will try stringify the\n *   JSON object and print a console warning if the serialzied size is above the\n *   limit.\n * @throws Error if `userDefinedMetadata` is not a plain JSON object.\n */\nexport function checkUserDefinedMetadata(\n    userDefinedMetadata: {}, modelName: string, checkSize = false): void {\n  if (userDefinedMetadata == null ||\n      typeof userDefinedMetadata !== 'object' ||\n      Object.getPrototypeOf(userDefinedMetadata) !== Object.prototype ||\n      !plainObjectCheck(userDefinedMetadata)) {\n    throw new Error(\n        'User-defined metadata is expected to be a JSON object, but is not.');\n  }\n\n  if (checkSize) {\n    const out = JSON.stringify(userDefinedMetadata);\n    if (out.length > MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH) {\n      console.warn(\n          `User-defined metadata of model \"${modelName}\" is too large in ` +\n          `size (length=${out.length} when serialized). It is not ` +\n          `recommended to store such large objects in user-defined metadata. ` +\n          `Please make sure its serialized length is <= ` +\n          `${MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH}.`);\n    }\n  }\n}\n\n/**\n * Check if an input is plain JSON object or any valid subfield of it.\n *\n * @param x The input to be checked.\n * @param assertObject Whether to assert `x` is a JSON object, i.e., reject\n *   cases of arrays and primitives.\n * @return Returns `true` if and only if `x` is a plain JSON object,\n *   a JSON-valid primitive including string, number, boolean and null,\n *   or an array of the said types.\n */\n// tslint:disable-next-line:no-any\nexport function plainObjectCheck(x: any): boolean {\n  if (x === null) {\n    // Note: typeof `null` is 'object', and `null` is valid in JSON.\n    return true;\n  } else if (typeof x === 'object') {\n    if (Object.getPrototypeOf(x) === Object.prototype) {\n      // `x` is a JavaScript object and its prototype is Object.\n      const keys = Object.keys(x);\n      for (const key of keys) {\n        if (typeof key !== 'string') {\n          // JSON keys must be strings.\n          return false;\n        }\n        if (!plainObjectCheck(x[key])) {  // Recursive call.\n          return false;\n        }\n      }\n      return true;\n    } else {\n      // `x` is a JavaScript object but its prototype is not Object.\n      if (Array.isArray(x)) {\n        // `x` is a JavaScript array.\n        for (const item of x) {\n          if (!plainObjectCheck(item)) {  // Recursive call.\n            return false;\n          }\n        }\n        return true;\n      } else {\n        // `x` is a JavaScript object and its prototype is not Object,\n        // and it's not an Array. I.e., it's a complex object such as\n        // `Error` and `Date`.\n        return false;\n      }\n    }\n  } else {\n    // `x` is not a JavaScript object or `null`.\n    const xType = typeof x;\n    return xType === 'string' || xType === 'number' || xType === 'boolean';\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {Container} from '../engine/container';\nimport {Layer, Node} from '../engine/topology';\nimport {countParamsInWeights} from './variable_utils';\n\n/**\n * Print the summary of a LayersModel object.\n *\n * @param model tf.LayersModel instance.\n * @param lineLength Total length of printed lines. Set this to adapt to the\n *   display to different terminal or console sizes.\n * @param positions Relative or absolute positions of log elements in each\n *   line. Each number corresponds to right-most (i.e., ending) position of a\n *   column.\n *   If not provided, defaults to `[0.45, 0.85, 1]` for sequential-like\n *   models and `[0.33, 0.55, 0.67, 1]` for non-sequential like models.\n * @param printFn Print function to use.\n *   It will be called on each line of the summary. You can provide a custom\n *   function in order to capture the string summary. Defaults to `console.log`.\n */\nexport function printSummary(\n    model: Container, lineLength?: number, positions?: number[],\n    // tslint:disable-next-line:no-any\n    printFn: (message?: any, ...optionalParams: any[]) => void =\n        console.log): void {\n  const sequentialLike = isModelSequentialLike(model);\n\n  // Header names for different log elements.\n  const toDisplay: string[] = ['Layer (type)', 'Output shape', 'Param #'];\n  if (sequentialLike) {\n    lineLength = lineLength || 65;\n    positions = positions || [0.45, 0.85, 1];\n  } else {\n    lineLength = lineLength || 98;\n    positions = positions || [0.33, 0.55, 0.67, 1];\n    // Header names for different log elements.\n  }\n\n  if (positions[positions.length - 1] <= 1) {\n    // `positions` is relative. Convert it to absolute positioning.\n    positions = positions.map(p => Math.floor(lineLength * p));\n  }\n\n  let relevantNodes: Node[];\n  if (!sequentialLike) {\n    toDisplay.push('Receives inputs');\n    relevantNodes = [];\n    for (const depth in model.nodesByDepth) {\n      relevantNodes.push(...model.nodesByDepth[depth]);\n    }\n  }\n\n  printFn('_'.repeat(lineLength));\n  printRow(toDisplay, positions, printFn);\n  printFn('='.repeat(lineLength));\n\n  const layers = model.layers;\n  for (let i = 0; i < layers.length; ++i) {\n    if (sequentialLike) {\n      printLayerSummary(layers[i], positions, printFn);\n    } else {\n      printLayerSummaryWithConnections(\n          layers[i], positions, relevantNodes, printFn);\n    }\n    printFn((i === layers.length - 1 ? '=' : '_').repeat(lineLength));\n  }\n\n  // tslint:disable-next-line:no-any\n  (model as any).checkTrainableWeightsConsistency();\n\n  const trainableCount = countTrainableParams(model);\n  const nonTrainableCount = countParamsInWeights(model.nonTrainableWeights);\n\n  printFn(`Total params: ${trainableCount + nonTrainableCount}`);\n  printFn(`Trainable params: ${trainableCount}`);\n  printFn(`Non-trainable params: ${nonTrainableCount}`);\n  printFn('_'.repeat(lineLength));\n}\n\nfunction countTrainableParams(model: Container): number {\n  let trainableCount: number;\n  // tslint:disable:no-any\n  if ((model as any).collectedTrainableWeights != null) {\n    trainableCount =\n        countParamsInWeights((model as any).collectedTrainableWeights);\n  } else {\n    trainableCount = countParamsInWeights(model.trainableWeights);\n  }\n  // tslint:enable:no-any\n  return trainableCount;\n}\n\nfunction isModelSequentialLike(model: Container): boolean {\n  let sequentialLike = true;\n  const nodesByDepth: Node[][] = [];\n  const nodes: Node[] = [];\n  for (const depth in model.nodesByDepth) {\n    nodesByDepth.push(model.nodesByDepth[depth]);\n  }\n  for (const depthNodes of nodesByDepth) {\n    if (depthNodes.length > 1 ||\n        depthNodes.length === 1 && depthNodes[0].inboundLayers.length > 1) {\n      sequentialLike = false;\n      break;\n    }\n    nodes.push(...depthNodes);\n  }\n  if (sequentialLike) {\n    // Search for shared layers.\n    for (const layer of model.layers) {\n      let flag = false;\n      for (const node of layer.inboundNodes) {\n        if (nodes.indexOf(node) !== -1) {\n          if (flag) {\n            sequentialLike = false;\n            break;\n          } else {\n            flag = true;\n          }\n        }\n      }\n      if (!sequentialLike) {\n        break;\n      }\n    }\n  }\n  return sequentialLike;\n}\n\nfunction printRow(\n    fields: string[], positions: number[],\n    // tslint:disable-next-line:no-any\n    printFn: (message?: any, ...optionalParams: any[]) => void = console.log) {\n  let line = '';\n  for (let i = 0; i < fields.length; ++i) {\n    if (i > 0) {\n      line = line.slice(0, line.length - 1) + ' ';\n    }\n    line += fields[i];\n    line = line.slice(0, positions[i]);\n    line += ' '.repeat(positions[i] - line.length);\n  }\n  printFn(line);\n}\n\n/**\n * Prints a summary for a single Layer, without connectivity information.\n *\n * @param layer: Layer instance to print.\n */\nfunction printLayerSummary(\n    layer: Layer, positions: number[],\n    // tslint:disable-next-line:no-any\n    printFn: (message?: any, ...optionalParams: any[]) => void) {\n  let outputShape: string;\n  try {\n    outputShape = JSON.stringify(layer.outputShape);\n  } catch (err) {\n    outputShape = 'multiple';\n  }\n\n  const name = layer.name;\n  const className = layer.getClassName();\n  const fields: string[] =\n      [`${name} (${className})`, outputShape, layer.countParams().toString()];\n  printRow(fields, positions, printFn);\n}\n\n/**\n * Prints a summary for a single Layer, with connectivity information.\n */\nfunction printLayerSummaryWithConnections(\n    layer: Layer, positions: number[], relevantNodes: Node[],\n    // tslint:disable-next-line:no-any\n    printFn: (message?: any, ...optionalParams: any[]) => void) {\n  let outputShape: string;\n  try {\n    outputShape = JSON.stringify(layer.outputShape);\n  } catch (err) {\n    outputShape = 'multiple';\n  }\n\n  const connections: string[] = [];\n  for (const node of layer.inboundNodes) {\n    if (relevantNodes != null && relevantNodes.length > 0 &&\n        relevantNodes.indexOf(node) === -1) {\n      continue;\n    }\n    for (let i = 0; i < node.inboundLayers.length; ++i) {\n      const inboundLayer = node.inboundLayers[i].name;\n      const inboundLayerIndex = node.nodeIndices[i];\n      const inboundTensorIndex = node.tensorIndices[i];\n      connections.push(\n          `${inboundLayer}[${inboundLayerIndex}][${inboundTensorIndex}]`);\n    }\n  }\n  const name = layer.name;\n  const className = layer.getClassName();\n  const firstConnection = connections.length === 0 ? '' : connections[0];\n  const fields: string[] = [\n    `${name} (${className})`, outputShape, layer.countParams().toString(),\n    firstConnection\n  ];\n\n  printRow(fields, positions, printFn);\n  for (let i = 1; i < connections.length; ++i) {\n    printRow(['', '', '', connections[i]], positions, printFn);\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n// Porting note: This file doesn't exist in PyKeras.\n// Its purpose here is to centralize the boundary layer between\n// tfjs-layers's internal Config TS-Centric format and PyKeras's\n// serialized Python Config format.\n\nimport {serialization} from '@tensorflow/tfjs-core';\n\nimport {PyJsonValue} from '../keras_format/types';\nimport * as generic_utils from '../utils/generic_utils';\n// tslint:enable\n\n/**\n * Test whether a value in an array is the name of a LayersModel or Layer.\n * @param key The key name that the value is found under. Note that the key\n *   may not be at the level immediately above the value, if the value is in a\n *   nested array.\n * @param index Index of the value in the Array that it is found in.\n * @param value The value object.\n * @returns A boolean indicating whether value is a name.\n */\nfunction isArrayItemInputOrOutputName<T>(\n    key: string, index: number, value: T): boolean {\n  return (key === 'inboundNodes' || key === 'outputLayers' ||\n          key === 'inputLayers') &&\n      index === 0 && typeof value === 'string';\n}\n\n/**\n * Convert a Pythonic config object to TypeScript config object.\n * @param pythonicConfig The config object to convert.\n * @param key Optional key name of the object being converted.\n * @returns Result of the conversion.\n */\nexport function convertPythonicToTs(\n    pythonicConfig: PyJsonValue, key?: string): serialization.ConfigDictValue {\n  if (pythonicConfig === null) {\n    return null;\n  } else if (typeof pythonicConfig === 'string') {\n    return generic_utils.toCamelCase(pythonicConfig);\n  } else if (\n      (typeof pythonicConfig === 'number') ||\n      (typeof pythonicConfig === 'boolean')) {\n    return pythonicConfig;\n  } else if (pythonicConfig instanceof Array) {\n    const tsArray = [];\n    const arrayLength = pythonicConfig.length;\n    for (let i = 0; i < arrayLength; ++i) {\n      const item = pythonicConfig[i];\n      if (isArrayItemInputOrOutputName(key, i, item)) {\n        tsArray.push(item);\n      } else {\n        tsArray.push(convertPythonicToTs(item, key));\n      }\n    }\n    return tsArray;\n  } else {\n    const tsDict: serialization.ConfigDict = {};\n    for (const pythonicKey of Object.keys(pythonicConfig)) {\n      const pythonicValue = pythonicConfig[pythonicKey];\n      if (pythonicKey === 'name' && typeof pythonicValue === 'string') {\n        // Special case the 'name' key with a string value. Name values, such as\n        // the names of LayersModel and Layer instances, should not undergo the\n        // camel-case conversion.\n        tsDict[pythonicKey] = pythonicValue;\n      } else {\n        const tsKey = generic_utils.toCamelCase(pythonicKey);\n        tsDict[tsKey] = convertPythonicToTs(pythonicValue, tsKey);\n      }\n    }\n    return tsDict;\n  }\n}\n\n/**\n * Convert a TypeScript config object to Python config object.\n * @param tsConfig The config object to convert.\n * @param key Optional key name of the object being converted.\n * @returns Result of the conversion.\n */\nexport function convertTsToPythonic(\n    tsConfig: serialization.ConfigDictValue, key?: string): PyJsonValue {\n  if (tsConfig === null || tsConfig === undefined) {\n    return null;\n  } else if (typeof tsConfig === 'string') {\n    return generic_utils.toSnakeCase(tsConfig);\n  } else if (\n      (typeof tsConfig === 'number') || (typeof tsConfig === 'boolean')) {\n    return tsConfig;\n  } else if (tsConfig instanceof Array) {\n    const pyArray = [];\n    const arrayLength = tsConfig.length;\n    for (let i = 0; i < arrayLength; ++i) {\n      const item = tsConfig[i];\n      if (isArrayItemInputOrOutputName(key, i, item)) {\n        pyArray.push(item);\n      } else {\n        pyArray.push(convertTsToPythonic(item, key));\n      }\n    }\n    return pyArray;\n  } else {\n    const pyDict: serialization.ConfigDict = {};\n    for (const tsKey of Object.keys(tsConfig)) {\n      const tsValue = tsConfig[tsKey];\n      const pyKey = generic_utils.toSnakeCase(tsKey);\n      if ((tsKey === 'name' || tsKey === 'className') &&\n          typeof tsValue === 'string') {\n        // Special case the 'name' key with a string value. Name values, such as\n        // the names of LayersModel and Layer instances, should not undergo the\n        // snake-case conversion.\n        pyDict[pyKey] = tsValue;\n      } else {\n        pyDict[pyKey] = convertTsToPythonic(tsValue, tsKey);\n      }\n    }\n    return pyDict;\n  }\n}\n","/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '3.13.0';\nexport {version};\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original source: keras/engine/topology.py */\n\nimport {NamedTensorMap, Scalar, serialization, Tensor, tidy} from '@tensorflow/tfjs-core';\n\nimport {getUid} from '../backend/state';\nimport {NotImplementedError, RuntimeError, ValueError} from '../errors';\nimport {Shape} from '../keras_format/common';\nimport {TensorKeyWithArgsArray} from '../keras_format/node_config';\nimport {PyJsonDict} from '../keras_format/types';\nimport {deserialize as deserializeLayer} from '../layers/serialization';\nimport {Kwargs} from '../types';\nimport * as generic_utils from '../utils/generic_utils';\nimport {convertTsToPythonic} from '../utils/serialization_utils';\nimport * as types_utils from '../utils/types_utils';\nimport {batchSetValue, LayerVariable} from '../variables';\nimport {version as layersVersion} from '../version';\n\nimport {execute, FeedDict} from './executor';\nimport {InputLayer} from './input_layer';\nimport {DisposeResult, Layer, Node, SymbolicTensor} from './topology';\n\n/** Constructor config for Container. */\nexport interface ContainerArgs {\n  inputs: SymbolicTensor|SymbolicTensor[];\n  outputs: SymbolicTensor|SymbolicTensor[];\n  name?: string;\n}\n\n/**\n * A Container is a directed acyclic graph of layers.\n *\n * It is the topological form of a \"model\". A LayersModel\n * is simply a Container with added training routines.\n *\n */\nexport abstract class Container extends Layer {\n  inputs: SymbolicTensor[];\n  outputs: SymbolicTensor[];\n\n  inputLayers: Layer[];\n  inputLayersNodeIndices: number[];\n  inputLayersTensorIndices: number[];\n\n  outputLayers: Layer[];\n  outputLayersNodeIndices: number[];\n  outputLayersTensorIndices: number[];\n\n  layers: Layer[];\n  layersByDepth: {[depth: string]: Layer[]};\n  nodesByDepth: {[depth: string]: Node[]};\n\n  internalContainerRefs: Container[];\n\n  containerNodes = new Set<string>();\n\n  // TODO(michaelterry): Add cache support\n  // private outputMaskCache: any;\n  // private outputTensorCache: any;\n  // private outputShapeCache: any;\n\n  inputNames: string[];\n  outputNames: string[];\n  feedInputShapes: Shape[];\n\n  protected internalInputShapes: Shape[];\n  protected internalOutputShapes: Shape[];\n  // TODO(cais): Maybe 'feed' should not in the names of these variables,\n  //   due to the fact that our backend is not symbolic.\n  protected feedInputNames: string[];\n  protected feedOutputNames: string[];\n\n  constructor(args: ContainerArgs) {\n    // No args passed to super's constructor.\n    super({});\n    this.name = args.name;\n    if (this.name == null) {\n      const prefix = this.getClassName().toLowerCase();\n      this.name = getUid(prefix);\n    }\n\n    this.supportsMasking = false;\n    this.trainable_ = true;\n\n    // TODO(michaelterry): Initialize perInputLosses/Updates here.\n\n    // Container-specific properties.\n    if (Array.isArray(args.inputs)) {\n      this.inputs = args.inputs.slice();\n    } else {\n      this.inputs = [args.inputs];\n    }\n    if (Array.isArray(args.outputs)) {\n      this.outputs = args.outputs.slice();\n    } else {\n      this.outputs = [args.outputs];\n    }\n\n    // Check for redundancy in inputs.\n    if (generic_utils.unique(this.inputs).length !== this.inputs.length) {\n      throw new ValueError(\n          'The list of inputs passed to the model is ' +\n          'redundant. All inputs should only appear once. Found: ' +\n          `${this.inputs.map(x => x.name)}`);\n    }\n\n    // Check for redundancy in outputs.\n    if (generic_utils.unique(this.outputs).length !== this.outputs.length) {\n      console.warn(\n          'The list of outputs passed to the model is redundant. ' +\n          'All outputs should only appear once. Found: ' +\n          `${this.outputs.map(x => x.name)}`);\n    }\n\n    /*\n      List of initial layers (1 to 1 mapping with this.inputs, hence the same\n      layer might appear twice)\n    */\n    this.inputLayers = [];\n    this.inputLayersNodeIndices = [];\n    this.inputLayersTensorIndices = [];\n    /*\n      List of layers (1 to 1 mapping with this.outputs, hence the same layer\n      might appear twice)\n    */\n    this.outputLayers = [];\n    this.outputLayersNodeIndices = [];\n    this.outputLayersTensorIndices = [];\n    /*\n      All layers in order of horizontal graph traversal. Entries are unique.\n      Includes input and output layers.\n    */\n    this.layers = [];\n\n    /*\n      References to container layers that were constructed internally. We need\n      these to properly dispose of tensors from nested containers.\n    */\n    this.internalContainerRefs = [];\n\n    // TODO(michaelterry): Determine if caching still needed with eager\n    // backend.\n    /*\n      This is for performance optimization when calling the Container on new\n      inputs. Every time the Container is called on a set on input tensors,\n      we compute the output tensors, output masks and output shapes in one pass,\n      then cache them here. When one of these outputs is queried later,\n      we retrieve it from there instead of recomputing it.\n    */\n    // this.outputTensorCache = {};\n    // this.outputShapeCache = {};\n\n    // Build this.outputLayers:\n    for (const x of this.outputs) {\n      const layer = x.sourceLayer;\n      const nodeIndex = x.nodeIndex;\n      const tensorIndex = x.tensorIndex;\n      this.outputLayers.push(layer);\n      this.outputLayersNodeIndices.push(nodeIndex);\n      this.outputLayersTensorIndices.push(tensorIndex);\n    }\n\n    // TODO(michaelterry): Add output mask cache code.\n\n    // Build this.inputLayers:\n    for (const x of this.inputs) {\n      const layer = x.sourceLayer;\n      const nodeIndex = x.nodeIndex;\n      const tensorIndex = x.tensorIndex;\n      /*\n        It's supposed to be an input layer, so only one node\n        and one tensor output.\n      */\n      generic_utils.assert(nodeIndex === 0, 'input layer has >1 nodes');\n      generic_utils.assert(tensorIndex === 0, 'input layer has >1 tensors');\n      this.inputLayers.push(layer);\n      this.inputLayersNodeIndices.push(nodeIndex);\n      this.inputLayersTensorIndices.push(tensorIndex);\n    }\n\n    // Build this.inputNames and this.outputNames.\n    this.inputNames = [];\n    this.outputNames = [];\n    this.feedInputShapes = [];\n    this.feedInputNames = [];\n    this.feedOutputNames = [];\n    for (let i = 0; i < this.inputLayers.length; i++) {\n      const layer = this.inputLayers[i];\n      // Check that layer is an InputLayer.\n      if (!(layer instanceof InputLayer)) {\n        throw new TypeError(\n            'Input layers to a LayersModel must be InputLayer objects. ' +\n            `Received inputs: ${args.inputs}. ` +\n            `Input ${i} (0-based) originates ` +\n            `from layer type ${layer.getClassName()}.`);\n      }\n      this.inputNames.push(layer.name);\n      this.feedInputShapes.push(layer.batchInputShape);\n\n      this.feedInputNames.push(layer.name);\n    }\n    for (const layer of this.outputLayers) {\n      this.outputNames.push(layer.name);\n    }\n\n    this.internalInputShapes = this.inputs.map(x => x.shape);\n    this.internalOutputShapes = this.outputs.map(x => x.shape);\n\n    /*\n      Container_nodes: set of nodes included in the graph (not all nodes\n      included in the layers are relevant to the current graph).\n    */\n    // ids of all nodes relevant to the Container:\n    const nodesDepths: {[nodeID: string]: number} = {};\n    // To recover nodes from their ID.\n    const nodeIDToNode: {[nodeID: string]: Node} = {};\n    const layersDepths: {[layerID: string]: number} = {};\n    // To layers from their ID.\n    const layerIDToLayer: {[layerID: string]: Layer} = {};\n    const layerIndices: {[layerID: string]: number} = {};\n    const nodesInDecreasingDepth: Node[] = [];\n\n    /**\n     * Builds a map of the graph of layers.\n     *\n     * This recursively updates the map `layerIndices`,\n     * the list `nodesInDecreasingDepth` and the set `containerNodes`.\n     *\n     * @param tensor Some tensor in a graph.\n     * @param finishedNodes Set of nodes whose subgraphs have been traversed\n     *         completely. Useful to prevent duplicated work.\n     * @param nodesInProgress Set of nodes that are currently active on the\n     *         recursion stack. Useful to detect cycles.\n     * @param layer Layer from which `tensor` comes from. If not provided,\n     *   will be obtained from tensor.sourceLayer.\n     * @param nodeIndex Node index from which `tensor` comes from.\n     * @param tensorIndex TensorIndex from which `tensor` comes from.\n     *\n     * @exception RuntimeError if a cycle is detected.\n     */\n    const buildMapOfGraph =\n        (tensor: SymbolicTensor, finishedNodes: Node[], nodesInProgress: Node[],\n         layer?: Layer, nodeIndex?: number, tensorIndex?: number) => {\n          if (layer == null || nodeIndex == null || tensorIndex == null) {\n            layer = tensor.sourceLayer;\n            nodeIndex = tensor.nodeIndex;\n            tensorIndex = tensor.tensorIndex;\n          }\n          const node = layer.inboundNodes[nodeIndex];\n\n          // Prevent cycles.\n          if (nodesInProgress.indexOf(node) !== -1) {\n            throw new RuntimeError(\n                `The tensor ${tensor.name} at layer \"${layer.name}\" ` +\n                'is part of a cycle.');\n          }\n\n          // Don't repeat work for shared subgraphs\n          if (finishedNodes.indexOf(node) !== -1) {\n            return;\n          }\n\n          // Update containerNodes.\n          this.containerNodes.add(Container.nodeKey(layer, nodeIndex));\n\n          // Store the traversal order for layer sorting.\n          if (!(layer.id in layerIndices)) {\n            layerIndices[layer.id] = Object.keys(layerIndices).length;\n          }\n\n          if (nodesInProgress.indexOf(node) === -1) {\n            nodesInProgress.push(node);\n          }\n\n          // Propagate to all previous tensors connected to this node.\n          const numInboundLayers = node.inboundLayers.length;\n          for (let i = 0; i < numInboundLayers; i++) {\n            const x = node.inputTensors[i];\n            const layer = node.inboundLayers[i];\n            const nodeIndex = node.nodeIndices[i];\n            const tensorIndex = node.tensorIndices[i];\n            buildMapOfGraph(\n                x, finishedNodes, nodesInProgress, layer, nodeIndex,\n                tensorIndex);\n          }\n          finishedNodes.push(node);\n          while (nodesInProgress.indexOf(node) >= 0) {\n            nodesInProgress.splice(nodesInProgress.indexOf(node), 1);\n          }\n          nodesInDecreasingDepth.push(node);\n        };\n\n    const finishedNodes: Node[] = [];\n    const nodesInProgress: Node[] = [];\n    for (const x of this.outputs) {\n      buildMapOfGraph(x, finishedNodes, nodesInProgress);\n    }\n\n    const reversedNodesInDecreasingDepth =\n        nodesInDecreasingDepth.slice().reverse();\n    for (const node of reversedNodesInDecreasingDepth) {\n      nodeIDToNode[node.id] = node;\n      // If the depth is not set, the node has no outbound nodes (depth 0).\n      if (!(node.id in nodesDepths)) {\n        nodesDepths[node.id] = 0;\n      }\n      let depth = nodesDepths[node.id];\n\n      // Update the depth of the corresponding layer\n      const previousDepth =\n          (layersDepths[node.outboundLayer.id] == null ?\n               0 :\n               layersDepths[node.outboundLayer.id]);\n\n      /*\n        If we've seen this layer before at a higher depth, we should use that\n        depth instead of the node depth.  This is necessary for shared layers\n        that have inputs at different depth levels in the graph.\n      */\n      depth = Math.max(depth, previousDepth);\n      layersDepths[node.outboundLayer.id] = depth;\n      layerIDToLayer[node.outboundLayer.id] = node.outboundLayer;\n      nodesDepths[node.id] = depth;\n\n      // Update the depth of inbound nodes.\n      for (let i = 0; i < node.inboundLayers.length; i++) {\n        const inboundLayer = node.inboundLayers[i];\n        const nodeIndex = node.nodeIndices[i];\n        const inboundNode = inboundLayer.inboundNodes[nodeIndex];\n        const previousDepth =\n            (nodesDepths[inboundNode.id] == null ? 0 :\n                                                   nodesDepths[inboundNode.id]);\n        nodesDepths[inboundNode.id] = Math.max(depth + 1, previousDepth);\n        nodeIDToNode[inboundNode.id] = inboundNode;\n      }\n    }\n\n    // Build a dict {depth: list of nodes with this depth}\n    const nodesByDepth: {[depth: string]: Node[]} = {};\n    for (const nodeID in nodesDepths) {\n      const depth = nodesDepths[nodeID];\n      if (!(depth in nodesByDepth)) {\n        nodesByDepth[depth] = [];\n      }\n      nodesByDepth[depth].push(nodeIDToNode[nodeID]);\n    }\n\n    // Build a dict {depth: list of layers with this depth}\n    const layersByDepth: {[depth: string]: Layer[]} = {};\n    for (const layerID in layersDepths) {\n      const depth = layersDepths[layerID];\n      if (!(depth in layersByDepth)) {\n        layersByDepth[depth] = [];\n      }\n      layersByDepth[depth].push(layerIDToLayer[layerID]);\n    }\n\n    // Get sorted list of layer depths.\n    let depthKeys = Object.keys(layersByDepth)\n                        .map(x => parseInt(x, 10))\n                        .sort(generic_utils.reverseNumberCompare);\n\n    // Set this.layers and this.layersByDepth.\n    this.layers = [];\n    for (const depth of depthKeys) {\n      const layersForDepth = layersByDepth[depth];\n      // Container.layers needs to have a deterministic order:\n      // here we order them by traversal order.\n      layersForDepth.sort((a, b) => {\n        const aIndex = layerIndices[a.id];\n        const bIndex = layerIndices[b.id];\n        if (aIndex < bIndex) {\n          return -1;\n        }\n        if (aIndex > bIndex) {\n          return 1;\n        }\n        return 0;\n      });\n      for (const layer of layersForDepth) {\n        if (layer instanceof Container) {\n          this.internalContainerRefs.push(layer);\n        }\n        this.layers.push(layer);\n      }\n    }\n    this.layersByDepth = layersByDepth;\n\n    // Get sorted list of node depths;\n    depthKeys = Object.keys(nodesByDepth)\n                    .map(x => parseInt(x, 10))\n                    .sort(generic_utils.reverseNumberCompare);\n\n    // Check that all tensors required are computable.\n    // computable_tensors: all tensors in the graph\n    // that can be computed from the inputs provided.\n    const computableTensors = this.inputs.slice();\n\n    // To provide a better error msg.\n    const layersWithCompleteInput: string[] = [];\n    for (const depth of depthKeys) {\n      for (const node of nodesByDepth[depth]) {\n        const layer = node.outboundLayer;\n        if (layer != null) {\n          for (const x of node.inputTensors) {\n            if (computableTensors.indexOf(x) === -1) {\n              throw new RuntimeError(\n                  `Graph disconnected: cannot obtain value for tensor ${x}` +\n                  ` at layer \"${layer.name}\". ` +\n                  'The following previous layers were accessed without ' +\n                  `issue: ${layersWithCompleteInput}`);\n            }\n          }\n          for (const x of node.outputTensors) {\n            computableTensors.push(x);\n          }\n          layersWithCompleteInput.push(layer.name);\n        }\n      }\n    }\n\n    // Set this.containerNodes and this.nodesByDepth.\n    this.nodesByDepth = nodesByDepth;\n\n    // Ensure name unicity, which will be crucial for serialization\n    // (since serialized nodes refer to layers by their name).\n    const allNames = this.layers.map(x => x.name);\n    for (const name of allNames) {\n      const numOccurrences = allNames.filter(x => x === name).length;\n      if (numOccurrences !== 1) {\n        throw new RuntimeError(\n            `The name \"${name}\" is used ${numOccurrences} times ` +\n            'in the model. All layer names should be unique. Layer names: ' +\n            JSON.stringify(allNames));\n      }\n    }\n\n    // Layer parameters.\n    // The new container starts with a single inbound node\n    // for its inputs, and no outbound nodes.\n    // Will be appended to by future calls to apply().\n    this.outboundNodes = [];\n    // Will be appended to below, and by future calls to apply().\n    this.inboundNodes = [];\n\n    // Create the node linking internal inputs to internal outputs.\n    // (This call has side effects.)\n    // tslint:disable-next-line:no-unused-expression\n    new Node({\n      outboundLayer: this,\n      inboundLayers: [],\n      nodeIndices: [],\n      tensorIndices: [],\n      inputTensors: this.inputs,\n      outputTensors: this.outputs,\n      inputMasks: this.inputs.map(x => null),\n      outputMasks: this.outputs.map(x => null),\n      inputShapes: this.inputs.map(x => x.shape),\n      outputShapes: this.outputs.map(x => x.shape)\n    });\n    this.built = true;\n    this._refCount = 1;  // The ref count of a container always start at 1.\n  }\n\n  protected assertNotDisposed() {\n    if (this._refCount === 0) {\n      throw new Error(`Container '${this.name}' is already disposed.`);\n    }\n  }\n\n  /**\n   * Attempt to dispose a LayersModel's weights.\n   *\n   * This method decrease the reference count of the LayersModel object by 1.\n   *\n   * A LayersModel is reference-counted. Its reference count is incremented by 1\n   * when it is first constructed and when it is used as a Layer of another\n   * LayersModel.\n   *\n   * If the reference count of a LayersModel becomes 0, the `dispose` method of\n   * all its constituent `Layer`s will be called.\n   *\n   * Note: If the reference count is greater than 0 after the decrement, the\n   * `dispose` method of its constituent `Layer`s will *not* be called.\n   *\n   * After a LayersModel is disposed, it cannot be used in calls such as\n   * 'predict`, `evaluate` or `fit` anymore.\n   *\n   * @returns A DisposeResult Object with the following fields:\n   *   - refCountAfterDispose: The reference count of the LayersModel after this\n   *     `dispose()` call.\n   *   - numDisposedVariables: Number of `tf.Variable`s (i.e., weights) disposed\n   *     during this `dispose()` call.\n   * @throws {Error} If the layer is not built yet, or if the LayersModel has\n   *   already been disposed.\n   */\n  dispose(): DisposeResult {\n    this.assertNotDisposed();\n    const result:\n        DisposeResult = {refCountAfterDispose: null, numDisposedVariables: 0};\n    if (--this._refCount === 0) {\n      for (const layer of this.layers) {\n        result.numDisposedVariables += layer.dispose().numDisposedVariables;\n      }\n\n      // Call dispose on each internally created container layer again to ensure\n      // their refCounts hit zero and their tensors are subsequently deleted.\n      for (const container of this.internalContainerRefs) {\n        result.numDisposedVariables += container.dispose().numDisposedVariables;\n      }\n    }\n    result.refCountAfterDispose = this._refCount;\n    return result;\n  }\n\n  get trainable() {\n    return this.trainable_;\n  }\n\n  set trainable(trainable: boolean) {\n    this.layers.forEach(layer => {\n      // tslint:disable-next-line:no-any\n      ((layer as any)._trainableWeights as LayerVariable[])\n          .forEach(w => w.trainable = trainable);\n    });\n    this.trainable_ = trainable;\n  }\n\n  get trainableWeights(): LayerVariable[] {\n    // Porting Note: This check below is to prevent errors where the\n    //   _trainableWeights inherited from the parent class (Layer) gets\n    //   inadvertently used.\n    if (this._trainableWeights.length > 0) {\n      throw new ValueError(\n          'Container instance unexpectedly contains _trainableWeights.' +\n          'The trainable weights of a Container are a union of the ' +\n          'trainable weights of its consituent Layers. Its own ' +\n          '_trainableWeights must remain an empty Array.');\n    }\n\n    if (!this.trainable) {\n      return [];\n    }\n    let weights: LayerVariable[] = [];\n    for (const layer of this.layers) {\n      weights = weights.concat(layer.trainableWeights);\n    }\n    return weights;\n  }\n\n  get nonTrainableWeights(): LayerVariable[] {\n    const weights: LayerVariable[] = [];\n    for (const layer of this.layers) {\n      weights.push(...layer.nonTrainableWeights);\n    }\n    if (!this.trainable) {\n      const trainableWeights: LayerVariable[] = [];\n      for (const layer of this.layers) {\n        trainableWeights.push(...layer.trainableWeights);\n      }\n      return trainableWeights.concat(weights);\n    }\n    return weights;\n  }\n\n  get weights(): LayerVariable[] {\n    return this.trainableWeights.concat(this.nonTrainableWeights);\n  }\n\n  /**\n   * Loads all layer weights from a JSON object.\n   *\n   * Porting Note: HDF5 weight files cannot be directly loaded in JavaScript /\n   *   TypeScript. The utility script at `scripts/pykeras.py` offers means\n   *   to convert them into JSON strings compatible with this method.\n   * Porting Note: TensorFlow.js Layers supports only loading by name currently.\n   *\n   * @param weights A JSON mapping weight names to weight values as nested\n   *   arrays of numbers, or a `NamedTensorMap`, i.e., a JSON mapping weight\n   *   names to `tf.Tensor` objects.\n   * @param strict Require that the provided weights exactly match those\n   *   required by the container.  Default: `true`.  Passing `false` means that\n   *   extra weights and missing weights will be silently ignored.\n   */\n  loadWeights(weights: NamedTensorMap, strict = true) {\n    const nameToWeight: {[name: string]: LayerVariable} = {};\n    let totalWeightsCount = 0;\n    for (const layer of this.layers) {\n      for (const weight of layer.weights) {\n        if (nameToWeight[weight.originalName] != null) {\n          throw new ValueError(`Duplicate weight name: ${weight.originalName}`);\n        }\n        nameToWeight[weight.originalName] = weight;\n        totalWeightsCount++;\n      }\n    }\n\n    const weightValueTuples: Array<[LayerVariable, Tensor]> = [];\n    for (const name in weights) {\n      // TF 2.2.0 added cell name to the weight name in the format of\n      // layer_name/cell_name/weight_name, we need to remove\n      // the inner cell name.\n      let validatedName = name;\n      if (nameToWeight[name] == null) {\n        const tokens = name.split('/');\n        const shortenNameArray =\n            tokens.slice(0, -2).concat([tokens[tokens.length - 1]]);\n        validatedName = shortenNameArray.join('/');\n      }\n      if (nameToWeight[validatedName] != null) {\n        weightValueTuples.push([nameToWeight[validatedName], weights[name]]);\n      } else if (strict) {\n        throw new ValueError(\n            `Provided weight data has no target variable: ${name}`);\n      }\n      delete nameToWeight[validatedName];\n    }\n\n    if (strict) {\n      // Check that all weights are set.\n      const unsetNames: string[] = [];\n      for (const name in nameToWeight) {\n        unsetNames.push(name);\n      }\n      if (unsetNames.length > 0) {\n        throw new ValueError(\n            `${unsetNames.length} of ${\n                totalWeightsCount} weights are not set: ` +\n            `${unsetNames}`);\n      }\n    }\n\n    batchSetValue(weightValueTuples);\n  }\n\n  /**\n   * Util shared between different serialization methods.\n   * @returns LayersModel config with Keras version information added.\n   */\n  protected updatedConfig(): serialization.ConfigDict {\n    const theConfig = this.getConfig();\n    const modelConfig: serialization.ConfigDict = {};\n    modelConfig['className'] = this.getClassName();\n    modelConfig['config'] = theConfig;\n    modelConfig['kerasVersion'] = `tfjs-layers ${layersVersion}`;\n    // TODO(nielsene): Replace something like K.backend() once\n    // possible.\n    modelConfig['backend'] = 'TensorFlow.js';\n    return modelConfig;\n  }\n\n  /**\n   * Returns a JSON string containing the network configuration.\n   *\n   * To load a network from a JSON save file, use\n   * models.modelFromJSON(jsonString);\n   * @param extraJsonArgs Unused in tfjs-layers, maintained for PyKeras\n   * @param returnString Whether the return value should be stringified\n   *    (default: `true`).\n   * @returns a JSON string if `returnString` (default), or a JSON object if\n   *   `!returnString`.\n   */\n  // tslint:disable-next-line:no-any\n  toJSON(unused?: any, returnString = true): string|PyJsonDict {\n    const modelConfig = convertTsToPythonic(this.updatedConfig()) as PyJsonDict;\n    return returnString ? JSON.stringify(modelConfig) : modelConfig;\n  }\n\n  /**\n   * Call the model on new inputs.\n   *\n   * In this case `call` just reapplies all ops in the graph to the new inputs\n   * (e.g. build a new computational graph from the provided inputs).\n   *\n   * @param inputs A tensor or list of tensors.\n   * @param mask A mask or list of masks. A mask can be either a tensor or null\n   *   (no mask).\n   *\n   * @return A tensor if there is a single output, or a list of tensors if there\n   *   are more than one outputs.\n   */\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      inputs = generic_utils.toList(inputs);\n      const feedDict = new FeedDict();\n      for (let i = 0; i < this.inputs.length; ++i) {\n        feedDict.add(this.inputs[i], inputs[i]);\n      }\n      return execute(this.outputs, feedDict, kwargs) as Tensor | Tensor[];\n    });\n  }\n\n  /**\n   * Computes an output mask tensor.\n   *\n   * @param inputs Tensor or list of tensors.\n   * @param mask Tensor or list of tensors.\n   *\n   * @return null or a tensor (or list of tensors, one per output tensor of the\n   * layer).\n   */\n  computeMask(inputs: Tensor|Tensor[], mask?: Tensor|Tensor[]): Tensor\n      |Tensor[] {\n    return tidy(() => {\n      inputs = generic_utils.toList(inputs);\n      let masks: Tensor[];\n      if (mask == null) {\n        masks = generic_utils.pyListRepeat(null, inputs.length);\n      } else {\n        masks = generic_utils.toList(mask);\n      }\n      // TODO(michaelterry): Add support for mask caching.\n      return this.runInternalGraph(inputs, masks)[1];\n    });\n  }\n\n  /**\n   * Computes the output shape of the layer.\n   *\n   * Assumes that the layer will be built to match that input shape provided.\n   *\n   * @param inputShape A shape (tuple of integers) or a list of shape tuples\n   *   (one per output tensor of the layer). Shape tuples can include null for\n   *   free dimensions, instead of an integer.\n   */\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    const inputShapes = types_utils.normalizeShapeList(inputShape);\n    if (inputShapes.length !== this.inputLayers.length) {\n      throw new ValueError(\n          `Invalid inputShape argument ${inputShape}: ` +\n          `model has ${this.inputLayers.length} tensor inputs.`);\n    }\n\n    // TODO(michaelterry): Add caching\n    const layersToOutputShapes: {[shapeKey: string]: Shape} = {};\n    for (let i = 0; i < inputShapes.length; i++) {\n      const layer = this.inputLayers[i];\n      const inputShape = inputShapes[i];\n      // It's an input layer: computeOutputShape is identity,\n      // and there is only one node and one tensor output.\n      const shapeKey = layer.name + '_0_0';\n      layersToOutputShapes[shapeKey] = inputShape;\n    }\n\n    const depthKeys = Object.keys(this.nodesByDepth)\n                          .map(x => parseInt(x, 10))\n                          .sort(generic_utils.reverseNumberCompare);\n    // Iterate over nodes, by depth level.\n    if (depthKeys.length > 1) {\n      for (const depth of depthKeys) {\n        const nodes = this.nodesByDepth[depth];\n        for (const node of nodes) {\n          // This is always a single layer, never a list.\n          const layer = node.outboundLayer;\n          if (this.inputLayers.map(x => x.id).indexOf(layer.id) !== -1) {\n            // We've already covered the input layers a few lines above.\n            continue;\n          }\n          // Potentially redundant list, same size of node.inputTensors.\n          const inputShapes: Shape[] = [];\n          for (let j = 0; j < node.inboundLayers.length; j++) {\n            const inboundLayer = node.inboundLayers[j];\n            const nodeIndex = node.nodeIndices[j];\n            const tensorIndex = node.tensorIndices[j];\n            const shapeKey = `${inboundLayer.name}_${nodeIndex}_${tensorIndex}`;\n            const inputShape = layersToOutputShapes[shapeKey];\n            inputShapes.push(inputShape);\n          }\n\n          const outputShape = layer.computeOutputShape(\n              generic_utils.singletonOrArray(inputShapes));\n\n          const outputShapes = types_utils.normalizeShapeList(outputShape);\n          const nodeIndex = layer.inboundNodes.indexOf(node);\n          for (let j = 0; j < outputShapes.length; j++) {\n            const shapeKey = `${layer.name}_${nodeIndex}_${j}`;\n            layersToOutputShapes[shapeKey] = outputShapes[j];\n          }\n        }\n      }\n    }\n\n    // Read final output shapes from layersToOutputShapes.\n    const outputShapes: Shape[] = [];\n    const outputShapeKeys: string[] = [];\n    for (let i = 0; i < this.outputLayers.length; i++) {\n      const layer = this.outputLayers[i];\n      const nodeIndex = this.outputLayersNodeIndices[i];\n      const tensorIndex = this.outputLayersTensorIndices[i];\n      const shapeKey = `${layer.name}_${nodeIndex}_${tensorIndex}`;\n      outputShapeKeys.push(shapeKey);\n    }\n\n    for (let i = 0; i < outputShapeKeys.length; i++) {\n      const key = outputShapeKeys[i];\n      generic_utils.assert(key in layersToOutputShapes);\n      outputShapes.push(layersToOutputShapes[key]);\n    }\n\n    // TODO(michaelterry): Update cache\n    return generic_utils.singletonOrArray(outputShapes);\n  }\n\n  /**\n   * Computes output tensors for new inputs.\n   *\n   * Note:\n   *   - Expects `inputs` to be a list (potentially with 1 element).\n   *\n   * @param inputs List of tensors\n   * @param masks List of masks (tensors or null).\n   * @return Three lists: outputTensors, outputMasks, outputShapes\n   */\n  protected runInternalGraph(inputs: Tensor[], masks?: Tensor[]):\n      [Tensor[], Tensor[], Shape[]] {\n    if (masks == null) {\n      masks = generic_utils.pyListRepeat(null, inputs.length);\n    }\n\n    // Dictionary mapping reference tensors to tuples\n    // (computed tensor, compute mask)\n    // we assume a 1:1 mapping from tensor to mask\n    // TODO: raise exception when a `.computeMask()` call\n    // does not return a list the same size as `call`\n    const tensorMap: {[tensorID: string]: [Tensor, Tensor]} = {};\n    for (let i = 0; i < this.inputs.length; ++i) {\n      const x = this.inputs[i];\n      const y = inputs[i];\n      const mask = masks[i];\n      tensorMap[x.id] = [y, mask];\n    }\n\n    const depthKeys = Object.keys(this.nodesByDepth)\n                          .map(x => parseInt(x, 10))\n                          .sort(generic_utils.reverseNumberCompare);\n    for (const depth of depthKeys) {\n      const nodes = this.nodesByDepth[depth];\n      for (const node of nodes) {\n        // This is always a single layer, never a list.\n        const layer = node.outboundLayer;\n        const referenceInputTensors = node.inputTensors;\n        const referenceOutputTensors = node.outputTensors;\n\n        // If all previous input tensors are available in tensorMap,\n        // then call node.inboundLayer on them.\n        // List of tuples [input, mask]:\n        const computedData = new Array<[Tensor, Tensor]>();\n        for (const x of referenceInputTensors) {\n          if (x.id in tensorMap) {\n            computedData.push(tensorMap[x.id]);\n          }\n        }\n        if (computedData.length === referenceInputTensors.length) {\n          // TODO(michaelterry): Add K.name_scope here, if we need it.\n          let kwargs: Kwargs = {};\n          let computedTensors: Tensor[];\n          let computedMasks: Tensor[];\n          let outputTensors: Tensor[];\n          let outputMasks: Tensor[];\n          // call layer\n          if (node.callArgs != null) {\n            kwargs = node.callArgs;\n          }\n          if (computedData.length === 1) {\n            const [computedTensor, computedMask] = computedData[0];\n            if (kwargs['mask'] == null) {\n              kwargs['mask'] = computedMask;\n            }\n            outputTensors =\n                generic_utils.toList(layer.call(computedTensor, kwargs));\n            outputMasks = generic_utils.toList(\n                layer.computeMask(computedTensor, computedMask));\n            computedTensors = [computedTensor];\n            computedMasks = [computedMask];\n          } else {\n            computedTensors = computedData.map(x => x[0]);\n            computedMasks = computedData.map(x => x[1]);\n            if (kwargs['mask'] == null) {\n              kwargs['mask'] = computedMasks;\n            }\n            outputTensors =\n                generic_utils.toList(layer.call(computedTensors, kwargs));\n            outputMasks = generic_utils.toList(\n                layer.computeMask(computedTensors, computedMasks));\n          }\n\n          if (layer.activityRegularizer) {\n            throw new NotImplementedError(\n                'LayersModel invocation with concrete Tensor value(s) in the ' +\n                'presence of activity regularizer(s) is not supported yet.');\n          }\n          // TODO(michaelterry): Add model updates and losses\n\n          // Update tensor map.\n          for (let i = 0; i < referenceOutputTensors.length; ++i) {\n            const x = referenceOutputTensors[i];\n            const y = outputTensors[i];\n            const mask = outputMasks[i];\n            tensorMap[x.id] = [y, mask];\n          }\n        }\n      }\n    }\n\n    const outputTensors: Tensor[] = [];\n    const outputMasks: Tensor[] = [];\n    const outputShapes: Shape[] = [];\n    for (const x of this.outputs) {\n      generic_utils.assert(\n          x.id in tensorMap, `Could not compute output ${x.name} : ${x.id}`);\n      const [tensor, mask] = tensorMap[x.id];\n      outputShapes.push(tensor.shape);\n      outputTensors.push(tensor);\n      outputMasks.push(mask);\n    }\n\n    // TODO(michaelterry): Add support for caches.\n    return [outputTensors, outputMasks, outputShapes];\n  }\n\n  /**\n   * Builds a map of internal node keys to node ordering.\n   * Used in serializaion a node orderings may change as unused nodes are\n   * dropped. Porting Note:  This helper method was pulled out of getConfig to\n   * improve readability.\n   * @param layers An array of Layers in the model.\n   * @returns Map of Node Keys to index order within the layer.\n   */\n  private buildNodeConversionMap(layers: Layer[]): {[nodeKey: string]: number} {\n    const nodeConversionMap: {[nodeKey: string]: number} = {};\n    let keptNodes: number;\n    for (const layer of this.layers) {\n      keptNodes = layer instanceof Container ? 1 : 0;\n      for (let originalNodeIndex = 0;\n           originalNodeIndex < layer.inboundNodes.length; originalNodeIndex++) {\n        const nodeKey = Container.nodeKey(layer, originalNodeIndex);\n        if (this.containerNodes.has(nodeKey)) {\n          // i.e. we mark it to be saved\n          nodeConversionMap[nodeKey] = keptNodes;\n          keptNodes += 1;\n        }\n      }\n    }\n    return nodeConversionMap;\n  }\n\n  /**\n   * Retrieves a layer based on either its name (unique) or index.\n   *\n   * Indices are based on order of horizontal graph traversal (bottom-up).\n   *\n   * If both `name` and `index` are specified, `index` takes precedence.\n   *\n   * @param name Name of layer.\n   * @param index Index of layer.\n   * @returns A Layer instance.\n   * @throws ValueError: In case of invalid layer name or index.\n   *\n   * @doc {\n   *    heading: 'Layers',\n   *    subheading: 'Classes',\n   *    namespace: 'layers',\n   *    subclasses: ['LayersModel']\n   * }\n   */\n  getLayer(name?: string, index?: number): Layer {\n    if (index != null) {\n      if (this.layers.length <= index) {\n        throw new ValueError(\n            `Was asked to retrieve layer at index ${index}, but model only ` +\n            `has ${this.layers.length} layer(s).`);\n      } else {\n        return this.layers[index];\n      }\n    } else {\n      if (name == null) {\n        throw new ValueError('Provide either a layer name or layer index');\n      }\n    }\n\n    for (const layer of this.layers) {\n      if (layer.name === name) {\n        return layer;\n      }\n    }\n    throw new ValueError(`No such layer: ${name}`);\n  }\n\n  /**\n   * Retrieves the Container's current loss values.\n   *\n   * Used for regularizers during training.\n   */\n  calculateLosses(): Scalar[] {\n    // Porting Node: This is an augmentation to Container.loss in PyKeras.\n    //   In PyKeras, Container.loss returns symbolic tensors. Here a concrete\n    //   Tensor (specifically Scalar) values are returned. This is due to the\n    //   imperative backend.\n    return tidy(() => {\n      const losses: Scalar[] = [];\n      for (const layer of this.layers) {\n        for (let nodeIndex = 0; nodeIndex < layer.inboundNodes.length;\n             ++nodeIndex) {\n          const nodeKey = Container.nodeKey(layer, nodeIndex);\n          if (this.containerNodes.has(nodeKey)) {\n            losses.push(...layer.calculateLosses());\n          }\n        }\n      }\n      // TODO(cais): Add any unconditional model-level losses?\n      return losses;\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {name: this.name};\n\n    // Build a map from layer unique name (self._node_key)\n    // to the index of the nodes that are saved in the config.\n    // Only nodes in container_nodes are saved.\n    const nodeConversionMap: {[nodeKey: string]: number} =\n        this.buildNodeConversionMap(this.layers);\n\n    // Serialize and save the layers in layerConfigs\n    const layerConfigs = [];\n    for (const layer of this.layers) {\n      const layerClassName = layer.getClassName();\n      const layerConfig = layer.getConfig();\n      const filteredInboundNodes = [];\n      for (let originalNodeIndex = 0;\n           originalNodeIndex < layer.inboundNodes.length; originalNodeIndex++) {\n        const node = layer.inboundNodes[originalNodeIndex];\n        const nodeKey = Container.nodeKey(layer, originalNodeIndex);\n        let kwargs = {};\n        if (this.containerNodes.has(nodeKey)) {\n          // The node is relevant to the model:\n          // add to filteredInboundNodes.\n          if (node.callArgs) {\n            try {\n              JSON.stringify(node.callArgs);\n              kwargs = node.callArgs;\n            } catch (err) {\n              console.warn(\n                  `Layer ${layer.name} was passed ` +\n                  `non-serializable keyword arguments: ` +\n                  `${node.callArgs}. They will not be included ` +\n                  `in the serialized model (and thus will be ` +\n                  `missing at deserialization time).`);\n              kwargs = {};\n            }\n          }\n          if (node.inboundLayers.length > 0) {\n            const nodeData = [];\n            for (let i = 0; i < node.inboundLayers.length; i++) {\n              const inboundLayer = node.inboundLayers[i];\n              const nodeIndex = node.nodeIndices[i];\n              const tensorIndex = node.tensorIndices[i];\n              const nodeKey = Container.nodeKey(inboundLayer, nodeIndex);\n              let newNodeIndex = nodeConversionMap[nodeKey];\n              if (newNodeIndex == null) {\n                newNodeIndex = 0;\n              }\n              nodeData.push(\n                  [inboundLayer.name, newNodeIndex, tensorIndex, kwargs]);\n            }\n            filteredInboundNodes.push(nodeData);\n          }\n        }\n      }\n      const dict: serialization.ConfigDict = {};\n      dict['name'] = layer.name;\n      dict['className'] = layerClassName;\n      dict['config'] = layerConfig;\n      dict['inboundNodes'] = filteredInboundNodes;\n      layerConfigs.push(dict);\n    }\n    config['layers'] = layerConfigs;\n    // Gather info about inputs and outputs\n    const modelInputs = [];\n    for (let i = 0; i < this.inputLayers.length; i++) {\n      const layer = this.inputLayers[i];\n      const nodeIndex = this.inputLayersNodeIndices[i];\n\n      const nodeKey = Container.nodeKey(layer, nodeIndex);\n      if (!this.containerNodes.has(nodeKey)) {\n        continue;\n      }\n      let newNodeIndex = nodeConversionMap[nodeKey];\n      if (newNodeIndex === null || newNodeIndex === undefined) {\n        newNodeIndex = 0;\n      }\n      const tensorIndex = this.inputLayersTensorIndices[i];\n      modelInputs.push([layer.name, newNodeIndex, tensorIndex]);\n    }\n    config['inputLayers'] = modelInputs;\n\n    const modelOutputs = [];\n    for (let i = 0; i < this.outputLayers.length; i++) {\n      const layer = this.outputLayers[i];\n      const nodeIndex = this.outputLayersNodeIndices[i];\n\n      const nodeKey = Container.nodeKey(layer, nodeIndex);\n      if (!this.containerNodes.has(nodeKey)) {\n        continue;\n      }\n      let newNodeIndex = nodeConversionMap[nodeKey];\n      if (newNodeIndex === null || newNodeIndex === undefined) {\n        newNodeIndex = 0;\n      }\n      const tensorIndex = this.outputLayersTensorIndices[i];\n      modelOutputs.push([layer.name, newNodeIndex, tensorIndex]);\n    }\n    config['outputLayers'] = modelOutputs;\n    return config;\n  }\n\n  /**\n   * Instantiates a LayersModel from its config (output of `get_config()`).\n   * @param cls the class to create\n   * @param config LayersModel config dictionary.\n   * @param customObjects An optional dictionary of custom objects.\n   * @param fastWeightInit Optional flag to use fast weight initialization\n   *   during deserialization. This is applicable to cases in which\n   *   the initialization will be immediately overwritten by loaded weight\n   *   values. Default: `false`.\n   * @returns A LayersModel instance.\n   * @throws ValueError: In case of improperly formatted config dict.\n   */\n  /** @nocollapse */\n  static fromConfig<T extends serialization.Serializable>(\n      cls: serialization.SerializableConstructor<T>,\n      config: serialization.ConfigDict,\n      customObjects = {} as serialization.ConfigDict,\n      fastWeightInit = false): T {\n    // Layer instances created during\n    // the graph reconstruction process\n    const createdLayers: {[layerName: string]: Layer} = {};\n\n    // Dictionary mapping layer instances to\n    // node data that specifies a layer call.\n    // It acts as a queue that maintains any unprocessed\n    // layer call until it becomes possible to process it\n    // (i.e. until the input tensors to the call all exist).\n    const unprocessedNodes: {[layer: string]: TensorKeyWithArgsArray[][]} = {};\n    function addUnprocessedNode(\n        layer: Layer, nodeData: TensorKeyWithArgsArray[]) {\n      if (!(layer.name in unprocessedNodes)) {\n        unprocessedNodes[layer.name] = [nodeData];\n      } else {\n        unprocessedNodes[layer.name].push(nodeData);\n      }\n    }\n\n    function processNode(layer: Layer, nodeData: TensorKeyWithArgsArray[]) {\n      const inputTensors: SymbolicTensor[] = [];\n      let kwargs;\n      for (const inputData of nodeData) {\n        const inboundLayerName = inputData[0];\n        const inboundNodeIndex = inputData[1];\n        const inboundTensorIndex = inputData[2];\n\n        kwargs = inputData[3] == null ?\n            {} :\n            inputData[3] as serialization.ConfigDict;\n        if (!(inboundLayerName in createdLayers)) {\n          addUnprocessedNode(layer, nodeData);\n          return;\n        }\n        const inboundLayer = createdLayers[inboundLayerName];\n        if (inboundLayer.inboundNodes.length <= inboundNodeIndex) {\n          addUnprocessedNode(layer, nodeData);\n          return;\n        }\n        const inboundNode = inboundLayer.inboundNodes[inboundNodeIndex];\n        inputTensors.push(inboundNode.outputTensors[inboundTensorIndex]);\n      }\n      // Call layer on its inputs, thus creating the node\n      // and building the layer if needed.\n      // Note: This has Eager vs Graph Implications.\n      if (inputTensors.length > 0) {\n        layer.apply(\n            generic_utils.singletonOrArray(inputTensors),\n            kwargs);  // was ** kwargs\n      }\n    }\n\n    /**\n     * Deserialize a layer, then call it on appropriate inputs.\n     * @param layerData: layer config dict.\n     * @throws ValueError: In case of improperly formatted `layer_data`\n     * dict.\n     */\n    function processLayer(layerData: serialization.ConfigDict|null) {\n      const layerName = layerData['name'] as string;\n      // Instantiate layer.\n      const layer =\n          deserializeLayer(\n              layerData,\n              config['customObjects'] != null ?\n                  config['customObjects'] as serialization.ConfigDict :\n                  {}) as Layer;\n      layer.setFastWeightInitDuringBuild(fastWeightInit);\n      createdLayers[layerName] = layer;\n      // Gather layer inputs.\n      const inboundNodesData =\n          layerData['inboundNodes'] as TensorKeyWithArgsArray[][];\n      inboundNodesData.forEach(nodeData => {\n        if (!(nodeData instanceof Array)) {\n          throw new ValueError(\n              `Corrupted configuration, expected array for nodeData: ${\n                  nodeData}`);\n        }\n        // We don't process nodes (i.e. make layer calls)\n        // on the fly because the inbound node may not yet exist,\n        // in case of layer shared at different topological depths\n        // (e.g.a model such as A(B(A(B(x)))))\n        addUnprocessedNode(layer, nodeData);\n      });\n    }\n\n    // First, we create all layers and enqueue nodes to be processed.\n    const name = config['name'];\n    const layersFromConfig = config['layers'] as serialization.ConfigDict[];\n    for (const layerData of layersFromConfig) {\n      processLayer(layerData);\n    }\n\n    // Then we process nodes in order of layer depth.\n    // Nodes that cannot yet be processed(if the inbound node\n    // does not yet exist) are re - enqueued, and the process\n    // is repeated until all nodes are processed.\n    while (!generic_utils.isObjectEmpty(unprocessedNodes)) {\n      for (const layerData of layersFromConfig) {\n        const layer = createdLayers[layerData['name'] as string];\n        if (layer.name in unprocessedNodes) {\n          const currentUnprocessedNodesForLayer = unprocessedNodes[layer.name];\n          delete unprocessedNodes[layer.name];\n          for (const nodeData of currentUnprocessedNodesForLayer) {\n            processNode(layer, nodeData);\n          }\n        }\n      }\n    }\n\n    const inputTensors: SymbolicTensor[] = [];\n    const outputTensors: SymbolicTensor[] = [];\n    const inputLayersFromConfig =\n        config['inputLayers'] as serialization.ConfigDict[];\n    for (const layerData of inputLayersFromConfig) {\n      const layerName = layerData[0] as string;\n      const nodeIndex = layerData[1] as number;\n      const tensorIndex = layerData[2] as number;\n      generic_utils.assert(layerName in createdLayers);\n      const layer = createdLayers[layerName];\n      const layerOutputTensors = layer.inboundNodes[nodeIndex].outputTensors;\n      inputTensors.push(layerOutputTensors[tensorIndex]);\n    }\n    const outputLayersFromConfig =\n        config['outputLayers'] as serialization.ConfigDict[];\n    for (const layerData of outputLayersFromConfig) {\n      const layerName = layerData[0] as string;\n      const nodeIndex = layerData[1] as number;\n      const tensorIndex = layerData[2] as number;\n      generic_utils.assert(layerName in createdLayers);\n      const layer = createdLayers[layerName];\n      const layerOutputTensors = layer.inboundNodes[nodeIndex].outputTensors;\n      outputTensors.push(layerOutputTensors[tensorIndex]);\n    }\n    return new cls({inputs: inputTensors, outputs: outputTensors, name});\n  }\n\n  /**\n   * Determine whether the container is stateful.\n   *\n   * Porting Note: this is the equivalent of the stateful @property of\n   *   the Container class in PyKeras.\n   */\n  get stateful(): boolean {\n    // Porting Note: This check is to prevent inadvertent setting of the\n    //   _stateful property of the Container instance.\n    if (this._stateful) {\n      throw new ValueError(\n          'Container instance unexpectedly has _stateful = true. The ' +\n          'statefulness of a Container is determined by the Layers it ' +\n          'contains. Its _stateful property must remain the default false.');\n    }\n    for (const layer of this.layers) {\n      if (layer.stateful) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Reset the state of all stateful constituent layers (if any).\n   *\n   * Examples of stateful layers include RNN layers whose `stateful` property\n   * is set as `true`.\n   */\n  resetStates() {\n    tidy(() => {\n      this.layers.forEach(layer => {\n        // tslint:disable:no-any\n        if (layer.stateful) {\n          layer.resetStates();\n        }\n        // tslint:enable:no-any\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Executor: Evaluates SymbolicTensor based on feeds.\n */\n\nimport {cast, dispose, memory, Tensor, util} from '@tensorflow/tfjs-core';\n\nimport {ValueError} from '../errors';\nimport {Kwargs} from '../types';\nimport {toList} from '../utils/generic_utils';\n\nimport {InputLayer} from './input_layer';\nimport {SymbolicTensor} from './topology';\n\n/**\n * Helper function to check the dtype and shape compatibility of a feed value.\n */\nfunction assertFeedCompatibility(key: SymbolicTensor, val: Tensor): Tensor {\n  // Check dtype compatibility.\n  if (key.dtype == null || key.dtype === val.dtype) {\n    //  a.  If types match, return val tensor as is.\n    return val;\n  }\n  try {\n    //  b. Attempt to convert to expected type.\n    return cast(val, key.dtype);\n  } catch (err) {\n    //  c. If conversion fails, return helpful error.\n    throw new ValueError(\n        `The dtype of the feed (${val.dtype}) can not be cast to the dtype ` +\n        `of the key '${key.name}' (${key.dtype}).`);\n  }\n}\n\n/**\n * A concrete Tensor value for a symbolic tensor as the key.\n */\nexport interface Feed {\n  key: SymbolicTensor;\n  value: Tensor;\n}\n\n/**\n * FeedDict: A mapping from unique SymbolicTensors to feed values for them.\n * A feed value is a concrete value represented as an `Tensor`.\n */\nexport class FeedDict {\n  private id2Value: {[id: number]: Tensor} = {};\n  private id2Mask: {[id: number]: Tensor} = {};\n  private name2Id: {[name: string]: number} = {};\n\n  /**\n   * Constructor, optionally does copy-construction.\n   * @param feeds An Array of `Feed`s, or another `FeedDict`, in which case\n   *   copy-construction will be performed.\n   */\n  constructor(feeds?: Feed[]|FeedDict) {\n    if (feeds instanceof FeedDict) {\n      for (const id in feeds.id2Value) {\n        this.id2Value[id] = feeds.id2Value[id];\n        if (id in feeds.id2Mask) {\n          this.id2Mask[id] = feeds.id2Mask[id];\n        }\n      }\n    } else {\n      if (feeds == null) {\n        return;\n      }\n      for (const feed of feeds) {\n        this.add(feed.key, feed.value);\n      }\n    }\n  }\n\n  /**\n   * Add a key-value pair to the FeedDict.\n   *\n   * @param key The key of the feed.\n   * @param value The value of the tensor feed.\n   * @param mask The value of the mask feed (optional).\n   * @returns This `FeedDict`.\n   * @throws ValueError: If the key `SymbolicTensor` already exists in the\n   *   `FeedDict`.\n   */\n  add(key: SymbolicTensor, value: Tensor, mask?: Tensor): FeedDict {\n    if (this.id2Value[key.id] == null) {\n      this.id2Value[key.id] = assertFeedCompatibility(key, value);\n      this.name2Id[key.name] = key.id;\n      if (mask != null) {\n        this.id2Mask[key.id] = mask;\n      }\n    } else {\n      throw new ValueError(`Duplicate key: name=${key.name}, id=${key.id}`);\n    }\n    return this;\n  }\n\n  /**\n   * Add a Feed to the FeedDict.\n   * @param feed The new `Feed` to add.\n   * @returns This `FeedDict`.\n   */\n  addFeed(feed: Feed) {\n    this.add(feed.key, feed.value);\n  }\n\n  /**\n   * Probe whether a key already exists in the FeedDict.\n   * @param key\n   */\n  hasKey(key: SymbolicTensor): boolean {\n    return this.id2Value[key.id] != null;\n  }\n\n  /**\n   * Get all the SymbolicTensor available in this FeedDict.\n   */\n  names(): string[] {\n    return Object.keys(this.name2Id);\n  }\n\n  /**\n   * Get the feed value for given key.\n   * @param key The SymbolicTensor, or its name (as a string), of which the\n   *     value is sought.\n   * @returns If `key` exists, the corresponding feed value.\n   * @throws ValueError: If `key` does not exist in this `FeedDict`.\n   */\n  getValue(key: SymbolicTensor|string): Tensor {\n    if (key instanceof SymbolicTensor) {\n      if (this.id2Value[key.id] == null) {\n        throw new ValueError(`Nonexistent key: ${key.name}`);\n      } else {\n        return this.id2Value[key.id];\n      }\n    } else {\n      const id = this.name2Id[key];\n      if (id == null) {\n        throw new ValueError(`Feed dict has no SymbolicTensor name: ${key}`);\n      }\n      return this.id2Value[id];\n    }\n  }\n\n  /**\n   * Get the feed mask for given key.\n   * @param key The SymbolicTensor, or its name (as a string), of which the\n   *     value is sought.\n   * @returns If `key` exists, the corresponding feed mask.\n   * @throws ValueError: If `key` does not exist in this `FeedDict`.\n   */\n  getMask(key: SymbolicTensor|string): Tensor {\n    if (key instanceof SymbolicTensor) {\n      if (this.id2Value[key.id] == null) {\n        throw new ValueError(`Nonexistent key: ${key.name}`);\n      } else {\n        return this.id2Mask[key.id];\n      }\n    } else {\n      const id = this.name2Id[key];\n      if (id == null) {\n        throw new ValueError(`Feed dict has no SymbolicTensor name: ${key}`);\n      }\n      return this.id2Mask[id];\n    }\n  }\n\n  /** Dispose all mask Tensors held by this object. */\n  disposeMasks() {\n    if (this.id2Mask != null) {\n      dispose(this.id2Mask);\n    }\n  }\n}\n\n// Cache for topologically sorted SymbolicTensors for given execution\n// targets (i.e., fetches).\nconst cachedSorted: {[concatFetchNames: string]: SymbolicTensor[]} = {};\n\n// Cache for recipient count maps for given execution targets (i.e., fetches).\nconst cachedRecipientCounts:\n    {[concatFetchNames: string]: {[fetchName: string]: number}} = {};\n\n/**\n * Interface for the optional object used for probing the memory\n * usage and other statistics during execution.\n */\nexport interface ExecutionProbe {\n  /**\n   * Maximum number of tensors that exist during all steps of the\n   * execution. Tensor counts are measured at the beginning of every\n   * step.\n   */\n  maxNumTensors?: number;\n\n  /**\n   * Minimum number of tensors that exist during all steps of the\n   * execution. Tensor counts are measured at the beginning of every\n   * step.\n   */\n  minNumTensors?: number;\n}\n\n/**\n * Execute a SymbolicTensor by using concrete feed values.\n *\n * A `SymbolicTensor` object is a node in a computation graph of TF.js\n * Layers. The object is backed by a source layer and input\n * `SymbolicTensor`s to the source layer. This method evaluates\n * the `call()` method of the source layer, using concrete values of the\n * inputs obtained from either\n * * `feedDict`, if the input key exists in `feedDict`, or else,\n * * a recursive call to `execute()` itself.\n *\n * @param x: The `SymbolicTensor` to execute.\n * @param feedDict: The feed values, as base condition of the recursion.\n *   execution.\n * @param kwargs: Optional keyword arguments.\n * @param probe: A probe object (of interface `ExecutionProbe`) used for\n *   testing memory footprint of `execute` calls.\n * @returns Result of the execution.\n * @throws ValueError: If any `SymbolicTensor`s from `InputLayer`s\n *   encountered during the execution lacks a feed value in `feedDict`.\n */\nexport function execute(\n    fetches: SymbolicTensor|SymbolicTensor[], feedDict: FeedDict,\n    kwargs?: Kwargs, probe?: ExecutionProbe): Tensor|\n    Tensor[]|[Tensor | Tensor[]] {\n  const training: boolean = kwargs == null ? false : kwargs['training'];\n\n  const arrayFetches = Array.isArray(fetches);\n  const fetchArray: SymbolicTensor[] =\n      arrayFetches ? fetches as SymbolicTensor[] : [fetches as SymbolicTensor];\n\n  const outputNames = fetchArray.map(t => t.name);\n  const finalOutputs: Tensor[] = [];\n  const feedNames = feedDict.names();\n  for (const outputName of outputNames) {\n    if (feedNames.indexOf(outputName) !== -1) {\n      finalOutputs.push(feedDict.getValue(outputName));\n    } else {\n      finalOutputs.push(null);\n    }\n  }\n\n  if (probe != null) {\n    // For optional probing of memory footprint during execution.\n    probe.maxNumTensors = -Infinity;\n    probe.minNumTensors = Infinity;\n  }\n\n  // Check cache.\n  const fetchAndFeedKey =\n      outputNames.join(',') + '|' + feedDict.names().join(',');\n  let sorted: SymbolicTensor[];\n  let recipientCounts: {[fetchName: string]: number};\n  if (cachedSorted[fetchAndFeedKey] == null) {\n    // Cache doesn't contain the desired combination of fetches. Compute\n    // topological sort for the combination for the first time.\n    const out = getTopologicalSortAndRecipientCounts(fetchArray, feedDict);\n    sorted = out.sorted;\n    recipientCounts = out.recipientCounts;\n\n    // Store results in cache for future use.\n    cachedSorted[fetchAndFeedKey] = sorted;\n    cachedRecipientCounts[fetchAndFeedKey] = recipientCounts;\n  }\n  sorted = cachedSorted[fetchAndFeedKey];\n  recipientCounts = {};\n  if (!training) {\n    Object.assign(recipientCounts, cachedRecipientCounts[fetchAndFeedKey]);\n  }\n\n  const internalFeedDict = new FeedDict(feedDict);\n\n  // Start iterative execution on the topologically-sorted SymbolicTensors.\n  for (let i = 0; i < sorted.length; ++i) {\n    if (probe != null) {\n      // For optional probing of memory usage during execution.\n      const numTensors = memory().numTensors;\n      if (numTensors > probe.maxNumTensors) {\n        probe.maxNumTensors = numTensors;\n      }\n      if (numTensors < probe.minNumTensors) {\n        probe.minNumTensors = numTensors;\n      }\n    }\n\n    const symbolic = sorted[i];\n    const srcLayer = symbolic.sourceLayer;\n    if (srcLayer instanceof InputLayer) {\n      continue;\n    }\n    const inputValues: Tensor[] = [];\n    const inputMasks: Tensor[] = [];\n    const tensorsToDispose: Tensor[] = [];\n\n    let maskExists = false;\n    for (const input of symbolic.inputs) {\n      const value = internalFeedDict.getValue(input);\n      const mask = internalFeedDict.getMask(input);\n      inputValues.push(value);\n      inputMasks.push(mask);\n      if (mask != null) {\n        maskExists = true;\n      }\n      if (!training) {\n        recipientCounts[input.name]--;\n        if (recipientCounts[input.name] === 0 && !feedDict.hasKey(input) &&\n            outputNames.indexOf(input.name) === -1 && !value.isDisposed &&\n            input.sourceLayer.stateful !== true) {\n          tensorsToDispose.push(value);\n        }\n      }\n    }\n\n    if (maskExists) {\n      kwargs = kwargs || {};\n      kwargs['mask'] = inputMasks[0];\n    }\n    const outputTensors =\n        toList(srcLayer.apply(inputValues, kwargs)) as Tensor[];\n    let outputMask: Tensor|Tensor[] = null;\n    if (srcLayer.supportsMasking) {\n      outputMask = srcLayer.computeMask(inputValues, inputMasks);\n    }\n    const layerOutputs = getNodeOutputs(symbolic);\n    const outputSymbolicTensors =\n        Array.isArray(layerOutputs) ? layerOutputs : [layerOutputs];\n    for (let i = 0; i < outputSymbolicTensors.length; ++i) {\n      if (!internalFeedDict.hasKey(outputSymbolicTensors[i])) {\n        internalFeedDict.add(\n            outputSymbolicTensors[i], outputTensors[i],\n            Array.isArray(outputMask) ? outputMask[0] : outputMask);\n      }\n      const index = outputNames.indexOf(outputSymbolicTensors[i].name);\n      if (index !== -1) {\n        finalOutputs[index] = outputTensors[i];\n      }\n    }\n\n    if (!training) {\n      // Clean up Tensors that are no longer needed.\n      dispose(tensorsToDispose);\n    }\n  }\n  // NOTE(cais): Unlike intermediate tensors, we don't discard mask\n  // tensors as we go, because these tensors are sometimes passed over a\n  // series of mutliple layers, i.e., not obeying the immediate input\n  // relations in the graph. If this becomes a memory-usage concern,\n  // we can improve this in the future.\n  internalFeedDict.disposeMasks();\n\n  return arrayFetches ? finalOutputs : finalOutputs[0];\n}\n\ntype RecipientCounts = {\n  [fetchName: string]: number\n};\n\nexport type RecipientMap = {\n  [fetchName: string]: Set<string>;\n};\n\n/**\n * Sort the `SymbolicTensor`s topologically, for an array of fetches.\n *\n * This function calls getTopologicalSortAndRecipientCountsForOneFetch and\n * merges their results.\n *\n * @param fetch The array of fetches requested. Must be a non-empty array.\n * @param feedDict The dictionary of fed values.\n * @returns sorted: Topologically-sorted array of SymbolicTensors.\n *   recipientCounts: Recipient counts for all SymbolicTensors in `sorted`.\n */\nfunction getTopologicalSortAndRecipientCounts(\n    fetches: SymbolicTensor[], feedDict: FeedDict):\n    {sorted: SymbolicTensor[], recipientCounts: RecipientCounts} {\n  util.assert(\n      fetches != null && fetches.length > 0,\n      () => `Expected at least one fetch, got none`);\n\n  let finalSorted: SymbolicTensor[] = [];\n  let finalRecipientMap: RecipientMap = {};\n  if (fetches.length === 1) {\n    // Special-casing 1 fetch for efficiency.\n    const out =\n        getTopologicalSortAndRecipientCountsForOneFetch(fetches[0], feedDict);\n    finalSorted = out.sorted;\n    finalRecipientMap = out.recipientMap;\n  } else {\n    const visited = new Set<string>();\n    for (const fetch of fetches) {\n      const {sorted, recipientMap} =\n          getTopologicalSortAndRecipientCountsForOneFetch(fetch, feedDict);\n\n      // Merge sorted SymbolicTensor Arrays.\n      for (const symbolicTensor of sorted) {\n        if (!visited.has(symbolicTensor.name)) {\n          finalSorted.push(symbolicTensor);\n          visited.add(symbolicTensor.name);\n        }\n      }\n\n      // Merge recipient maps.\n      for (const name in recipientMap) {\n        if (finalRecipientMap[name] == null) {\n          finalRecipientMap[name] = new Set<string>();\n        }\n        recipientMap[name].forEach(\n            recipient => finalRecipientMap[name].add(recipient));\n      }\n    }\n  }\n  return {\n    sorted: finalSorted,\n    recipientCounts: recipientMap2Counts(finalRecipientMap)\n  };\n}\n\nfunction recipientMap2Counts(recipientMap: RecipientMap): RecipientCounts {\n  const recipientCounts: RecipientCounts = {};\n  for (const name in recipientMap) {\n    recipientCounts[name] = recipientMap[name].size;\n  }\n  return recipientCounts;\n}\n\n/**\n * Sort the `SymbolicTensor`s topologically, for a single fetch.\n *\n * This helper function processes the upstream SymbolicTensors of a single\n * fetch.\n *\n * @param fetch The single fetch requested.\n * @param feedDict The dictionary of fed values.\n * @returns sorted: Topologically-sorted array of SymbolicTensors.\n *   recipientMap: Recipient names for all SymbolicTensors in `sorted`.\n */\nexport function getTopologicalSortAndRecipientCountsForOneFetch(\n    fetch: SymbolicTensor, feedDict: FeedDict):\n    {sorted: SymbolicTensor[], recipientMap: RecipientMap} {\n  const visited = new Set<string>();\n  const sorted: SymbolicTensor[] = [];\n  const recipientMap: RecipientMap = {};\n\n  // Put keys of the feedDict into visited first, so they don't have to be\n  // walked. This is needed in case where there are feeds for intermediate\n  // SymbolicTensors of the graph.\n  for (const key of feedDict.names()) {\n    visited.add(key);\n  }\n\n  const stack: SymbolicTensor[] = [];\n  const marks: number[] = [];\n\n  // Initial population of stack and marks.\n  stack.push(fetch);\n\n  while (stack.length > 0) {\n    const top = stack[stack.length - 1];\n    if (visited.has(top.name)) {\n      stack.pop();\n      continue;\n    }\n    const topIsMarked = marks[marks.length - 1] === stack.length - 1;\n    if (top.inputs.length === 0 || topIsMarked) {\n      // Input SymbolicTensor or all children have been visited.\n      stack.pop();\n      sorted.push(top);\n      visited.add(top.name);\n      if (topIsMarked) {\n        marks.pop();\n      }\n    } else {\n      // A non-input SymbolicTensor whose upstream SymbolicTensors haven't\n      // been visited yet. Push them onto the stack.\n      marks.push(stack.length - 1);\n      for (const input of top.inputs) {\n        // Increment the recipient count. Note that this needs to happen\n        // regardless of whether the SymbolicTensor has been visited before.\n        if (recipientMap[input.name] == null) {\n          recipientMap[input.name] = new Set<string>();\n        }\n        recipientMap[input.name].add(top.name);\n\n        if (visited.has(input.name)) {\n          continue;  // Avoid repeated visits to the same SymbolicTensor.\n        }\n        stack.push(input);\n      }\n    }\n  }\n  return {sorted, recipientMap};\n}\n\n/**\n * Get the symbolic output tensors of the node to which a given fetch belongs.\n * @param fetch The fetched symbolic tensor.\n * @returns The Array of symbolic tensors output by the node to which `fetch`\n *   belongs.\n */\nfunction getNodeOutputs(fetch: SymbolicTensor): SymbolicTensor|\n    SymbolicTensor[] {\n  let layerOutputs: SymbolicTensor|SymbolicTensor[];\n  if (fetch.sourceLayer.inboundNodes.length === 1) {\n    layerOutputs = fetch.sourceLayer.output;\n  } else {\n    let nodeIndex: number = null;\n    for (let i = 0; i < fetch.sourceLayer.inboundNodes.length; ++i) {\n      for (const outputTensor of fetch.sourceLayer.inboundNodes[i]\n               .outputTensors) {\n        if (outputTensor.id === fetch.id) {\n          nodeIndex = i;\n          break;\n        }\n      }\n    }\n    layerOutputs = fetch.sourceLayer.getOutputAt(nodeIndex);\n  }\n  return layerOutputs;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Interfaces and methods for training models using TensorFlow.js datasets.\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {scalar} from '@tensorflow/tfjs-core';\nimport {BaseCallback, configureCallbacks, CustomCallbackArgs, History, ModelLoggingVerbosity, standardizeCallbacks, YieldEveryOptions} from '../base_callbacks';\nimport {NotImplementedError, ValueError} from '../errors';\nimport {disposeTensorsInLogs, UnresolvedLogs} from '../logs';\nimport {TensorOrArrayOrMap} from '../types';\nimport {singletonOrArray, toList} from '../utils/generic_utils';\n\nimport {Dataset, LazyIterator} from './dataset_stub';\nimport {ClassWeight, ClassWeightMap, standardizeClassWeights, standardizeWeights} from './training_utils';\n\n/**\n * Interface for configuring model training based on a dataset object.\n */\nexport interface ModelFitDatasetArgs<T> {\n  /**\n   * (Optional) Total number of steps (batches of samples) before\n   * declaring one epoch finished and starting the next epoch. It should\n   * typically be equal to the number of samples of your dataset divided by\n   * the batch size, so that `fitDataset`() call can utilize the entire dataset.\n   * If it is not provided, use `done` return value in `iterator.next()` as\n   * signal to finish an epoch.\n   */\n  batchesPerEpoch?: number;\n\n  /**\n   * Integer number of times to iterate over the training dataset.\n   */\n  epochs: number;\n\n  /**\n   * Verbosity level.\n   *\n   * Expected to be 0, 1, or 2. Default: 1.\n   *\n   * 0 - No printed message during fit() call.\n   * 1 - In Node.js (tfjs-node), prints the progress bar, together with\n   *     real-time updates of loss and metric values and training speed.\n   *     In the browser: no action. This is the default.\n   * 2 - Not implemented yet.\n   */\n  verbose?: ModelLoggingVerbosity;\n\n  /**\n   * List of callbacks to be called during training.\n   * Can have one or more of the following callbacks:\n   *   - `onTrainBegin(logs)`: called when training starts.\n   *   - `onTrainEnd(logs)`: called when training ends.\n   *   - `onEpochBegin(epoch, logs)`: called at the start of every epoch.\n   *   - `onEpochEnd(epoch, logs)`: called at the end of every epoch.\n   *   - `onBatchBegin(batch, logs)`: called at the start of every batch.\n   *   - `onBatchEnd(batch, logs)`: called at the end of every batch.\n   *   - `onYield(epoch, batch, logs)`: called every `yieldEvery` milliseconds\n   *      with the current epoch, batch and logs. The logs are the same\n   *      as in `onBatchEnd()`. Note that `onYield` can skip batches or\n   *      epochs. See also docs for `yieldEvery` below.\n   */\n  callbacks?: BaseCallback[]|CustomCallbackArgs|CustomCallbackArgs[];\n\n  /**\n   * Data on which to evaluate the loss and any model\n   * metrics at the end of each epoch. The model will not be trained on this\n   * data. This could be any of the following:\n   *\n   *   - An array `[xVal, yVal]`, where the two values may be `tf.Tensor`,\n   *     an array of Tensors, or a map of string to Tensor.\n   *   - Similarly, an array ` [xVal, yVal, valSampleWeights]`\n   *     (not implemented yet).\n   *   - a `Dataset` object with elements of the form `{xs: xVal, ys: yVal}`,\n   *     where `xs` and `ys` are the feature and label tensors, respectively.\n   *\n   * If `validationData` is an Array of Tensor objects, each `tf.Tensor` will be\n   * sliced into batches during validation, using the parameter\n   * `validationBatchSize` (which defaults to 32). The entirety of the\n   * `tf.Tensor` objects will be used in the validation.\n   *\n   * If `validationData` is a dataset object, and the `validationBatches`\n   * parameter is specified, the validation will use `validationBatches` batches\n   * drawn from the dataset object. If `validationBatches` parameter is not\n   * specified, the validation will stop when the dataset is exhausted.\n   *\n   * The model will not be trained on this data.\n   */\n  validationData?: [\n    TensorOrArrayOrMap, TensorOrArrayOrMap\n  ]|[TensorOrArrayOrMap, TensorOrArrayOrMap, TensorOrArrayOrMap]|Dataset<T>;\n\n  /**\n   * Optional batch size for validation.\n   *\n   * Used only if `validationData` is an array of `tf.Tensor` objects, i.e., not\n   * a dataset object.\n   *\n   * If not specified, its value defaults to 32.\n   */\n  validationBatchSize?: number;\n\n  /**\n   * (Optional) Only relevant if `validationData` is specified and is a dataset\n   * object.\n   *\n   * Total number of batches of samples to draw from `validationData` for\n   * validation purpose before stopping at the end of every epoch. If not\n   * specified, `evaluateDataset` will use `iterator.next().done` as signal to\n   * stop validation.\n   */\n  validationBatches?: number;\n\n  /**\n   * Configures the frequency of yielding the main thread to other tasks.\n   *\n   * In the browser environment, yielding the main thread can improve the\n   * responsiveness of the page during training. In the Node.js environment,\n   * it can ensure tasks queued in the event loop can be handled in a timely\n   * manner.\n   *\n   * The value can be one of the following:\n   *   - `'auto'`: The yielding happens at a certain frame rate (currently set\n   *               at 125ms). This is the default.\n   *   - `'batch'`: yield every batch.\n   *   - `'epoch'`: yield every epoch.\n   *   - a `number`: Will yield every `number` milliseconds.\n   *   - `'never'`: never yield. (But yielding can still happen through `await\n   *      nextFrame()` calls in custom callbacks.)\n   */\n  yieldEvery?: YieldEveryOptions;\n\n  /**\n   * Epoch at which to start training (useful for resuming a previous training\n   * run). When this is used, `epochs` is the index of the \"final epoch\".\n   * The model is not trained for a number of iterations given by `epochs`,\n   * but merely until the epoch of index `epochs` is reached.\n   */\n  initialEpoch?: number;\n\n  /**\n   * Optional object mapping class indices (integers) to\n   * a weight (float) to apply to the model's loss for the samples from this\n   * class during training. This can be useful to tell the model to \"pay more\n   * attention\" to samples from an under-represented class.\n   *\n   * If the model has multiple outputs, a class weight can be specified for\n   * each of the outputs by setting this field an array of weight object\n   * or a object that maps model output names (e.g., `model.outputNames[0]`)\n   * to weight objects.\n   */\n  classWeight?: ClassWeight|ClassWeight[]|ClassWeightMap;\n}\n\nexport interface FitDatasetElement {\n  xs: TensorOrArrayOrMap;\n  ys: TensorOrArrayOrMap;\n}\n\n/**\n * Interface for configuring model evaluation based on a dataset object.\n */\nexport interface ModelEvaluateDatasetArgs {\n  /**\n   * Number of batches to draw from the dataset object before ending the\n   * evaluation.\n   */\n  batches?: number;\n\n  /**\n   * Verbosity mode.\n   */\n  verbose?: ModelLoggingVerbosity;\n}\n\n// Default batch size used during tensor-based validation.\nconst DEFAULT_VALIDATION_BATCH_SIZE = 32;\n\n/**\n * Standardize the output of a dataset iterator for use by\n * LayersModel.fitDataset().\n *\n * @param model: A `tf.LayersModel` object.\n * @param iteratorOut The output of a dataset iterator. It is required to be\n *   an object of the form `{xs: TensorOrArrayOrMap, ys:\n * TensorOrArrayOrMap}`, where `TensorOrArrayOrMap` is a single `tf.Tensor`,\n * a `tf.Tensor[]`, or a flat map from string names to `tf.Tensor`s.\n * @returns A flat array of `tf.Tensor` objects: the input `tf.Tensor`s\n *   followed by the target `tf.Tensor`s.  When `tf.Tensor`s are provided\n *   as a map, the order in the resulting array is taken from the `inputNames`\n *   and `outputNames` of the model.\n */\nfunction standardizeDataIteratorOutput(\n    // Type `model` as `any` here to avoid circular dependency w/\n    // training.ts.\n    // tslint:disable-next-line:no-any\n    model: any, iteratorOut: {}): {xs: tfc.Tensor[], ys: tfc.Tensor[]} {\n  let xs: TensorOrArrayOrMap;\n  let ys: TensorOrArrayOrMap;\n\n  const iteratorOutObj = iteratorOut as FitDatasetElement;\n  xs = iteratorOutObj['xs'];\n  ys = iteratorOutObj['ys'];\n  tfc.util.assert(\n      xs != null && ys != null,\n      () => 'A Dataset iterator for fitDataset() is expected to generate ' +\n          'objects of the form `{xs: xVal, ys: yVal}`, where the two ' +\n          'values may be `tf.Tensor`, an array of Tensors, or a map of ' +\n          'string to Tensor.  The provided Dataset instead generates ' +\n          `${iteratorOut}`);\n\n  const flattenedXs: tfc.Tensor[] =\n      flattenTensorOrArrayOrMap('input', model.inputNames, xs);\n  const flattenedYs: tfc.Tensor[] =\n      flattenTensorOrArrayOrMap('output', model.outputNames, ys);\n\n  const batchSize: number = flattenedXs[0].shape[0];\n\n  tfc.util.assert(\n      flattenedXs.length === model.inputs.length,\n      () => `LayersModel has ${model.inputs.length} inputs, but the dataset ` +\n          `provides ${flattenedXs.length} inputs.  (Expected input keys: ` +\n          `${JSON.stringify(model.inputNames)})`);\n\n  tfc.util.assert(\n      flattenedYs.length === model.outputs.length,\n      () =>\n          `LayersModel has ${model.outputs.length} outputs, but the dataset ` +\n          `provides ${flattenedYs.length} outputs.  (Expected output keys: ` +\n          `${JSON.stringify(model.outputNames)})`);\n\n  for (let xIndex = 0; xIndex < flattenedXs.length; xIndex++) {\n    tfc.util.assert(\n        flattenedXs[xIndex].shape[0] === batchSize,\n        () => `Batch size mismatch: input ` +\n            `${model.inputNames[xIndex]} has ${\n                  flattenedXs[xIndex].shape[0]}; ` +\n            `expected  ${batchSize} based on input ${model.inputNames[0]}.`);\n  }\n\n  for (let yIndex = 0; yIndex < flattenedYs.length; yIndex++) {\n    tfc.util.assert(\n        flattenedYs[yIndex].shape[0] === batchSize,\n        () => `Batch size mismatch: output ` +\n            `${model.outputNames[yIndex]} has ${\n                  flattenedYs[yIndex].shape[0]}; ` +\n            `expected  ${batchSize} based on input ${model.inputNames[0]}.`);\n  }\n\n  return {xs: flattenedXs, ys: flattenedYs};\n}\n\nfunction flattenTensorOrArrayOrMap(\n    inputOrOutput: string, names: string[], values: TensorOrArrayOrMap) {\n  if (values instanceof tfc.Tensor) {\n    return [values];\n  } else if (Array.isArray(values)) {\n    tfc.util.assert(\n        values.length === names.length,\n        () => `Received an array of ${values.length} Tensors, but expected ${\n            names.length} to match the ${inputOrOutput} keys ${names}.`);\n    return values;\n  } else {\n    const result: tfc.Tensor[] = [];\n    // Check that all the required keys are available.\n    for (const name of names) {\n      if (values[name] == null) {\n        throw new ValueError(\n            `The feature data generated by the dataset lacks the required ` +\n            `${inputOrOutput} key '${name}'.`);\n      }\n      result.push(values[name]);\n    }\n    return result;\n  }\n}\n\nfunction standardizeTensorValidationData<T>(\n    data:\n        [\n          tfc.Tensor|tfc.Tensor[], tfc.Tensor|tfc.Tensor[]\n        ]|[tfc.Tensor | tfc.Tensor[], tfc.Tensor | tfc.Tensor[],\n           tfc.Tensor | tfc.Tensor[]]):\n    {xs: tfc.Tensor|tfc.Tensor[], ys: tfc.Tensor|tfc.Tensor[]} {\n  if (data.length === 3) {\n    throw new NotImplementedError(\n        'Validation with sample weights is not implemented yet.');\n  }\n  return {xs: data[0], ys: data[1]};\n}\n\nexport async function fitDataset<T>(\n    // Type `model` as `any` here to avoid circular dependency w/\n    // training.ts.\n    // tslint:disable-next-line:no-any\n    model: any, dataset: Dataset<T>,\n    args: ModelFitDatasetArgs<T>): Promise<History> {\n  const hasBatchesPerEpoch = args.batchesPerEpoch != null;\n  tfc.util.assert(\n      model.optimizer != null,\n      () => 'You must compile a model before training/testing. Use ' +\n          'LayersModel.compile(modelCompileConfig).');\n\n  tfc.util.assert(\n      args != null,\n      () => `For fitDataset(), the 2nd argument (config) is required, ` +\n          `but it is not provided in this call.`);\n  tfc.util.assert(\n      args.epochs != null && args.epochs > 0 && Number.isInteger(args.epochs),\n      () => `For fitDataset(), config.epochs is expected to be a positive ` +\n          `integer, but got ${args.epochs}`);\n  tfc.util.assert(\n      !hasBatchesPerEpoch ||\n          (args.batchesPerEpoch > 0 && Number.isInteger(args.batchesPerEpoch)),\n      () => `For fitDataset(), config.batchesPerEpoch is expected to be a ` +\n          `positive integer if specified, but got ${args.batchesPerEpoch}`);\n  tfc.util.assert(\n      // tslint:disable-next-line:no-any\n      (args as any)['validationSplit'] == null,\n      () => '`validationSplit` is not supported by `fitDataset()`. ' +\n          'Use validationData instead.');\n\n  if (model.isTraining) {\n    throw new Error(\n        'Cannot start training because another fit() call is ongoing.');\n  }\n  model.isTraining = true;\n\n  try {\n    const doValidation = args.validationData != null;\n    let valXs: tfc.Tensor|tfc.Tensor[];\n    let valYs: tfc.Tensor|tfc.Tensor[];\n    if (doValidation) {\n      if (isDatasetObject(args.validationData)) {\n        tfc.util.assert(\n            args.validationBatches == null ||\n                (args.validationBatches > 0 &&\n                 Number.isInteger(args.validationBatches)),\n            () => `For fitDataset() with dataset-based validation, ` +\n                `config.validationBatches is expected not to be provided, ` +\n                `or to be a positive integer, ` +\n                `but got ${args.validationBatches}`);\n      } else {\n        const validationData = standardizeTensorValidationData(\n            args.validationData as\n                    [tfc.Tensor | tfc.Tensor[], tfc.Tensor | tfc.Tensor[]] |\n            [\n              tfc.Tensor | tfc.Tensor[], tfc.Tensor | tfc.Tensor[],\n              tfc.Tensor | tfc.Tensor[]\n            ]);\n        valXs = validationData.xs;\n        valYs = validationData.ys;\n      }\n    }\n\n    const trainFunction = model.makeTrainFunction();\n    const outLabels = model.getDedupedMetricsNames() as string[];\n\n    let callbackMetrics: string[];\n    if (doValidation) {\n      callbackMetrics =\n          outLabels.slice().concat(outLabels.map(n => 'val_' + n));\n    } else {\n      callbackMetrics = outLabels.slice();\n    }\n\n    const callbacks = standardizeCallbacks(args.callbacks, args.yieldEvery);\n    const verbose = args.verbose == null ? 1 : args.verbose;\n    const {callbackList, history} = configureCallbacks(\n        callbacks, verbose, args.epochs, null, null,\n        getStepsPerEpoch(dataset, args),\n        null,  // Batch size determined by the dataset itself.\n        doValidation, callbackMetrics);\n    callbackList.setModel(model);\n    model.history = history;\n\n    await callbackList.onTrainBegin();\n    model.stopTraining_ = false;\n    let epoch = args.initialEpoch == null ? 0 : args.initialEpoch;\n\n    let dataIterator = await dataset.iterator();\n    while (epoch < args.epochs) {\n      const epochLogs: UnresolvedLogs = {};\n      await callbackList.onEpochBegin(epoch);\n      let stepsDone = 0;\n      let batchIndex = 0;\n      if (!hasBatchesPerEpoch) {\n        dataIterator = await dataset.iterator();\n      }\n      while (hasBatchesPerEpoch ? stepsDone < args.batchesPerEpoch : true) {\n        const iteratorOut = await dataIterator.next();\n\n        // If `batchesPerEpoch` is specified, the dataset should not be\n        // exhausted until all epoches are done.\n        if (hasBatchesPerEpoch && iteratorOut.done) {\n          console.warn(\n              'You provided `batchesPerEpoch` as ' +\n              `${args.batchesPerEpoch}, ` +\n              'but your dataset iterator ran out of data after ' +\n              `${stepsDone} batches; ` +\n              'interrupting training. Make sure that your ' +\n              'dataset can generate at least `batchesPerEpoch * epochs` ' +\n              'batches (in this case, ' +\n              `${args.batchesPerEpoch * args.epochs} batches). ` +\n              'You may need to use the repeat() function when building ' +\n              'your dataset.');\n          break;\n        }\n\n        if (iteratorOut.value != null) {\n          const {xs, ys} =\n              standardizeDataIteratorOutput(model, iteratorOut.value);\n          const batchLogs: UnresolvedLogs = {};\n          batchLogs['batch'] = batchIndex;\n          batchLogs['size'] = xs[0].shape[0];\n\n          await callbackList.onBatchBegin(batchIndex, batchLogs);\n\n          const sampleWeights: tfc.Tensor[] = [];\n          if (args.classWeight != null) {\n            const standardClassWeights =\n                standardizeClassWeights(args.classWeight, model.outputNames);\n            for (let i = 0; i < standardClassWeights.length; ++i) {\n              sampleWeights.push(await standardizeWeights(\n                  ys[i], null, standardClassWeights[i]));\n            }\n          }\n\n          // Train on batch.\n          const ins = xs.concat(ys).concat(sampleWeights);\n          const outs = trainFunction(ins);\n          tfc.dispose(ins);\n          for (let i = 0; i < outLabels.length; ++i) {\n            const label = outLabels[i];\n            const out = outs[i];\n            batchLogs[label] = out;\n            tfc.keep(out);\n          }\n\n          await callbackList.onBatchEnd(batchIndex, batchLogs);\n          disposeTensorsInLogs(batchLogs);\n\n          batchIndex++;\n          stepsDone++;\n        }\n\n        if (hasBatchesPerEpoch ? stepsDone >= args.batchesPerEpoch :\n                                 iteratorOut.done) {\n          // Epoch finished. Perform validation.\n          if (doValidation) {\n            let valOuts: tfc.Scalar[];\n            if (isDatasetObject(args.validationData)) {\n              valOuts = toList(await model.evaluateDataset(\n                  args.validationData, {batches: args.validationBatches}));\n            } else {\n              valOuts = toList(model.evaluate(valXs, valYs, {\n                batchSize: args.validationBatchSize == null ?\n                    DEFAULT_VALIDATION_BATCH_SIZE :\n                    args.validationBatchSize,\n                verbose: 0\n              }));\n            }\n            for (let i = 0; i < model.metricsNames.length; ++i) {\n              epochLogs[`val_${model.metricsNames[i]}`] = valOuts[i];\n            }\n          }\n          // Call `break` to exit one epoch lopp after validation is done. If\n          // config.batchesPerEpoch is specified, an epoch while loop will\n          // stop when `stepsDone >= config.batchesPerEpoch`. When\n          // config.batchesPerEpoch is not provided, the following `break` is\n          // required to exit the while lopp after dataset is exhausted.\n          break;\n        }\n\n        if (model.stopTraining_) {\n          break;\n        }\n      }\n      await callbackList.onEpochEnd(epoch, epochLogs);\n      epoch++;\n      if (model.stopTraining_) {\n        break;\n      }\n    }\n    await callbackList.onTrainEnd();\n    await model.history.syncData();\n    return model.history;\n  } finally {\n    model.isTraining = false;\n  }\n}\n\n/** Helper function that determines number of steps (batches) per epoch. */\nfunction getStepsPerEpoch<T>(\n    dataset: Dataset<T>, args: ModelFitDatasetArgs<T>): number {\n  // Attempt to determine # of batches in an epoch.\n  let stepsPerEpoch: number = null;\n  if (args.batchesPerEpoch != null) {\n    stepsPerEpoch = args.batchesPerEpoch;\n  } else if (Number.isFinite(dataset.size)) {\n    stepsPerEpoch = dataset.size;\n  }\n  return stepsPerEpoch;\n}\n\n// Check if provided object is a Dataset object by checking its .iterator\n// element.\nfunction isDatasetObject<T>(\n    dataset:\n        [\n          TensorOrArrayOrMap, TensorOrArrayOrMap\n        ]|[TensorOrArrayOrMap, TensorOrArrayOrMap, TensorOrArrayOrMap]|\n    Dataset<T>): boolean {\n  return (typeof (dataset as Dataset<T>).iterator === 'function');\n}\n\n// Check if provided object is a LazyIterator object by checking it's .next\n// element.\nfunction isLazyIteratorObject<T>(iterator: Dataset<T>|\n                                 LazyIterator<T>): boolean {\n  return (typeof (iterator as LazyIterator<T>).next === 'function');\n}\n\nexport async function evaluateDataset<T>(\n    // Type `model` as `any` here to avoid circular dependency w/\n    // training.ts.\n    // tslint:disable-next-line:no-any\n    model: any, dataset: Dataset<T>|LazyIterator<T>,\n    args: ModelEvaluateDatasetArgs): Promise<tfc.Scalar|tfc.Scalar[]> {\n  args = args || {};\n  const hasBatches = args.batches != null;\n  const f = model.testFunction;\n  let outs: tfc.Scalar[] = [];\n  if (args.verbose > 0) {\n    throw new NotImplementedError('Verbose mode is not implemented yet.');\n  }\n\n  tfc.util.assert(\n      !hasBatches || (args.batches > 0 && Number.isInteger(args.batches)),\n      () => 'Test loop expects `batches` to be a positive integer, but ' +\n          `received ${JSON.stringify(args.batches)}`);\n  const dataIterator = isLazyIteratorObject(dataset) ?\n      dataset as LazyIterator<T>:\n      await (dataset as Dataset<T>).iterator();\n  // Keeps track of number of examples used in this evaluation.\n  let numExamples = 0;\n  let batch = 0;\n\n  while (hasBatches ? batch < args.batches : true) {\n    const iteratorOut = await dataIterator.next();\n    outs = tfc.tidy(() => {\n      if (iteratorOut.value) {\n        // TODO(cais): Once real dataset is available, use\n        //   `map(x => standardizeDataIteratorOutput(model, x).map(f)`.\n        const {xs, ys} =\n            standardizeDataIteratorOutput(model, iteratorOut.value);\n        const xsAndYs = xs.concat(ys);\n        const batchOuts = tfc.tidy(() => f(xsAndYs));\n        tfc.dispose(xsAndYs);\n\n        if (batch === 0) {\n          for (let i = 0; i < batchOuts.length; ++i) {\n            outs.push(scalar(0));\n          }\n        }\n\n        const batchSize = xsAndYs[0].shape[0];\n        for (let i = 0; i < batchOuts.length; ++i) {\n          const batchOut = batchOuts[i];\n          const oldScalar = outs[i];\n          outs[i] =\n              tfc.tidy(() => tfc.add(outs[i], tfc.mul(batchSize, batchOut)));\n          if (batch > 0) {\n            tfc.dispose(oldScalar);\n          }\n        }\n        tfc.dispose(batchOuts);\n        numExamples += batchSize;\n\n        ++batch;\n      }\n      return outs;\n    });\n\n    if (iteratorOut.done) {\n      if (hasBatches) {\n        console.warn(\n            'Your dataset iterator ran out of data during evaluateDataset(). ' +\n            'Interrupting evalution. Make sure that your ' +\n            'dataset can generate at least `batches` ' +\n            `batches (in this case, ${args.batches} batches). ` +\n            'You may need to use the repeat() function when building ' +\n            'your dataset.');\n      }\n      break;\n    }\n  }\n\n  for (let i = 0; i < outs.length; ++i) {\n    const oldScalar = outs[i];\n    outs[i] = tfc.div(outs[i], numExamples);\n    tfc.dispose(oldScalar);\n  }\n\n  return singletonOrArray(outs);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {argMax, clone, dispose, mul, reshape, Tensor, Tensor1D, tensor1d, tidy} from '@tensorflow/tfjs-core';\n\n/**\n * For multi-class classification problems, this object is designed to store a\n * mapping from class index to the \"weight\" of the class, where higher weighted\n * classes have larger impact on loss, accuracy, and other metrics.\n *\n * This is useful for cases in which you want the model to \"pay more attention\"\n * to examples from an under-represented class, e.g., in unbalanced datasets.\n */\nexport type ClassWeight = {\n  [classIndex: number]: number\n};\n\n/**\n * Class weighting for a model with multiple outputs.\n *\n * This object maps each output name to a class-weighting object.\n */\nexport type ClassWeightMap = {\n  [outputName: string]: ClassWeight\n};\n\nfunction standardizeSampleOrClassWeights(\n    xWeight: ClassWeight|ClassWeight[]|ClassWeightMap, outputNames: string[],\n    weightType: 'sampleWeight'|'classWeight'): ClassWeight[] {\n  const numOutputs = outputNames.length;\n  if (xWeight == null || (Array.isArray(xWeight) && xWeight.length === 0)) {\n    return outputNames.map(name => null);\n  }\n  if (numOutputs === 1) {\n    if (Array.isArray(xWeight) && xWeight.length === 1) {\n      return xWeight;\n    } else if (typeof xWeight === 'object' && outputNames[0] in xWeight) {\n      return [(xWeight as ClassWeightMap)[outputNames[0]]];\n    } else {\n      return [xWeight as ClassWeight];\n    }\n  }\n  if (Array.isArray(xWeight)) {\n    if (xWeight.length !== numOutputs) {\n      throw new Error(\n          `Provided ${weightType} is an array of ${xWeight.length} ` +\n          `element(s), but the model has ${numOutputs} outputs. ` +\n          `Make sure a set of weights is provided for each model output.`);\n    }\n    return xWeight;\n  } else if (\n      typeof xWeight === 'object' && Object.keys(xWeight).length > 0 &&\n      typeof (xWeight as ClassWeightMap)[Object.keys(xWeight)[0]] ===\n          'object') {\n    const output: ClassWeight[] = [];\n    outputNames.forEach(outputName => {\n      if (outputName in xWeight) {\n        output.push((xWeight as ClassWeightMap)[outputName]);\n      } else {\n        output.push(null);\n      }\n    });\n    return output;\n  } else {\n    throw new Error(\n        `The model has multiple (${numOutputs}) outputs, ` +\n        `so ${weightType} must be either an array with ` +\n        `${numOutputs} elements or an object with ${outputNames} keys. ` +\n        `Provided ${weightType} not understood: ${JSON.stringify(xWeight)}`);\n  }\n}\n\n/**\n * Standardize class weighting objects.\n *\n * This function takes a single class-weighting object, an array of them,\n * or a map from output name to class-weighting object. It compares it to the\n * output name(s) of the model, base on which it outputs an array of\n * class-weighting objects of which the length matches the number of outputs.\n *\n * @param classWeight Input class-weighting object(s).\n * @param outputNames All output name(s) of the model.\n * @return An array of class-weighting objects. The length of the array matches\n *   the model's number of outputs.\n */\nexport function standardizeClassWeights(\n    classWeight: ClassWeight|ClassWeight[]|ClassWeightMap,\n    outputNames: string[]): ClassWeight[] {\n  return standardizeSampleOrClassWeights(\n      classWeight, outputNames, 'classWeight');\n}\n\nexport function standardizeSampleWeights(\n    classWeight: ClassWeight|ClassWeight[]|ClassWeightMap,\n    outputNames: string[]): ClassWeight[] {\n  return standardizeSampleOrClassWeights(\n      classWeight, outputNames, 'sampleWeight');\n}\n\n/**\n * Standardize by-sample and/or by-class weights for training.\n *\n * Note that this function operates on one model output at a time. For a model\n * with multiple outputs, you must call this function multiple times.\n *\n * @param y The target tensor that the by-sample and/or by-class weight is for.\n *     The values of y are assumed to encode the classes, either directly\n *     as an integer index, or as one-hot encoding.\n * @param sampleWeight By-sample weights.\n * @param classWeight By-class weights: an object mapping class indices\n *     (integers) to a weight (float) to apply to the model's loss for the\n *     samples from this class during training. This can be useful to tell the\n *     model to \"pay more attention\" to samples from an under-represented class.\n * @param sampleWeightMode The mode for the sample weights.\n * @return A Promise of weight tensor, of which the size of the first dimension\n *     matches that of `y`.\n */\nexport async function standardizeWeights(\n    y: Tensor, sampleWeight?: Tensor, classWeight?: ClassWeight,\n    sampleWeightMode?: 'temporal'): Promise<Tensor> {\n  if (sampleWeight != null || sampleWeightMode != null) {\n    // TODO(cais): Once 'temporal' mode is implemented, document it in the doc\n    // string.\n    throw new Error('Support sampleWeight is not implemented yet');\n  }\n\n  if (classWeight != null) {\n    // Apply class weights per sample.\n    const yClasses: Tensor1D = tidy(() => {\n      if (y.shape.length === 1) {\n        // Assume class indices.\n        return clone(y) as Tensor1D;\n      } else if (y.shape.length === 2) {\n        if (y.shape[1] > 1) {\n          // Assume one-hot encoding of classes.\n          const axis = 1;\n          return argMax(y, axis);\n        } else if (y.shape[1] === 1) {\n          // Class index.\n          return reshape(y, [y.shape[0]]);\n        } else {\n          throw new Error(\n              `Encountered unexpected last-dimension size (${y.shape[1]}) ` +\n              `during handling of class weights. The size is expected to be ` +\n              `>= 1.`);\n        }\n      } else {\n        throw new Error(\n            `Unexpected rank of target (y) tensor (${y.rank}) during ` +\n            `handling of class weights. The rank is expected to be 1 or 2.`);\n      }\n    });\n\n    const yClassIndices = Array.from(await yClasses.data());\n    dispose(yClasses);\n    const classSampleWeight: number[] = [];\n    yClassIndices.forEach(classIndex => {\n      if (classWeight[classIndex] == null) {\n        throw new Error(\n            `classWeight must contain all classes in the training data. ` +\n            `The class ${classIndex} exists in the data but not in ` +\n            `classWeight`);\n      } else {\n        classSampleWeight.push(classWeight[classIndex]);\n      }\n    });\n\n    return tensor1d(classSampleWeight, 'float32');\n  } else {\n    return null;\n  }\n}\n\n/**\n * Apply per-sample weights on the loss values from a number of samples.\n *\n * @param losses Loss tensor of shape `[batchSize]`.\n * @param sampleWeights Per-sample weight tensor of shape `[batchSize]`.\n * @returns Tensor of the same shape as`losses`.\n */\nexport function computeWeightedLoss(losses: Tensor, sampleWeights: Tensor) {\n  return mul(losses, sampleWeights);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Interfaces and methods for training models using tf.Tensor objects.\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {Scalar, Tensor, Tensor1D, tensor1d, util} from '@tensorflow/tfjs-core';\n\nimport {expandDims, gather, sliceAlongFirstAxis} from '../backend/tfjs_backend';\nimport {BaseCallback, configureCallbacks, CustomCallbackArgs, History, ModelLoggingVerbosity, standardizeCallbacks, YieldEveryOptions} from '../base_callbacks';\nimport {NotImplementedError, ValueError} from '../errors';\nimport {disposeTensorsInLogs, UnresolvedLogs} from '../logs';\nimport {range} from '../utils/math_utils';\nimport {ClassWeight, ClassWeightMap} from './training_utils';\n\n/**\n * Interface configuration model training based on data as `tf.Tensor`s.\n */\nexport interface ModelFitArgs {\n  /**\n   * Number of samples per gradient update. If unspecified, it\n   * will default to 32.\n   */\n  batchSize?: number;\n\n  /**\n   * Integer number of times to iterate over the training data arrays.\n   */\n  epochs?: number;\n\n  /**\n   * Verbosity level.\n   *\n   * Expected to be 0, 1, or 2. Default: 1.\n   *\n   * 0 - No printed message during fit() call.\n   * 1 - In Node.js (tfjs-node), prints the progress bar, together with\n   *     real-time updates of loss and metric values and training speed.\n   *     In the browser: no action. This is the default.\n   * 2 - Not implemented yet.\n   */\n  verbose?: ModelLoggingVerbosity;\n\n  /**\n   * List of callbacks to be called during training.\n   * Can have one or more of the following callbacks:\n   *   - `onTrainBegin(logs)`: called when training starts.\n   *   - `onTrainEnd(logs)`: called when training ends.\n   *   - `onEpochBegin(epoch, logs)`: called at the start of every epoch.\n   *   - `onEpochEnd(epoch, logs)`: called at the end of every epoch.\n   *   - `onBatchBegin(batch, logs)`: called at the start of every batch.\n   *   - `onBatchEnd(batch, logs)`: called at the end of every batch.\n   *   - `onYield(epoch, batch, logs)`: called every `yieldEvery` milliseconds\n   *      with the current epoch, batch and logs. The logs are the same\n   *      as in `onBatchEnd()`. Note that `onYield` can skip batches or\n   *      epochs. See also docs for `yieldEvery` below.\n   */\n  callbacks?: BaseCallback[]|CustomCallbackArgs|CustomCallbackArgs[];\n\n  /**\n   * Float between 0 and 1: fraction of the training data\n   * to be used as validation data. The model will set apart this fraction of\n   * the training data, will not train on it, and will evaluate the loss and\n   * any model metrics on this data at the end of each epoch.\n   * The validation data is selected from the last samples in the `x` and `y`\n   * data provided, before shuffling.\n   */\n  validationSplit?: number;\n\n  /**\n   * Data on which to evaluate the loss and any model\n   * metrics at the end of each epoch. The model will not be trained on this\n   * data. This could be a tuple [xVal, yVal] or a tuple [xVal, yVal,\n   * valSampleWeights]. The model will not be trained on this data.\n   * `validationData` will override `validationSplit`.\n   */\n  validationData?: [\n    Tensor|Tensor[], Tensor|Tensor[]\n  ]|[Tensor | Tensor[], Tensor|Tensor[], Tensor|Tensor[]];\n\n  /**\n   * Whether to shuffle the training data before each epoch. Has\n   * no effect when `stepsPerEpoch` is not `null`.\n   */\n  shuffle?: boolean;\n\n  /**\n   * Optional object mapping class indices (integers) to\n   * a weight (float) to apply to the model's loss for the samples from this\n   * class during training. This can be useful to tell the model to \"pay more\n   * attention\" to samples from an under-represented class.\n   *\n   * If the model has multiple outputs, a class weight can be specified for\n   * each of the outputs by setting this field an array of weight object\n   * or a object that maps model output names (e.g., `model.outputNames[0]`)\n   * to weight objects.\n   */\n  classWeight?: ClassWeight|ClassWeight[]|ClassWeightMap;\n\n  /**\n   * Optional array of the same length as x, containing\n   * weights to apply to the model's loss for each sample. In the case of\n   * temporal data, you can pass a 2D array with shape (samples,\n   * sequenceLength), to apply a different weight to every timestep of every\n   * sample. In this case you should make sure to specify\n   * sampleWeightMode=\"temporal\" in compile().\n   */\n  sampleWeight?: Tensor;\n\n  /**\n   * Epoch at which to start training (useful for resuming a previous training\n   * run). When this is used, `epochs` is the index of the \"final epoch\".\n   * The model is not trained for a number of iterations given by `epochs`,\n   * but merely until the epoch of index `epochs` is reached.\n   */\n  initialEpoch?: number;\n\n  /**\n   * Total number of steps (batches of samples) before\n   * declaring one epoch finished and starting the next epoch. When training\n   * with Input Tensors such as TensorFlow data tensors, the default `null` is\n   * equal to the number of unique samples in your dataset divided by the\n   * batch size, or 1 if that cannot be determined.\n   */\n  stepsPerEpoch?: number;\n\n  /**\n   * Only relevant if `stepsPerEpoch` is specified. Total number of steps\n   * (batches of samples) to validate before stopping.\n   */\n  validationSteps?: number;\n\n  /**\n   * Configures the frequency of yielding the main thread to other tasks.\n   *\n   * In the browser environment, yielding the main thread can improve the\n   * responsiveness of the page during training. In the Node.js environment,\n   * it can ensure tasks queued in the event loop can be handled in a timely\n   * manner.\n   *\n   * The value can be one of the following:\n   *   - `'auto'`: The yielding happens at a certain frame rate (currently set\n   *               at 125ms). This is the default.\n   *   - `'batch'`: yield every batch.\n   *   - `'epoch'`: yield every epoch.\n   *   - any `number`: yield every `number` milliseconds.\n   *   - `'never'`: never yield. (yielding can still happen through `await\n   *      nextFrame()` calls in custom callbacks.)\n   */\n  yieldEvery?: YieldEveryOptions;\n}\n\nexport function checkBatchSize(batchSize: number) {\n  tfc.util.assert(\n      batchSize > 0 && Number.isInteger(batchSize),\n      () => `batchSize is required to be a positive integer, but got ${\n          batchSize}`);\n}\n\n/**\n * Slice a Tensor or an Array of Tensors, by start and stop indices.\n *\n * Porting Note: The `_slice_arrays` function in PyKeras is covered by this\n *   function and `sliceArraysByIndices()` together.\n *\n * @param arrays: the input.\n * @param start: the starting index (inclusive).\n * @param stop: the stopping index (exclusive).\n * @returns The result of the slicing. If `arrays` is an `Array` of\n *   `tf.Tensor`s, the slicing will be applied to all elements of the `Array`\n *   in the same way.\n */\nexport function sliceArrays(\n    arrays: Tensor|Tensor[], start: number, stop: number): Tensor|Tensor[] {\n  if (arrays == null) {\n    return [null];\n  } else if (Array.isArray(arrays)) {\n    return arrays.map(array => sliceAlongFirstAxis(array, start, stop - start));\n  } else {  // Tensor.\n    return sliceAlongFirstAxis(arrays, start, stop - start);\n  }\n}\n\n/**\n * Slice a Tensor or an Array of Tensors, by random-order indices.\n *\n * Porting Note: The `_slice_arrays` function in PyKeras is covered by this\n *   function and `sliceArrays()` together.\n *\n * @param arrays The input `tf.Tensor` or `Array` of `tf.Tensor`s to slice.\n *   If an `Array` of `tf.Tensor`s, all `tf.Tensor`s will be sliced in the\n *   same fashion.\n * @param indices The indices to use for slicing along the first (batch)\n *   dimension.\n * @returns Result(s) of the slicing.\n */\nexport function sliceArraysByIndices(\n    arrays: Tensor|Tensor[], indices: Tensor1D): Tensor|Tensor[] {\n  return tfc.tidy(() => {\n    if (arrays == null) {\n      return null;\n    } else if (Array.isArray(arrays)) {\n      return arrays.map(\n          array => (sliceArraysByIndices(array, indices) as Tensor));\n    } else {\n      // TODO(cais): indices should be a pre-constructed Tensor1D to avoid\n      //   tensor1d() calls.\n      return gather(\n          arrays,\n          indices.dtype === 'int32' ? indices : tfc.cast(indices, 'int32'));\n    }\n  });\n}\n\n/**\n * Returns a list of batch indices (tuples of indices).\n * @param size: Integer, total size of the data to slice into batches.\n * @param batchSize: Integer, batch size.\n * @returns An Array of [batchStart, batchEnd] tuples. batchStart is\n *   inclusive; batchEnd is exclusive. I.e., each batch consists of indices x\n *   that satisfy batchStart <= x < batchEnd.\n */\nexport function makeBatches(\n    size: number, batchSize: number): Array<[number, number]> {\n  const output: Array<[number, number]> = [];\n  let batchStart = 0;\n  let batchEnd: number = null;\n  while (batchStart < size) {\n    batchEnd = batchStart + batchSize;\n    if (batchEnd >= size) {\n      batchEnd = size;\n    }\n    output.push([batchStart, batchEnd]);\n    batchStart = batchEnd;\n  }\n  return output;\n}\n\n/**\n * Abstract fit function for `f(ins)`.\n * @param f A Function returning a list of tensors. For training, this\n *   function is expected to perform the updates to the variables.\n * @param ins List of tensors to be fed to `f`.\n * @param outLabels List of strings, display names of the outputs of `f`.\n * @param batchSize Integer batch size or `== null` if unknown. Default : 32.\n * @param epochs Number of times to iterate over the data. Default : 1.\n * @param verbose Verbosity mode: 0, 1, or 2. Default: 1.\n * @param callbacks List of callbacks to be called during training.\n * @param valF Function to call for validation.\n * @param valIns List of tensors to be fed to `valF`.\n * @param shuffle Whether to shuffle the data at the beginning of every\n * epoch. Default : true.\n * @param callbackMetrics List of strings, the display names of the metrics\n *   passed to the callbacks. They should be the concatenation of the\n *   display names of the outputs of `f` and the list of display names\n *   of the outputs of `valF`.\n * @param initialEpoch Epoch at which to start training (useful for\n *   resuming a previous training run). Default : 0.\n * @param stepsPerEpoch Total number of steps (batches on samples) before\n *   declaring one epoch finished and starting the next epoch. Ignored with\n *   the default value of `undefined` or `null`.\n * @param validationSteps Number of steps to run validation for (only if\n *   doing validation from data tensors). Not applicable for tfjs-layers.\n * @returns A `History` object.\n */\nasync function fitLoop(\n    // Type `model` as `any` here to avoid circular dependency w/ training.ts.\n    // tslint:disable-next-line:no-any\n    model: any, f: (data: Tensor[]) => Scalar[], ins: Tensor[],\n    outLabels?: string[], batchSize?: number, epochs?: number, verbose?: number,\n    callbacks?: BaseCallback[], valF?: (data: Tensor[]) => Scalar[],\n    valIns?: Tensor[], shuffle?: boolean|string, callbackMetrics?: string[],\n    initialEpoch?: number, stepsPerEpoch?: number,\n    validationSteps?: number): Promise<History> {\n  if (batchSize == null) {\n    batchSize = 32;\n  }\n  if (epochs == null) {\n    epochs = 1;\n  }\n  if (shuffle == null) {\n    shuffle = true;\n  }\n  if (initialEpoch == null) {\n    initialEpoch = 0;\n  }\n\n  // TODO(cais): Change const to let below when implementing validation.\n  let doValidation = false;\n  if (valF != null && valIns != null) {\n    doValidation = true;\n    // TODO(cais): verbose message.\n  }\n  if (validationSteps != null) {\n    doValidation = true;\n    if (stepsPerEpoch == null) {\n      throw new ValueError(\n          'Can only use `validationSteps` when doing step-wise training, ' +\n          'i.e., `stepsPerEpoch` must be set.');\n    }\n  }\n\n  const numTrainSamples =\n      model.checkNumSamples(ins, batchSize, stepsPerEpoch, 'steps_per_epoch');\n  let indexArray: number[];\n  if (numTrainSamples != null) {\n    indexArray = range(0, numTrainSamples);\n  }\n\n  if (verbose == null) {\n    verbose = 1;\n  }\n\n  const {callbackList, history} = configureCallbacks(\n      callbacks, verbose, epochs, initialEpoch, numTrainSamples, stepsPerEpoch,\n      batchSize, doValidation, callbackMetrics);\n  callbackList.setModel(model);\n  model.history = history;\n  await callbackList.onTrainBegin();\n  model.stopTraining_ = false;\n  // TODO(cais): Take care of callbacks.validation_data as in PyKeras.\n  // TODO(cais): Pre-convert feeds for performance as in PyKeras.\n\n  for (let epoch = initialEpoch; epoch < epochs; ++epoch) {\n    await callbackList.onEpochBegin(epoch);\n    const epochLogs: UnresolvedLogs = {};\n    if (stepsPerEpoch != null) {\n      throw new NotImplementedError(\n          'stepsPerEpoch mode is not implemented yet.');\n    } else {\n      if (shuffle === 'batch') {\n        throw new NotImplementedError('batch shuffling is not implemneted yet');\n      } else if (shuffle) {\n        util.shuffle(indexArray);\n      }\n      // Convert the potentially shuffled indices to Tensor1D, to avoid the\n      // cost of repeated creation of Array1Ds later on.\n      const epochIndexArray1D = tensor1d(indexArray);\n\n      const batches = makeBatches(numTrainSamples, batchSize);\n      for (let batchIndex = 0; batchIndex < batches.length; ++batchIndex) {\n        const batchLogs: UnresolvedLogs = {};\n        await callbackList.onBatchBegin(batchIndex, batchLogs);\n\n        tfc.tidy(() => {\n          const batchStart = batches[batchIndex][0];\n          const batchEnd = batches[batchIndex][1];\n          const batchIds = sliceAlongFirstAxis(\n                               epochIndexArray1D, batchStart,\n                               batchEnd - batchStart) as Tensor1D;\n          batchLogs['batch'] = batchIndex;\n          batchLogs['size'] = batchEnd - batchStart;\n\n          // TODO(cais): In ins, train flag can be a number, instead of an\n          //   Tensor? Do we need to handle this in tfjs-layers?\n          const insBatch = sliceArraysByIndices(ins, batchIds) as Tensor[];\n          const outs = f(insBatch);\n          for (let i = 0; i < outLabels.length; ++i) {\n            const label = outLabels[i];\n            const out = outs[i];\n            batchLogs[label] = out;\n            tfc.keep(out);\n            // TODO(cais): Use scope() to avoid ownership.\n          }\n\n          if (batchIndex === batches.length - 1) {  // Last batch.\n            if (doValidation) {\n              const valOuts = model.testLoop(valF, valIns, batchSize);\n              // Porting Notes: In tfjs-layers, valOuts is always an Array.\n              for (let i = 0; i < outLabels.length; ++i) {\n                const label = outLabels[i];\n                const out = valOuts[i];\n                tfc.keep(out);\n                // TODO(cais): Use scope() to avoid ownership.\n                epochLogs['val_' + label] = out;\n              }\n            }\n          }\n        });\n\n        await callbackList.onBatchEnd(batchIndex, batchLogs);\n        disposeTensorsInLogs(batchLogs);\n\n        if (model.stopTraining_) {\n          break;\n        }\n        // TODO(cais): return outs as list of Tensor.\n      }\n\n      epochIndexArray1D.dispose();\n    }\n    // TODO(cais): Run validation at the end of the epoch.\n    await callbackList.onEpochEnd(epoch, epochLogs);\n    if (model.stopTraining_) {\n      break;\n    }\n  }\n  await callbackList.onTrainEnd();\n\n  await model.history.syncData();\n  return model.history;\n}\n\nexport async function fitTensors(\n    // Type `model` as `any` here to avoid circular dependency w/ training.ts.\n    // tslint:disable-next-line:no-any\n    model: any, x: Tensor|Tensor[]|{[inputName: string]: Tensor},\n    y: Tensor|Tensor[]|{[inputName: string]: Tensor},\n    args: ModelFitArgs = {}): Promise<History> {\n  if (model.isTraining) {\n    throw new Error(\n        'Cannot start training because another fit() call is ongoing.');\n  }\n  model.isTraining = true;\n  let inputs: Tensor[];\n  let targets: Tensor[];\n  let originalInputs: Tensor[];\n  let originalTargets: Tensor[];\n  let inputValX: Tensor|Tensor[];\n  let inputValY: Tensor|Tensor[];\n  let valX: Tensor|Tensor[];\n  let valY: Tensor|Tensor[];\n  let sampleWeights: Tensor[];\n  try {\n    const batchSize = args.batchSize == null ? 32 : args.batchSize;\n    checkBatchSize(batchSize);\n\n    // Validate user data.\n    // TODO(cais): Support sampleWeight.\n    const checkBatchAxis = false;\n    const standardizedOuts =\n        await model.standardizeUserData(\n            x, y, args.sampleWeight, args.classWeight, checkBatchAxis,\n            batchSize) as [Tensor[], Tensor[], Tensor[]];\n    inputs = standardizedOuts[0];\n    targets = standardizedOuts[1];\n    sampleWeights = standardizedOuts[2];\n\n    // Prepare validation data.\n    let doValidation = false;\n    let valIns: Tensor[];\n    if (args.validationData != null && args.validationData.length > 0) {\n      doValidation = true;\n      if (args.validationData.length === 2) {\n        // config.validationData consists of valX and valY.\n        inputValX = args.validationData[0];\n        inputValY = args.validationData[1];\n      } else if (args.validationData.length === 3) {\n        throw new NotImplementedError(\n            'validationData including sample weights is not supported yet.');\n      } else {\n        throw new ValueError(\n            `When passing validation data, it must contain 2 (valX, valY) ` +\n            `or 3 (valX, valY, valSampleWeight) items; ` +\n            `${args.validationData} is invalid.`);\n      }\n\n      const checkBatchAxis = true;\n      const valStandardized =\n          await model.standardizeUserData(\n              inputValX, inputValY, null, /** Unused sample weights. */\n              null,                       /** Unused class weights. */\n              checkBatchAxis, batchSize) as [Tensor[], Tensor[], Tensor[]];\n      valX = valStandardized[0];\n      valY = valStandardized[1];\n      valIns = valX.concat(valY);\n      // TODO(cais): Add useLearningPhase data properly.\n    } else if (\n        args.validationSplit != null && args.validationSplit > 0 &&\n        args.validationSplit < 1) {\n      doValidation = true;\n      // Porting Note: In tfjs-layers, inputs[0] is always a Tensor.\n      const splitAt =\n          Math.floor(inputs[0].shape[0] * (1 - args.validationSplit));\n      const originalBatchSize = inputs[0].shape[0];\n      valX = sliceArrays(inputs, splitAt, originalBatchSize) as Tensor[];\n      originalInputs = inputs;\n      inputs = sliceArrays(inputs, 0, splitAt) as Tensor[];\n      valY = sliceArrays(targets, splitAt, originalBatchSize) as Tensor[];\n      originalTargets = targets;\n      targets = sliceArrays(targets, 0, splitAt) as Tensor[];\n      // TODO(cais): Once sampleWeights becomes available, slice it to get\n      //   valSampleWeights.\n      valIns = valX.concat(valY);\n\n      // TODO(cais): Add useLearningPhase data properly.\n    } else if (args.validationSteps != null) {\n      doValidation = true;\n      // TODO(cais): Add useLearningPhase.\n    }\n\n    const ins = inputs.concat(targets).concat(sampleWeights);\n\n    model.checkTrainableWeightsConsistency();\n\n    // TODO(cais): Handle use_learning_phase and learning_phase?\n\n    // Porting Note: Here we see a key deviation of tfjs-layers from\n    // Keras.\n    //  Due to the imperative nature of tfjs-layers' backend (tfjs-core),\n    //  we do not construct symbolic computation graphs to embody the\n    //  training process. Instead, we define a function that performs the\n    //  training action. In PyKeras, the data (inputs and targets) are fed\n    //  through graph placeholders. In tfjs-layers, the data are fed as\n    //  function arguments. Since the function are defined below in the\n    //  scope, we don't have equivalents of PyKeras's\n    //  `_make_train_funciton`.\n    const trainFunction = model.makeTrainFunction();\n    const outLabels = model.getDedupedMetricsNames() as string[];\n\n    let valFunction: (data: Tensor[]) => Scalar[];\n    let callbackMetrics: string[];\n    if (doValidation) {\n      model.makeTestFunction();\n      valFunction = model.testFunction;\n      callbackMetrics =\n          outLabels.slice().concat(outLabels.map(n => 'val_' + n));\n    } else {\n      valFunction = null;\n      valIns = [];\n      callbackMetrics = outLabels.slice();\n    }\n\n    const callbacks = standardizeCallbacks(args.callbacks, args.yieldEvery);\n    const out = await fitLoop(\n        model, trainFunction, ins, outLabels, batchSize, args.epochs,\n        args.verbose, callbacks, valFunction, valIns, args.shuffle,\n        callbackMetrics, args.initialEpoch, null, null);\n    return out;\n  } finally {\n    model.isTraining = false;\n    // Memory clean up.\n    disposeNewTensors(inputs, x);\n    disposeNewTensors(targets, y);\n    disposeNewTensors(originalInputs, x);\n    disposeNewTensors(originalTargets, y);\n    disposeNewTensors(valX as Tensor[], inputValX);\n    disposeNewTensors(valY as Tensor[], inputValY);\n    if (sampleWeights != null) {\n      tfc.dispose(sampleWeights);\n    }\n  }\n  // TODO(cais): Add value to outLabels.\n}\n\n/**\n * Ensure tensors all have a rank of at least 2.\n *\n * If a tensor has a rank of 1, it is dimension-expanded to rank 2.\n * If any tensor has a rank of 0 (i.e., is a scalar), an error will be thrown.\n */\nexport function ensureTensorsRank2OrHigher(tensors: Tensor|Tensor[]): Tensor[] {\n  const outs: Tensor[] = [];\n  if (tensors instanceof Tensor) {\n    tensors = [tensors];\n  }\n\n  // Make Tensors at least 2D.\n  for (let i = 0; i < tensors.length; ++i) {\n    const tensor = tensors[i];\n    if (tensor.rank === 1) {\n      outs.push(expandDims(tensor, 1));\n    } else if (tensor.rank === 0) {\n      throw new Error(\n          'Expected tensor to be at least 1D, but received a 0D tensor ' +\n          '(scalar).');\n    } else {\n      outs.push(tensor);\n    }\n  }\n  return outs;\n}\n\n/**\n * Compare a set of tensors with a reference (old) set, discard the ones\n * in the new set that are not present in the reference set.\n *\n * This method is used for memory clenaup during calls such as\n * LayersModel.fit().\n *\n * @param tensors New set which may contain Tensors not present in\n *   `refTensors`.\n * @param refTensors Reference Tensor set.\n */\n// TODO(cais, kangyizhang): Deduplicate with tfjs-data.\nexport function disposeNewTensors(\n    tensors: Tensor|Tensor[]|{[inputName: string]: Tensor},\n    refTensors: Tensor|Tensor[]|{[inputName: string]: Tensor}): void {\n  if (tensors == null) {\n    return;\n  }\n  const oldTensorIds: number[] = [];\n  if (refTensors instanceof Tensor) {\n    oldTensorIds.push(refTensors.id);\n  } else if (Array.isArray(refTensors)) {\n    refTensors.forEach(t => oldTensorIds.push(t.id));\n  } else if (refTensors != null) {\n    // `oldTensors` is a map from string name to Tensor.\n    for (const name in refTensors) {\n      const oldTensor = refTensors[name];\n      oldTensorIds.push(oldTensor.id);\n    }\n  }\n\n  const tensorsToDispose: Tensor[] = [];\n  if (tensors instanceof Tensor) {\n    if (oldTensorIds.indexOf(tensors.id) === -1) {\n      tensorsToDispose.push(tensors);\n    }\n  } else if (Array.isArray(tensors)) {\n    tensors.forEach(t => {\n      if (oldTensorIds.indexOf(t.id) === -1) {\n        tensorsToDispose.push(t);\n      }\n    });\n  } else if (tensors != null) {\n    // `oldTensors` is a map from string name to Tensor.\n    for (const name in tensors) {\n      const tensor = tensors[name];\n      if (oldTensorIds.indexOf(tensor.id) === -1) {\n        tensorsToDispose.push(tensor);\n      }\n    }\n  }\n\n  tensorsToDispose.forEach(t => {\n    if (!t.isDisposed) {\n      t.dispose();\n    }\n  });\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original source keras/models.py */\n\nimport {dispose, io, NamedTensorMap, Optimizer, Scalar, serialization, Tensor, util} from '@tensorflow/tfjs-core';\n\nimport {getUid} from './backend/state';\nimport {History} from './base_callbacks';\nimport {Dataset} from './engine/dataset_stub';\nimport {Input} from './engine/input_layer';\nimport {getSourceInputs, Layer, Node, SymbolicTensor} from './engine/topology';\nimport {LayersModel, ModelCompileArgs, ModelEvaluateArgs} from './engine/training';\nimport {ModelEvaluateDatasetArgs, ModelFitDatasetArgs} from './engine/training_dataset';\nimport {ModelFitArgs} from './engine/training_tensors';\nimport {NotImplementedError, RuntimeError, ValueError} from './errors';\nimport {Shape} from './keras_format/common';\nimport {TrainingConfig} from './keras_format/training_config';\nimport {PyJsonDict} from './keras_format/types';\nimport {deserialize} from './layers/serialization';\nimport {Kwargs, NamedTensor} from './types';\nimport * as generic_utils from './utils/generic_utils';\nimport {convertPythonicToTs} from './utils/serialization_utils';\nimport {getExactlyOneShape} from './utils/types_utils';\n\n/**\n * Parses a JSON model configuration file and returns a model instance.\n *\n * ```js\n * // This example shows how to serialize a model using `toJSON()` and\n * // deserialize it as another model using `tf.models.modelFromJSON()`.\n * // Note: this example serializes and deserializes only the topology\n * // of the model; the weights of the loaded model will be different\n * // from those of the the original model, due to random weight\n * // initialization.\n * // To load the topology and weights of a model, use `tf.loadLayersModel()`.\n * const model1 = tf.sequential();\n * model1.add(tf.layers.repeatVector({inputShape: [2], n: 4}));\n * // Serialize `model1` as a JSON object.\n * const model1JSON = model1.toJSON(null, false);\n * model1.summary();\n *\n * const model2 = await tf.models.modelFromJSON(model1JSON);\n * model2.summary();\n * ```\n *\n *  @param modelAndWeightsConfig JSON object or string encoding a model and\n *       weights configuration. It can also be only the topology JSON of the\n *       model, in which case the weights will not be loaded.\n *  @param custom_objects Optional dictionary mapping names\n *       (strings) to custom classes or functions to be\n *       considered during deserialization.\n * @returns A TensorFlow.js Layers `tf.LayersModel` instance (uncompiled).\n */\nexport async function modelFromJSON(\n    modelAndWeightsConfig: ModelAndWeightsConfig|PyJsonDict,\n    customObjects?: serialization.ConfigDict): Promise<LayersModel> {\n  if (!('modelTopology' in modelAndWeightsConfig)) {\n    modelAndWeightsConfig = {modelTopology: modelAndWeightsConfig};\n  }\n  modelAndWeightsConfig = modelAndWeightsConfig as ModelAndWeightsConfig;\n\n  let modelTopology = modelAndWeightsConfig.modelTopology;\n  if (modelTopology['model_config'] != null) {\n    // If the model-topology JSON contains a 'model_config' field, then it is\n    // a full model JSON (e.g., from `keras.Model.save()`), which contains\n    // not only the model's architecture in its 'model_config' field, but\n    // additional information such as the model's optimizer. We use only the\n    // 'model_config' field currently.\n    modelTopology = modelTopology['model_config'] as PyJsonDict;\n  }\n  const tsConfig =\n      convertPythonicToTs(modelTopology) as serialization.ConfigDict;\n  const model = deserialize(tsConfig, customObjects) as LayersModel;\n\n  if (modelAndWeightsConfig.weightsManifest != null) {\n    // Load the weight values keyed by the original tensor names in the model\n    // file that was loaded.  These should match the keys of the weight\n    // manifest.\n    const weightValues = await io.loadWeights(\n        modelAndWeightsConfig.weightsManifest, modelAndWeightsConfig.pathPrefix,\n        model.weights.map(weight => weight.originalName));\n\n    // Map the weights to the unique tensor names generated during model loading\n    const uniqueWeightValues: NamedTensorMap = {};\n    for (const weight of model.weights) {\n      uniqueWeightValues[weight.originalName] =\n          weightValues[weight.originalName];\n    }\n\n    model.loadWeights(uniqueWeightValues);\n    // Dispose temporary weight values.\n    dispose(weightValues);\n  }\n  return model;\n}\n\n/**\n * Options for loading a saved mode in TensorFlow.js format.\n */\nexport interface ModelAndWeightsConfig {\n  /**\n   * A JSON object or JSON string containing the model config.\n   *\n   * This can be either of the following two formats:\n   *   - A model archiecture-only config,  i.e., a format consistent with the\n   *     return value of`keras.Model.to_json()`.\n   *   - A full model config, containing not only model architecture, but also\n   *     training options and state, i.e., a format consistent with the return\n   *     value of `keras.models.save_model()`.\n   */\n  modelTopology: PyJsonDict;\n\n  /**\n   * A weights manifest in TensorFlow.js format.\n   */\n  weightsManifest?: io.WeightsManifestConfig;\n\n  /**\n   * Path to prepend to the paths in `weightManifest` before fetching.\n   *\n   * The path may optionally end in a slash ('/').\n   */\n  pathPrefix?: string;\n}\n\n// TODO(nielsene): Remove after: https://github.com/tensorflow/tfjs/issues/400\nexport interface ModelPredictArgs {\n  /**\n   * Optional. Batch size (Integer). If unspecified, it will default to 32.\n   */\n  batchSize?: number;\n\n  /**\n   * Optional. Verbosity mode. Defaults to false.\n   */\n  verbose?: boolean;\n}\n\n/**\n * Load a model, including its topology and optionally weights.  See the\n * Tutorial named \"How to import a Keras Model\" for usage examples.\n *\n * Example 1: Save `model`'s topology and weights to browser [local\n * storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage);\n * then load it back.\n *\n * ```js\n * const model = tf.sequential(\n *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});\n * console.log('Prediction from original model:');\n * model.predict(tf.ones([1, 3])).print();\n *\n * const saveResults = await model.save('localstorage://my-model-1');\n *\n * const loadedModel = await tf.loadLayersModel('localstorage://my-model-1');\n * console.log('Prediction from loaded model:');\n * loadedModel.predict(tf.ones([1, 3])).print();\n * ```\n *\n * Example 2. Saving `model`'s topology and weights to browser\n * [IndexedDB](https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API);\n * then load it back.\n *\n * ```js\n * const model = tf.sequential(\n *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});\n * console.log('Prediction from original model:');\n * model.predict(tf.ones([1, 3])).print();\n *\n * const saveResults = await model.save('indexeddb://my-model-1');\n *\n * const loadedModel = await tf.loadLayersModel('indexeddb://my-model-1');\n * console.log('Prediction from loaded model:');\n * loadedModel.predict(tf.ones([1, 3])).print();\n * ```\n *\n * Example 3. Load a model from user-selected files from HTML\n * [file input\n * elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file).\n *\n * ```js\n * // Note: this code snippet will not work without the HTML elements in the\n * //   page\n * const jsonUpload = document.getElementById('json-upload');\n * const weightsUpload = document.getElementById('weights-upload');\n *\n * const model = await tf.loadLayersModel(\n *     tf.io.browserFiles([jsonUpload.files[0], weightsUpload.files[0]]));\n * ```\n *\n * Example 4. Load a model from an HTTP server.\n *\n * ```js\n * const model = await\n *     tf.loadLayersModel('https://storage.googleapis.com/tfjs-models/tfjs/iris_v1/model.json');\n * model.summary();\n * ```\n *\n * @param pathOrIOHandler Can be either of the two formats\n *   1. A string path to the `ModelAndWeightsConfig` JSON describing\n *      the model in the canonical TensorFlow.js format. This path will be\n *      interpreted as a relative HTTP path, to which `fetch` will be used to\n *      request the model topology and weight manifest JSON.\n *      The content of the JSON file is assumed to be a JSON object with the\n *      following fields and values:\n *      - 'modelTopology': A JSON object that can be either of:\n *        1. a model architecture JSON consistent with the format of the return\n *            value of `keras.Model.to_json()`\n *        2. a full model JSON in the format of `keras.models.save_model()`.\n *      - 'weightsManifest': A TensorFlow.js weights manifest.\n *      See the Python converter function `save_model()` for more details.\n *      It is also assumed that model weights can be accessed from relative\n *      paths described by the `paths` fields in weights manifest.\n *   2. An `tf.io.IOHandler` object that loads model artifacts with its `load`\n *      method.\n * @param options Optional configuration arguments for the model loading,\n *   including:\n *   - `strict`: Require that the provided weights exactly match those required\n *     by the layers.  Default true.  Passing false means that both extra\n *     weights and missing weights will be silently ignored.\n *   - `onProgress`: A progress callback of the form:\n *     `(fraction: number) => void`. This callback can be used to monitor the\n *     model-loading process.\n * @returns A `Promise` of `tf.LayersModel`, with the topology and weights\n *     loaded.\n */\nexport async function loadLayersModelInternal(\n    pathOrIOHandler: string|io.IOHandler,\n    options?: io.LoadOptions): Promise<LayersModel> {\n  if (options == null) {\n    options = {};\n  }\n  if (typeof pathOrIOHandler === 'string') {\n    const handlers = io.getLoadHandlers(pathOrIOHandler, options);\n    if (handlers.length === 0) {\n      // For backward compatibility: if no load handler can be found,\n      // assume it is a relative http path.\n      // TODO(cais): Reformat the args into a single `LoadOptions` once the core\n      // is refactored.\n      handlers.push(io.browserHTTPRequest(pathOrIOHandler, options));\n    } else if (handlers.length > 1) {\n      throw new ValueError(\n          `Found more than one (${handlers.length}) load handlers for ` +\n          `URL '${pathOrIOHandler}'`);\n    }\n    pathOrIOHandler = handlers[0];\n  }\n  return loadLayersModelFromIOHandler(pathOrIOHandler, undefined, options);\n}\n\n/**\n * Load a model and optionally its weights, using an IOHandler object.\n *\n * @param handler The instance of `IOHandler` to be used during the model\n *   loading.\n * @param customObjects Any optional custom objects to be used during model\n *   loading.\n * @param strict Whether the weight loading will be done in strict mode.\n *   Default: `true`.\n */\nexport async function loadLayersModelFromIOHandler(\n    handler: io.IOHandler, customObjects?: serialization.ConfigDict,\n    options?: io.LoadOptions): Promise<LayersModel> {\n  if (options == null) {\n    options = {};\n  }\n  if (handler.load == null) {\n    throw new ValueError(\n        'Cannot proceed with model loading because the IOHandler provided ' +\n        'does not have the `load` method implemented.');\n  }\n  const artifacts = await handler.load();\n  let modelTopology = artifacts.modelTopology as PyJsonDict;\n  if (modelTopology['model_config'] != null) {\n    modelTopology = modelTopology['model_config'] as PyJsonDict;\n  }\n\n  const strict = options.strict == null ? true : options.strict;\n  // If weights are provided and the weight-loading mode is strict, use\n  // fast weight initialization. This skips costly initializers such as\n  // 'orthogonal' and saves unnecessary computation in cases where\n  // the initialized weight values will immediately be overwritten by\n  // loaded weight values.\n  const fastWeightInit =\n      artifacts.weightData != null && artifacts.weightSpecs != null && strict;\n  const model =\n      deserialize(\n          convertPythonicToTs(modelTopology) as serialization.ConfigDict,\n          customObjects, fastWeightInit) as LayersModel;\n\n  const trainingConfig = artifacts.trainingConfig as TrainingConfig;\n  if (trainingConfig != null) {\n    model.loadTrainingConfig(trainingConfig);\n  }\n  if (artifacts.userDefinedMetadata != null) {\n    model.setUserDefinedMetadata(artifacts.userDefinedMetadata);\n  }\n\n  // If weightData is present, load the weights into the model.\n  if (artifacts.weightData != null) {\n    // Loading weights requires weightSpecs.\n    if (artifacts.weightSpecs == null) {\n      throw new ValueError(\n          'LayersModel artifacts contains weight data, but not weight specs. ' +\n          'Therefore loading of weights cannot proceed.');\n    }\n\n    const {modelWeights, optimizerWeights} = decodeModelAndOptimizerWeights(\n        artifacts.weightData, artifacts.weightSpecs);\n    model.loadWeights(modelWeights, strict);\n\n    if (model.optimizer != null && optimizerWeights.length > 0) {\n      await model.optimizer.setWeights(optimizerWeights);\n    }\n\n    // Dispose temporary weight values.\n    dispose(modelWeights);\n    dispose(optimizerWeights.map(w => w.tensor));\n  }\n  return model;\n}\n\nfunction decodeModelAndOptimizerWeights(\n    buffer: ArrayBuffer, specs: io.WeightsManifestEntry[]):\n    {modelWeights: NamedTensorMap, optimizerWeights: NamedTensor[]} {\n  const name2Tensor = io.decodeWeights(buffer, specs);\n  const modelWeights: NamedTensorMap = {};\n  const optimizerWeights: NamedTensor[] = [];\n  specs.forEach(spec => {\n    if (spec.group === 'optimizer') {\n      optimizerWeights.push({name: spec.name, tensor: name2Tensor[spec.name]});\n    } else {\n      modelWeights[spec.name] = name2Tensor[spec.name];\n    }\n  });\n  return {modelWeights, optimizerWeights};\n}\n\n/**\n * Configuration for a Sequential model.\n */\nexport interface SequentialArgs {\n  /** Stack of layers for the model. */\n  layers?: Layer[];\n\n  /** The name of this model. */\n  name?: string;\n}\n\n/**\n * A model with a stack of layers, feeding linearly from one to the next.\n *\n * `tf.sequential` is a factory function that creates an instance of\n * `tf.Sequential`.\n *\n * ```js\n *  // Define a model for linear regression.\n *  const model = tf.sequential();\n *  model.add(tf.layers.dense({units: 1, inputShape: [1]}));\n *\n *  // Prepare the model for training: Specify the loss and the optimizer.\n *  model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});\n *\n *  // Generate some synthetic data for training.\n *  const xs = tf.tensor2d([1, 2, 3, 4], [4, 1]);\n *  const ys = tf.tensor2d([1, 3, 5, 7], [4, 1]);\n *\n *  // Train the model using the data then do inference on a data point the\n *  // model hasn't seen:\n *  await model.fit(xs, ys);\n *  model.predict(tf.tensor2d([5], [1, 1])).print();\n * ```\n *\n * @doc {heading: 'Models', subheading: 'Classes'}\n */\nexport class Sequential extends LayersModel {\n  /** @nocollapse */\n  static className = 'Sequential';\n  private model: LayersModel;\n  constructor(args?: SequentialArgs) {\n    super({inputs: [], outputs: []});\n    args = args || {};\n\n    this.trainable = true;\n    this.built = false;\n\n    // Set model name.\n    this.name = (args.name != null) ? args.name : getUid('sequential_');\n\n    // Add to the model any layers passed to the constructor.\n    if (args.layers != null) {\n      for (const layer of args.layers) {\n        this.add(layer);\n      }\n    }\n  }\n\n  // Helper function to Sequential.add  Throws if the new output shape will be\n  // invalid.\n  private checkShape(layer: Layer) {\n    const shape = layer.inboundNodes[0].outputTensors[0].shape;\n    if (shape.some(x => x < 0)) {\n      throw new ValueError(\n          'Negative dimension size caused by adding layer ' +\n          `${layer.name} with input shape [` +\n          `${layer.inboundNodes[0].inputTensors[0].shape}]`);\n    }\n  }\n\n  /**\n   * Adds a layer instance on top of the layer stack.\n   *\n   * ```js\n   *  const model = tf.sequential();\n   *  model.add(tf.layers.dense({units: 8, inputShape: [1]}));\n   *  model.add(tf.layers.dense({units: 4, activation: 'relu6'}));\n   *  model.add(tf.layers.dense({units: 1, activation: 'relu6'}));\n   *  // Note that the untrained model is random at this point.\n   *  model.predict(tf.randomNormal([10, 1])).print();\n   * ```\n   * @param layer Layer instance.\n   *\n   * @exception ValueError In case the `layer` argument does not know its\n   * input shape.\n   * @exception ValueError In case the `layer` argument has multiple output\n   *   tensors, or is already connected somewhere else (forbidden in\n   *   `Sequential` models).\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  add(layer: Layer): void {\n    const isLayerModelInstance =\n        layer instanceof Sequential || layer instanceof LayersModel;\n    let modelLayer: LayersModel;\n    if (isLayerModelInstance) {\n      modelLayer = layer as LayersModel;\n      if (modelLayer.outputs.length !== 1) {\n        throw new ValueError(\n            'All layers in a Sequential model ' +\n            'should have a single output tensor. ' +\n            'For multi-output layers, ' +\n            'use the functional API.');\n      }\n      if (modelLayer.inputs.length !== 1) {\n        throw new ValueError(\n            'All layers in a Sequential model ' +\n            'should have a single input tensor. ' +\n            'For multi-input layers, ' +\n            'use the functional API.');\n      }\n    }\n\n    if (this.outputs.length === 0) {\n      // first layer in model: check that it is an input layer\n      if (layer.inboundNodes.length === 0) {\n        // create an input layer\n        if (layer.batchInputShape == null) {\n          throw new ValueError(\n              'The first layer in a Sequential model must ' +\n              'get an `inputShape` or `batchInputShape` argument.');\n        }\n        // Instantiate the input layer.\n        const x = Input({\n          batchShape: layer.batchInputShape,\n          dtype: layer.dtype,\n          name: layer.name + '_input'\n        });\n        // This will build the current layer and create the node connecting\n        // the current layer to the input layer we just created.\n        layer.apply(x);\n      }\n\n      if (isLayerModelInstance) {\n        this.outputs = modelLayer.outputs;\n        this.inputs = modelLayer.inputs;\n      } else {\n        if (layer.inboundNodes.length !== 1) {\n          throw new ValueError(\n              'A layer added to a Sequential model must not already be ' +\n              `connected somewhere else. LayersModel received layer ${\n                  layer.name} ` +\n              `which has ${layer.inboundNodes.length} pre-existing inbound ` +\n              'connections.');\n        }\n\n        if (layer.inboundNodes[0].outputTensors.length !== 1) {\n          throw new ValueError(\n              'All layers in a Sequential model ' +\n              'should have a single output tensor. ' +\n              'For multi-output layers, ' +\n              'use the functional API.');\n        }\n        this.checkShape(layer);\n        this.outputs = [layer.inboundNodes[0].outputTensors[0]];\n        this.inputs = getSourceInputs(this.outputs[0]);\n      }\n\n      this.inboundNodes = [];\n      // We create an input node, which we will keep updated\n      // as we add more layers.\n      // (This call has side effects.)\n      // tslint:disable-next-line:no-unused-expression\n      new Node({\n        outboundLayer: this,\n        inboundLayers: [],\n        nodeIndices: [],\n        tensorIndices: [],\n        inputTensors: this.inputs,\n        outputTensors: this.outputs,\n        // no model-level masking for now\n        inputMasks: generic_utils.pyListRepeat(null, this.inputs.length),\n        outputMasks: [null],\n        inputShapes: this.inputs.map(x => x.shape),\n        outputShapes: this.outputs[0].shape\n      });\n    } else {\n      const outputTensor = layer.apply(this.outputs[0]);\n      if (Array.isArray(outputTensor)) {\n        throw new TypeError(\n            'All layers in a Sequential model ' +\n            'should have a single output tensor. ' +\n            'For multi-output layers, ' +\n            'use the functional API.');\n      }\n      this.checkShape(layer);\n      this.outputs = [outputTensor as SymbolicTensor];\n      // update self.inbound_nodes\n      this.inboundNodes[0].outputTensors = this.outputs;\n      this.inboundNodes[0].outputShapes = [this.outputs[0].shape];\n    }\n\n    this.layers.push(layer);\n    this.built = false;\n  }\n\n  /**\n   * Removes the last layer in the model.\n   *\n   * @exception TypeError if there are no layers in the model.\n   */\n  pop(): void {\n    if (this.layers.length === 0) {\n      throw new TypeError('There are no layers in the model.');\n    }\n\n    this.layers.pop();\n    if (this.layers.length === 0) {\n      this.outputs = [];\n      this.inboundNodes = [];\n      this.outboundNodes = [];\n    } else {\n      const lastLayerIndex = this.layers.length - 1;\n      this.layers[lastLayerIndex].outboundNodes = [];\n      this.outputs = [this.layers[lastLayerIndex].output as SymbolicTensor];\n      // update self.inbound_nodes\n      this.inboundNodes[0].outputTensors = this.outputs;\n      this.inboundNodes[0].outputShapes = [this.outputs[0].shape];\n    }\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    if (this.model == null) {\n      this.build();\n    }\n    return this.model.call(inputs, kwargs);\n  }\n\n  build(inputShape?: Shape|Shape[]) {\n    // Call `getExactlyOneShape` without using its return value,\n    // to verify that exactly one input shape is provided.\n    getExactlyOneShape(inputShape);\n\n    if (this.inputs.length === 0 || this.outputs.length === 0) {\n      throw new TypeError(\n          'Sequential model cannot be built: model is empty.' +\n          ' Add some layers first.');\n    }\n    // actually create the model\n    this.model = new LayersModel({\n      inputs: this.inputs,\n      outputs: this.outputs[0],\n      name: this.name + '_model'\n    });\n    this.model.trainable = this.trainable;\n\n    // mirror model attributes\n    this.supportsMasking = this.model.supportsMasking;\n    // TODO(michaelterry): Add caches\n    this.inputLayers = this.model.inputLayers;\n    this.inputLayersNodeIndices = this.model.inputLayersNodeIndices;\n    this.inputLayersTensorIndices = this.model.inputLayersTensorIndices;\n    this.outputLayers = this.model.outputLayers;\n    this.outputLayersNodeIndices = this.model.outputLayersNodeIndices;\n    this.outputLayersTensorIndices = this.model.outputLayersTensorIndices;\n    this.nodesByDepth = this.model.nodesByDepth;\n    this.containerNodes = this.model.containerNodes;\n    this.outputNames = this.model.outputNames;\n    this.inputNames = this.model.inputNames;\n    // TODO(michaelterry): Add feedInputNames, feedInputs, if needed.\n    // TODO(michaelterry): Add callbackModel if needed.\n    this.built = true;\n  }\n\n  countParams(): number {\n    if (!this.built) {\n      this.build();\n    }\n    return super.countParams();\n  }\n\n  /**\n   * Print a text summary of the Sequential model's layers.\n   *\n   * The summary includes\n   * - Name and type of all layers that comprise the model.\n   * - Output shape(s) of the layers\n   * - Number of weight parameters of each layer\n   * - The total number of trainable and non-trainable parameters of the\n   * model.\n   *\n   * ```js\n   * const model = tf.sequential();\n   * model.add(\n   *     tf.layers.dense({units: 100, inputShape: [10], activation: 'relu'}));\n   * model.add(tf.layers.dense({units: 1, activation: 'sigmoid'}));\n   *\n   * model.summary();\n   * ```\n   *\n   * @param lineLength Custom line length, in number of characters.\n   * @param positions Custom widths of each of the columns, as either\n   *   fractions of `lineLength` (e.g., `[0.5, 0.75, 1]`) or absolute number\n   *   of characters (e.g., `[30, 50, 65]`). Each number corresponds to\n   *   right-most (i.e., ending) position of a column.\n   * @param printFn Custom print function. Can be used to replace the default\n   *   `console.log`. For example, you can use `x => {}` to mute the printed\n   *   messages in the console.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  summary(\n      lineLength?: number, positions?: number[],\n      printFn:\n          // tslint:disable-next-line:no-any\n      (message?: any, ...optionalParams: any[]) => void = console.log) {\n    if (!this.built) {\n      this.build();\n    }\n    super.summary(lineLength, positions, printFn);\n  }\n\n  /**\n   * Sets the weights of the model.\n   *\n   * @param weights Should be a list of Tensors with shapes and types matching\n   *   the output of `model.getWeights()`.\n   */\n  setWeights(weights: Tensor[]): void {\n    if (this.model == null) {\n      this.build();\n    }\n    this.model.setWeights(weights);\n  }\n\n  /**\n   * Returns the loss value & metrics values for the model in test mode.\n   *\n   * Loss and metrics are specified during `compile()`, which needs to happen\n   * before calls to `evaluate()`.\n   *\n   * Computation is done in batches.\n   *\n   * ```js\n   * const model = tf.sequential({\n   *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]\n   * });\n   * model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});\n   * const result = model.evaluate(tf.ones([8, 10]), tf.ones([8, 1]), {\n   *   batchSize: 4,\n   * });\n   * result.print();\n   * ```\n   *\n   * @param x `tf.Tensor` of test data, or an `Array` of `tf.Tensor`s if the\n   * model has multiple inputs.\n   * @param y `tf.Tensor` of target data, or an `Array` of `tf.Tensor`s if the\n   * model has multiple outputs.\n   * @param args A `ModelEvaluateConfig`, containing optional fields.\n   *\n   * @return `Scalar` test loss (if the model has a single output and no\n   *   metrics) or `Array` of `Scalar`s (if the model has multiple outputs\n   *   and/or metrics). The attribute `model.metricsNames`\n   *   will give you the display labels for the scalar outputs.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  evaluate(\n      x: Tensor|Tensor[], y: Tensor|Tensor[],\n      args: ModelEvaluateArgs = {}): Scalar|Scalar[] {\n    if (!this.built) {\n      throw new RuntimeError(\n          'The model needs to be compiled before being used.');\n    }\n    return this.model.evaluate(x, y, args);\n  }\n\n  // TODO(cais): Add code snippet below once real dataset objects are\n  //   available.\n  /**\n   * Evaluate model using a dataset object.\n   *\n   * Note: Unlike `evaluate()`, this method is asynchronous (`async`);\n   *\n   * @param dataset A dataset object. Its `iterator()` method is expected\n   *   to generate a dataset iterator object, the `next()` method of which\n   *   is expected to produce data batches for evaluation. The return value\n   *   of the `next()` call ought to contain a boolean `done` field and a\n   *   `value` field. The `value` field is expected to be an array of two\n   *   `tf.Tensor`s or an array of two nested `tf.Tensor` structures. The former\n   *   case is for models with exactly one input and one output (e.g..\n   *   a sequential model). The latter case is for models with multiple\n   *   inputs and/or multiple outputs. Of the two items in the array, the\n   *   first is the input feature(s) and the second is the output target(s).\n   * @param args A configuration object for the dataset-based evaluation.\n   * @returns Loss and metric values as an Array of `Scalar` objects.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  async evaluateDataset(dataset: Dataset<{}>, args: ModelEvaluateDatasetArgs):\n      Promise<Scalar|Scalar[]> {\n    if (!this.built) {\n      throw new RuntimeError(\n          'The model needs to be compiled before being used.');\n    }\n    return this.model.evaluateDataset(dataset, args);\n  }\n\n  /**\n   * Generates output predictions for the input samples.\n   *\n   * Computation is done in batches.\n   *\n   * Note: the \"step\" mode of predict() is currently not supported.\n   *   This is because the TensorFlow.js core backend is imperative only.\n   *\n   * ```js\n   * const model = tf.sequential({\n   *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]\n   * });\n   * model.predict(tf.ones([2, 10])).print();\n   * ```\n   *\n   * @param x The input data, as a Tensor, or an `Array` of `tf.Tensor`s if\n   *   the model has multiple inputs.\n   * @param conifg A `ModelPredictConfig` object containing optional fields.\n   *\n   * @return `tf.Tensor`(s) of predictions.\n   *\n   * @exception ValueError In case of mismatch between the provided input data\n   *   and the model's expectations, or in case a stateful model receives a\n   *   number of samples that is not a multiple of the batch size.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  predict(x: Tensor|Tensor[], args: ModelPredictArgs = {}): Tensor|Tensor[] {\n    if (this.model == null) {\n      this.build();\n    }\n    return this.model.predict(x, args);\n  }\n\n  /**\n   * Returns predictions for a single batch of samples.\n   *\n   * @param x: Input samples, as a Tensor, or list of Tensors (if the model\n   *   has multiple inputs).\n   * @return Tensor(s) of predictions\n   */\n  predictOnBatch(x: Tensor): Tensor|Tensor[] {\n    if (this.model == null) {\n      this.build();\n    }\n    return this.model.predictOnBatch(x);\n  }\n\n  /**\n   * See `LayersModel.compile`.\n   *\n   * @param args\n   */\n  compile(args: ModelCompileArgs): void {\n    this.build();\n    this.model.compile(args);\n    this.optimizer_ = this.model.optimizer;\n    // tslint:disable-next-line:no-any\n    this.isOptimizerOwned = (this.model as any).isOptimizerOwned;\n    this.loss = this.model.loss;\n    this.metrics = this.model.metrics;\n    // TODO(cais): Add this.lossWeights, this.sampleWeightMode,\n    //   this.weightedMetrics, this.targets.\n    this.metricsTensors = this.model.metricsTensors;\n    this.metricsNames = this.model.metricsNames;\n    // TODO(cais): Add sampleWeights.\n  }\n\n  get optimizer(): Optimizer {\n    return this.model == null ? undefined : this.model.optimizer;\n  }\n\n  set optimizer(optimizer: Optimizer) {\n    this.model.optimizer = optimizer;\n  }\n\n  /**\n   * Trains the model for a fixed number of epochs (iterations on a dataset).\n   *\n   * ```js\n   * const model = tf.sequential({\n   *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]\n   * });\n   * model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});\n   * const history = await model.fit(tf.ones([8, 10]), tf.ones([8, 1]), {\n   *   batchSize: 4,\n   *   epochs: 3\n   * });\n   * console.log(history.history.loss[0]);\n   * ```\n   *\n   * @param x `tf.Tensor` of training data, or an array of `tf.Tensor`s if the\n   * model has multiple inputs. If all inputs in the model are named, you can\n   * also pass a dictionary mapping input names to `tf.Tensor`s.\n   * @param y `tf.Tensor` of target (label) data, or an array of `tf.Tensor`s if\n   * the model has multiple outputs. If all outputs in the model are named, you\n   *  can also pass a dictionary mapping output names to `tf.Tensor`s.\n   * @param args  A `ModelFitConfig`, containing optional fields.\n   *\n   * @return A `History` instance. Its `history` attribute contains all\n   *   information collected during training.\n   *\n   * @exception ValueError In case of mismatch between the provided input data\n   *   and what the model expects.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  async fit(\n      x: Tensor|Tensor[]|{[inputName: string]: Tensor},\n      y: Tensor|Tensor[]|{[inputName: string]: Tensor},\n      args: ModelFitArgs = {}): Promise<History> {\n    if (!this.built) {\n      throw new RuntimeError(\n          'The model needs to be compiled before ' +\n          'being used.');\n    }\n    return this.model.fit(x, y, args);\n  }\n\n  /**\n   * Trains the model using a dataset object.\n   *\n   * ```js\n   * const xArray = [\n   *   [1, 1, 1, 1, 1, 1, 1, 1, 1],\n   *   [1, 1, 1, 1, 1, 1, 1, 1, 1],\n   *   [1, 1, 1, 1, 1, 1, 1, 1, 1],\n   *   [1, 1, 1, 1, 1, 1, 1, 1, 1],\n   * ];\n   * const yArray = [1, 1, 1, 1];\n   * // Create a dataset from the JavaScript array.\n   * const xDataset = tf.data.array(xArray);\n   * const yDataset = tf.data.array(yArray);\n   * // Zip combines the `x` and `y` Datasets into a single Dataset, the\n   * // iterator of which will return an object containing of two tensors,\n   * // corresponding to `x` and `y`.  The call to `batch(4)` will bundle\n   * // four such samples into a single object, with the same keys now pointing\n   * // to tensors that hold 4 examples, organized along the batch dimension.\n   * // The call to `shuffle(4)` causes each iteration through the dataset to\n   * // happen in a different order.  The size of the shuffle window is 4.\n   * const xyDataset = tf.data.zip({xs: xDataset, ys: yDataset})\n   *     .batch(4)\n   *     .shuffle(4);\n   * const model = tf.sequential({\n   *   layers: [tf.layers.dense({units: 1, inputShape: [9]})]\n   * });\n   * model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});\n   * const history = await model.fitDataset(xyDataset, {\n   *   epochs: 4,\n   *   callbacks: {onEpochEnd: (epoch, logs) => console.log(logs.loss)}\n   * });\n   * ```\n   *\n   * @param dataset A dataset object. Its `iterator()` method is expected to\n   *   generate a dataset iterator object, the `next()` method of which is\n   *   expected to produce data batches for evaluation. The return value of the\n   *   `next()` call ought to contain a boolean `done` field and a `value`\n   *   field.\n   *\n   *   The `value` field is expected to be an object of with fields\n   *   `xs` and `ys`, which point to the feature tensor and the target tensor,\n   *   respectively. This case is for models with exactly one input and one\n   *   output (e.g.. a sequential model). For example:\n   *   ```js\n   *   {value: {xs: xsTensor, ys: ysTensor}, done: false}\n   *   ```\n   *\n   *   If the model has multiple inputs, the `xs` field of `value` should\n   *   be an object mapping input names to their respective feature tensors.\n   *   For example:\n   *   ```js\n   *   {\n   *     value: {\n   *       xs: {\n   *         input_1: xsTensor1,\n   *         input_2: xsTensor2\n   *       },\n   *       ys: ysTensor\n   *     },\n   *     done: false\n   *   }\n   *   ```\n   *   If the model has multiple outputs, the `ys` field of `value` should\n   *   be an object mapping output names to their respective target tensors.\n   *   For example:\n   *   ```js\n   *   {\n   *     value: {\n   *       xs: xsTensor,\n   *       ys: {\n   *         output_1: ysTensor1,\n   *         output_2: ysTensor2\n   *       },\n   *     },\n   *     done: false\n   *   }\n   *   ```\n   * @param args A `ModelFitDatasetArgs`, containing optional fields.\n   *\n   * @return A `History` instance. Its `history` attribute contains all\n   *   information collected during training.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}\n   */\n  async fitDataset<T>(dataset: Dataset<T>, args: ModelFitDatasetArgs<T>):\n      Promise<History> {\n    if (!this.built) {\n      throw new RuntimeError(\n          'The model needs to be compiled before ' +\n          'being used.');\n    }\n    return this.model.fitDataset(dataset, args);\n  }\n\n  /**\n   * Runs a single gradient update on a single batch of data.\n   *\n   * This method differs from `fit()` and `fitDataset()` in the following\n   * regards:\n   *   - It operates on exactly one batch of data.\n   *   - It returns only the loss and matric values, instead of\n   *     returning the batch-by-batch loss and metric values.\n   *   - It doesn't support fine-grained options such as verbosity and\n   *     callbacks.\n   *\n   * @param x Input data. It could be one of the following:\n   *   - A `tf.Tensor`, or an Array of `tf.Tensor`s (in case the model has\n   *     multiple inputs).\n   *   - An Object mapping input names to corresponding `tf.Tensor` (if the\n   *     model has named inputs).\n   * @param y Target darta. It could be either a `tf.Tensor` a multiple\n   *   `tf.Tensor`s. It should be consistent with `x`.\n   * @returns Training loss or losses (in case the model has\n   *   multiple outputs), along with metrics (if any), as numbers.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  async trainOnBatch(\n      x: Tensor|Tensor[]|{[inputName: string]: Tensor},\n      y: Tensor|Tensor[]|\n      {[inputName: string]: Tensor}): Promise<number|number[]> {\n    return this.model.trainOnBatch(x, y);\n  }\n\n  /* See parent class for JsDoc */\n  /** @nocollapse */\n  static fromConfig<T extends serialization.Serializable>(\n      cls: serialization.SerializableConstructor<T>,\n      config: serialization.ConfigDict,\n      customObjects = {} as serialization.ConfigDict,\n      fastWeightInit = false): T {\n    let configArray: serialization.ConfigDictArray;\n    let extraModelConfig: serialization.ConfigDict = {};\n    if (config instanceof Array) {\n      if (!(config[0].className != null) ||\n          config[0]['className'] === 'Merge') {\n        throw new ValueError('Legacy serialization format not supported yet.');\n      }\n      configArray = config;\n    } else {\n      util.assert(\n          config['layers'] != null,\n          () =>\n              `When the config data for a Sequential model is not an Array, ` +\n              `it must be an Object that contains the 'layers' field.`);\n      configArray = config['layers'] as serialization.ConfigDictArray;\n      delete config['layers'];\n      extraModelConfig = config;\n    }\n\n    const model = new cls(extraModelConfig);\n    if (!(model instanceof Sequential)) {\n      throw new NotImplementedError(\n          `Sequential.fromConfig called on non-Sequential input: ${model}`);\n    }\n    for (const conf of configArray) {\n      const customObjects: serialization.ConfigDict = undefined;\n      const layer = deserialize(\n                        conf as serialization.ConfigDict, customObjects,\n                        fastWeightInit) as Layer;\n      if (fastWeightInit) {\n        layer.setFastWeightInitDuringBuild(true);\n      }\n      model.add(layer);\n    }\n    return model;\n  }\n\n  /**\n   * Setter used for force stopping of LayersModel.fit() (i.e., training).\n   *\n   * Example:\n   *\n   * ```js\n   * const model = tf.sequential();\n   * model.add(tf.layers.dense({units: 1, inputShape: [10]}));\n   * model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});\n   * const xs = tf.ones([8, 10]);\n   * const ys = tf.zeros([8, 1]);\n   *\n   * const history = await model.fit(xs, ys, {\n   *   epochs: 10,\n   *   callbacks: {\n   *     onEpochEnd: async (epoch, logs) => {\n   *       if (epoch === 2) {\n   *         model.stopTraining = true;\n   *       }\n   *     }\n   *   }\n   * });\n   *\n   * // There should be only 3 values in the loss array, instead of 10 values,\n   * // due to the stopping after 3 epochs.\n   * console.log(history.history.loss);\n   * ```\n   */\n  set stopTraining(stop: boolean) {\n    // TODO(cais): When refactoring to remove the composition pattern happens,\n    // remove this method overriding.\n    if (this.model == null) {\n      throw new ValueError(\n          'Cannot set the stopTraining property of a sequential model before ' +\n          'it is compiled.');\n    }\n    this.model.stopTraining = stop;\n  }\n\n  get stopTraining(): boolean {\n    if (this.model == null) {\n      throw new ValueError(\n          'Cannot get the stopTraining property of a sequential model before ' +\n          'it is compiled.');\n    }\n    return this.model.stopTraining;\n  }\n\n  // TODO(cais): Override get trainableWeights() here\n\n  // tslint:disable-next-line:no-any\n  getConfig(): any {\n    // NOTE(cais): We override the return type of getConfig() to `any` here,\n    //   because the `Sequential` class is a special case among `Container`\n    //   subtypes in that its getConfig() method returns an Array (not a\n    //   dict).\n    const layers: serialization.ConfigDict[] = [];\n    for (const layer of this.layers) {\n      const dict: serialization.ConfigDict = {};\n      dict['className'] = layer.getClassName();\n      dict['config'] = layer.getConfig();\n      layers.push(dict);\n    }\n    return {name: this.name, layers};\n  }\n}\nserialization.registerClass(Sequential);\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n *  Advanced activation layers.\n */\n\nimport {cast, clipByValue, elu, greater, leakyRelu, mul, prelu, relu, serialization, Tensor} from '@tensorflow/tfjs-core';\n\nimport {Softmax as softmaxActivation} from '../activations';\nimport {Constraint, getConstraint, serializeConstraint} from '../constraints';\nimport {InputSpec, Layer, LayerArgs} from '../engine/topology';\nimport {NotImplementedError, ValueError} from '../errors';\nimport {getInitializer, Initializer, InitializerIdentifier, serializeInitializer} from '../initializers';\nimport {Shape} from '../keras_format/common';\nimport {getRegularizer, Regularizer, serializeRegularizer} from '../regularizers';\nimport {Kwargs} from '../types';\nimport {getExactlyOneShape, getExactlyOneTensor} from '../utils/types_utils';\nimport {LayerVariable} from '../variables';\n\nexport declare interface ReLULayerArgs extends LayerArgs {\n  /**\n   * Float, the maximum output value.\n   */\n  maxValue?: number;\n}\n\nexport class ReLU extends Layer {\n  /** @nocollapse */\n  static className = 'ReLU';\n  maxValue: number;\n\n  constructor(args?: ReLULayerArgs) {\n    super(args == null ? {} : args);\n    this.supportsMasking = true;\n    if (args != null) {\n      this.maxValue = args.maxValue;\n    }\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    inputs = getExactlyOneTensor(inputs);\n    let output = relu(inputs);\n    if (this.maxValue != null) {\n      output = clipByValue(output, 0, this.maxValue);\n    }\n    return output;\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    return inputShape;\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {maxValue: this.maxValue};\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(ReLU);\n\nexport declare interface LeakyReLULayerArgs extends LayerArgs {\n  /**\n   * Float `>= 0`. Negative slope coefficient. Defaults to `0.3`.\n   */\n  alpha?: number;\n}\n\nexport class LeakyReLU extends Layer {\n  /** @nocollapse */\n  static className = 'LeakyReLU';\n  readonly alpha: number;\n\n  readonly DEFAULT_ALPHA = 0.3;\n\n  constructor(args?: LeakyReLULayerArgs) {\n    super(args == null ? {} : args);\n    if (args == null) {\n      args = {};\n    }\n    this.alpha = args.alpha == null ? this.DEFAULT_ALPHA : args.alpha;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    const x = getExactlyOneTensor(inputs);\n    return leakyRelu(x, this.alpha);\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    return inputShape;\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {alpha: this.alpha};\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(LeakyReLU);\n\nexport declare interface PReLULayerArgs extends LayerArgs {\n  /**\n   * Initializer for the learnable alpha.\n   */\n  alphaInitializer?: Initializer|InitializerIdentifier;\n\n  /**\n   * Regularizer for the learnable alpha.\n   */\n  alphaRegularizer?: Regularizer;\n\n  /**\n   * Constraint for the learnable alpha.\n   */\n  alphaConstraint?: Constraint;\n\n  /**\n   * The axes along which to share learnable parameters for the activation\n   * function. For example, if the incoming feature maps are from a 2D\n   * convolution with output shape `[numExamples, height, width, channels]`,\n   * and you wish to share parameters across space (height and width) so that\n   * each filter channels has only one set of parameters, set\n   * `shared_axes: [1, 2]`.\n   */\n  sharedAxes?: number|number[];\n}\n\nexport class PReLU extends Layer {\n  /** @nocollapse */\n  static className = 'PReLU';\n  private readonly alphaInitializer: Initializer;\n  private readonly alphaRegularizer: Regularizer;\n  private readonly alphaConstraint: Constraint;\n  private readonly sharedAxes: number[];\n  private alpha: LayerVariable;\n\n  readonly DEFAULT_ALPHA_INITIALIZER: InitializerIdentifier = 'zeros';\n\n  constructor(args?: PReLULayerArgs) {\n    super(args == null ? {} : args);\n    if (args == null) {\n      args = {};\n    }\n\n    this.supportsMasking = true;\n    this.alphaInitializer =\n        getInitializer(args.alphaInitializer || this.DEFAULT_ALPHA_INITIALIZER);\n    this.alphaRegularizer = getRegularizer(args.alphaRegularizer);\n    this.alphaConstraint = getConstraint(args.alphaConstraint);\n    if (args.sharedAxes == null) {\n      this.sharedAxes = null;\n    } else if (Array.isArray(args.sharedAxes)) {\n      this.sharedAxes = args.sharedAxes;\n    } else if (typeof args.sharedAxes === 'number') {\n      this.sharedAxes = [args.sharedAxes];\n    } else {\n      throw new ValueError(\n          `Expected sharedAxes to be a number or an array of numbers, ` +\n          `but got ${args.sharedAxes}`);\n    }\n  }\n\n  build(inputShape: Shape|Shape[]) {\n    inputShape = getExactlyOneShape(inputShape);\n    const paramShape: Shape = inputShape.slice(1);\n    if (this.sharedAxes != null) {\n      for (const i of this.sharedAxes) {\n        paramShape[i - 1] = 1;\n      }\n    }\n    this.alpha = this.addWeight(\n        'alpha', paramShape, 'float32', this.alphaInitializer,\n        this.alphaRegularizer, true, this.alphaConstraint);\n    // Set input spec.\n    const axes: {[axis: number]: number} = {};\n    if (this.sharedAxes != null) {\n      for (let i = 1; i < inputShape.length; ++i) {\n        axes[i] = inputShape[i];\n      }\n    }\n    this.inputSpec = [new InputSpec({\n      ndim: inputShape.length,\n      axes,\n    })];\n    this.built = true;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    inputs = getExactlyOneTensor(inputs);\n    return prelu(inputs, this.alpha.read());\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {\n      alphaInitializer: serializeInitializer(this.alphaInitializer),\n      alphaRegularizer: serializeRegularizer(this.alphaRegularizer),\n      alphaConstraint: serializeConstraint(this.alphaConstraint),\n      sharedAxes: this.sharedAxes\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(PReLU);\n\nexport declare interface ELULayerArgs extends LayerArgs {\n  /**\n   * Float `>= 0`. Negative slope coefficient. Defaults to `1.0`.\n   */\n  alpha?: number;\n}\n\nexport class ELU extends Layer {\n  /** @nocollapse */\n  static className = 'ELU';\n  readonly alpha: number;\n\n  readonly DEFAULT_ALPHA = 1.0;\n\n  constructor(args?: ELULayerArgs) {\n    super(args == null ? {} : args);\n    if (args == null) {\n      args = {};\n    }\n\n    if (args.alpha != null && args.alpha !== this.DEFAULT_ALPHA) {\n      throw new NotImplementedError(\n          `Non-default alpha value (${args.alpha}) is not supported by the ` +\n          `ELU layer yet.`);\n    }\n\n    this.alpha = args.alpha == null ? this.DEFAULT_ALPHA : args.alpha;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    const x = getExactlyOneTensor(inputs);\n    return elu(x);\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    return inputShape;\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {alpha: this.alpha};\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(ELU);\n\nexport declare interface ThresholdedReLULayerArgs extends LayerArgs {\n  /**\n   * Float >= 0. Threshold location of activation.\n   */\n  theta?: number;\n}\n\nexport class ThresholdedReLU extends Layer {\n  /** @nocollapse */\n  static className = 'ThresholdedReLU';\n  readonly theta: number;\n\n  readonly DEFAULT_THETA = 1.0;\n\n  constructor(args?: ThresholdedReLULayerArgs) {\n    super(args == null ? {} : args);\n    if (args == null) {\n      args = {};\n    }\n\n    this.theta = args.theta == null ? this.DEFAULT_THETA : args.theta;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    const x = getExactlyOneTensor(inputs);\n    return mul(x, cast(greater(x, this.theta), 'float32'));\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    return inputShape;\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {theta: this.theta};\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(ThresholdedReLU);\n\nexport declare interface SoftmaxLayerArgs extends LayerArgs {\n  /**\n   * Integer, axis along which the softmax normalization is applied.\n   * Defaults to `-1` (i.e., the last axis).\n   */\n  axis?: number;\n}\n\nexport class Softmax extends Layer {\n  /** @nocollapse */\n  static className = 'Softmax';\n  readonly axis: number;\n  readonly softmax: (t: Tensor, a?: number) => Tensor;\n  readonly DEFAULT_AXIS = 1.0;\n\n  constructor(args?: SoftmaxLayerArgs) {\n    super(args == null ? {} : args);\n    if (args == null) {\n      args = {};\n    }\n    this.softmax = new softmaxActivation().apply;\n    this.axis = args.axis == null ? this.DEFAULT_AXIS : args.axis;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    const x = getExactlyOneTensor(inputs);\n    return this.softmax(x, this.axis);\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    return inputShape;\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {axis: this.axis};\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(Softmax);\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n// Layer activation functions\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {serialization, Tensor, tidy} from '@tensorflow/tfjs-core';\nimport * as K from './backend/tfjs_backend';\nimport {ActivationIdentifier} from './keras_format/activation_config';\nimport {deserializeKerasObject} from './utils/generic_utils';\n\n/**\n * Base class for Activations.\n *\n * Special note: due to cross-language compatibility reasons, the\n * static readonly className field in this family of classes must be set to\n * the initialLowerCamelCase name of the activation.\n */\nexport abstract class Activation extends serialization.Serializable {\n  abstract apply(tensor: Tensor, axis?: number): Tensor;\n  getConfig(): serialization.ConfigDict {\n    return {};\n  }\n}\n\n/**\n * Exponential linear unit (ELU).\n * Reference: https://arxiv.org/abs/1511.07289\n */\nexport class Elu extends Activation {\n  /** @nocollapse */\n  static readonly className = 'elu';\n  /**\n   * Calculate the activation function.\n   *\n   * @param x: Input.\n   * @param alpha: Scaling factor the negative section.\n   * @return Output of the ELU activation.\n   */\n  apply(x: Tensor, alpha = 1): Tensor {\n    return K.elu(x, alpha);\n  }\n}\nserialization.registerClass(Elu);\n\n/**\n * Scaled Exponential Linear Unit. (Klambauer et al., 2017).\n * Reference: Self-Normalizing Neural Networks, https://arxiv.org/abs/1706.02515\n * Notes:\n *   - To be used together with the initialization \"lecunNormal\".\n *   - To be used together with the dropout variant \"AlphaDropout\".\n */\nexport class Selu extends Activation {\n  /** @nocollapse */\n  static readonly className = 'selu';\n  apply(x: Tensor): Tensor {\n    return tfc.selu(x);\n  }\n}\nserialization.registerClass(Selu);\n\n/**\n *  Rectified linear unit\n */\nexport class Relu extends Activation {\n  /** @nocollapse */\n  static readonly className = 'relu';\n  apply(x: Tensor): Tensor {\n    return tfc.relu(x);\n  }\n}\nserialization.registerClass(Relu);\n\n/**\n * Rectified linear unit activation maxing out at 6.0.\n */\nexport class Relu6 extends Activation {\n  /** @nocollapse */\n  static readonly className = 'relu6';\n  apply(x: Tensor): Tensor {\n    return tidy(() => tfc.minimum(6.0, tfc.relu(x)));\n  }\n}\nserialization.registerClass(Relu6);\n\n//* Linear activation (no-op) */\nexport class Linear extends Activation {\n  /** @nocollapse */\n  static readonly className = 'linear';\n  apply(x: Tensor): Tensor {\n    return x;\n  }\n}\nserialization.registerClass(Linear);\n\n/**\n * Sigmoid activation function.\n */\nexport class Sigmoid extends Activation {\n  /** @nocollapse */\n  static readonly className = 'sigmoid';\n  apply(x: Tensor): Tensor {\n    return tfc.sigmoid(x);\n  }\n}\nserialization.registerClass(Sigmoid);\n\n/**\n * Segment-wise linear approximation of sigmoid.\n */\nexport class HardSigmoid extends Activation {\n  /** @nocollapse */\n  static readonly className = 'hardSigmoid';\n  apply(x: Tensor): Tensor {\n    return K.hardSigmoid(x);\n  }\n}\nserialization.registerClass(HardSigmoid);\n\n/**\n * Softplus activation function.\n */\nexport class Softplus extends Activation {\n  /** @nocollapse */\n  static readonly className = 'softplus';\n  apply(x: Tensor): Tensor {\n    return tfc.softplus(x);\n  }\n}\nserialization.registerClass(Softplus);\n\n/**\n * Softsign activation function.\n */\nexport class Softsign extends Activation {\n  /** @nocollapse */\n  static readonly className = 'softsign';\n  apply(x: Tensor): Tensor {\n    return K.softsign(x);\n  }\n}\nserialization.registerClass(Softsign);\n\n/**\n * Hyperbolic tangent function.\n */\nexport class Tanh extends Activation {\n  /** @nocollapse */\n  static readonly className = 'tanh';\n  apply(x: Tensor): Tensor {\n    return tfc.tanh(x);\n  }\n}\nserialization.registerClass(Tanh);\n\n/**\n * Softmax activation function\n */\nexport class Softmax extends Activation {\n  /** @nocollapse */\n  static readonly className = 'softmax';\n  /**\n   * Calculate the activation function.\n   *\n   * @param x Tensor.\n   * @param axis Integer, axis along which the softmax normalization is applied.\n   * Invalid if < 2, as softmax across 1 (the batch dimension) is assumed to be\n   * an error.\n   *\n   * @returns a Tensor of the same shape as x\n   *\n   * @throws ValueError: In case `dim(x) < 2`.\n   */\n  apply(x: Tensor, axis: number = (-1)): Tensor {\n    return tfc.softmax(x, axis);\n  }\n}\nserialization.registerClass(Softmax);\n\n/**\n * Log softmax activation function\n */\nexport class LogSoftmax extends Activation {\n  /** @nocollapse */\n  static readonly className = 'logSoftmax';\n  /**\n   * Calculate the activation function of log softmax:\n   * log( exp(x_i) / sum(exp(x)) )\n   *\n   * @param x Tensor.\n   * @param axis Integer, axis along which the softmax normalization is applied.\n   * Invalid if < 2, as softmax across 1 (the batch dimension) is assumed to be\n   * an error.\n   *\n   * @returns a Tensor of the same shape as x\n   *\n   * @throws ValueError: In case `dim(x) < 2`.\n   */\n  apply(x: Tensor, axis: number = (-1)): Tensor {\n    return tfc.logSoftmax(x, axis);\n  }\n}\nserialization.registerClass(LogSoftmax);\n\n/**\n * Swish activation function\n */\nexport class Swish extends Activation {\n  /** @nocollapse */\n  static readonly className = 'swish';\n  /**\n   * Calculate the activation function.\n   *\n   * @param x Tensor.\n   * @param alpha Scaling factor for the sigmoid function.\n   * @returns a Tensor of the same shape as x\n   */\n  apply(x: Tensor, alpha = 1): Tensor {\n    return tidy(() => tfc.mul(tfc.sigmoid(tfc.mul(x, alpha)), x));\n  }\n}\nserialization.registerClass(Swish);\n\n/**\n * Mish activation function\n */\nexport class Mish extends Activation {\n  /** @nocollapse */\n  static readonly className = 'mish';\n  /**\n   * Calculate the activation function.\n   *\n   * @param x Tensor.\n   * @returns a Tensor of the same shape as x\n   */\n  apply(x: Tensor): Tensor {\n    return tidy(() => tfc.mul(x, tfc.tanh(tfc.softplus(x))));\n  }\n}\nserialization.registerClass(Mish);\n\nexport function serializeActivation(activation: Activation): string {\n  return activation.getClassName();\n}\n\nexport function deserializeActivation(\n    config: serialization.ConfigDict,\n    customObjects: serialization.ConfigDict = {}): Activation {\n  return deserializeKerasObject(\n      config, serialization.SerializationMap.getMap().classNameMap,\n      customObjects, 'activation');\n}\n\nexport function getActivation(identifier: ActivationIdentifier|\n                              serialization.ConfigDict|Activation): Activation {\n  if (identifier == null) {\n    const config: serialization.ConfigDict = {};\n    config['className'] = 'linear';\n    config['config'] = {};\n    return deserializeActivation(config);\n  }\n  if (typeof identifier === 'string') {\n    const config: serialization.ConfigDict = {};\n    config['className'] = identifier;\n    config['config'] = {};\n    return deserializeActivation(config);\n  } else if (identifier instanceof Activation) {\n    return identifier;\n  } else {\n    return deserializeActivation(identifier);\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* original source: keras/regularizers.py */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {abs, add, Scalar, serialization, sum, Tensor, tidy, zeros} from '@tensorflow/tfjs-core';\nimport * as K from './backend/tfjs_backend';\nimport {deserializeKerasObject, serializeKerasObject} from './utils/generic_utils';\n\nfunction assertObjectArgs(args: L1Args|L2Args|L1L2Args): void {\n  if (args != null && typeof args !== 'object') {\n    throw new Error(\n        `Argument to L1L2 regularizer's constructor is expected to be an ` +\n        `object, but received: ${args}`);\n  }\n}\n\n/**\n * Regularizer base class.\n */\nexport abstract class Regularizer extends serialization.Serializable {\n  abstract apply(x: Tensor): Scalar;\n}\n\nexport interface L1L2Args {\n  /** L1 regularization rate. Defaults to 0.01. */\n  l1?: number;\n  /** L2 regularization rate. Defaults to 0.01. */\n  l2?: number;\n}\n\nexport interface L1Args {\n  /** L1 regularization rate. Defaults to 0.01. */\n  l1: number;\n}\n\nexport interface L2Args {\n  /** L2 regularization rate. Defaults to 0.01. */\n  l2: number;\n}\n\nexport class L1L2 extends Regularizer {\n  /** @nocollapse */\n  static className = 'L1L2';\n\n  private readonly l1: number;\n  private readonly l2: number;\n  private readonly hasL1: boolean;\n  private readonly hasL2: boolean;\n  constructor(args?: L1L2Args) {\n    super();\n\n    assertObjectArgs(args);\n\n    this.l1 = args == null || args.l1 == null ? 0.01 : args.l1;\n    this.l2 = args == null || args.l2 == null ? 0.01 : args.l2;\n    this.hasL1 = this.l1 !== 0;\n    this.hasL2 = this.l2 !== 0;\n  }\n\n  /**\n   * Porting note: Renamed from __call__.\n   * @param x Variable of which to calculate the regularization score.\n   */\n  apply(x: Tensor): Scalar {\n    return tidy(() => {\n      let regularization: Tensor = zeros([1]);\n      if (this.hasL1) {\n        regularization = add(regularization, sum(tfc.mul(this.l1, abs(x))));\n      }\n      if (this.hasL2) {\n        regularization =\n            add(regularization, sum(tfc.mul(this.l2, K.square(x))));\n      }\n      return tfc.reshape(regularization, []);\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    return {'l1': this.l1, 'l2': this.l2};\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends serialization.Serializable>(\n      cls: serialization.SerializableConstructor<T>,\n      config: serialization.ConfigDict): T {\n    return new cls({l1: config['l1'] as number, l2: config['l2'] as number});\n  }\n}\nserialization.registerClass(L1L2);\n\nexport function l1(args?: L1Args) {\n  assertObjectArgs(args);\n  return new L1L2({l1: args != null ? args.l1 : null, l2: 0});\n}\n\nexport function l2(args: L2Args) {\n  assertObjectArgs(args);\n  return new L1L2({l2: args != null ? args.l2 : null, l1: 0});\n}\n\n/** @docinline */\nexport type RegularizerIdentifier = 'l1l2'|string;\n\n// Maps the JavaScript-like identifier keys to the corresponding keras symbols.\nexport const REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP:\n    {[identifier in RegularizerIdentifier]: string} = {\n      'l1l2': 'L1L2'\n    };\n\nexport function serializeRegularizer(constraint: Regularizer):\n    serialization.ConfigDictValue {\n  return serializeKerasObject(constraint);\n}\n\nexport function deserializeRegularizer(\n    config: serialization.ConfigDict,\n    customObjects: serialization.ConfigDict = {}): Regularizer {\n  return deserializeKerasObject(\n      config, serialization.SerializationMap.getMap().classNameMap,\n      customObjects, 'regularizer');\n}\n\nexport function getRegularizer(identifier: RegularizerIdentifier|\n                               serialization.ConfigDict|\n                               Regularizer): Regularizer {\n  if (identifier == null) {\n    return null;\n  }\n  if (typeof identifier === 'string') {\n    const className = identifier in REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP ?\n        REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] :\n        identifier;\n    const config = {className, config: {}};\n    return deserializeRegularizer(config);\n  } else if (identifier instanceof Regularizer) {\n    return identifier;\n  } else {\n    return deserializeRegularizer(identifier);\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * TensorFlow.js Layers: Convolutional Layers\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {fused, serialization, Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D, Tensor5D, tidy} from '@tensorflow/tfjs-core';\n\nimport {Activation, getActivation, serializeActivation} from '../activations';\nimport {imageDataFormat} from '../backend/common';\nimport * as K from '../backend/tfjs_backend';\nimport {checkDataFormat, checkInterpolationFormat, checkPaddingMode} from '../common';\nimport {Constraint, ConstraintIdentifier, getConstraint, serializeConstraint} from '../constraints';\nimport {InputSpec, Layer, LayerArgs} from '../engine/topology';\nimport {NotImplementedError, ValueError} from '../errors';\nimport {getInitializer, Initializer, InitializerIdentifier, serializeInitializer} from '../initializers';\nimport {ActivationIdentifier} from '../keras_format/activation_config';\nimport {DataFormat, InterpolationFormat, PaddingMode, Shape} from '../keras_format/common';\nimport {getRegularizer, Regularizer, RegularizerIdentifier, serializeRegularizer} from '../regularizers';\nimport {Kwargs} from '../types';\nimport {convOutputLength, deconvLength, normalizeArray} from '../utils/conv_utils';\nimport * as generic_utils from '../utils/generic_utils';\nimport {getExactlyOneShape, getExactlyOneTensor} from '../utils/types_utils';\nimport {LayerVariable} from '../variables';\n\n/**\n * Transpose and cast the input before the conv2d.\n * @param x Input image tensor.\n * @param dataFormat\n */\nexport function preprocessConv2DInput(\n    x: Tensor, dataFormat: DataFormat): Tensor {\n  // TODO(cais): Cast type to float32 if not.\n  return tidy(() => {\n    checkDataFormat(dataFormat);\n    if (dataFormat === 'channelsFirst') {\n      return tfc.transpose(x, [0, 2, 3, 1]);  // NCHW -> NHWC.\n    } else {\n      return x;\n    }\n  });\n}\n\n/**\n * Transpose and cast the input before the conv3d.\n * @param x Input image tensor.\n * @param dataFormat\n */\nexport function preprocessConv3DInput(\n    x: Tensor, dataFormat: DataFormat): Tensor {\n  return tidy(() => {\n    checkDataFormat(dataFormat);\n    if (dataFormat === 'channelsFirst') {\n      return tfc.transpose(x, [0, 2, 3, 4, 1]);  // NCDHW -> NDHWC.\n    } else {\n      return x;\n    }\n  });\n}\n\n/**\n * 1D-convolution with bias added.\n *\n * Porting Note: This function does not exist in the Python Keras backend.\n *   It is exactly the same as `conv2d`, except the added `bias`.\n *\n * @param x Input tensor, rank-3, of shape `[batchSize, width, inChannels]`.\n * @param kernel Kernel, rank-3, of shape `[filterWidth, inDepth, outDepth]`.\n * @param bias Bias, rank-3, of shape `[outDepth]`.\n * @param strides\n * @param padding Padding mode.\n * @param dataFormat Data format.\n * @param dilationRate\n * @returns The result of the 1D convolution.\n * @throws ValueError, if `x`, `kernel` or `bias` is not of the correct rank.\n */\nexport function conv1dWithBias(\n    x: Tensor, kernel: Tensor, bias: Tensor, strides = 1, padding = 'valid',\n    dataFormat?: DataFormat, dilationRate = 1): Tensor {\n  return tidy(() => {\n    if (dataFormat == null) {\n      dataFormat = imageDataFormat();\n    }\n    checkDataFormat(dataFormat);\n    // Check the ranks of x, kernel and bias.\n    if (x.shape.length !== 3) {\n      throw new ValueError(\n          `The input of a conv1dWithBias operation should be 3, but is ` +\n          `${x.shape.length} instead.`);\n    }\n    if (kernel.shape.length !== 3) {\n      throw new ValueError(\n          `The kernel for a conv1dWithBias operation should be 3, but is ` +\n          `${kernel.shape.length} instead`);\n    }\n    if (bias != null && bias.shape.length !== 1) {\n      throw new ValueError(\n          `The bias for a conv1dWithBias operation should be 1, but is ` +\n          `${kernel.shape.length} instead`);\n    }\n    // TODO(cais): Support CAUSAL padding mode.\n    if (dataFormat === 'channelsFirst') {\n      x = tfc.transpose(x, [0, 2, 1]);  // NCW -> NWC.\n    }\n    if (padding === 'causal') {\n      throw new NotImplementedError(\n          'The support for CAUSAL padding mode in conv1dWithBias is not ' +\n          'implemented yet.');\n    }\n    let y: Tensor = tfc.conv1d(\n        x as Tensor2D | Tensor3D, kernel as Tensor3D, strides,\n        padding === 'same' ? 'same' : 'valid', 'NWC', dilationRate);\n    if (bias != null) {\n      y = K.biasAdd(y, bias);\n    }\n    return y;\n  });\n}\n\n/**\n * 1D-convolution.\n *\n * @param x Input tensor, rank-3, of shape `[batchSize, width, inChannels]`.\n * @param kernel Kernel, rank-3, of shape `[filterWidth, inDepth, outDepth]`.s\n * @param strides\n * @param padding Padding mode.\n * @param dataFormat Data format.\n * @param dilationRate\n * @returns The result of the 1D convolution.\n * @throws ValueError, if `x`, `kernel` or `bias` is not of the correct rank.\n */\nexport function conv1d(\n    x: Tensor, kernel: Tensor, strides = 1, padding = 'valid',\n    dataFormat?: DataFormat, dilationRate = 1): Tensor {\n  return tidy(() => {\n    checkDataFormat(dataFormat);\n    return conv1dWithBias(\n        x, kernel, null, strides, padding, dataFormat, dilationRate);\n  });\n}\n\n/**\n * 2D Convolution\n * @param x\n * @param kernel kernel of the convolution.\n * @param strides strides array.\n * @param padding padding mode. Default to 'valid'.\n * @param dataFormat data format. Defaults to 'channelsLast'.\n * @param dilationRate dilation rate array.\n * @returns Result of the 2D pooling.\n */\nexport function conv2d(\n    x: Tensor, kernel: Tensor, strides = [1, 1], padding = 'valid',\n    dataFormat?: DataFormat, dilationRate?: [number, number]): Tensor {\n  return tidy(() => {\n    checkDataFormat(dataFormat);\n    return conv2dWithBiasActivation(\n        x, kernel, null, strides, padding, dataFormat, dilationRate);\n  });\n}\n\n/**\n * 2D Convolution with an added bias and optional activation.\n * Note: This function does not exist in the Python Keras Backend. This function\n * is exactly the same as `conv2d`, except the added `bias`.\n */\nexport function conv2dWithBiasActivation(\n    x: Tensor, kernel: Tensor, bias: Tensor, strides = [1, 1],\n    padding = 'valid', dataFormat?: DataFormat, dilationRate?: [number, number],\n    activation: fused.Activation = null): Tensor {\n  return tidy(() => {\n    if (dataFormat == null) {\n      dataFormat = imageDataFormat();\n    }\n    checkDataFormat(dataFormat);\n    if (x.rank !== 3 && x.rank !== 4) {\n      throw new ValueError(\n          `conv2dWithBiasActivation expects input to be of rank 3 or 4, ` +\n          `but received ${x.rank}.`);\n    }\n    if (kernel.rank !== 3 && kernel.rank !== 4) {\n      throw new ValueError(\n          `conv2dWithBiasActivation expects kernel to be of rank 3 or 4, ` +\n          `but received ${x.rank}.`);\n    }\n    let y = preprocessConv2DInput(x, dataFormat);\n    if (padding === 'causal') {\n      throw new NotImplementedError(\n          'The support for CAUSAL padding mode in conv1dWithBias is not ' +\n          'implemented yet.');\n    }\n    y = tfc.fused.conv2d({\n      x: y as Tensor3D | Tensor4D,\n      filter: kernel as Tensor4D,\n      strides: strides as [number, number],\n      pad: padding === 'same' ? 'same' : 'valid',\n      dilations: dilationRate,\n      dataFormat: 'NHWC',\n      bias,\n      activation\n    });\n    if (dataFormat === 'channelsFirst') {\n      y = tfc.transpose(y, [0, 3, 1, 2]);\n    }\n    return y;\n  });\n}\n\n/**\n * 3D Convolution.\n * @param x\n * @param kernel kernel of the convolution.\n * @param strides strides array.\n * @param padding padding mode. Default to 'valid'.\n * @param dataFormat data format. Defaults to 'channelsLast'.\n * @param dilationRate dilation rate array.\n * @returns Result of the 3D convolution.\n */\nexport function conv3d(\n    x: Tensor, kernel: Tensor, strides = [1, 1, 1], padding = 'valid',\n    dataFormat?: DataFormat, dilationRate?: [number, number, number]): Tensor {\n  return tidy(() => {\n    checkDataFormat(dataFormat);\n    return conv3dWithBias(\n        x, kernel, null, strides, padding, dataFormat, dilationRate);\n  });\n}\n\n/**\n * 3D Convolution with an added bias.\n * Note: This function does not exist in the Python Keras Backend. This function\n * is exactly the same as `conv3d`, except the added `bias`.\n */\nexport function conv3dWithBias(\n    x: Tensor, kernel: Tensor, bias: Tensor, strides = [1, 1, 1],\n    padding = 'valid', dataFormat?: DataFormat,\n    dilationRate?: [number, number, number]): Tensor {\n  return tidy(() => {\n    if (dataFormat == null) {\n      dataFormat = imageDataFormat();\n    }\n    checkDataFormat(dataFormat);\n    if (x.rank !== 4 && x.rank !== 5) {\n      throw new ValueError(\n          `conv3dWithBias expects input to be of rank 4 or 5, but received ` +\n          `${x.rank}.`);\n    }\n    if (kernel.rank !== 4 && kernel.rank !== 5) {\n      throw new ValueError(\n          `conv3dWithBias expects kernel to be of rank 4 or 5, but received ` +\n          `${x.rank}.`);\n    }\n    let y = preprocessConv3DInput(x, dataFormat);\n    if (padding === 'causal') {\n      throw new NotImplementedError(\n          'The support for CAUSAL padding mode in conv3dWithBias is not ' +\n          'implemented yet.');\n    }\n    y = tfc.conv3d(\n        y as Tensor4D | tfc.Tensor<tfc.Rank.R5>,\n        kernel as tfc.Tensor<tfc.Rank.R5>, strides as [number, number, number],\n        padding === 'same' ? 'same' : 'valid', 'NDHWC', dilationRate);\n    if (bias != null) {\n      y = K.biasAdd(y, bias as Tensor1D);\n    }\n    if (dataFormat === 'channelsFirst') {\n      y = tfc.transpose(y, [0, 4, 1, 2, 3]);\n    }\n    return y;\n  });\n}\n\n/**\n * Base LayerConfig for depthwise and non-depthwise convolutional layers.\n */\nexport declare interface BaseConvLayerArgs extends LayerArgs {\n  /**\n   * The dimensions of the convolution window. If kernelSize is a number, the\n   * convolutional window will be square.\n   */\n  kernelSize: number|number[];\n\n  /**\n   * The strides of the convolution in each dimension. If strides is a number,\n   * strides in both dimensions are equal.\n   *\n   * Specifying any stride value != 1 is incompatible with specifying any\n   * `dilationRate` value != 1.\n   */\n  strides?: number|number[];\n\n  /**\n   * Padding mode.\n   */\n  padding?: PaddingMode;\n\n  /**\n   * Format of the data, which determines the ordering of the dimensions in\n   * the inputs.\n   *\n   * `channels_last` corresponds to inputs with shape\n   *   `(batch, ..., channels)`\n   *\n   *  `channels_first` corresponds to inputs with shape `(batch, channels,\n   * ...)`.\n   *\n   * Defaults to `channels_last`.\n   */\n  dataFormat?: DataFormat;\n\n  /**\n   * The dilation rate to use for the dilated convolution in each dimension.\n   * Should be an integer or array of two or three integers.\n   *\n   * Currently, specifying any `dilationRate` value != 1 is incompatible with\n   * specifying any `strides` value != 1.\n   */\n  dilationRate?: number|[number]|[number, number]|[number, number, number];\n\n  /**\n   * Activation function of the layer.\n   *\n   * If you don't specify the activation, none is applied.\n   */\n  activation?: ActivationIdentifier;\n\n  /**\n   * Whether the layer uses a bias vector. Defaults to `true`.\n   */\n  useBias?: boolean;\n\n  /**\n   * Initializer for the convolutional kernel weights matrix.\n   */\n  kernelInitializer?: InitializerIdentifier|Initializer;\n\n  /**\n   * Initializer for the bias vector.\n   */\n  biasInitializer?: InitializerIdentifier|Initializer;\n\n  /**\n   * Constraint for the convolutional kernel weights.\n   */\n  kernelConstraint?: ConstraintIdentifier|Constraint;\n\n  /**\n   * Constraint for the bias vector.\n   */\n  biasConstraint?: ConstraintIdentifier|Constraint;\n\n  /**\n   * Regularizer function applied to the kernel weights matrix.\n   */\n  kernelRegularizer?: RegularizerIdentifier|Regularizer;\n\n  /**\n   * Regularizer function applied to the bias vector.\n   */\n  biasRegularizer?: RegularizerIdentifier|Regularizer;\n\n  /**\n   * Regularizer function applied to the activation.\n   */\n  activityRegularizer?: RegularizerIdentifier|Regularizer;\n}\n\n/**\n * LayerConfig for non-depthwise convolutional layers.\n * Applies to non-depthwise convolution of all ranks (e.g, Conv1D, Conv2D,\n * Conv3D).\n */\nexport declare interface ConvLayerArgs extends BaseConvLayerArgs {\n  /**\n   * The dimensionality of the output space (i.e. the number of filters in the\n   * convolution).\n   */\n  filters: number;\n}\n\n/**\n * Abstract convolution layer.\n */\nexport abstract class BaseConv extends Layer {\n  protected readonly rank: number;\n  protected readonly kernelSize: number[];\n  protected readonly strides: number[];\n  protected readonly padding: PaddingMode;\n  protected readonly dataFormat: DataFormat;\n  protected readonly activation: Activation;\n  protected readonly useBias: boolean;\n  protected readonly dilationRate: number[];\n\n  // Bias-related members are here because all convolution subclasses use the\n  // same configuration parmeters to control bias.  Kernel-related members\n  // are in subclass `Conv` because some subclasses use different parameters to\n  // control kernel properties, for instance, `DepthwiseConv2D` uses\n  // `depthwiseInitializer` instead of `kernelInitializer`.\n  protected readonly biasInitializer?: Initializer;\n  protected readonly biasConstraint?: Constraint;\n  protected readonly biasRegularizer?: Regularizer;\n\n  protected bias: LayerVariable = null;\n\n  readonly DEFAULT_KERNEL_INITIALIZER: InitializerIdentifier = 'glorotNormal';\n  readonly DEFAULT_BIAS_INITIALIZER: InitializerIdentifier = 'zeros';\n\n  constructor(rank: number, args: BaseConvLayerArgs) {\n    super(args as LayerArgs);\n    BaseConv.verifyArgs(args);\n    this.rank = rank;\n    generic_utils.assertPositiveInteger(this.rank, 'rank');\n    if (this.rank !== 1 && this.rank !== 2 && this.rank !== 3) {\n      throw new NotImplementedError(\n          `Convolution layer for rank other than 1, 2, or 3 (${\n              this.rank}) is ` +\n          `not implemented yet.`);\n    }\n    this.kernelSize = normalizeArray(args.kernelSize, rank, 'kernelSize');\n    this.strides = normalizeArray(\n        args.strides == null ? 1 : args.strides, rank, 'strides');\n    this.padding = args.padding == null ? 'valid' : args.padding;\n    checkPaddingMode(this.padding);\n    this.dataFormat =\n        args.dataFormat == null ? 'channelsLast' : args.dataFormat;\n    checkDataFormat(this.dataFormat);\n    this.activation = getActivation(args.activation);\n    this.useBias = args.useBias == null ? true : args.useBias;\n    this.biasInitializer =\n        getInitializer(args.biasInitializer || this.DEFAULT_BIAS_INITIALIZER);\n    this.biasConstraint = getConstraint(args.biasConstraint);\n    this.biasRegularizer = getRegularizer(args.biasRegularizer);\n    this.activityRegularizer = getRegularizer(args.activityRegularizer);\n    this.dilationRate = normalizeArray(\n        args.dilationRate == null ? 1 : args.dilationRate, rank,\n        'dilationRate');\n    if (this.rank === 1 &&\n        (Array.isArray(this.dilationRate) && this.dilationRate.length !== 1)) {\n      throw new ValueError(\n          `dilationRate must be a number or an array of a single number ` +\n          `for 1D convolution, but received ` +\n          `${JSON.stringify(this.dilationRate)}`);\n    } else if (this.rank === 2) {\n      if (typeof this.dilationRate === 'number') {\n        this.dilationRate = [this.dilationRate, this.dilationRate];\n      } else if (this.dilationRate.length !== 2) {\n        throw new ValueError(\n            `dilationRate must be a number or array of two numbers for 2D ` +\n            `convolution, but received ${JSON.stringify(this.dilationRate)}`);\n      }\n    } else if (this.rank === 3) {\n      if (typeof this.dilationRate === 'number') {\n        this.dilationRate =\n            [this.dilationRate, this.dilationRate, this.dilationRate];\n      } else if (this.dilationRate.length !== 3) {\n        throw new ValueError(\n            `dilationRate must be a number or array of three numbers for 3D ` +\n            `convolution, but received ${JSON.stringify(this.dilationRate)}`);\n      }\n    }\n  }\n\n  protected static verifyArgs(args: BaseConvLayerArgs) {\n    // Check config.kernelSize type and shape.\n    generic_utils.assert(\n        'kernelSize' in args, `required key 'kernelSize' not in config`);\n    if (typeof args.kernelSize !== 'number' &&\n        !generic_utils.checkArrayTypeAndLength(\n            args.kernelSize, 'number', 1, 3)) {\n      throw new ValueError(\n          `BaseConv expects config.kernelSize to be number or number[] with ` +\n          `length 1, 2, or 3, but received ${\n              JSON.stringify(args.kernelSize)}.`);\n    }\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {\n      kernelSize: this.kernelSize,\n      strides: this.strides,\n      padding: this.padding,\n      dataFormat: this.dataFormat,\n      dilationRate: this.dilationRate,\n      activation: serializeActivation(this.activation),\n      useBias: this.useBias,\n      biasInitializer: serializeInitializer(this.biasInitializer),\n      biasRegularizer: serializeRegularizer(this.biasRegularizer),\n      activityRegularizer: serializeRegularizer(this.activityRegularizer),\n      biasConstraint: serializeConstraint(this.biasConstraint)\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\n\n/**\n * Abstract nD convolution layer.  Ancestor of convolution layers which reduce\n * across channels, i.e., Conv1D and Conv2D, but not DepthwiseConv2D.\n */\nexport abstract class Conv extends BaseConv {\n  protected readonly filters: number;\n\n  protected kernel: LayerVariable = null;\n\n  // Bias-related properties are stored in the superclass `BaseConv` because all\n  // convolution subclasses use the same configuration parameters to control\n  // bias. Kernel-related properties are defined here rather than in the\n  // superclass because some convolution subclasses use different names and\n  // configuration parameters for their internal kernel state.\n  protected readonly kernelInitializer?: Initializer;\n  protected readonly kernelConstraint?: Constraint;\n  protected readonly kernelRegularizer?: Regularizer;\n\n  constructor(rank: number, args: ConvLayerArgs) {\n    super(rank, args as BaseConvLayerArgs);\n    Conv.verifyArgs(args);\n    this.filters = args.filters;\n    generic_utils.assertPositiveInteger(this.filters, 'filters');\n    this.kernelInitializer = getInitializer(\n        args.kernelInitializer || this.DEFAULT_KERNEL_INITIALIZER);\n    this.kernelConstraint = getConstraint(args.kernelConstraint);\n    this.kernelRegularizer = getRegularizer(args.kernelRegularizer);\n  }\n\n  build(inputShape: Shape|Shape[]): void {\n    inputShape = getExactlyOneShape(inputShape);\n    const channelAxis =\n        this.dataFormat === 'channelsFirst' ? 1 : inputShape.length - 1;\n    if (inputShape[channelAxis] == null) {\n      throw new ValueError(\n          `The channel dimension of the input should be defined. ` +\n          `Found ${inputShape[channelAxis]}`);\n    }\n    const inputDim = inputShape[channelAxis];\n\n    const kernelShape = this.kernelSize.concat([inputDim, this.filters]);\n\n    this.kernel = this.addWeight(\n        'kernel', kernelShape, null, this.kernelInitializer,\n        this.kernelRegularizer, true, this.kernelConstraint);\n    if (this.useBias) {\n      this.bias = this.addWeight(\n          'bias', [this.filters], null, this.biasInitializer,\n          this.biasRegularizer, true, this.biasConstraint);\n    }\n\n    this.inputSpec = [{ndim: this.rank + 2, axes: {[channelAxis]: inputDim}}];\n    this.built = true;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      inputs = getExactlyOneTensor(inputs);\n      let outputs: Tensor;\n      const biasValue = this.bias == null ? null : this.bias.read();\n      const fusedActivationName = generic_utils.mapActivationToFusedKernel(\n          this.activation.getClassName());\n\n      if (fusedActivationName != null && this.rank === 2) {\n        outputs = conv2dWithBiasActivation(\n            inputs, this.kernel.read(), biasValue, this.strides, this.padding,\n            this.dataFormat, this.dilationRate as [number, number],\n            fusedActivationName);\n      } else {\n        if (this.rank === 1) {\n          outputs = conv1dWithBias(\n              inputs, this.kernel.read(), biasValue, this.strides[0],\n              this.padding, this.dataFormat, this.dilationRate[0]);\n        } else if (this.rank === 2) {\n          // TODO(cais): Move up to constructor.\n          outputs = conv2dWithBiasActivation(\n              inputs, this.kernel.read(), biasValue, this.strides, this.padding,\n              this.dataFormat, this.dilationRate as [number, number]);\n        } else if (this.rank === 3) {\n          outputs = conv3dWithBias(\n              inputs, this.kernel.read(), biasValue, this.strides, this.padding,\n              this.dataFormat, this.dilationRate as [number, number, number]);\n        } else {\n          throw new NotImplementedError(\n              'convolutions greater than 3D are not implemented yet.');\n        }\n\n        if (this.activation != null) {\n          outputs = this.activation.apply(outputs);\n        }\n      }\n\n      return outputs;\n    });\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    inputShape = getExactlyOneShape(inputShape);\n    const newSpace: number[] = [];\n    const space = (this.dataFormat === 'channelsLast') ?\n        inputShape.slice(1, inputShape.length - 1) :\n        inputShape.slice(2);\n    for (let i = 0; i < space.length; ++i) {\n      const newDim = convOutputLength(\n          space[i], this.kernelSize[i], this.padding, this.strides[i],\n          typeof this.dilationRate === 'number' ? this.dilationRate :\n                                                  this.dilationRate[i]);\n      newSpace.push(newDim);\n    }\n\n    let outputShape = [inputShape[0]];\n    if (this.dataFormat === 'channelsLast') {\n      outputShape = outputShape.concat(newSpace);\n      outputShape.push(this.filters);\n    } else {\n      outputShape.push(this.filters);\n      outputShape = outputShape.concat(newSpace);\n    }\n    return outputShape;\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = {\n      filters: this.filters,\n      kernelInitializer: serializeInitializer(this.kernelInitializer),\n      kernelRegularizer: serializeRegularizer(this.kernelRegularizer),\n      kernelConstraint: serializeConstraint(this.kernelConstraint)\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n\n  protected static verifyArgs(args: ConvLayerArgs) {\n    // Check config.filters type, shape, and value.\n    if (!('filters' in args) || typeof args.filters !== 'number' ||\n        args.filters < 1) {\n      throw new ValueError(\n          `Convolution layer expected config.filters to be a 'number' > 0 ` +\n          `but got ${JSON.stringify(args.filters)}`);\n    }\n  }\n}\n\nexport class Conv2D extends Conv {\n  /** @nocollapse */\n  static className = 'Conv2D';\n  constructor(args: ConvLayerArgs) {\n    super(2, args);\n    Conv2D.verifyArgs(args);\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = super.getConfig();\n    delete config['rank'];\n    return config;\n  }\n\n  protected static verifyArgs(args: ConvLayerArgs) {\n    // config.kernelSize must be a number or array of numbers.\n    if ((typeof args.kernelSize !== 'number') &&\n        !generic_utils.checkArrayTypeAndLength(\n            args.kernelSize, 'number', 1, 2)) {\n      throw new ValueError(\n          `Conv2D expects config.kernelSize to be number or number[] with ` +\n          `length 1 or 2, but received ${JSON.stringify(args.kernelSize)}.`);\n    }\n  }\n}\nserialization.registerClass(Conv2D);\n\nexport class Conv3D extends Conv {\n  /** @nocollapse */\n  static className = 'Conv3D';\n  constructor(args: ConvLayerArgs) {\n    super(3, args);\n    Conv3D.verifyArgs(args);\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = super.getConfig();\n    delete config['rank'];\n    return config;\n  }\n\n  protected static verifyArgs(args: ConvLayerArgs) {\n    // config.kernelSize must be a number or array of numbers.\n    if (typeof args.kernelSize !== 'number') {\n      if (!(Array.isArray(args.kernelSize) &&\n            (args.kernelSize.length === 1 || args.kernelSize.length === 3))) {\n        throw new ValueError(\n            `Conv3D expects config.kernelSize to be number or` +\n            ` [number, number, number], but received ${\n                JSON.stringify(args.kernelSize)}.`);\n      }\n    }\n  }\n}\nserialization.registerClass(Conv3D);\n\nexport class Conv2DTranspose extends Conv2D {\n  /** @nocollapse */\n  static className = 'Conv2DTranspose';\n  inputSpec: InputSpec[];\n\n  constructor(args: ConvLayerArgs) {\n    super(args);\n    this.inputSpec = [new InputSpec({ndim: 4})];\n\n    if (this.padding !== 'same' && this.padding !== 'valid') {\n      throw new ValueError(\n          `Conv2DTranspose currently supports only padding modes 'same' ` +\n          `and 'valid', but received padding mode ${this.padding}`);\n    }\n  }\n\n  build(inputShape: Shape|Shape[]): void {\n    inputShape = getExactlyOneShape(inputShape);\n\n    if (inputShape.length !== 4) {\n      throw new ValueError(\n          'Input should have rank 4; Received input shape: ' +\n          JSON.stringify(inputShape));\n    }\n\n    const channelAxis =\n        this.dataFormat === 'channelsFirst' ? 1 : inputShape.length - 1;\n    if (inputShape[channelAxis] == null) {\n      throw new ValueError(\n          'The channel dimension of the inputs should be defined. ' +\n          'Found `None`.');\n    }\n    const inputDim = inputShape[channelAxis];\n    const kernelShape = this.kernelSize.concat([this.filters, inputDim]);\n\n    this.kernel = this.addWeight(\n        'kernel', kernelShape, 'float32', this.kernelInitializer,\n        this.kernelRegularizer, true, this.kernelConstraint);\n    if (this.useBias) {\n      this.bias = this.addWeight(\n          'bias', [this.filters], 'float32', this.biasInitializer,\n          this.biasRegularizer, true, this.biasConstraint);\n    }\n\n    // Set input spec.\n    this.inputSpec =\n        [new InputSpec({ndim: 4, axes: {[channelAxis]: inputDim}})];\n    this.built = true;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tfc.tidy(() => {\n      let input = getExactlyOneTensor(inputs);\n      if (input.shape.length !== 4) {\n        throw new ValueError(\n            `Conv2DTranspose.call() expects input tensor to be rank-4, but ` +\n            `received a tensor of rank-${input.shape.length}`);\n      }\n\n      const inputShape = input.shape;\n      const batchSize = inputShape[0];\n\n      let hAxis: number;\n      let wAxis: number;\n      if (this.dataFormat === 'channelsFirst') {\n        hAxis = 2;\n        wAxis = 3;\n      } else {\n        hAxis = 1;\n        wAxis = 2;\n      }\n\n      const height = inputShape[hAxis];\n      const width = inputShape[wAxis];\n      const kernelH = this.kernelSize[0];\n      const kernelW = this.kernelSize[1];\n      const strideH = this.strides[0];\n      const strideW = this.strides[1];\n\n      // Infer the dynamic output shape.\n      const outHeight = deconvLength(height, strideH, kernelH, this.padding);\n      const outWidth = deconvLength(width, strideW, kernelW, this.padding);\n\n      // Porting Note: We don't branch based on `this.dataFormat` here,\n      // because\n      //   the tjfs-core function `conv2dTranspose` called below always\n      //   assumes channelsLast.\n      const outputShape: [number, number, number, number] =\n          [batchSize, outHeight, outWidth, this.filters];\n\n      if (this.dataFormat !== 'channelsLast') {\n        input = tfc.transpose(input, [0, 2, 3, 1]);\n      }\n      let outputs = tfc.conv2dTranspose(\n          input as Tensor4D, this.kernel.read() as Tensor4D, outputShape,\n          this.strides as [number, number], this.padding as 'same' | 'valid');\n      if (this.dataFormat !== 'channelsLast') {\n        outputs = tfc.transpose(outputs, [0, 3, 1, 2]);\n      }\n\n      if (this.bias != null) {\n        outputs =\n            K.biasAdd(outputs, this.bias.read(), this.dataFormat) as Tensor4D;\n      }\n      if (this.activation != null) {\n        outputs = this.activation.apply(outputs) as Tensor4D;\n      }\n      return outputs;\n    });\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    inputShape = getExactlyOneShape(inputShape);\n    const outputShape = inputShape.slice();\n\n    let channelAxis: number;\n    let heightAxis: number;\n    let widthAxis: number;\n    if (this.dataFormat === 'channelsFirst') {\n      channelAxis = 1;\n      heightAxis = 2;\n      widthAxis = 3;\n    } else {\n      channelAxis = 3;\n      heightAxis = 1;\n      widthAxis = 2;\n    }\n\n    const kernelH = this.kernelSize[0];\n    const kernelW = this.kernelSize[1];\n    const strideH = this.strides[0];\n    const strideW = this.strides[1];\n\n    outputShape[channelAxis] = this.filters;\n    outputShape[heightAxis] =\n        deconvLength(outputShape[heightAxis], strideH, kernelH, this.padding);\n    outputShape[widthAxis] =\n        deconvLength(outputShape[widthAxis], strideW, kernelW, this.padding);\n    return outputShape;\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = super.getConfig();\n    delete config['dilationRate'];\n    return config;\n  }\n}\nserialization.registerClass(Conv2DTranspose);\n\nexport class Conv3DTranspose extends Conv3D {\n  /** @nocollapse */\n  static className = 'Conv3DTranspose';\n  inputSpec: InputSpec[];\n\n  constructor(args: ConvLayerArgs) {\n    super(args);\n    this.inputSpec = [new InputSpec({ndim: 5})];\n\n    if (this.padding !== 'same' && this.padding !== 'valid') {\n      throw new ValueError(\n          `Conv3DTranspose currently supports only padding modes 'same' ` +\n          `and 'valid', but received padding mode ${this.padding}`);\n    }\n  }\n\n  build(inputShape: Shape|Shape[]): void {\n    inputShape = getExactlyOneShape(inputShape);\n\n    if (inputShape.length !== 5) {\n      throw new ValueError(\n          'Input should have rank 5; Received input shape: ' +\n          JSON.stringify(inputShape));\n    }\n\n    const channelAxis =\n        this.dataFormat === 'channelsFirst' ? 1 : inputShape.length - 1;\n    if (inputShape[channelAxis] == null) {\n      throw new ValueError(\n          'The channel dimension of the inputs should be defined. ' +\n          'Found `None`.');\n    }\n    const inputDim = inputShape[channelAxis];\n    const kernelShape = this.kernelSize.concat([this.filters, inputDim]);\n\n    this.kernel = this.addWeight(\n        'kernel', kernelShape, 'float32', this.kernelInitializer,\n        this.kernelRegularizer, true, this.kernelConstraint);\n    if (this.useBias) {\n      this.bias = this.addWeight(\n          'bias', [this.filters], 'float32', this.biasInitializer,\n          this.biasRegularizer, true, this.biasConstraint);\n    }\n\n    // Set input spec.\n    this.inputSpec =\n        [new InputSpec({ndim: 5, axes: {[channelAxis]: inputDim}})];\n    this.built = true;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tfc.tidy<tfc.Tensor5D>(() => {\n      let input = getExactlyOneTensor(inputs);\n      if (input.shape.length !== 5) {\n        throw new ValueError(\n            `Conv3DTranspose.call() expects input tensor to be rank-4, but ` +\n            `received a tensor of rank-${input.shape.length}`);\n      }\n\n      const inputShape = input.shape;\n      const batchSize = inputShape[0];\n\n      let hAxis: number;\n      let wAxis: number;\n      let dAxis: number;\n\n      if (this.dataFormat === 'channelsFirst') {\n        dAxis = 2;\n        hAxis = 3;\n        wAxis = 4;\n      } else {\n        dAxis = 1;\n        hAxis = 2;\n        wAxis = 3;\n      }\n\n      const depth = inputShape[dAxis];\n      const height = inputShape[hAxis];\n      const width = inputShape[wAxis];\n      const kernelD = this.kernelSize[0];\n      const kernelH = this.kernelSize[1];\n      const kernelW = this.kernelSize[2];\n      const strideD = this.strides[0];\n      const strideH = this.strides[1];\n      const strideW = this.strides[2];\n\n      // Infer the dynamic output shape.\n      const outDepth = deconvLength(depth, strideD, kernelD, this.padding);\n      const outHeight = deconvLength(height, strideH, kernelH, this.padding);\n      const outWidth = deconvLength(width, strideW, kernelW, this.padding);\n\n      // Same as `conv2dTranspose`. We always assumes channelsLast.\n      const outputShape: [number, number, number, number, number] =\n          [batchSize, outDepth, outHeight, outWidth, this.filters];\n      if (this.dataFormat !== 'channelsLast') {\n        input = tfc.transpose(input, [0, 2, 3, 4, 1]);\n      }\n      let outputs = tfc.conv3dTranspose(\n          input as Tensor5D, this.kernel.read() as Tensor5D, outputShape,\n          this.strides as [number, number, number],\n          this.padding as 'same' | 'valid');\n      if (this.dataFormat !== 'channelsLast') {\n        outputs = tfc.transpose(outputs, [0, 4, 1, 2, 3]);\n      }\n\n      if (this.bias !== null) {\n        outputs =\n            K.biasAdd(outputs, this.bias.read(), this.dataFormat) as Tensor5D;\n      }\n      if (this.activation !== null) {\n        outputs = this.activation.apply(outputs) as Tensor5D;\n      }\n      return outputs;\n    });\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    inputShape = getExactlyOneShape(inputShape);\n    const outputShape = inputShape.slice();\n\n    let channelAxis: number;\n    let depthAxis: number;\n    let heightAxis: number;\n    let widthAxis: number;\n    if (this.dataFormat === 'channelsFirst') {\n      channelAxis = 1;\n      depthAxis = 2;\n      heightAxis = 3;\n      widthAxis = 4;\n    } else {\n      channelAxis = 4;\n      depthAxis = 1;\n      heightAxis = 2;\n      widthAxis = 3;\n    }\n\n    const kernelD = this.kernelSize[0];\n    const kernelH = this.kernelSize[1];\n    const kernelW = this.kernelSize[2];\n    const strideD = this.strides[0];\n    const strideH = this.strides[1];\n    const strideW = this.strides[2];\n\n    outputShape[channelAxis] = this.filters;\n    outputShape[depthAxis] =\n        deconvLength(outputShape[depthAxis], strideD, kernelD, this.padding);\n    outputShape[heightAxis] =\n        deconvLength(outputShape[heightAxis], strideH, kernelH, this.padding);\n    outputShape[widthAxis] =\n        deconvLength(outputShape[widthAxis], strideW, kernelW, this.padding);\n    return outputShape;\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = super.getConfig();\n    delete config['dilationRate'];\n    return config;\n  }\n}\nserialization.registerClass(Conv3DTranspose);\n\nexport declare interface SeparableConvLayerArgs extends ConvLayerArgs {\n  /**\n   * The number of depthwise convolution output channels for each input\n   * channel.\n   * The total number of depthwise convolution output channels will be equal\n   * to `filtersIn * depthMultiplier`. Default: 1.\n   */\n  depthMultiplier?: number;\n\n  /**\n   * Initializer for the depthwise kernel matrix.\n   */\n  depthwiseInitializer?: InitializerIdentifier|Initializer;\n\n  /**\n   * Initializer for the pointwise kernel matrix.\n   */\n  pointwiseInitializer?: InitializerIdentifier|Initializer;\n\n  /**\n   * Regularizer function applied to the depthwise kernel matrix.\n   */\n  depthwiseRegularizer?: RegularizerIdentifier|Regularizer;\n\n  /**\n   * Regularizer function applied to the pointwise kernel matrix.\n   */\n  pointwiseRegularizer?: RegularizerIdentifier|Regularizer;\n\n  /**\n   * Constraint function applied to the depthwise kernel matrix.\n   */\n  depthwiseConstraint?: ConstraintIdentifier|Constraint;\n\n  /**\n   * Constraint function applied to the pointwise kernel matrix.\n   */\n  pointwiseConstraint?: ConstraintIdentifier|Constraint;\n}\n\nexport class SeparableConv extends Conv {\n  /** @nocollapse */\n  static className = 'SeparableConv';\n\n  readonly depthMultiplier: number;\n\n  protected readonly depthwiseInitializer?: Initializer;\n  protected readonly depthwiseRegularizer?: Regularizer;\n  protected readonly depthwiseConstraint?: Constraint;\n  protected readonly pointwiseInitializer?: Initializer;\n  protected readonly pointwiseRegularizer?: Regularizer;\n  protected readonly pointwiseConstraint?: Constraint;\n\n  readonly DEFAULT_DEPTHWISE_INITIALIZER: InitializerIdentifier =\n      'glorotUniform';\n  readonly DEFAULT_POINTWISE_INITIALIZER: InitializerIdentifier =\n      'glorotUniform';\n\n  protected depthwiseKernel: LayerVariable = null;\n  protected pointwiseKernel: LayerVariable = null;\n\n  constructor(rank: number, config?: SeparableConvLayerArgs) {\n    super(rank, config);\n\n    if (config.filters == null) {\n      throw new ValueError(\n          'The `filters` configuration field is required by SeparableConv, ' +\n          'but is unspecified.');\n    }\n    if (config.kernelInitializer != null || config.kernelRegularizer != null ||\n        config.kernelConstraint != null) {\n      throw new ValueError(\n          'Fields kernelInitializer, kernelRegularizer and kernelConstraint ' +\n          'are invalid for SeparableConv2D. Use depthwiseInitializer, ' +\n          'depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, ' +\n          'pointwiseRegularizer and pointwiseConstraint instead.');\n    }\n    if (config.padding != null && config.padding !== 'same' &&\n        config.padding !== 'valid') {\n      throw new ValueError(\n          `SeparableConv${this.rank}D supports only padding modes: ` +\n          `'same' and 'valid', but received ${JSON.stringify(config.padding)}`);\n    }\n\n    this.depthMultiplier =\n        config.depthMultiplier == null ? 1 : config.depthMultiplier;\n    this.depthwiseInitializer = getInitializer(\n        config.depthwiseInitializer || this.DEFAULT_DEPTHWISE_INITIALIZER);\n    this.depthwiseRegularizer = getRegularizer(config.depthwiseRegularizer);\n    this.depthwiseConstraint = getConstraint(config.depthwiseConstraint);\n    this.pointwiseInitializer = getInitializer(\n        config.depthwiseInitializer || this.DEFAULT_POINTWISE_INITIALIZER);\n    this.pointwiseRegularizer = getRegularizer(config.pointwiseRegularizer);\n    this.pointwiseConstraint = getConstraint(config.pointwiseConstraint);\n  }\n\n  build(inputShape: Shape|Shape[]): void {\n    inputShape = getExactlyOneShape(inputShape);\n    if (inputShape.length < this.rank + 2) {\n      throw new ValueError(\n          `Inputs to SeparableConv${this.rank}D should have rank ` +\n          `${this.rank + 2}, but received input shape: ` +\n          `${JSON.stringify(inputShape)}`);\n    }\n    const channelAxis =\n        this.dataFormat === 'channelsFirst' ? 1 : inputShape.length - 1;\n    if (inputShape[channelAxis] == null || inputShape[channelAxis] < 0) {\n      throw new ValueError(\n          `The channel dimension of the inputs should be defined, ` +\n          `but found ${JSON.stringify(inputShape[channelAxis])}`);\n    }\n\n    const inputDim = inputShape[channelAxis];\n    const depthwiseKernelShape =\n        this.kernelSize.concat([inputDim, this.depthMultiplier]);\n    const pointwiseKernelShape = [];\n    for (let i = 0; i < this.rank; ++i) {\n      pointwiseKernelShape.push(1);\n    }\n    pointwiseKernelShape.push(inputDim * this.depthMultiplier, this.filters);\n\n    const trainable = true;\n    this.depthwiseKernel = this.addWeight(\n        'depthwise_kernel', depthwiseKernelShape, 'float32',\n        this.depthwiseInitializer, this.depthwiseRegularizer, trainable,\n        this.depthwiseConstraint);\n    this.pointwiseKernel = this.addWeight(\n        'pointwise_kernel', pointwiseKernelShape, 'float32',\n        this.pointwiseInitializer, this.pointwiseRegularizer, trainable,\n        this.pointwiseConstraint);\n    if (this.useBias) {\n      this.bias = this.addWeight(\n          'bias', [this.filters], 'float32', this.biasInitializer,\n          this.biasRegularizer, trainable, this.biasConstraint);\n    } else {\n      this.bias = null;\n    }\n\n    this.inputSpec =\n        [new InputSpec({ndim: this.rank + 2, axes: {[channelAxis]: inputDim}})];\n    this.built = true;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      inputs = getExactlyOneTensor(inputs);\n\n      let output: Tensor;\n      if (this.rank === 1) {\n        throw new NotImplementedError(\n            '1D separable convolution is not implemented yet.');\n      } else if (this.rank === 2) {\n        if (this.dataFormat === 'channelsFirst') {\n          inputs = tfc.transpose(inputs, [0, 2, 3, 1]);  // NCHW -> NHWC.\n        }\n\n        output = tfc.separableConv2d(\n            inputs as Tensor4D, this.depthwiseKernel.read() as Tensor4D,\n            this.pointwiseKernel.read() as Tensor4D,\n            this.strides as [number, number], this.padding as 'same' | 'valid',\n            this.dilationRate as [number, number], 'NHWC');\n      }\n\n      if (this.useBias) {\n        output = K.biasAdd(output, this.bias.read(), this.dataFormat);\n      }\n      if (this.activation != null) {\n        output = this.activation.apply(output);\n      }\n\n      if (this.dataFormat === 'channelsFirst') {\n        output = tfc.transpose(output, [0, 3, 1, 2]);  // NHWC -> NCHW.\n      }\n      return output;\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = super.getConfig();\n    delete config['rank'];\n    delete config['kernelInitializer'];\n    delete config['kernelRegularizer'];\n    delete config['kernelConstraint'];\n    config['depthwiseInitializer'] =\n        serializeInitializer(this.depthwiseInitializer);\n    config['pointwiseInitializer'] =\n        serializeInitializer(this.pointwiseInitializer);\n    config['depthwiseRegularizer'] =\n        serializeRegularizer(this.depthwiseRegularizer);\n    config['pointwiseRegularizer'] =\n        serializeRegularizer(this.pointwiseRegularizer);\n    config['depthwiseConstraint'] =\n        serializeConstraint(this.depthwiseConstraint);\n    config['pointwiseConstraint'] =\n        serializeConstraint(this.pointwiseConstraint);\n    return config;\n  }\n}\n\nexport class SeparableConv2D extends SeparableConv {\n  /** @nocollapse */\n  static className = 'SeparableConv2D';\n  constructor(args?: SeparableConvLayerArgs) {\n    super(2, args);\n  }\n}\nserialization.registerClass(SeparableConv2D);\n\nexport class Conv1D extends Conv {\n  /** @nocollapse */\n  static className = 'Conv1D';\n  constructor(args: ConvLayerArgs) {\n    super(1, args);\n    Conv1D.verifyArgs(args);\n    this.inputSpec = [{ndim: 3}];\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = super.getConfig();\n    delete config['rank'];\n    delete config['dataFormat'];\n    return config;\n  }\n\n  protected static verifyArgs(args: ConvLayerArgs) {\n    // config.kernelSize must be a number or array of numbers.\n    if (typeof args.kernelSize !== 'number' &&\n        !generic_utils.checkArrayTypeAndLength(\n            args.kernelSize, 'number', 1, 1)) {\n      throw new ValueError(\n          `Conv1D expects config.kernelSize to be number or number[] with ` +\n          `length 1, but received ${JSON.stringify(args.kernelSize)}.`);\n    }\n  }\n}\nserialization.registerClass(Conv1D);\n\nexport declare interface Cropping2DLayerArgs extends LayerArgs {\n  /**\n   * Dimension of the cropping along the width and the height.\n   * - If integer: the same symmetric cropping\n   *  is applied to width and height.\n   * - If list of 2 integers:\n   *   interpreted as two different\n   *   symmetric cropping values for height and width:\n   *   `[symmetric_height_crop, symmetric_width_crop]`.\n   * - If a list of 2 list of 2 integers:\n   *   interpreted as\n   *   `[[top_crop, bottom_crop], [left_crop, right_crop]]`\n   */\n  cropping: number|[number, number]|[[number, number], [number, number]];\n\n  /**\n   * Format of the data, which determines the ordering of the dimensions in\n   * the inputs.\n   *\n   * `channels_last` corresponds to inputs with shape\n   *   `(batch, ..., channels)`\n   *\n   * `channels_first` corresponds to inputs with shape\n   *   `(batch, channels, ...)`\n   *\n   * Defaults to `channels_last`.\n   */\n  dataFormat?: DataFormat;\n}\n\nexport class Cropping2D extends Layer {\n  /** @nocollapse */\n  static className = 'Cropping2D';\n  protected readonly cropping: [[number, number], [number, number]];\n  protected readonly dataFormat: DataFormat;\n\n  constructor(args: Cropping2DLayerArgs) {\n    super(args);\n    if (typeof args.cropping === 'number') {\n      this.cropping =\n          [[args.cropping, args.cropping], [args.cropping, args.cropping]];\n    } else if (typeof args.cropping[0] === 'number') {\n      this.cropping = [\n        [args.cropping[0], args.cropping[0]],\n        [args.cropping[1] as number, args.cropping[1] as number]\n      ];\n    } else {\n      this.cropping = args.cropping as [[number, number], [number, number]];\n    }\n    this.dataFormat =\n        args.dataFormat === undefined ? 'channelsLast' : args.dataFormat;\n    this.inputSpec = [{ndim: 4}];\n  }\n\n  computeOutputShape(inputShape: Shape): Shape {\n    if (this.dataFormat === 'channelsFirst') {\n      return [\n        inputShape[0], inputShape[1],\n        inputShape[2] - this.cropping[0][0] - this.cropping[0][1],\n        inputShape[3] - this.cropping[1][0] - this.cropping[1][1]\n      ];\n    } else {\n      return [\n        inputShape[0],\n        inputShape[1] - this.cropping[0][0] - this.cropping[0][1],\n        inputShape[2] - this.cropping[1][0] - this.cropping[1][1], inputShape[3]\n      ];\n    }\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      inputs = getExactlyOneTensor(inputs);\n\n      if (this.dataFormat === 'channelsLast') {\n        const hSliced = K.sliceAlongAxis(\n            inputs, this.cropping[0][0],\n            inputs.shape[1] - this.cropping[0][0] - this.cropping[0][1], 2);\n        return K.sliceAlongAxis(\n            hSliced, this.cropping[1][0],\n            inputs.shape[2] - this.cropping[1][1] - this.cropping[1][0], 3);\n      } else {\n        const hSliced = K.sliceAlongAxis(\n            inputs, this.cropping[0][0],\n            inputs.shape[2] - this.cropping[0][0] - this.cropping[0][1], 3);\n        return K.sliceAlongAxis(\n            hSliced, this.cropping[1][0],\n            inputs.shape[3] - this.cropping[1][1] - this.cropping[1][0], 4);\n      }\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = {cropping: this.cropping, dataFormat: this.dataFormat};\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(Cropping2D);\n\nexport declare interface UpSampling2DLayerArgs extends LayerArgs {\n  /**\n   * The upsampling factors for rows and columns.\n   *\n   * Defaults to `[2, 2]`.\n   */\n  size?: number[];\n  /**\n   * Format of the data, which determines the ordering of the dimensions in\n   * the inputs.\n   *\n   * `\"channelsLast\"` corresponds to inputs with shape\n   *   `[batch, ..., channels]`\n   *\n   *  `\"channelsFirst\"` corresponds to inputs with shape `[batch, channels,\n   * ...]`.\n   *\n   * Defaults to `\"channelsLast\"`.\n   */\n  dataFormat?: DataFormat;\n  /**\n   * The interpolation mechanism, one of `\"nearest\"` or `\"bilinear\"`, default\n   * to `\"nearest\"`.\n   */\n  interpolation?: InterpolationFormat;\n}\n\nexport class UpSampling2D extends Layer {\n  /** @nocollapse */\n  static className = 'UpSampling2D';\n  protected readonly DEFAULT_SIZE = [2, 2];\n  protected readonly size: number[];\n  protected readonly dataFormat: DataFormat;\n  protected readonly interpolation: InterpolationFormat;\n\n  constructor(args: UpSampling2DLayerArgs) {\n    super(args);\n    this.inputSpec = [{ndim: 4}];\n    this.size = args.size == null ? this.DEFAULT_SIZE : args.size;\n    this.dataFormat =\n        args.dataFormat == null ? 'channelsLast' : args.dataFormat;\n    checkDataFormat(this.dataFormat);\n    this.interpolation =\n        args.interpolation == null ? 'nearest' : args.interpolation;\n    checkInterpolationFormat(this.interpolation);\n  }\n\n  computeOutputShape(inputShape: Shape): Shape {\n    if (this.dataFormat === 'channelsFirst') {\n      const height =\n          inputShape[2] == null ? null : this.size[0] * inputShape[2];\n      const width = inputShape[3] == null ? null : this.size[1] * inputShape[3];\n      return [inputShape[0], inputShape[1], height, width];\n    } else {\n      const height =\n          inputShape[1] == null ? null : this.size[0] * inputShape[1];\n      const width = inputShape[2] == null ? null : this.size[1] * inputShape[2];\n      return [inputShape[0], height, width, inputShape[3]];\n    }\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tfc.tidy(() => {\n      let input = getExactlyOneTensor(inputs) as Tensor4D;\n      const inputShape = input.shape;\n\n      if (this.dataFormat === 'channelsFirst') {\n        input = tfc.transpose(input, [0, 2, 3, 1]);\n        const height = this.size[0] * inputShape[2];\n        const width = this.size[1] * inputShape[3];\n\n        const resized = this.interpolation === 'nearest' ?\n            tfc.image.resizeNearestNeighbor(input, [height, width]) :\n            tfc.image.resizeBilinear(input, [height, width]);\n        return tfc.transpose(resized, [0, 3, 1, 2]);\n      } else {\n        const height = this.size[0] * inputShape[1];\n        const width = this.size[1] * inputShape[2];\n        return this.interpolation === 'nearest' ?\n            tfc.image.resizeNearestNeighbor(input, [height, width]) :\n            tfc.image.resizeBilinear(input, [height, width]);\n      }\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = {size: this.size, dataFormat: this.dataFormat};\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(UpSampling2D);\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {ValueError} from '../errors';\nimport {PaddingMode} from '../keras_format/common';\n\nimport {pyListRepeat} from './generic_utils';\nimport {isInteger, max} from './math_utils';\n\n/**\n * Transforms a single number of array of numbers into an array of numbers.\n * @param value\n * @param n: The size of the tuple to be returned.\n * @param name: Name of the parameter, used for generating error messages.\n * @returns An array of numbers.\n */\nexport function normalizeArray(\n    value: number|number[], n: number, name: string): number[] {\n  if (typeof value === 'number') {\n    return pyListRepeat(value, n);\n  } else {\n    if (value.length !== n) {\n      throw new ValueError(\n          `The ${name} argument must be an integer or tuple of ${n} integers.` +\n          ` Received: ${value.length} elements.`);\n    }\n    for (let i = 0; i < n; ++i) {\n      const singleValue = value[i];\n      if (!isInteger(singleValue)) {\n        throw new ValueError(\n            `The ${name} argument must be an integer or tuple of ${n}` +\n            ` integers. Received: ${JSON.stringify(value)} including a` +\n            ` non-integer number ${singleValue}`);\n      }\n    }\n    return value;\n  }\n}\n\n/**\n * Determines output length of a convolution given input length.\n * @param inputLength\n * @param filterSize\n * @param padding\n * @param stride\n * @param dilation: dilation rate.\n */\nexport function convOutputLength(\n    inputLength: number, filterSize: number, padding: PaddingMode,\n    stride: number, dilation = 1): number {\n  if (inputLength == null) {\n    return inputLength;\n  }\n  const dilatedFilterSize = filterSize + (filterSize - 1) * (dilation - 1);\n  let outputLength: number;\n  if (padding === 'same') {\n    outputLength = inputLength;\n  } else {  // VALID\n    outputLength = inputLength - dilatedFilterSize + 1;\n  }\n  return Math.floor((outputLength + stride - 1) / stride);\n}\n\nexport function deconvLength(\n    dimSize: number, strideSize: number, kernelSize: number,\n    padding: PaddingMode): number {\n  if (dimSize == null) {\n    return null;\n  }\n\n  if (padding === 'valid') {\n    dimSize = dimSize * strideSize + max([kernelSize - strideSize, 0]);\n  } else if (padding === 'same') {\n    dimSize = dimSize * strideSize;\n  } else {\n    throw new ValueError(`Unsupport padding mode: ${padding}.`);\n  }\n  return dimSize;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * TensorFlow.js Layers: Depthwise Convolutional Layers\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {serialization, Tensor, Tensor4D, tidy} from '@tensorflow/tfjs-core';\n\nimport {imageDataFormat} from '../backend/common';\nimport * as K from '../backend/tfjs_backend';\nimport {checkDataFormat} from '../common';\nimport {Constraint, ConstraintIdentifier, getConstraint, serializeConstraint} from '../constraints';\nimport {ValueError} from '../errors';\nimport {getInitializer, Initializer, InitializerIdentifier, serializeInitializer} from '../initializers';\nimport {DataFormat, Shape} from '../keras_format/common';\nimport {getRegularizer, Regularizer, RegularizerIdentifier, serializeRegularizer} from '../regularizers';\nimport {Kwargs} from '../types';\nimport {convOutputLength} from '../utils/conv_utils';\nimport {getExactlyOneShape, getExactlyOneTensor} from '../utils/types_utils';\nimport {LayerVariable} from '../variables';\n\nimport {BaseConv, BaseConvLayerArgs, ConvLayerArgs, preprocessConv2DInput} from './convolutional';\n\n/**\n * 2D convolution with separable filters.\n * @param x Input tensor.\n * @param depthwiseKernel Convolution kernel for depthwise convolution.\n * @param strides Strides (Array of two integers).\n * @param padding Padding model.\n * @param dataFormat Data format.\n * @param dilationRate Array of two integers, dilation rates for the separable\n *   convolution.\n * @returns Output tensor.\n * @throws ValueError If depthwiseKernel is not a 4D array.\n */\nexport function depthwiseConv2d(\n    x: Tensor, depthwiseKernel: Tensor, strides: [number, number] = [1, 1],\n    padding = 'valid', dataFormat?: DataFormat,\n    dilationRate?: [number, number]): Tensor {\n  return tidy(() => {\n    if (dataFormat == null) {\n      dataFormat = imageDataFormat();\n    }\n    checkDataFormat(dataFormat);\n    let y = preprocessConv2DInput(x, dataFormat);\n    if (x.rank !== 4) {\n      throw new ValueError(\n          `Input for depthwiseConv2d is required to be 4-D, but is instead ` +\n          `${x.rank}-D`);\n    }\n    if (depthwiseKernel.rank !== 4) {\n      throw new ValueError(\n          `depthwiseKernel is required to be 4-D, but is instead ` +\n          `${depthwiseKernel.rank}-D`);\n    }\n    y = tfc.depthwiseConv2d(\n        y as Tensor4D, depthwiseKernel as Tensor4D, strides,\n        padding === 'same' ? 'same' : 'valid', 'NHWC', dilationRate);\n    if (dataFormat === 'channelsFirst') {\n      y = tfc.transpose(y, [0, 3, 1, 2]);\n    }\n    return y;\n  });\n}\n\nexport declare interface DepthwiseConv2DLayerArgs extends BaseConvLayerArgs {\n  /**\n   * An integer or Array of 2 integers, specifying the width and height of the\n   * 2D convolution window. Can be a single integer to specify the same value\n   * for all spatial dimensions.\n   */\n  kernelSize: number|[number, number];\n\n  /**\n   * The number of depthwise convolution output channels for each input\n   * channel.\n   * The total number of depthwise convolution output channels will be equal to\n   * `filtersIn * depthMultiplier`.\n   * Default: 1.\n   */\n  depthMultiplier?: number;\n\n  /**\n   * Initializer for the depthwise kernel matrix.\n   * Default: GlorotNormal.\n   */\n  depthwiseInitializer?: InitializerIdentifier|Initializer;\n\n  /**\n   * Constraint for the depthwise kernel matrix.\n   */\n  depthwiseConstraint?: ConstraintIdentifier|Constraint;\n\n  /**\n   * Regulzarizer function for the depthwise kernel matrix.\n   */\n  depthwiseRegularizer?: RegularizerIdentifier|Regularizer;\n}\n\nexport class DepthwiseConv2D extends BaseConv {\n  /** @nocollapse */\n  static className = 'DepthwiseConv2D';\n  private readonly depthMultiplier: number;\n  private readonly depthwiseInitializer: Initializer;\n  private readonly depthwiseConstraint: Constraint;\n  private readonly depthwiseRegularizer: Regularizer;\n\n  private depthwiseKernel: LayerVariable = null;\n\n  constructor(args: DepthwiseConv2DLayerArgs) {\n    super(2, args as ConvLayerArgs);\n    this.depthMultiplier =\n        args.depthMultiplier == null ? 1 : args.depthMultiplier;\n    this.depthwiseInitializer = getInitializer(\n        args.depthwiseInitializer || this.DEFAULT_KERNEL_INITIALIZER);\n    this.depthwiseConstraint = getConstraint(args.depthwiseConstraint);\n    this.depthwiseRegularizer = getRegularizer(args.depthwiseRegularizer);\n  }\n\n  build(inputShape: Shape|Shape[]): void {\n    inputShape = getExactlyOneShape(inputShape);\n    if (inputShape.length < 4) {\n      throw new ValueError(\n          `Inputs to DepthwiseConv2D should have rank 4. ` +\n          `Received input shape: ${JSON.stringify(inputShape)}.`);\n    }\n    const channelAxis = this.dataFormat === 'channelsFirst' ? 1 : 3;\n    if (inputShape[channelAxis] == null || inputShape[channelAxis] < 0) {\n      throw new ValueError(\n          'The channel dimension of the inputs to DepthwiseConv2D should ' +\n          `be defined, but is not (${inputShape[channelAxis]}).`);\n    }\n    const inputDim = inputShape[channelAxis];\n    const depthwiseKernelShape: Shape = [\n      this.kernelSize[0], this.kernelSize[1], inputDim, this.depthMultiplier\n    ];\n\n    this.depthwiseKernel = this.addWeight(\n        'depthwise_kernel', depthwiseKernelShape, null,\n        this.depthwiseInitializer, this.depthwiseRegularizer, true,\n        this.depthwiseConstraint);\n    if (this.useBias) {\n      this.bias = this.addWeight(\n          'bias', [inputDim * this.depthMultiplier], null, this.biasInitializer,\n          this.biasRegularizer, true, this.biasConstraint);\n    } else {\n      this.bias = null;\n    }\n    this.built = true;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      inputs = getExactlyOneTensor(inputs);\n      let outputs = depthwiseConv2d(\n          inputs, this.depthwiseKernel.read(), this.strides as [number, number],\n          this.padding, this.dataFormat, null);\n      // TODO(cais): Add support for dilation.\n      if (this.useBias) {\n        outputs = K.biasAdd(outputs, this.bias.read(), this.dataFormat);\n      }\n      if (this.activation != null) {\n        outputs = this.activation.apply(outputs);\n      }\n      return outputs;\n    });\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    inputShape = getExactlyOneShape(inputShape);\n    const rows =\n        this.dataFormat === 'channelsFirst' ? inputShape[2] : inputShape[1];\n    const cols =\n        this.dataFormat === 'channelsFirst' ? inputShape[3] : inputShape[2];\n    const outFilters = this.dataFormat === 'channelsFirst' ?\n        inputShape[1] * this.depthMultiplier :\n        inputShape[3] * this.depthMultiplier;\n    const outRows = convOutputLength(\n        rows, this.kernelSize[0], this.padding, this.strides[0]);\n    const outCols = convOutputLength(\n        cols, this.kernelSize[1], this.padding, this.strides[1]);\n    if (this.dataFormat === 'channelsFirst') {\n      return [inputShape[0], outFilters, outRows, outCols];\n    } else {\n      // In this case, assume 'channelsLast'.\n      return [inputShape[0], outRows, outCols, outFilters];\n    }\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = super.getConfig();\n    config['depthMultiplier'] = this.depthMultiplier;\n    config['depthwiseInitializer'] =\n        serializeInitializer(this.depthwiseInitializer);\n    config['depthwiseRegularizer'] =\n        serializeRegularizer(this.depthwiseRegularizer);\n    config['depthwiseConstraint'] =\n        serializeConstraint(this.depthwiseRegularizer);\n    return config;\n  }\n}\nserialization.registerClass(DepthwiseConv2D);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {Tensor, util} from '@tensorflow/tfjs-core';\n\nimport {Activation} from '../activations';\nimport * as K from '../backend/tfjs_backend';\nimport {checkDataFormat, checkPaddingMode} from '../common';\nimport {Constraint} from '../constraints';\nimport {InputSpec} from '../engine/topology';\nimport {AttributeError, NotImplementedError, ValueError} from '../errors';\nimport {Initializer} from '../initializers';\nimport {DataFormat, DataType, PaddingMode, Shape} from '../keras_format/common';\nimport {Regularizer} from '../regularizers';\nimport {Kwargs} from '../types';\nimport {convOutputLength, normalizeArray} from '../utils/conv_utils';\nimport {assertPositiveInteger} from '../utils/generic_utils';\nimport {getExactlyOneShape} from '../utils/types_utils';\n\nimport {BaseRNNLayerArgs, generateDropoutMask, LSTMCell, LSTMCellLayerArgs, LSTMLayerArgs, RNN, RNNCell, RNNLayerArgs, SimpleRNNCellLayerArgs} from './recurrent';\n\ndeclare interface ConvRNN2DCellArgs extends\n    Omit<SimpleRNNCellLayerArgs, 'units'> {\n  /**\n   * The dimensionality of the output space (i.e. the number of filters in the\n   * convolution).\n   */\n  filters: number;\n\n  /**\n   * The dimensions of the convolution window. If kernelSize is a number, the\n   * convolutional window will be square.\n   */\n  kernelSize: number|number[];\n\n  /**\n   * The strides of the convolution in each dimension. If strides is a number,\n   * strides in both dimensions are equal.\n   *\n   * Specifying any stride value != 1 is incompatible with specifying any\n   * `dilationRate` value != 1.\n   */\n  strides?: number|number[];\n\n  /**\n   * Padding mode.\n   */\n  padding?: PaddingMode;\n\n  /**\n   * Format of the data, which determines the ordering of the dimensions in\n   * the inputs.\n   *\n   * `channels_last` corresponds to inputs with shape\n   *   `(batch, ..., channels)`\n   *\n   *  `channels_first` corresponds to inputs with shape `(batch, channels,\n   * ...)`.\n   *\n   * Defaults to `channels_last`.\n   */\n  dataFormat?: DataFormat;\n\n  /**\n   * The dilation rate to use for the dilated convolution in each dimension.\n   * Should be an integer or array of two or three integers.\n   *\n   * Currently, specifying any `dilationRate` value != 1 is incompatible with\n   * specifying any `strides` value != 1.\n   */\n  dilationRate?: number|[number]|[number, number];\n}\n\nabstract class ConvRNN2DCell extends RNNCell {\n  readonly filters: number;\n  readonly kernelSize: number[];\n  readonly strides: number[];\n  readonly padding: PaddingMode;\n  readonly dataFormat: DataFormat;\n  readonly dilationRate: number[];\n\n  readonly activation: Activation;\n  readonly useBias: boolean;\n\n  readonly kernelInitializer: Initializer;\n  readonly recurrentInitializer: Initializer;\n  readonly biasInitializer: Initializer;\n\n  readonly kernelConstraint: Constraint;\n  readonly recurrentConstraint: Constraint;\n  readonly biasConstraint: Constraint;\n\n  readonly kernelRegularizer: Regularizer;\n  readonly recurrentRegularizer: Regularizer;\n  readonly biasRegularizer: Regularizer;\n\n  readonly dropout: number;\n  readonly recurrentDropout: number;\n}\n\ndeclare interface ConvRNN2DLayerArgs extends BaseRNNLayerArgs,\n                                             ConvRNN2DCellArgs {}\n\n/**\n * Base class for convolutional-recurrent layers.\n */\nclass ConvRNN2D extends RNN {\n  /** @nocollapse */\n  static className = 'ConvRNN2D';\n\n  readonly cell: ConvRNN2DCell;\n\n  constructor(args: ConvRNN2DLayerArgs) {\n    if (args.unroll) {\n      throw new NotImplementedError(\n          'Unrolling is not possible with convolutional RNNs.');\n    }\n\n    if (Array.isArray(args.cell)) {\n      throw new NotImplementedError(\n          'It is not possible at the moment to stack convolutional cells.');\n    }\n\n    super(args as RNNLayerArgs);\n\n    this.inputSpec = [new InputSpec({ndim: 5})];\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tfc.tidy(() => {\n      if (this.cell.dropoutMask != null) {\n        tfc.dispose(this.cell.dropoutMask);\n\n        this.cell.dropoutMask = null;\n      }\n\n      if (this.cell.recurrentDropoutMask != null) {\n        tfc.dispose(this.cell.recurrentDropoutMask);\n\n        this.cell.recurrentDropoutMask = null;\n      }\n\n      if (kwargs && kwargs['constants']) {\n        throw new ValueError('ConvRNN2D cell does not support constants');\n      }\n\n      const mask = kwargs == null ? null : kwargs['mask'];\n\n      const training = kwargs == null ? null : kwargs['training'];\n\n      const initialState: Tensor[] =\n          kwargs == null ? null : kwargs['initialState'];\n\n      return super.call(inputs, {mask, training, initialState});\n    });\n  }\n\n  computeOutputShape(inputShape: Shape): Shape|Shape[] {\n    let outShape: Shape = this.computeSingleOutputShape(inputShape);\n\n    if (!this.returnSequences) {\n      outShape = [outShape[0], ...outShape.slice(2)];\n    }\n\n    if (this.returnState) {\n      outShape =\n          [outShape, ...Array(2).fill([inputShape[0], ...outShape.slice(-3)])];\n    }\n\n    return outShape;\n  }\n\n  getInitialState(inputs: tfc.Tensor): tfc.Tensor[] {\n    return tfc.tidy(() => {\n      const {stateSize} = this.cell;\n\n      const inputShape = inputs.shape;\n\n      const outputShape = this.computeSingleOutputShape(inputShape);\n\n      const stateShape = [outputShape[0], ...outputShape.slice(2)];\n\n      const initialState = tfc.zeros(stateShape);\n\n      if (Array.isArray(stateSize)) {\n        return Array(stateSize.length).fill(initialState);\n      }\n\n      return [initialState];\n    });\n  }\n\n  resetStates(states?: Tensor|Tensor[], training = false): void {\n    tfc.tidy(() => {\n      if (!this.stateful) {\n        throw new AttributeError(\n            'Cannot call resetStates() on an RNN Layer that is not stateful.');\n      }\n\n      const inputShape = this.inputSpec[0].shape;\n\n      const outputShape = this.computeSingleOutputShape(inputShape);\n\n      const stateShape = [outputShape[0], ...outputShape.slice(2)];\n\n      const batchSize = inputShape[0];\n\n      if (batchSize == null) {\n        throw new ValueError(\n            'If an RNN is stateful, it needs to know its batch size. Specify ' +\n            'the batch size of your input tensors: \\n' +\n            '- If using a Sequential model, specify the batch size by ' +\n            'passing a `batchInputShape` option to your first layer.\\n' +\n            '- If using the functional API, specify the batch size by ' +\n            'passing a `batchShape` option to your Input layer.');\n      }\n\n      // Initialize state if null.\n      if (this.getStates() == null) {\n        if (Array.isArray(this.cell.stateSize)) {\n          this.states_ = this.cell.stateSize.map(() => tfc.zeros(stateShape));\n        } else {\n          this.states_ = [tfc.zeros(stateShape)];\n        }\n      } else if (states == null) {\n        // Dispose old state tensors.\n        tfc.dispose(this.states_);\n\n        // For stateful RNNs, fully dispose kept old states.\n        if (this.keptStates != null) {\n          tfc.dispose(this.keptStates);\n          this.keptStates = [];\n        }\n\n        if (Array.isArray(this.cell.stateSize)) {\n          this.states_ = this.cell.stateSize.map(() => tfc.zeros(stateShape));\n        } else {\n          this.states_[0] = tfc.zeros(stateShape);\n        }\n      } else {\n        if (!Array.isArray(states)) {\n          states = [states];\n        }\n\n        if (states.length !== this.states_.length) {\n          throw new ValueError(\n              `Layer ${this.name} expects ${this.states_.length} state(s), ` +\n              `but it received ${states.length} state value(s). Input ` +\n              `received: ${states}`);\n        }\n\n        if (training) {\n          // Store old state tensors for complete disposal later, i.e., during\n          // the next no-arg call to this method. We do not dispose the old\n          // states immediately because that BPTT (among other things) require\n          // them.\n          this.keptStates.push(this.states_.slice());\n        } else {\n          tfc.dispose(this.states_);\n        }\n\n        for (let index = 0; index < this.states_.length; ++index) {\n          const value = states[index];\n\n          const expectedShape = stateShape;\n\n          if (!util.arraysEqual(value.shape, expectedShape)) {\n            throw new ValueError(\n                `State ${index} is incompatible with layer ${this.name}: ` +\n                `expected shape=${expectedShape}, received shape=${\n                    value.shape}`);\n          }\n\n          this.states_[index] = value;\n        }\n      }\n\n      this.states_ = this.states_.map(state => tfc.keep(state.clone()));\n    });\n  }\n\n  protected computeSingleOutputShape(inputShape: Shape): Shape {\n    const {dataFormat, filters, kernelSize, padding, strides, dilationRate} =\n        this.cell;\n\n    const isChannelsFirst = dataFormat === 'channelsFirst';\n\n    const h = inputShape[isChannelsFirst ? 3 : 2];\n    const w = inputShape[isChannelsFirst ? 4 : 3];\n\n    const hOut = convOutputLength(\n        h, kernelSize[0], padding, strides[0], dilationRate[0]);\n    const wOut = convOutputLength(\n        w, kernelSize[1], padding, strides[1], dilationRate[1]);\n\n    const outShape: Shape = [\n      ...inputShape.slice(0, 2),\n      ...(isChannelsFirst ? [filters, hOut, wOut] : [hOut, wOut, filters])\n    ];\n\n    return outShape;\n  }\n}\n\nexport declare interface ConvLSTM2DCellArgs extends\n    Omit<LSTMCellLayerArgs, 'units'>, ConvRNN2DCellArgs {}\n\nexport class ConvLSTM2DCell extends LSTMCell implements ConvRNN2DCell {\n  /** @nocollapse */\n  static className = 'ConvLSTM2DCell';\n\n  readonly filters: number;\n  readonly kernelSize: number[];\n  readonly strides: number[];\n  readonly padding: PaddingMode;\n  readonly dataFormat: DataFormat;\n  readonly dilationRate: number[];\n\n  constructor(args: ConvLSTM2DCellArgs) {\n    const {\n      filters,\n      kernelSize,\n      strides,\n      padding,\n      dataFormat,\n      dilationRate,\n    } = args;\n\n    super({...args, units: filters});\n\n    this.filters = filters;\n    assertPositiveInteger(this.filters, 'filters');\n\n    this.kernelSize = normalizeArray(kernelSize, 2, 'kernelSize');\n    this.kernelSize.forEach(size => assertPositiveInteger(size, 'kernelSize'));\n\n    this.strides = normalizeArray(strides || 1, 2, 'strides');\n    this.strides.forEach(stride => assertPositiveInteger(stride, 'strides'));\n\n    this.padding = padding || 'valid';\n    checkPaddingMode(this.padding);\n\n    this.dataFormat = dataFormat || 'channelsLast';\n    checkDataFormat(this.dataFormat);\n\n    this.dilationRate = normalizeArray(dilationRate || 1, 2, 'dilationRate');\n    this.dilationRate.forEach(\n        rate => assertPositiveInteger(rate, 'dilationRate'));\n  }\n\n  public build(inputShape: Shape|Shape[]): void {\n    inputShape = getExactlyOneShape(inputShape);\n\n    const channelAxis =\n        this.dataFormat === 'channelsFirst' ? 1 : inputShape.length - 1;\n\n    if (inputShape[channelAxis] == null) {\n      throw new ValueError(\n          `The channel dimension of the input should be defined. ` +\n          `Found ${inputShape[channelAxis]}`);\n    }\n\n    const inputDim = inputShape[channelAxis];\n\n    const numOfKernels = 4;\n\n    const kernelShape =\n        this.kernelSize.concat([inputDim, this.filters * numOfKernels]);\n\n    this.kernel = this.addWeight(\n        'kernel', kernelShape, null, this.kernelInitializer,\n        this.kernelRegularizer, true, this.kernelConstraint);\n\n    const recurrentKernelShape =\n        this.kernelSize.concat([this.filters, this.filters * numOfKernels]);\n\n    this.recurrentKernel = this.addWeight(\n        'recurrent_kernel', recurrentKernelShape, null,\n        this.recurrentInitializer, this.recurrentRegularizer, true,\n        this.recurrentConstraint);\n\n    if (this.useBias) {\n      let biasInitializer: Initializer;\n\n      if (this.unitForgetBias) {\n        const init = this.biasInitializer;\n\n        const filters = this.filters;\n\n        biasInitializer = new (class CustomInit extends Initializer {\n          /** @nocollapse */\n          static className = 'CustomInit';\n\n          apply(shape: Shape, dtype?: DataType): tfc.Tensor {\n            const biasI = init.apply([filters]);\n            const biasF = tfc.ones([filters]);\n            const biasCAndO = init.apply([filters * 2]);\n            return K.concatenate([biasI, biasF, biasCAndO]);\n          }\n        })();\n      } else {\n        biasInitializer = this.biasInitializer;\n      }\n\n      this.bias = this.addWeight(\n          'bias', [this.filters * numOfKernels], null, biasInitializer,\n          this.biasRegularizer, true, this.biasConstraint);\n    }\n\n    this.built = true;\n  }\n\n  call(inputs: tfc.Tensor[], kwargs: Kwargs): tfc.Tensor[] {\n    return tfc.tidy(() => {\n      if (inputs.length !== 3) {\n        throw new ValueError(\n            `ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ` +\n            `${inputs.length}.`);\n      }\n\n      const training = kwargs['training'] || false;\n\n      const x = inputs[0];         // Current input\n      const hTMinus1 = inputs[1];  // Previous memory state.\n      const cTMinus1 = inputs[2];  // Previous carry state.\n\n      const numOfKernels = 4;\n\n      type DropoutMasks = [tfc.Tensor, tfc.Tensor, tfc.Tensor, tfc.Tensor];\n\n      if (0 < this.dropout && this.dropout < 1 && this.dropoutMask == null) {\n        this.dropoutMask = generateDropoutMask({\n                             ones: () => tfc.onesLike(x),\n                             rate: this.dropout,\n                             training,\n                             count: numOfKernels,\n                             dropoutFunc: this.dropoutFunc\n                           }) as tfc.Tensor[];\n      }\n\n      const dropoutMask = this.dropoutMask as DropoutMasks;\n\n      const applyDropout =\n          (x: tfc.Tensor, mask: tfc.Tensor[], index: number) => {\n            if (!mask || !mask[index]) {\n              return x;\n            }\n\n            return tfc.mul(mask[index], x);\n          };\n\n      let xI = applyDropout(x, dropoutMask, 0);\n      let xF = applyDropout(x, dropoutMask, 1);\n      let xC = applyDropout(x, dropoutMask, 2);\n      let xO = applyDropout(x, dropoutMask, 3);\n\n      if (0 < this.recurrentDropout && this.recurrentDropout < 1 &&\n          this.recurrentDropoutMask == null) {\n        this.recurrentDropoutMask = generateDropoutMask({\n                                      ones: () => tfc.onesLike(hTMinus1),\n                                      rate: this.recurrentDropout,\n                                      training,\n                                      count: numOfKernels,\n                                      dropoutFunc: this.dropoutFunc\n                                    }) as tfc.Tensor[];\n      }\n\n      const recDropoutMask = this.recurrentDropoutMask as DropoutMasks;\n\n      let hI = applyDropout(hTMinus1, recDropoutMask, 0);\n      let hF = applyDropout(hTMinus1, recDropoutMask, 1);\n      let hC = applyDropout(hTMinus1, recDropoutMask, 2);\n      let hO = applyDropout(hTMinus1, recDropoutMask, 3);\n\n      const kernelChannelAxis = 3;\n\n      const [kernelI, kernelF, kernelC, kernelO]: tfc.Tensor[] =\n          tfc.split(this.kernel.read(), numOfKernels, kernelChannelAxis);\n\n      const [biasI, biasF, biasC, biasO]: tfc.Tensor[] = this.useBias ?\n          tfc.split(this.bias.read(), numOfKernels) :\n          [null, null, null, null];\n\n      xI = this.inputConv(xI, kernelI, biasI, this.padding);\n      xF = this.inputConv(xF, kernelF, biasF, this.padding);\n      xC = this.inputConv(xC, kernelC, biasC, this.padding);\n      xO = this.inputConv(xO, kernelO, biasO, this.padding);\n\n      const [recKernelI, recKernelF, recKernelC, recKernelO]: tfc.Tensor[] =\n          tfc.split(\n              this.recurrentKernel.read(), numOfKernels, kernelChannelAxis);\n\n      hI = this.recurrentConv(hI, recKernelI);\n      hF = this.recurrentConv(hF, recKernelF);\n      hC = this.recurrentConv(hC, recKernelC);\n      hO = this.recurrentConv(hO, recKernelO);\n\n      const i = this.recurrentActivation.apply(tfc.add(xI, hI));\n      const f = this.recurrentActivation.apply(tfc.add(xF, hF));\n      const c = tfc.add(\n          tfc.mul(f, cTMinus1),\n          tfc.mul(i, this.activation.apply(tfc.add(xC, hC))));\n      const h = tfc.mul(\n          this.recurrentActivation.apply(tfc.add(xO, hO)),\n          this.activation.apply(c));\n\n      return [h, h, c];\n    });\n  }\n\n  getConfig(): tfc.serialization.ConfigDict {\n    const {'units': _, ...baseConfig} = super.getConfig();\n\n    const config: tfc.serialization.ConfigDict = {\n      filters: this.filters,\n      kernelSize: this.kernelSize,\n      padding: this.padding,\n      dataFormat: this.dataFormat,\n      dilationRate: this.dilationRate,\n      strides: this.strides,\n    };\n\n    return {...baseConfig, ...config};\n  }\n\n  inputConv(x: Tensor, w: Tensor, b?: Tensor, padding?: PaddingMode) {\n    const out = tfc.conv2d(\n        x as tfc.Tensor3D, w as tfc.Tensor4D, this.strides as [number, number],\n        (padding || 'valid') as 'same' | 'valid',\n        this.dataFormat === 'channelsFirst' ? 'NCHW' : 'NHWC',\n        this.dilationRate as [number, number]);\n\n    if (b) {\n      return K.biasAdd(out, b, this.dataFormat) as tfc.Tensor3D;\n    }\n\n    return out;\n  }\n\n  recurrentConv(x: Tensor, w: Tensor) {\n    const strides = 1;\n\n    return tfc.conv2d(\n        x as tfc.Tensor3D, w as tfc.Tensor4D, strides, 'same',\n        this.dataFormat === 'channelsFirst' ? 'NCHW' : 'NHWC');\n  }\n}\n\ntfc.serialization.registerClass(ConvLSTM2DCell);\n\nexport declare interface ConvLSTM2DArgs extends\n    Omit<LSTMLayerArgs, 'units'|'cell'>, ConvRNN2DLayerArgs {}\n\nexport class ConvLSTM2D extends ConvRNN2D {\n  /** @nocollapse */\n  static className = 'ConvLSTM2D';\n\n  constructor(args: ConvLSTM2DArgs) {\n    const cell = new ConvLSTM2DCell(args);\n\n    super({...args, cell} as ConvRNN2DLayerArgs);\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends tfc.serialization.Serializable>(\n      cls: tfc.serialization.SerializableConstructor<T>,\n      config: tfc.serialization.ConfigDict): T {\n    return new cls(config);\n  }\n}\n\ntfc.serialization.registerClass(ConvLSTM2D);\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * TensorFlow.js Layers: Recurrent Neural Network Layers.\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {DataType, serialization, Tensor, tidy, util} from '@tensorflow/tfjs-core';\n\nimport {Activation, getActivation, serializeActivation} from '../activations';\nimport * as K from '../backend/tfjs_backend';\nimport {nameScope} from '../common';\nimport {Constraint, ConstraintIdentifier, getConstraint, serializeConstraint} from '../constraints';\nimport {InputSpec, SymbolicTensor} from '../engine/topology';\nimport {Layer, LayerArgs} from '../engine/topology';\nimport {AttributeError, NotImplementedError, ValueError} from '../errors';\nimport {getInitializer, Initializer, InitializerIdentifier, Ones, serializeInitializer} from '../initializers';\nimport {ActivationIdentifier} from '../keras_format/activation_config';\nimport {Shape} from '../keras_format/common';\nimport {getRegularizer, Regularizer, RegularizerIdentifier, serializeRegularizer} from '../regularizers';\nimport {Kwargs, RnnStepFunction} from '../types';\nimport {assertPositiveInteger} from '../utils/generic_utils';\nimport * as math_utils from '../utils/math_utils';\nimport {getExactlyOneShape, getExactlyOneTensor, isArrayOfShapes} from '../utils/types_utils';\nimport {batchGetValue, batchSetValue, LayerVariable} from '../variables';\n\nimport {deserialize} from './serialization';\n\n/**\n * Standardize `apply()` args to a single list of tensor inputs.\n *\n * When running a model loaded from file, the input tensors `initialState` and\n * `constants` are passed to `RNN.apply()` as part of `inputs` instead of the\n * dedicated kwargs fields. `inputs` consists of\n * `[inputs, initialState0, initialState1, ..., constant0, constant1]` in this\n * case.\n * This method makes sure that arguments are\n * separated and that `initialState` and `constants` are `Array`s of tensors\n * (or None).\n *\n * @param inputs Tensor or `Array` of  tensors.\n * @param initialState Tensor or `Array` of tensors or `null`/`undefined`.\n * @param constants Tensor or `Array` of tensors or `null`/`undefined`.\n * @returns An object consisting of\n *   inputs: A tensor.\n *   initialState: `Array` of tensors or `null`.\n *   constants: `Array` of tensors or `null`.\n * @throws ValueError, if `inputs` is an `Array` but either `initialState` or\n *   `constants` is provided.\n */\nexport function standardizeArgs(\n    inputs: Tensor|Tensor[]|SymbolicTensor|SymbolicTensor[],\n    initialState: Tensor|Tensor[]|SymbolicTensor|SymbolicTensor[],\n    constants: Tensor|Tensor[]|SymbolicTensor|SymbolicTensor[],\n    numConstants?: number): {\n  inputs: Tensor|SymbolicTensor,\n  initialState: Tensor[]|SymbolicTensor[],\n  constants: Tensor[]|SymbolicTensor[]\n} {\n  if (Array.isArray(inputs)) {\n    if (initialState != null || constants != null) {\n      throw new ValueError(\n          'When inputs is an array, neither initialState or constants ' +\n          'should be provided');\n    }\n    if (numConstants != null) {\n      constants = inputs.slice(inputs.length - numConstants, inputs.length);\n      inputs = inputs.slice(0, inputs.length - numConstants);\n    }\n    if (inputs.length > 1) {\n      initialState = inputs.slice(1, inputs.length);\n    }\n    inputs = inputs[0];\n  }\n\n  function toListOrNull(x: Tensor|Tensor[]|SymbolicTensor|\n                        SymbolicTensor[]): Tensor[]|SymbolicTensor[] {\n    if (x == null || Array.isArray(x)) {\n      return x as Tensor[] | SymbolicTensor[];\n    } else {\n      return [x] as Tensor[] | SymbolicTensor[];\n    }\n  }\n\n  initialState = toListOrNull(initialState);\n  constants = toListOrNull(constants);\n\n  return {inputs, initialState, constants};\n}\n\n/**\n * Iterates over the time dimension of a tensor.\n *\n * @param stepFunction RNN step function.\n *   Parameters:\n *     inputs: tensor with shape `[samples, ...]` (no time dimension),\n *       representing input for the batch of samples at a certain time step.\n *     states: an Array of tensors.\n *   Returns:\n *     outputs: tensor with shape `[samples, outputDim]` (no time dimension).\n *     newStates: list of tensors, same length and shapes as `states`. The first\n *       state in the list must be the output tensor at the previous timestep.\n * @param inputs Tensor of temporal data of shape `[samples, time, ...]` (at\n *   least 3D).\n * @param initialStates Tensor with shape `[samples, outputDim]` (no time\n *   dimension), containing the initial values of the states used in the step\n *   function.\n * @param goBackwards If `true`, do the iteration over the time dimension in\n *   reverse order and return the reversed sequence.\n * @param mask Binary tensor with shape `[sample, time, 1]`, with a zero for\n *   every element that is masked.\n * @param constants An Array of constant values passed at each step.\n * @param unroll Whether to unroll the RNN or to use a symbolic loop. *Not*\n *   applicable to this imperative deeplearn.js backend. Its value is ignored.\n * @param needPerStepOutputs Whether the per-step outputs are to be\n *   concatenated into a single tensor and returned (as the second return\n *   value). Default: `false`. This arg is included so that the relatively\n *   expensive concatenation of the stepwise outputs can be omitted unless\n *   the stepwise outputs need to be kept (e.g., for an LSTM layer of which\n *   `returnSequence` is `true`.)\n * @returns An Array: `[lastOutput, outputs, newStates]`.\n *   lastOutput: the lastest output of the RNN, of shape `[samples, ...]`.\n *   outputs: tensor with shape `[samples, time, ...]` where each entry\n *     `output[s, t]` is the output of the step function at time `t` for sample\n *     `s`. This return value is provided if and only if the\n *     `needPerStepOutputs` is set as `true`. If it is set as `false`, this\n *     return value will be `undefined`.\n *   newStates: Array of tensors, latest states returned by the step function,\n *      of shape `(samples, ...)`.\n * @throws ValueError If input dimension is less than 3.\n *\n * TODO(nielsene): This needs to be tidy-ed.\n */\nexport function rnn(\n    stepFunction: RnnStepFunction, inputs: Tensor, initialStates: Tensor[],\n    goBackwards = false, mask?: Tensor, constants?: Tensor[], unroll = false,\n    needPerStepOutputs = false): [Tensor, Tensor, Tensor[]] {\n  return tfc.tidy(() => {\n    const ndim = inputs.shape.length;\n    if (ndim < 3) {\n      throw new ValueError(`Input should be at least 3D, but is ${ndim}D.`);\n    }\n\n    // Transpose to time-major, i.e., from [batch, time, ...] to [time, batch,\n    // ...].\n    const axes = [1, 0].concat(math_utils.range(2, ndim));\n    inputs = tfc.transpose(inputs, axes);\n\n    if (constants != null) {\n      throw new NotImplementedError(\n          'The rnn() functoin of the deeplearn.js backend does not support ' +\n          'constants yet.');\n    }\n\n    // Porting Note: the unroll option is ignored by the imperative backend.\n    if (unroll) {\n      console.warn(\n          'Backend rnn(): the unroll = true option is not applicable to the ' +\n          'imperative deeplearn.js backend.');\n    }\n\n    if (mask != null) {\n      mask = tfc.cast(tfc.cast(mask, 'bool'), 'float32');\n      if (mask.rank === ndim - 1) {\n        mask = tfc.expandDims(mask, -1);\n      }\n      mask = tfc.transpose(mask, axes);\n    }\n\n    if (goBackwards) {\n      inputs = tfc.reverse(inputs, 0);\n      if (mask != null) {\n        mask = tfc.reverse(mask, 0);\n      }\n    }\n\n    // Porting Note: PyKeras with TensorFlow backend uses a symbolic loop\n    //   (tf.while_loop). But for the imperative deeplearn.js backend, we just\n    //   use the usual TypeScript control flow to iterate over the time steps in\n    //   the inputs.\n    // Porting Note: PyKeras patches a \"_use_learning_phase\" attribute to\n    // outputs.\n    //   This is not idiomatic in TypeScript. The info regarding whether we are\n    //   in a learning (i.e., training) phase for RNN is passed in a different\n    //   way.\n\n    const perStepOutputs: Tensor[] = [];\n    let lastOutput: Tensor;\n    let states = initialStates;\n    const timeSteps = inputs.shape[0];\n    const perStepInputs = tfc.unstack(inputs);\n    let perStepMasks: Tensor[];\n    if (mask != null) {\n      perStepMasks = tfc.unstack(mask);\n    }\n\n    for (let t = 0; t < timeSteps; ++t) {\n      const currentInput = perStepInputs[t];\n      const stepOutputs = tfc.tidy(() => stepFunction(currentInput, states));\n\n      if (mask == null) {\n        lastOutput = stepOutputs[0];\n        states = stepOutputs[1];\n      } else {\n        const maskedOutputs = tfc.tidy(() => {\n          const stepMask = perStepMasks[t];\n          const negStepMask = tfc.sub(tfc.onesLike(stepMask), stepMask);\n          // TODO(cais): Would tfc.where() be better for performance?\n          const output = tfc.add(\n              tfc.mul(stepOutputs[0], stepMask),\n              tfc.mul(states[0], negStepMask));\n          const newStates = states.map((state, i) => {\n            return tfc.add(\n                tfc.mul(stepOutputs[1][i], stepMask),\n                tfc.mul(state, negStepMask));\n          });\n          return {output, newStates};\n        });\n        lastOutput = maskedOutputs.output;\n        states = maskedOutputs.newStates;\n      }\n\n      if (needPerStepOutputs) {\n        perStepOutputs.push(lastOutput);\n      }\n    }\n    let outputs: Tensor;\n    if (needPerStepOutputs) {\n      const axis = 1;\n      outputs = tfc.stack(perStepOutputs, axis);\n    }\n    return [lastOutput, outputs, states] as [Tensor, Tensor, Tensor[]];\n  });\n}\n\nexport declare interface BaseRNNLayerArgs extends LayerArgs {\n  /**\n   * A RNN cell instance. A RNN cell is a class that has:\n   *   - a `call()` method, which takes `[Tensor, Tensor]` as the\n   *     first input argument. The first item is the input at time t, and\n   *     second item is the cell state at time t.\n   *     The `call()` method returns `[outputAtT, statesAtTPlus1]`.\n   *     The `call()` method of the cell can also take the argument `constants`,\n   *     see section \"Note on passing external constants\" below.\n   *     Porting Node: PyKeras overrides the `call()` signature of RNN cells,\n   *       which are Layer subtypes, to accept two arguments. tfjs-layers does\n   *       not do such overriding. Instead we preseve the `call()` signature,\n   *       which due to its `Tensor|Tensor[]` argument and return value, is\n   *       flexible enough to handle the inputs and states.\n   *   - a `stateSize` attribute. This can be a single integer (single state)\n   *     in which case it is the size of the recurrent state (which should be\n   *     the same as the size of the cell output). This can also be an Array of\n   *     integers (one size per state). In this case, the first entry\n   *     (`stateSize[0]`) should be the same as the size of the cell output.\n   * It is also possible for `cell` to be a list of RNN cell instances, in which\n   * case the cells get stacked on after the other in the RNN, implementing an\n   * efficient stacked RNN.\n   */\n  cell?: RNNCell|RNNCell[];\n\n  /**\n   * Whether to return the last output in the output sequence, or the full\n   * sequence.\n   */\n  returnSequences?: boolean;\n\n  /**\n   * Whether to return the last state in addition to the output.\n   */\n  returnState?: boolean;\n\n  /**\n   * If `true`, process the input sequence backwards and return the reversed\n   * sequence (default: `false`).\n   */\n  goBackwards?: boolean;\n\n  /**\n   * If `true`, the last state for each sample at index i in a batch will be\n   * used as initial state of the sample of index i in the following batch\n   * (default: `false`).\n   *\n   * You can set RNN layers to be \"stateful\", which means that the states\n   * computed for the samples in one batch will be reused as initial states\n   * for the samples in the next batch. This assumes a one-to-one mapping\n   * between samples in different successive batches.\n   *\n   * To enable \"statefulness\":\n   *   - specify `stateful: true` in the layer constructor.\n   *   - specify a fixed batch size for your model, by passing\n   *     - if sequential model:\n   *       `batchInputShape: [...]` to the first layer in your model.\n   *     - else for functional model with 1 or more Input layers:\n   *       `batchShape: [...]` to all the first layers in your model.\n   *     This is the expected shape of your inputs\n   *     *including the batch size*.\n   *     It should be a tuple of integers, e.g., `[32, 10, 100]`.\n   *   - specify `shuffle: false` when calling `LayersModel.fit()`.\n   *\n   * To reset the state of your model, call `resetStates()` on either the\n   * specific layer or on the entire model.\n   */\n  stateful?: boolean;\n  // TODO(cais): Explore whether we can warn users when they fail to set\n  //   `shuffle: false` when training a model consisting of stateful RNNs\n  //   and any stateful Layers in general.\n\n  /**\n   * If `true`, the network will be unrolled, else a symbolic loop will be\n   * used. Unrolling can speed-up a RNN, although it tends to be more memory-\n   * intensive. Unrolling is only suitable for short sequences (default:\n   * `false`).\n   * Porting Note: tfjs-layers has an imperative backend. RNNs are executed with\n   *   normal TypeScript control flow. Hence this property is inapplicable and\n   *   ignored in tfjs-layers.\n   */\n  unroll?: boolean;\n\n  /**\n   * Dimensionality of the input (integer).\n   *   This option (or alternatively, the option `inputShape`) is required when\n   *   this layer is used as the first layer in a model.\n   */\n  inputDim?: number;\n\n  /**\n   * Length of the input sequences, to be specified when it is constant.\n   * This argument is required if you are going to connect `Flatten` then\n   * `Dense` layers upstream (without it, the shape of the dense outputs cannot\n   * be computed). Note that if the recurrent layer is not the first layer in\n   * your model, you would need to specify the input length at the level of the\n   * first layer (e.g., via the `inputShape` option).\n   */\n  inputLength?: number;\n}\n\nexport class RNN extends Layer {\n  /** @nocollapse */\n  static className = 'RNN';\n  public readonly cell: RNNCell;\n  public readonly returnSequences: boolean;\n  public readonly returnState: boolean;\n  public readonly goBackwards: boolean;\n  public readonly unroll: boolean;\n\n  public stateSpec: InputSpec[];\n  protected states_: Tensor[];\n\n  // NOTE(cais): For stateful RNNs, the old states cannot be disposed right\n  // away when new states are set, because the old states may need to be used\n  // later for backpropagation through time (BPTT) and other purposes. So we\n  // keep them here for final disposal when the state is reset completely\n  // (i.e., through no-arg call to `resetStates()`).\n  protected keptStates: Tensor[][];\n\n  private numConstants: number;\n\n  constructor(args: RNNLayerArgs) {\n    super(args);\n    let cell: RNNCell;\n    if (args.cell == null) {\n      throw new ValueError(\n          'cell property is missing for the constructor of RNN.');\n    } else if (Array.isArray(args.cell)) {\n      cell = new StackedRNNCells({cells: args.cell});\n    } else {\n      cell = args.cell;\n    }\n    if (cell.stateSize == null) {\n      throw new ValueError(\n          'The RNN cell should have an attribute `stateSize` (tuple of ' +\n          'integers, one integer per RNN state).');\n    }\n    this.cell = cell;\n    this.returnSequences =\n        args.returnSequences == null ? false : args.returnSequences;\n    this.returnState = args.returnState == null ? false : args.returnState;\n    this.goBackwards = args.goBackwards == null ? false : args.goBackwards;\n    this._stateful = args.stateful == null ? false : args.stateful;\n    this.unroll = args.unroll == null ? false : args.unroll;\n\n    this.supportsMasking = true;\n    this.inputSpec = [new InputSpec({ndim: 3})];\n    this.stateSpec = null;\n    this.states_ = null;\n    // TODO(cais): Add constantsSpec and numConstants.\n    this.numConstants = null;\n    // TODO(cais): Look into the use of initial_state in the kwargs of the\n    //   constructor.\n\n    this.keptStates = [];\n  }\n\n  // Porting Note: This is the equivalent of `RNN.states` property getter in\n  //   PyKeras.\n  getStates(): Tensor[] {\n    if (this.states_ == null) {\n      const numStates =\n          Array.isArray(this.cell.stateSize) ? this.cell.stateSize.length : 1;\n      return math_utils.range(0, numStates).map(x => null);\n    } else {\n      return this.states_;\n    }\n  }\n\n  // Porting Note: This is the equivalent of the `RNN.states` property setter in\n  //   PyKeras.\n  setStates(states: Tensor[]): void {\n    this.states_ = states;\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    if (isArrayOfShapes(inputShape)) {\n      inputShape = (inputShape as Shape[])[0];\n    }\n    inputShape = inputShape as Shape;\n\n    // TODO(cais): Remove the casting once stacked RNN cells become supported.\n    let stateSize = this.cell.stateSize;\n    if (!Array.isArray(stateSize)) {\n      stateSize = [stateSize];\n    }\n    const outputDim = stateSize[0];\n    let outputShape: Shape|Shape[];\n    if (this.returnSequences) {\n      outputShape = [inputShape[0], inputShape[1], outputDim];\n    } else {\n      outputShape = [inputShape[0], outputDim];\n    }\n\n    if (this.returnState) {\n      const stateShape: Shape[] = [];\n      for (const dim of stateSize) {\n        stateShape.push([inputShape[0], dim]);\n      }\n      return [outputShape].concat(stateShape);\n    } else {\n      return outputShape;\n    }\n  }\n\n  computeMask(inputs: Tensor|Tensor[], mask?: Tensor|Tensor[]): Tensor\n      |Tensor[] {\n    return tfc.tidy(() => {\n      if (Array.isArray(mask)) {\n        mask = mask[0];\n      }\n      const outputMask = this.returnSequences ? mask : null;\n\n      if (this.returnState) {\n        const stateMask = this.states.map(s => null);\n        return [outputMask].concat(stateMask);\n      } else {\n        return outputMask;\n      }\n    });\n  }\n\n  /**\n   * Get the current state tensors of the RNN.\n   *\n   * If the state hasn't been set, return an array of `null`s of the correct\n   * length.\n   */\n  get states(): Tensor[] {\n    if (this.states_ == null) {\n      const numStates =\n          Array.isArray(this.cell.stateSize) ? this.cell.stateSize.length : 1;\n      const output: Tensor[] = [];\n      for (let i = 0; i < numStates; ++i) {\n        output.push(null);\n      }\n      return output;\n    } else {\n      return this.states_;\n    }\n  }\n\n  set states(s: Tensor[]) {\n    this.states_ = s;\n  }\n\n  public build(inputShape: Shape|Shape[]): void {\n    // Note inputShape will be an Array of Shapes of initial states and\n    // constants if these are passed in apply().\n    const constantShape: Shape[] = null;\n    if (this.numConstants != null) {\n      throw new NotImplementedError(\n          'Constants support is not implemented in RNN yet.');\n    }\n\n    if (isArrayOfShapes(inputShape)) {\n      inputShape = (inputShape as Shape[])[0];\n    }\n    inputShape = inputShape as Shape;\n\n    const batchSize: number = this.stateful ? inputShape[0] : null;\n    const inputDim = inputShape.slice(2);\n    this.inputSpec[0] = new InputSpec({shape: [batchSize, null, ...inputDim]});\n\n    // Allow cell (if RNNCell Layer) to build before we set or validate\n    // stateSpec.\n    const stepInputShape = [inputShape[0]].concat(inputShape.slice(2));\n    if (constantShape != null) {\n      throw new NotImplementedError(\n          'Constants support is not implemented in RNN yet.');\n    } else {\n      this.cell.build(stepInputShape);\n    }\n\n    // Set or validate stateSpec.\n    let stateSize: number[];\n    if (Array.isArray(this.cell.stateSize)) {\n      stateSize = this.cell.stateSize;\n    } else {\n      stateSize = [this.cell.stateSize];\n    }\n\n    if (this.stateSpec != null) {\n      if (!util.arraysEqual(\n              this.stateSpec.map(spec => spec.shape[spec.shape.length - 1]),\n              stateSize)) {\n        throw new ValueError(\n            `An initialState was passed that is not compatible with ` +\n            `cell.stateSize. Received stateSpec=${this.stateSpec}; ` +\n            `However cell.stateSize is ${this.cell.stateSize}`);\n      }\n    } else {\n      this.stateSpec =\n          stateSize.map(dim => new InputSpec({shape: [null, dim]}));\n    }\n    if (this.stateful) {\n      this.resetStates();\n    }\n  }\n\n  /**\n   * Reset the state tensors of the RNN.\n   *\n   * If the `states` argument is `undefined` or `null`, will set the\n   * state tensor(s) of the RNN to all-zero tensors of the appropriate\n   * shape(s).\n   *\n   * If `states` is provided, will set the state tensors of the RNN to its\n   * value.\n   *\n   * @param states Optional externally-provided initial states.\n   * @param training Whether this call is done during training. For stateful\n   *   RNNs, this affects whether the old states are kept or discarded. In\n   *   particular, if `training` is `true`, the old states will be kept so\n   *   that subsequent backpropgataion through time (BPTT) may work properly.\n   *   Else, the old states will be discarded.\n   */\n  resetStates(states?: Tensor|Tensor[], training = false): void {\n    tidy(() => {\n      if (!this.stateful) {\n        throw new AttributeError(\n            'Cannot call resetStates() on an RNN Layer that is not stateful.');\n      }\n      const batchSize = this.inputSpec[0].shape[0];\n      if (batchSize == null) {\n        throw new ValueError(\n            'If an RNN is stateful, it needs to know its batch size. Specify ' +\n            'the batch size of your input tensors: \\n' +\n            '- If using a Sequential model, specify the batch size by ' +\n            'passing a `batchInputShape` option to your first layer.\\n' +\n            '- If using the functional API, specify the batch size by ' +\n            'passing a `batchShape` option to your Input layer.');\n      }\n      // Initialize state if null.\n      if (this.states_ == null) {\n        if (Array.isArray(this.cell.stateSize)) {\n          this.states_ =\n              this.cell.stateSize.map(dim => tfc.zeros([batchSize, dim]));\n        } else {\n          this.states_ = [tfc.zeros([batchSize, this.cell.stateSize])];\n        }\n      } else if (states == null) {\n        // Dispose old state tensors.\n        tfc.dispose(this.states_);\n        // For stateful RNNs, fully dispose kept old states.\n        if (this.keptStates != null) {\n          tfc.dispose(this.keptStates);\n          this.keptStates = [];\n        }\n\n        if (Array.isArray(this.cell.stateSize)) {\n          this.states_ =\n              this.cell.stateSize.map(dim => tfc.zeros([batchSize, dim]));\n        } else {\n          this.states_[0] = tfc.zeros([batchSize, this.cell.stateSize]);\n        }\n      } else {\n        if (!Array.isArray(states)) {\n          states = [states];\n        }\n        if (states.length !== this.states_.length) {\n          throw new ValueError(\n              `Layer ${this.name} expects ${this.states_.length} state(s), ` +\n              `but it received ${states.length} state value(s). Input ` +\n              `received: ${states}`);\n        }\n\n        if (training === true) {\n          // Store old state tensors for complete disposal later, i.e., during\n          // the next no-arg call to this method. We do not dispose the old\n          // states immediately because that BPTT (among other things) require\n          // them.\n          this.keptStates.push(this.states_.slice());\n        } else {\n          tfc.dispose(this.states_);\n        }\n\n        for (let index = 0; index < this.states_.length; ++index) {\n          const value = states[index];\n          const dim = Array.isArray(this.cell.stateSize) ?\n              this.cell.stateSize[index] :\n              this.cell.stateSize;\n          const expectedShape = [batchSize, dim];\n          if (!util.arraysEqual(value.shape, expectedShape)) {\n            throw new ValueError(\n                `State ${index} is incompatible with layer ${this.name}: ` +\n                `expected shape=${expectedShape}, received shape=${\n                    value.shape}`);\n          }\n          this.states_[index] = value;\n        }\n      }\n      this.states_ = this.states_.map(state => tfc.keep(state.clone()));\n    });\n  }\n\n  apply(\n      inputs: Tensor|Tensor[]|SymbolicTensor|SymbolicTensor[],\n      kwargs?: Kwargs): Tensor|Tensor[]|SymbolicTensor|SymbolicTensor[] {\n    // TODO(cais): Figure out whether initialState is in kwargs or inputs.\n    let initialState: Tensor[]|SymbolicTensor[] =\n        kwargs == null ? null : kwargs['initialState'];\n    let constants: Tensor[]|SymbolicTensor[] =\n        kwargs == null ? null : kwargs['constants'];\n    if (kwargs == null) {\n      kwargs = {};\n    }\n\n    const standardized =\n        standardizeArgs(inputs, initialState, constants, this.numConstants);\n    inputs = standardized.inputs;\n    initialState = standardized.initialState;\n    constants = standardized.constants;\n\n    // If any of `initial_state` or `constants` are specified and are\n    // `tf.SymbolicTensor`s, then add them to the inputs and temporarily modify\n    // the input_spec to include them.\n\n    let additionalInputs: Array<Tensor|SymbolicTensor> = [];\n    let additionalSpecs: InputSpec[] = [];\n    if (initialState != null) {\n      kwargs['initialState'] = initialState;\n      additionalInputs = additionalInputs.concat(initialState);\n      this.stateSpec = [];\n      for (const state of initialState) {\n        this.stateSpec.push(new InputSpec({shape: state.shape}));\n      }\n      // TODO(cais): Use the following instead.\n      // this.stateSpec = initialState.map(state => new InputSpec({shape:\n      // state.shape}));\n      additionalSpecs = additionalSpecs.concat(this.stateSpec);\n    }\n    if (constants != null) {\n      kwargs['constants'] = constants;\n      additionalInputs = additionalInputs.concat(constants);\n      // TODO(cais): Add this.constantsSpec.\n      this.numConstants = constants.length;\n    }\n\n    const isTensor = additionalInputs[0] instanceof SymbolicTensor;\n    if (isTensor) {\n      // Compute full input spec, including state and constants.\n      const fullInput =\n          [inputs].concat(additionalInputs) as Tensor[] | SymbolicTensor[];\n      const fullInputSpec = this.inputSpec.concat(additionalSpecs);\n      // Perform the call with temporarily replaced inputSpec.\n      const originalInputSpec = this.inputSpec;\n      this.inputSpec = fullInputSpec;\n      const output = super.apply(fullInput, kwargs);\n      this.inputSpec = originalInputSpec;\n      return output;\n    } else {\n      return super.apply(inputs, kwargs);\n    }\n  }\n\n  // tslint:disable-next-line:no-any\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    // Input shape: `[samples, time (padded with zeros), input_dim]`.\n    // Note that the .build() method of subclasses **must** define\n    // this.inputSpec and this.stateSpec owith complete input shapes.\n    return tidy(() => {\n      const mask = kwargs == null ? null : kwargs['mask'] as Tensor;\n      const training = kwargs == null ? null : kwargs['training'];\n      let initialState: Tensor[] =\n          kwargs == null ? null : kwargs['initialState'];\n\n      inputs = getExactlyOneTensor(inputs);\n      if (initialState == null) {\n        if (this.stateful) {\n          initialState = this.states_;\n        } else {\n          initialState = this.getInitialState(inputs);\n        }\n      }\n\n      const numStates =\n          Array.isArray(this.cell.stateSize) ? this.cell.stateSize.length : 1;\n      if (initialState.length !== numStates) {\n        throw new ValueError(\n            `RNN Layer has ${numStates} state(s) but was passed ` +\n            `${initialState.length} initial state(s).`);\n      }\n      if (this.unroll) {\n        console.warn(\n            'Ignoring unroll = true for RNN layer, due to imperative backend.');\n      }\n\n      const cellCallKwargs: Kwargs = {training};\n\n      // TODO(cais): Add support for constants.\n      const step = (inputs: Tensor, states: Tensor[]) => {\n        // `inputs` and `states` are concatenated to form a single `Array` of\n        // `tf.Tensor`s as the input to `cell.call()`.\n        const outputs =\n            this.cell.call([inputs].concat(states), cellCallKwargs) as Tensor[];\n        // Marshall the return value into output and new states.\n        return [outputs[0], outputs.slice(1)] as [Tensor, Tensor[]];\n      };\n\n      // TODO(cais): Add support for constants.\n\n      const rnnOutputs =\n          rnn(step, inputs, initialState, this.goBackwards, mask, null,\n              this.unroll, this.returnSequences);\n      const lastOutput = rnnOutputs[0];\n      const outputs = rnnOutputs[1];\n      const states = rnnOutputs[2];\n\n      if (this.stateful) {\n        this.resetStates(states, training);\n      }\n\n      const output = this.returnSequences ? outputs : lastOutput;\n\n      // TODO(cais): Porperty set learning phase flag.\n\n      if (this.returnState) {\n        return [output].concat(states);\n      } else {\n        return output;\n      }\n    });\n  }\n\n  getInitialState(inputs: Tensor): Tensor[] {\n    return tidy(() => {\n      // Build an all-zero tensor of shape [samples, outputDim].\n      // [Samples, timeSteps, inputDim].\n      let initialState = tfc.zeros(inputs.shape);\n      // [Samples].\n      initialState = tfc.sum(initialState, [1, 2]);\n      initialState = K.expandDims(initialState);  // [Samples, 1].\n\n      if (Array.isArray(this.cell.stateSize)) {\n        return this.cell.stateSize.map(\n            dim => dim > 1 ? K.tile(initialState, [1, dim]) : initialState);\n      } else {\n        return this.cell.stateSize > 1 ?\n            [K.tile(initialState, [1, this.cell.stateSize])] :\n            [initialState];\n      }\n    });\n  }\n\n  get trainableWeights(): LayerVariable[] {\n    if (!this.trainable) {\n      return [];\n    }\n    // Porting Note: In TypeScript, `this` is always an instance of `Layer`.\n    return this.cell.trainableWeights;\n  }\n\n  get nonTrainableWeights(): LayerVariable[] {\n    // Porting Note: In TypeScript, `this` is always an instance of `Layer`.\n    if (!this.trainable) {\n      return this.cell.weights;\n    }\n    return this.cell.nonTrainableWeights;\n  }\n\n  setFastWeightInitDuringBuild(value: boolean) {\n    super.setFastWeightInitDuringBuild(value);\n    if (this.cell != null) {\n      this.cell.setFastWeightInitDuringBuild(value);\n    }\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const baseConfig = super.getConfig();\n\n    const config: serialization.ConfigDict = {\n      returnSequences: this.returnSequences,\n      returnState: this.returnState,\n      goBackwards: this.goBackwards,\n      stateful: this.stateful,\n      unroll: this.unroll,\n    };\n\n    if (this.numConstants != null) {\n      config['numConstants'] = this.numConstants;\n    }\n\n    const cellConfig = this.cell.getConfig();\n\n    if (this.getClassName() === RNN.className) {\n      config['cell'] = {\n        'className': this.cell.getClassName(),\n        'config': cellConfig,\n      } as serialization.ConfigDictValue;\n    }\n\n    // this order is necessary, to prevent cell name from replacing layer name\n    return {...cellConfig, ...baseConfig, ...config};\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends serialization.Serializable>(\n      cls: serialization.SerializableConstructor<T>,\n      config: serialization.ConfigDict,\n      customObjects = {} as serialization.ConfigDict): T {\n    const cellConfig = config['cell'] as serialization.ConfigDict;\n    const cell = deserialize(cellConfig, customObjects) as RNNCell;\n    return new cls(Object.assign(config, {cell}));\n  }\n}\nserialization.registerClass(RNN);\n\n// Porting Note: This is a common parent class for RNN cells. There is no\n// equivalent of this in PyKeras. Having a common parent class forgoes the\n//  need for `has_attr(cell, ...)` checks or its TypeScript equivalent.\n/**\n * An RNNCell layer.\n *\n * @doc {heading: 'Layers', subheading: 'Classes'}\n */\nexport abstract class RNNCell extends Layer {\n  /**\n   * Size(s) of the states.\n   * For RNN cells with only a single state, this is a single integer.\n   */\n  // See\n  // https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-0.html#properties-overriding-accessors-and-vice-versa-is-an-error\n  public abstract stateSize: number|number[];\n  public dropoutMask: Tensor|Tensor[];\n  public recurrentDropoutMask: Tensor|Tensor[];\n}\n\nexport declare interface SimpleRNNCellLayerArgs extends LayerArgs {\n  /**\n   * units: Positive integer, dimensionality of the output space.\n   */\n  units: number;\n\n  /**\n   * Activation function to use.\n   * Default: hyperbolic tangent ('tanh').\n   * If you pass `null`,  'linear' activation will be applied.\n   */\n  activation?: ActivationIdentifier;\n\n  /**\n   * Whether the layer uses a bias vector.\n   */\n  useBias?: boolean;\n\n  /**\n   * Initializer for the `kernel` weights matrix, used for the linear\n   * transformation of the inputs.\n   */\n  kernelInitializer?: InitializerIdentifier|Initializer;\n\n  /**\n   * Initializer for the `recurrentKernel` weights matrix, used for\n   * linear transformation of the recurrent state.\n   */\n  recurrentInitializer?: InitializerIdentifier|Initializer;\n\n  /**\n   * Initializer for the bias vector.\n   */\n  biasInitializer?: InitializerIdentifier|Initializer;\n\n  /**\n   * Regularizer function applied to the `kernel` weights matrix.\n   */\n  kernelRegularizer?: RegularizerIdentifier|Regularizer;\n\n  /**\n   * Regularizer function applied to the `recurrent_kernel` weights matrix.\n   */\n  recurrentRegularizer?: RegularizerIdentifier|Regularizer;\n\n  /**\n   * Regularizer function applied to the bias vector.\n   */\n  biasRegularizer?: RegularizerIdentifier|Regularizer;\n\n  /**\n   * Constraint function applied to the `kernel` weights matrix.\n   */\n  kernelConstraint?: ConstraintIdentifier|Constraint;\n\n  /**\n   * Constraint function applied to the `recurrentKernel` weights matrix.\n   */\n  recurrentConstraint?: ConstraintIdentifier|Constraint;\n\n  /**\n   * Constraintfunction applied to the bias vector.\n   */\n  biasConstraint?: ConstraintIdentifier|Constraint;\n\n  /**\n   * Float number between 0 and 1. Fraction of the units to drop for the linear\n   * transformation of the inputs.\n   */\n  dropout?: number;\n\n  /**\n   * Float number between 0 and 1. Fraction of the units to drop for the linear\n   * transformation of the recurrent state.\n   */\n  recurrentDropout?: number;\n\n  /**\n   * This is added for test DI purpose.\n   */\n  dropoutFunc?: Function;\n}\n\nexport class SimpleRNNCell extends RNNCell {\n  /** @nocollapse */\n  static className = 'SimpleRNNCell';\n  readonly units: number;\n  readonly activation: Activation;\n  readonly useBias: boolean;\n\n  readonly kernelInitializer: Initializer;\n  readonly recurrentInitializer: Initializer;\n  readonly biasInitializer: Initializer;\n\n  readonly kernelConstraint: Constraint;\n  readonly recurrentConstraint: Constraint;\n  readonly biasConstraint: Constraint;\n\n  readonly kernelRegularizer: Regularizer;\n  readonly recurrentRegularizer: Regularizer;\n  readonly biasRegularizer: Regularizer;\n\n  readonly dropout: number;\n  readonly recurrentDropout: number;\n  readonly dropoutFunc: Function;\n\n  readonly stateSize: number;\n\n  kernel: LayerVariable;\n  recurrentKernel: LayerVariable;\n  bias: LayerVariable;\n\n  readonly DEFAULT_ACTIVATION = 'tanh';\n  readonly DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n  readonly DEFAULT_RECURRENT_INITIALIZER = 'orthogonal';\n  readonly DEFAULT_BIAS_INITIALIZER: InitializerIdentifier = 'zeros';\n\n  constructor(args: SimpleRNNCellLayerArgs) {\n    super(args);\n    this.units = args.units;\n    assertPositiveInteger(this.units, `units`);\n    this.activation = getActivation(\n        args.activation == null ? this.DEFAULT_ACTIVATION : args.activation);\n    this.useBias = args.useBias == null ? true : args.useBias;\n\n    this.kernelInitializer = getInitializer(\n        args.kernelInitializer || this.DEFAULT_KERNEL_INITIALIZER);\n    this.recurrentInitializer = getInitializer(\n        args.recurrentInitializer || this.DEFAULT_RECURRENT_INITIALIZER);\n\n    this.biasInitializer =\n        getInitializer(args.biasInitializer || this.DEFAULT_BIAS_INITIALIZER);\n\n    this.kernelRegularizer = getRegularizer(args.kernelRegularizer);\n    this.recurrentRegularizer = getRegularizer(args.recurrentRegularizer);\n    this.biasRegularizer = getRegularizer(args.biasRegularizer);\n\n    this.kernelConstraint = getConstraint(args.kernelConstraint);\n    this.recurrentConstraint = getConstraint(args.recurrentConstraint);\n    this.biasConstraint = getConstraint(args.biasConstraint);\n\n    this.dropout = math_utils.min(\n        [1, math_utils.max([0, args.dropout == null ? 0 : args.dropout])]);\n    this.recurrentDropout = math_utils.min([\n      1,\n      math_utils.max(\n          [0, args.recurrentDropout == null ? 0 : args.recurrentDropout])\n    ]);\n    this.dropoutFunc = args.dropoutFunc;\n    this.stateSize = this.units;\n    this.dropoutMask = null;\n    this.recurrentDropoutMask = null;\n  }\n\n  build(inputShape: Shape|Shape[]): void {\n    inputShape = getExactlyOneShape(inputShape);\n    // TODO(cais): Use regularizer.\n    this.kernel = this.addWeight(\n        'kernel', [inputShape[inputShape.length - 1], this.units], null,\n        this.kernelInitializer, this.kernelRegularizer, true,\n        this.kernelConstraint);\n    this.recurrentKernel = this.addWeight(\n        'recurrent_kernel', [this.units, this.units], null,\n        this.recurrentInitializer, this.recurrentRegularizer, true,\n        this.recurrentConstraint);\n    if (this.useBias) {\n      this.bias = this.addWeight(\n          'bias', [this.units], null, this.biasInitializer,\n          this.biasRegularizer, true, this.biasConstraint);\n    } else {\n      this.bias = null;\n    }\n    this.built = true;\n  }\n\n  // Porting Note: PyKeras' equivalent of this method takes two tensor inputs:\n  //   `inputs` and `states`. Here, the two tensors are combined into an\n  //   `Tensor[]` Array as the first input argument.\n  //   Similarly, PyKeras' equivalent of this method returns two values:\n  //    `output` and `[output]`. Here the two are combined into one length-2\n  //    `Tensor[]`, consisting of `output` repeated.\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      inputs = inputs as Tensor[];\n      if (inputs.length !== 2) {\n        throw new ValueError(\n            `SimpleRNNCell expects 2 input Tensors, got ${inputs.length}.`);\n      }\n      let prevOutput = inputs[1];\n      inputs = inputs[0];\n      const training = kwargs['training'] == null ? false : kwargs['training'];\n\n      if (0 < this.dropout && this.dropout < 1 && this.dropoutMask == null) {\n        this.dropoutMask = generateDropoutMask({\n                             ones: () => tfc.onesLike(inputs as Tensor),\n                             rate: this.dropout,\n                             training,\n                             dropoutFunc: this.dropoutFunc,\n                           }) as Tensor;\n      }\n      if (0 < this.recurrentDropout && this.recurrentDropout < 1 &&\n          this.recurrentDropoutMask == null) {\n        this.recurrentDropoutMask = generateDropoutMask({\n                                      ones: () => tfc.onesLike(prevOutput),\n                                      rate: this.recurrentDropout,\n                                      training,\n                                      dropoutFunc: this.dropoutFunc,\n                                    }) as Tensor;\n      }\n      let h: Tensor;\n      const dpMask: Tensor = this.dropoutMask as Tensor;\n      const recDpMask: Tensor = this.recurrentDropoutMask as Tensor;\n      if (dpMask != null) {\n        h = K.dot(tfc.mul(inputs, dpMask), this.kernel.read());\n      } else {\n        h = K.dot(inputs, this.kernel.read());\n      }\n      if (this.bias != null) {\n        h = K.biasAdd(h, this.bias.read());\n      }\n      if (recDpMask != null) {\n        prevOutput = tfc.mul(prevOutput, recDpMask);\n      }\n      let output = tfc.add(h, K.dot(prevOutput, this.recurrentKernel.read()));\n      if (this.activation != null) {\n        output = this.activation.apply(output);\n      }\n\n      // TODO(cais): Properly set learning phase on output tensor?\n      return [output, output];\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const baseConfig = super.getConfig();\n\n    const config: serialization.ConfigDict = {\n      units: this.units,\n      activation: serializeActivation(this.activation),\n      useBias: this.useBias,\n      kernelInitializer: serializeInitializer(this.kernelInitializer),\n      recurrentInitializer: serializeInitializer(this.recurrentInitializer),\n      biasInitializer: serializeInitializer(this.biasInitializer),\n      kernelRegularizer: serializeRegularizer(this.kernelRegularizer),\n      recurrentRegularizer: serializeRegularizer(this.recurrentRegularizer),\n      biasRegularizer: serializeRegularizer(this.biasRegularizer),\n      activityRegularizer: serializeRegularizer(this.activityRegularizer),\n      kernelConstraint: serializeConstraint(this.kernelConstraint),\n      recurrentConstraint: serializeConstraint(this.recurrentConstraint),\n      biasConstraint: serializeConstraint(this.biasConstraint),\n      dropout: this.dropout,\n      recurrentDropout: this.recurrentDropout,\n    };\n\n    return {...baseConfig, ...config};\n  }\n}\nserialization.registerClass(SimpleRNNCell);\n\nexport declare interface SimpleRNNLayerArgs extends BaseRNNLayerArgs {\n  /**\n   * Positive integer, dimensionality of the output space.\n   */\n  units: number;\n\n  /**\n   * Activation function to use.\n   *\n   * Defaults to  hyperbolic tangent (`tanh`)\n   *\n   * If you pass `null`, no activation will be applied.\n   */\n  activation?: ActivationIdentifier;\n\n  /**\n   * Whether the layer uses a bias vector.\n   */\n  useBias?: boolean;\n\n  /**\n   * Initializer for the `kernel` weights matrix, used for the linear\n   * transformation of the inputs.\n   */\n  kernelInitializer?: InitializerIdentifier|Initializer;\n\n  /**\n   * Initializer for the `recurrentKernel` weights matrix, used for\n   * linear transformation of the recurrent state.\n   */\n  recurrentInitializer?: InitializerIdentifier|Initializer;\n\n  /**\n   * Initializer for the bias vector.\n   */\n  biasInitializer?: InitializerIdentifier|Initializer;\n\n  /**\n   * Regularizer function applied to the kernel weights matrix.\n   */\n  kernelRegularizer?: RegularizerIdentifier|Regularizer;\n\n  /**\n   * Regularizer function applied to the recurrentKernel weights matrix.\n   */\n  recurrentRegularizer?: RegularizerIdentifier|Regularizer;\n\n  /**\n   * Regularizer function applied to the bias vector.\n   */\n  biasRegularizer?: RegularizerIdentifier|Regularizer;\n\n  /**\n   * Constraint function applied to the kernel weights matrix.\n   */\n  kernelConstraint?: ConstraintIdentifier|Constraint;\n\n  /**\n   * Constraint function applied to the recurrentKernel weights matrix.\n   */\n  recurrentConstraint?: ConstraintIdentifier|Constraint;\n\n  /**\n   * Constraint function applied to the bias vector.\n   */\n  biasConstraint?: ConstraintIdentifier|Constraint;\n\n  /**\n   * Number between 0 and 1. Fraction of the units to drop for the linear\n   * transformation of the inputs.\n   */\n  dropout?: number;\n\n  /**\n   * Number between 0 and 1. Fraction of the units to drop for the linear\n   * transformation of the recurrent state.\n   */\n  recurrentDropout?: number;\n\n  /**\n   * This is added for test DI purpose.\n   */\n  dropoutFunc?: Function;\n}\n\n/**\n * RNNLayerConfig is identical to BaseRNNLayerConfig, except it makes the\n * `cell` property required. This interface is to be used with constructors\n * of concrete RNN layer subtypes.\n */\nexport declare interface RNNLayerArgs extends BaseRNNLayerArgs {\n  cell: RNNCell|RNNCell[];\n}\n\nexport class SimpleRNN extends RNN {\n  /** @nocollapse */\n  static className = 'SimpleRNN';\n  constructor(args: SimpleRNNLayerArgs) {\n    args.cell = new SimpleRNNCell(args);\n    super(args as RNNLayerArgs);\n    // TODO(cais): Add activityRegularizer.\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      if (this.cell.dropoutMask != null) {\n        tfc.dispose(this.cell.dropoutMask);\n        this.cell.dropoutMask = null;\n      }\n      if (this.cell.recurrentDropoutMask != null) {\n        tfc.dispose(this.cell.recurrentDropoutMask);\n        this.cell.recurrentDropoutMask = null;\n      }\n      const mask = kwargs == null ? null : kwargs['mask'];\n      const training = kwargs == null ? null : kwargs['training'];\n      const initialState: Tensor[] =\n          kwargs == null ? null : kwargs['initialState'];\n      return super.call(inputs, {mask, training, initialState});\n    });\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends serialization.Serializable>(\n      cls: serialization.SerializableConstructor<T>,\n      config: serialization.ConfigDict): T {\n    return new cls(config);\n  }\n}\nserialization.registerClass(SimpleRNN);\n\n// Porting Note: Since this is a superset of SimpleRNNLayerConfig, we extend\n//   that interface instead of repeating the fields.\nexport declare interface GRUCellLayerArgs extends SimpleRNNCellLayerArgs {\n  /**\n   * Activation function to use for the recurrent step.\n   *\n   * Defaults to hard sigmoid (`hardSigmoid`).\n   *\n   * If `null`, no activation is applied.\n   */\n  recurrentActivation?: ActivationIdentifier;\n\n  /**\n   * Implementation mode, either 1 or 2.\n   *\n   * Mode 1 will structure its operations as a larger number of\n   *   smaller dot products and additions.\n   *\n   * Mode 2 will batch them into fewer, larger operations. These modes will\n   * have different performance profiles on different hardware and\n   * for different applications.\n   *\n   * Note: For superior performance, TensorFlow.js always uses implementation\n   * 2, regardless of the actual value of this configuration field.\n   */\n  implementation?: number;\n\n  /**\n   * GRU convention (whether to apply reset gate after or before matrix\n   * multiplication). false = \"before\", true = \"after\" (only false is\n   * supported).\n   */\n  resetAfter?: boolean;\n}\n\nexport class GRUCell extends RNNCell {\n  /** @nocollapse */\n  static className = 'GRUCell';\n  readonly units: number;\n  readonly activation: Activation;\n  readonly recurrentActivation: Activation;\n  readonly useBias: boolean;\n\n  readonly kernelInitializer: Initializer;\n  readonly recurrentInitializer: Initializer;\n  readonly biasInitializer: Initializer;\n\n  readonly kernelRegularizer: Regularizer;\n  readonly recurrentRegularizer: Regularizer;\n  readonly biasRegularizer: Regularizer;\n\n  readonly kernelConstraint: Constraint;\n  readonly recurrentConstraint: Constraint;\n  readonly biasConstraint: Constraint;\n\n  readonly dropout: number;\n  readonly recurrentDropout: number;\n  readonly dropoutFunc: Function;\n\n  readonly stateSize: number;\n  readonly implementation: number;\n\n  readonly DEFAULT_ACTIVATION = 'tanh';\n  readonly DEFAULT_RECURRENT_ACTIVATION: ActivationIdentifier = 'hardSigmoid';\n\n  readonly DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n  readonly DEFAULT_RECURRENT_INITIALIZER = 'orthogonal';\n  readonly DEFAULT_BIAS_INITIALIZER: InitializerIdentifier = 'zeros';\n\n  kernel: LayerVariable;\n  recurrentKernel: LayerVariable;\n  bias: LayerVariable;\n\n  constructor(args: GRUCellLayerArgs) {\n    super(args);\n    if (args.resetAfter) {\n      throw new ValueError(\n          `GRUCell does not support reset_after parameter set to true.`);\n    }\n    this.units = args.units;\n    assertPositiveInteger(this.units, 'units');\n    this.activation = getActivation(\n        args.activation === undefined ? this.DEFAULT_ACTIVATION :\n                                        args.activation);\n    this.recurrentActivation = getActivation(\n        args.recurrentActivation === undefined ?\n            this.DEFAULT_RECURRENT_ACTIVATION :\n            args.recurrentActivation);\n    this.useBias = args.useBias == null ? true : args.useBias;\n\n    this.kernelInitializer = getInitializer(\n        args.kernelInitializer || this.DEFAULT_KERNEL_INITIALIZER);\n    this.recurrentInitializer = getInitializer(\n        args.recurrentInitializer || this.DEFAULT_RECURRENT_INITIALIZER);\n\n    this.biasInitializer =\n        getInitializer(args.biasInitializer || this.DEFAULT_BIAS_INITIALIZER);\n\n    this.kernelRegularizer = getRegularizer(args.kernelRegularizer);\n    this.recurrentRegularizer = getRegularizer(args.recurrentRegularizer);\n    this.biasRegularizer = getRegularizer(args.biasRegularizer);\n\n    this.kernelConstraint = getConstraint(args.kernelConstraint);\n    this.recurrentConstraint = getConstraint(args.recurrentConstraint);\n    this.biasConstraint = getConstraint(args.biasConstraint);\n\n    this.dropout = math_utils.min(\n        [1, math_utils.max([0, args.dropout == null ? 0 : args.dropout])]);\n    this.recurrentDropout = math_utils.min([\n      1,\n      math_utils.max(\n          [0, args.recurrentDropout == null ? 0 : args.recurrentDropout])\n    ]);\n    this.dropoutFunc = args.dropoutFunc;\n    this.implementation = args.implementation;\n    this.stateSize = this.units;\n    this.dropoutMask = null;\n    this.recurrentDropoutMask = null;\n  }\n\n  public build(inputShape: Shape|Shape[]): void {\n    inputShape = getExactlyOneShape(inputShape);\n    const inputDim = inputShape[inputShape.length - 1];\n    this.kernel = this.addWeight(\n        'kernel', [inputDim, this.units * 3], null, this.kernelInitializer,\n        this.kernelRegularizer, true, this.kernelConstraint);\n    this.recurrentKernel = this.addWeight(\n        'recurrent_kernel', [this.units, this.units * 3], null,\n        this.recurrentInitializer, this.recurrentRegularizer, true,\n        this.recurrentConstraint);\n    if (this.useBias) {\n      this.bias = this.addWeight(\n          'bias', [this.units * 3], null, this.biasInitializer,\n          this.biasRegularizer, true, this.biasConstraint);\n    } else {\n      this.bias = null;\n    }\n    // Porting Notes: Unlike the PyKeras implementation, we perform slicing\n    //   of the weights and bias in the call() method, at execution time.\n    this.built = true;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      inputs = inputs as Tensor[];\n      if (inputs.length !== 2) {\n        throw new ValueError(\n            `GRUCell expects 2 input Tensors (inputs, h, c), got ` +\n            `${inputs.length}.`);\n      }\n\n      const training = kwargs['training'] == null ? false : kwargs['training'];\n      let hTMinus1 = inputs[1];  // Previous memory state.\n      inputs = inputs[0];\n\n      // Note: For superior performance, TensorFlow.js always uses\n      // implementation 2, regardless of the actual value of\n      // config.implementation.\n      if (0 < this.dropout && this.dropout < 1 && this.dropoutMask == null) {\n        this.dropoutMask = generateDropoutMask({\n                             ones: () => tfc.onesLike(inputs as Tensor),\n                             rate: this.dropout,\n                             training,\n                             count: 3,\n                             dropoutFunc: this.dropoutFunc,\n                           }) as Tensor[];\n      }\n      if (0 < this.recurrentDropout && this.recurrentDropout < 1 &&\n          this.recurrentDropoutMask == null) {\n        this.recurrentDropoutMask = generateDropoutMask({\n                                      ones: () => tfc.onesLike(hTMinus1),\n                                      rate: this.recurrentDropout,\n                                      training,\n                                      count: 3,\n                                      dropoutFunc: this.dropoutFunc,\n                                    }) as Tensor[];\n      }\n      const dpMask = this.dropoutMask as [Tensor, Tensor, Tensor];\n      const recDpMask = this.recurrentDropoutMask as [Tensor, Tensor, Tensor];\n      let z: Tensor;\n      let r: Tensor;\n      let hh: Tensor;\n\n      if (0 < this.dropout && this.dropout < 1) {\n        inputs = tfc.mul(inputs, dpMask[0]);\n      }\n      let matrixX = K.dot(inputs, this.kernel.read());\n      if (this.useBias) {\n        matrixX = K.biasAdd(matrixX, this.bias.read());\n      }\n      if (0 < this.recurrentDropout && this.recurrentDropout < 1) {\n        hTMinus1 = tfc.mul(hTMinus1, recDpMask[0]);\n      }\n\n      const recurrentKernelValue = this.recurrentKernel.read();\n      const [rk1, rk2] = tfc.split(\n          recurrentKernelValue, [2 * this.units, this.units],\n          recurrentKernelValue.rank - 1);\n      const matrixInner = K.dot(hTMinus1, rk1);\n\n      const [xZ, xR, xH] = tfc.split(matrixX, 3, matrixX.rank - 1);\n      const [recurrentZ, recurrentR] =\n          tfc.split(matrixInner, 2, matrixInner.rank - 1);\n      z = this.recurrentActivation.apply(tfc.add(xZ, recurrentZ));\n      r = this.recurrentActivation.apply(tfc.add(xR, recurrentR));\n\n      const recurrentH = K.dot(tfc.mul(r, hTMinus1), rk2);\n      hh = this.activation.apply(tfc.add(xH, recurrentH));\n\n      const h =\n          tfc.add(tfc.mul(z, hTMinus1), tfc.mul(tfc.add(1, tfc.neg(z)), hh));\n      // TODO(cais): Add use_learning_phase flag properly.\n      return [h, h];\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const baseConfig = super.getConfig();\n\n    const config: serialization.ConfigDict = {\n      units: this.units,\n      activation: serializeActivation(this.activation),\n      recurrentActivation: serializeActivation(this.recurrentActivation),\n      useBias: this.useBias,\n      kernelInitializer: serializeInitializer(this.kernelInitializer),\n      recurrentInitializer: serializeInitializer(this.recurrentInitializer),\n      biasInitializer: serializeInitializer(this.biasInitializer),\n      kernelRegularizer: serializeRegularizer(this.kernelRegularizer),\n      recurrentRegularizer: serializeRegularizer(this.recurrentRegularizer),\n      biasRegularizer: serializeRegularizer(this.biasRegularizer),\n      activityRegularizer: serializeRegularizer(this.activityRegularizer),\n      kernelConstraint: serializeConstraint(this.kernelConstraint),\n      recurrentConstraint: serializeConstraint(this.recurrentConstraint),\n      biasConstraint: serializeConstraint(this.biasConstraint),\n      dropout: this.dropout,\n      recurrentDropout: this.recurrentDropout,\n      implementation: this.implementation,\n      resetAfter: false\n    };\n\n    return {...baseConfig, ...config};\n  }\n}\nserialization.registerClass(GRUCell);\n\n// Porting Note: Since this is a superset of SimpleRNNLayerConfig, we inherit\n//   from that interface instead of repeating the fields here.\nexport declare interface GRULayerArgs extends SimpleRNNLayerArgs {\n  /**\n   * Activation function to use for the recurrent step.\n   *\n   * Defaults to hard sigmoid (`hardSigmoid`).\n   *\n   * If `null`, no activation is applied.\n   */\n  recurrentActivation?: ActivationIdentifier;\n\n  /**\n   * Implementation mode, either 1 or 2.\n   *\n   * Mode 1 will structure its operations as a larger number of\n   * smaller dot products and additions.\n   *\n   * Mode 2 will batch them into fewer, larger operations. These modes will\n   * have different performance profiles on different hardware and\n   * for different applications.\n   *\n   * Note: For superior performance, TensorFlow.js always uses implementation\n   * 2, regardless of the actual value of this configuration field.\n   */\n  implementation?: number;\n}\n\nexport class GRU extends RNN {\n  /** @nocollapse */\n  static className = 'GRU';\n  constructor(args: GRULayerArgs) {\n    if (args.implementation === 0) {\n      console.warn(\n          '`implementation=0` has been deprecated, and now defaults to ' +\n          '`implementation=1`. Please update your layer call.');\n    }\n    args.cell = new GRUCell(args);\n    super(args as RNNLayerArgs);\n    // TODO(cais): Add activityRegularizer.\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      if (this.cell.dropoutMask != null) {\n        tfc.dispose(this.cell.dropoutMask);\n        this.cell.dropoutMask = null;\n      }\n      if (this.cell.recurrentDropoutMask != null) {\n        tfc.dispose(this.cell.recurrentDropoutMask);\n        this.cell.recurrentDropoutMask = null;\n      }\n      const mask = kwargs == null ? null : kwargs['mask'];\n      const training = kwargs == null ? null : kwargs['training'];\n      const initialState: Tensor[] =\n          kwargs == null ? null : kwargs['initialState'];\n      return super.call(inputs, {mask, training, initialState});\n    });\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends serialization.Serializable>(\n      cls: serialization.SerializableConstructor<T>,\n      config: serialization.ConfigDict): T {\n    if (config['implmentation'] === 0) {\n      config['implementation'] = 1;\n    }\n    return new cls(config);\n  }\n}\nserialization.registerClass(GRU);\n\n// Porting Note: Since this is a superset of SimpleRNNLayerConfig, we extend\n//   that interface instead of repeating the fields.\nexport declare interface LSTMCellLayerArgs extends SimpleRNNCellLayerArgs {\n  /**\n   * Activation function to use for the recurrent step.\n   *\n   * Defaults to hard sigmoid (`hardSigmoid`).\n   *\n   * If `null`, no activation is applied.\n   */\n  recurrentActivation?: ActivationIdentifier;\n\n  /**\n   * If `true`, add 1 to the bias of the forget gate at initialization.\n   * Setting it to `true` will also force `biasInitializer = 'zeros'`.\n   * This is recommended in\n   * [Jozefowicz et\n   * al.](http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf).\n   */\n  unitForgetBias?: boolean;\n\n  /**\n   * Implementation mode, either 1 or 2.\n   *\n   * Mode 1 will structure its operations as a larger number of\n   *   smaller dot products and additions.\n   *\n   * Mode 2 will batch them into fewer, larger operations. These modes will\n   * have different performance profiles on different hardware and\n   * for different applications.\n   *\n   * Note: For superior performance, TensorFlow.js always uses implementation\n   * 2, regardless of the actual value of this configuration field.\n   */\n  implementation?: number;\n}\n\nexport class LSTMCell extends RNNCell {\n  /** @nocollapse */\n  static className = 'LSTMCell';\n  readonly units: number;\n  readonly activation: Activation;\n  readonly recurrentActivation: Activation;\n  readonly useBias: boolean;\n\n  readonly kernelInitializer: Initializer;\n  readonly recurrentInitializer: Initializer;\n  readonly biasInitializer: Initializer;\n  readonly unitForgetBias: boolean;\n\n  readonly kernelConstraint: Constraint;\n  readonly recurrentConstraint: Constraint;\n  readonly biasConstraint: Constraint;\n\n  readonly kernelRegularizer: Regularizer;\n  readonly recurrentRegularizer: Regularizer;\n  readonly biasRegularizer: Regularizer;\n\n  readonly dropout: number;\n  readonly recurrentDropout: number;\n  readonly dropoutFunc: Function;\n\n  readonly stateSize: number[];\n  readonly implementation: number;\n\n  readonly DEFAULT_ACTIVATION = 'tanh';\n  readonly DEFAULT_RECURRENT_ACTIVATION = 'hardSigmoid';\n  readonly DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n  readonly DEFAULT_RECURRENT_INITIALIZER = 'orthogonal';\n\n  readonly DEFAULT_BIAS_INITIALIZER = 'zeros';\n\n  kernel: LayerVariable;\n  recurrentKernel: LayerVariable;\n  bias: LayerVariable;\n\n  constructor(args: LSTMCellLayerArgs) {\n    super(args);\n\n    this.units = args.units;\n    assertPositiveInteger(this.units, 'units');\n    this.activation = getActivation(\n        args.activation === undefined ? this.DEFAULT_ACTIVATION :\n                                        args.activation);\n    this.recurrentActivation = getActivation(\n        args.recurrentActivation === undefined ?\n            this.DEFAULT_RECURRENT_ACTIVATION :\n            args.recurrentActivation);\n    this.useBias = args.useBias == null ? true : args.useBias;\n\n    this.kernelInitializer = getInitializer(\n        args.kernelInitializer || this.DEFAULT_KERNEL_INITIALIZER);\n    this.recurrentInitializer = getInitializer(\n        args.recurrentInitializer || this.DEFAULT_RECURRENT_INITIALIZER);\n\n    this.biasInitializer =\n        getInitializer(args.biasInitializer || this.DEFAULT_BIAS_INITIALIZER);\n    this.unitForgetBias = args.unitForgetBias;\n\n    this.kernelRegularizer = getRegularizer(args.kernelRegularizer);\n    this.recurrentRegularizer = getRegularizer(args.recurrentRegularizer);\n    this.biasRegularizer = getRegularizer(args.biasRegularizer);\n\n    this.kernelConstraint = getConstraint(args.kernelConstraint);\n    this.recurrentConstraint = getConstraint(args.recurrentConstraint);\n    this.biasConstraint = getConstraint(args.biasConstraint);\n\n    this.dropout = math_utils.min(\n        [1, math_utils.max([0, args.dropout == null ? 0 : args.dropout])]);\n    this.recurrentDropout = math_utils.min([\n      1,\n      math_utils.max(\n          [0, args.recurrentDropout == null ? 0 : args.recurrentDropout])\n    ]);\n    this.dropoutFunc = args.dropoutFunc;\n    this.implementation = args.implementation;\n    this.stateSize = [this.units, this.units];\n    this.dropoutMask = null;\n    this.recurrentDropoutMask = null;\n  }\n\n  public build(inputShape: Shape|Shape[]): void {\n    inputShape = getExactlyOneShape(inputShape);\n    const inputDim = inputShape[inputShape.length - 1];\n    this.kernel = this.addWeight(\n        'kernel', [inputDim, this.units * 4], null, this.kernelInitializer,\n        this.kernelRegularizer, true, this.kernelConstraint);\n    this.recurrentKernel = this.addWeight(\n        'recurrent_kernel', [this.units, this.units * 4], null,\n        this.recurrentInitializer, this.recurrentRegularizer, true,\n        this.recurrentConstraint);\n    let biasInitializer: Initializer;\n    if (this.useBias) {\n      if (this.unitForgetBias) {\n        const capturedBiasInit = this.biasInitializer;\n        const capturedUnits = this.units;\n        biasInitializer = new (class CustomInit extends Initializer {\n          /** @nocollapse */\n          static className = 'CustomInit';\n\n          apply(shape: Shape, dtype?: DataType): Tensor {\n            // TODO(cais): More informative variable names?\n            const bI = capturedBiasInit.apply([capturedUnits]);\n            const bF = (new Ones()).apply([capturedUnits]);\n            const bCAndH = capturedBiasInit.apply([capturedUnits * 2]);\n            return K.concatAlongFirstAxis(\n                K.concatAlongFirstAxis(bI, bF), bCAndH);\n          }\n        })();\n      } else {\n        biasInitializer = this.biasInitializer;\n      }\n      this.bias = this.addWeight(\n          'bias', [this.units * 4], null, biasInitializer, this.biasRegularizer,\n          true, this.biasConstraint);\n    } else {\n      this.bias = null;\n    }\n    // Porting Notes: Unlike the PyKeras implementation, we perform slicing\n    //   of the weights and bias in the call() method, at execution time.\n    this.built = true;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      const training = kwargs['training'] == null ? false : kwargs['training'];\n      inputs = inputs as Tensor[];\n      if (inputs.length !== 3) {\n        throw new ValueError(\n            `LSTMCell expects 3 input Tensors (inputs, h, c), got ` +\n            `${inputs.length}.`);\n      }\n      let hTMinus1 = inputs[1];    // Previous memory state.\n      const cTMinus1 = inputs[2];  // Previous carry state.\n      inputs = inputs[0];\n      if (0 < this.dropout && this.dropout < 1 && this.dropoutMask == null) {\n        this.dropoutMask = generateDropoutMask({\n                             ones: () => tfc.onesLike(inputs as Tensor),\n                             rate: this.dropout,\n                             training,\n                             count: 4,\n                             dropoutFunc: this.dropoutFunc\n                           }) as Tensor[];\n      }\n      if (0 < this.recurrentDropout && this.recurrentDropout < 1 &&\n          this.recurrentDropoutMask == null) {\n        this.recurrentDropoutMask = generateDropoutMask({\n                                      ones: () => tfc.onesLike(hTMinus1),\n                                      rate: this.recurrentDropout,\n                                      training,\n                                      count: 4,\n                                      dropoutFunc: this.dropoutFunc\n                                    }) as Tensor[];\n      }\n      const dpMask = this.dropoutMask as [Tensor, Tensor, Tensor, Tensor];\n      const recDpMask =\n          this.recurrentDropoutMask as [Tensor, Tensor, Tensor, Tensor];\n\n      // Note: For superior performance, TensorFlow.js always uses\n      // implementation 2 regardless of the actual value of\n      // config.implementation.\n      let i: Tensor;\n      let f: Tensor;\n      let c: Tensor;\n      let o: Tensor;\n      if (0 < this.dropout && this.dropout < 1) {\n        inputs = tfc.mul(inputs, dpMask[0]);\n      }\n      let z = K.dot(inputs, this.kernel.read());\n      if (0 < this.recurrentDropout && this.recurrentDropout < 1) {\n        hTMinus1 = tfc.mul(hTMinus1, recDpMask[0]);\n      }\n      z = tfc.add(z, K.dot(hTMinus1, this.recurrentKernel.read()));\n      if (this.useBias) {\n        z = K.biasAdd(z, this.bias.read());\n      }\n\n      const [z0, z1, z2, z3] = tfc.split(z, 4, z.rank - 1);\n\n      i = this.recurrentActivation.apply(z0);\n      f = this.recurrentActivation.apply(z1);\n      c = tfc.add(tfc.mul(f, cTMinus1), tfc.mul(i, this.activation.apply(z2)));\n      o = this.recurrentActivation.apply(z3);\n\n      const h = tfc.mul(o, this.activation.apply(c));\n      // TODO(cais): Add use_learning_phase flag properly.\n      return [h, h, c];\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const baseConfig = super.getConfig();\n\n    const config: serialization.ConfigDict = {\n      units: this.units,\n      activation: serializeActivation(this.activation),\n      recurrentActivation: serializeActivation(this.recurrentActivation),\n      useBias: this.useBias,\n      kernelInitializer: serializeInitializer(this.kernelInitializer),\n      recurrentInitializer: serializeInitializer(this.recurrentInitializer),\n      biasInitializer: serializeInitializer(this.biasInitializer),\n      unitForgetBias: this.unitForgetBias,\n      kernelRegularizer: serializeRegularizer(this.kernelRegularizer),\n      recurrentRegularizer: serializeRegularizer(this.recurrentRegularizer),\n      biasRegularizer: serializeRegularizer(this.biasRegularizer),\n      activityRegularizer: serializeRegularizer(this.activityRegularizer),\n      kernelConstraint: serializeConstraint(this.kernelConstraint),\n      recurrentConstraint: serializeConstraint(this.recurrentConstraint),\n      biasConstraint: serializeConstraint(this.biasConstraint),\n      dropout: this.dropout,\n      recurrentDropout: this.recurrentDropout,\n      implementation: this.implementation,\n    };\n\n    return {...baseConfig, ...config};\n  }\n}\nserialization.registerClass(LSTMCell);\n\n// Porting Note: Since this is a superset of SimpleRNNLayerConfig, we inherit\n//   from that interface instead of repeating the fields here.\nexport declare interface LSTMLayerArgs extends SimpleRNNLayerArgs {\n  /**\n   * Activation function to use for the recurrent step.\n   *\n   * Defaults to hard sigmoid (`hardSigmoid`).\n   *\n   * If `null`, no activation is applied.\n   */\n  recurrentActivation?: ActivationIdentifier;\n\n  /**\n   * If `true`, add 1 to the bias of the forget gate at initialization.\n   * Setting it to `true` will also force `biasInitializer = 'zeros'`.\n   * This is recommended in\n   * [Jozefowicz et\n   * al.](http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf).\n   */\n  unitForgetBias?: boolean;\n\n  /**\n   * Implementation mode, either 1 or 2.\n   *   Mode 1 will structure its operations as a larger number of\n   *   smaller dot products and additions, whereas mode 2 will\n   *   batch them into fewer, larger operations. These modes will\n   *   have different performance profiles on different hardware and\n   *   for different applications.\n   *\n   * Note: For superior performance, TensorFlow.js always uses implementation\n   * 2, regardless of the actual value of this config field.\n   */\n  implementation?: number;\n}\n\nexport class LSTM extends RNN {\n  /** @nocollapse */\n  static className = 'LSTM';\n  constructor(args: LSTMLayerArgs) {\n    if (args.implementation === 0) {\n      console.warn(\n          '`implementation=0` has been deprecated, and now defaults to ' +\n          '`implementation=1`. Please update your layer call.');\n    }\n    args.cell = new LSTMCell(args);\n    super(args as RNNLayerArgs);\n    // TODO(cais): Add activityRegularizer.\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      if (this.cell.dropoutMask != null) {\n        tfc.dispose(this.cell.dropoutMask);\n        this.cell.dropoutMask = null;\n      }\n      if (this.cell.recurrentDropoutMask != null) {\n        tfc.dispose(this.cell.recurrentDropoutMask);\n        this.cell.recurrentDropoutMask = null;\n      }\n      const mask = kwargs == null ? null : kwargs['mask'];\n      const training = kwargs == null ? null : kwargs['training'];\n      const initialState: Tensor[] =\n          kwargs == null ? null : kwargs['initialState'];\n      return super.call(inputs, {mask, training, initialState});\n    });\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends serialization.Serializable>(\n      cls: serialization.SerializableConstructor<T>,\n      config: serialization.ConfigDict): T {\n    if (config['implmentation'] === 0) {\n      config['implementation'] = 1;\n    }\n    return new cls(config);\n  }\n}\nserialization.registerClass(LSTM);\n\nexport declare interface StackedRNNCellsArgs extends LayerArgs {\n  /**\n   * A `Array` of `RNNCell` instances.\n   */\n  cells: RNNCell[];\n}\n\nexport class StackedRNNCells extends RNNCell {\n  /** @nocollapse */\n  static className = 'StackedRNNCells';\n  protected cells: RNNCell[];\n\n  constructor(args: StackedRNNCellsArgs) {\n    super(args);\n    this.cells = args.cells;\n  }\n\n  get stateSize(): number[] {\n    // States are a flat list in reverse order of the cell stack.\n    // This allows perserving the requirement `stack.statesize[0] ===\n    // outputDim`. E.g., states of a 2-layer LSTM would be `[h2, c2, h1, c1]`,\n    // assuming one LSTM has states `[h, c]`.\n    const stateSize: number[] = [];\n    for (const cell of this.cells.slice().reverse()) {\n      if (Array.isArray(cell.stateSize)) {\n        stateSize.push(...cell.stateSize);\n      } else {\n        stateSize.push(cell.stateSize);\n      }\n    }\n    return stateSize;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      inputs = inputs as Tensor[];\n      let states = inputs.slice(1);\n\n      // Recover per-cell states.\n      const nestedStates: Tensor[][] = [];\n      for (const cell of this.cells.slice().reverse()) {\n        if (Array.isArray(cell.stateSize)) {\n          nestedStates.push(states.splice(0, cell.stateSize.length));\n        } else {\n          nestedStates.push(states.splice(0, 1));\n        }\n      }\n      nestedStates.reverse();\n\n      // Call the cells in order and store the returned states.\n      const newNestedStates: Tensor[][] = [];\n      let callInputs: Tensor[];\n      for (let i = 0; i < this.cells.length; ++i) {\n        const cell = this.cells[i];\n        states = nestedStates[i];\n        // TODO(cais): Take care of constants.\n        if (i === 0) {\n          callInputs = [inputs[0]].concat(states);\n        } else {\n          callInputs = [callInputs[0]].concat(states);\n        }\n        callInputs = cell.call(callInputs, kwargs) as Tensor[];\n        newNestedStates.push(callInputs.slice(1));\n      }\n\n      // Format the new states as a flat list in reverse cell order.\n      states = [];\n      for (const cellStates of newNestedStates.slice().reverse()) {\n        states.push(...cellStates);\n      }\n      return [callInputs[0]].concat(states);\n    });\n  }\n\n  public build(inputShape: Shape|Shape[]): void {\n    if (isArrayOfShapes(inputShape)) {\n      // TODO(cais): Take care of input constants.\n      // const constantShape = inputShape.slice(1);\n      inputShape = (inputShape as Shape[])[0];\n    }\n    inputShape = inputShape as Shape;\n    let outputDim: number;\n    this.cells.forEach((cell, i) => {\n      nameScope(`RNNCell_${i}`, () => {\n        // TODO(cais): Take care of input constants.\n\n        cell.build(inputShape);\n        if (Array.isArray(cell.stateSize)) {\n          outputDim = cell.stateSize[0];\n        } else {\n          outputDim = cell.stateSize;\n        }\n        inputShape = [inputShape[0], outputDim] as Shape;\n      });\n    });\n    this.built = true;\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const baseConfig = super.getConfig();\n\n    const getCellConfig = (cell: RNNCell) => {\n      return {\n        'className': cell.getClassName(),\n        'config': cell.getConfig(),\n      };\n    };\n\n    const cellConfigs = this.cells.map(getCellConfig);\n\n    const config = {'cells': cellConfigs};\n\n    return {...baseConfig, ...config};\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends serialization.Serializable>(\n      cls: serialization.SerializableConstructor<T>,\n      config: serialization.ConfigDict,\n      customObjects = {} as serialization.ConfigDict): T {\n    const cells: RNNCell[] = [];\n    for (const cellConfig of (config['cells'] as serialization.ConfigDict[])) {\n      cells.push(deserialize(cellConfig, customObjects) as RNNCell);\n    }\n    return new cls({cells});\n  }\n\n  get trainableWeights(): LayerVariable[] {\n    if (!this.trainable) {\n      return [];\n    }\n    const weights: LayerVariable[] = [];\n    for (const cell of this.cells) {\n      weights.push(...cell.trainableWeights);\n    }\n    return weights;\n  }\n\n  get nonTrainableWeights(): LayerVariable[] {\n    const weights: LayerVariable[] = [];\n    for (const cell of this.cells) {\n      weights.push(...cell.nonTrainableWeights);\n    }\n    if (!this.trainable) {\n      const trainableWeights: LayerVariable[] = [];\n      for (const cell of this.cells) {\n        trainableWeights.push(...cell.trainableWeights);\n      }\n      return trainableWeights.concat(weights);\n    }\n    return weights;\n  }\n\n  /**\n   * Retrieve the weights of a the model.\n   *\n   * @returns A flat `Array` of `tf.Tensor`s.\n   */\n  getWeights(): Tensor[] {\n    const weights: LayerVariable[] = [];\n    for (const cell of this.cells) {\n      weights.push(...cell.weights);\n    }\n    return batchGetValue(weights);\n  }\n\n  /**\n   * Set the weights of the model.\n   *\n   * @param weights An `Array` of `tf.Tensor`s with shapes and types matching\n   *     the output of `getWeights()`.\n   */\n  setWeights(weights: Tensor[]): void {\n    const tuples: Array<[LayerVariable, Tensor]> = [];\n    for (const cell of this.cells) {\n      const numParams = cell.weights.length;\n      const inputWeights = weights.splice(numParams);\n      for (let i = 0; i < cell.weights.length; ++i) {\n        tuples.push([cell.weights[i], inputWeights[i]]);\n      }\n    }\n    batchSetValue(tuples);\n  }\n\n  // TODO(cais): Maybe implemnt `losses` and `getLossesFor`.\n}\nserialization.registerClass(StackedRNNCells);\n\nexport function generateDropoutMask(args: {\n  ones: () => tfc.Tensor,\n  rate: number,\n  training?: boolean,\n  count?: number,\n  dropoutFunc?: Function,\n}): tfc.Tensor|tfc.Tensor[] {\n  const {ones, rate, training = false, count = 1, dropoutFunc} = args;\n\n  const droppedInputs = () =>\n      dropoutFunc != null ? dropoutFunc(ones(), rate) : K.dropout(ones(), rate);\n\n  const createMask = () => K.inTrainPhase(droppedInputs, ones, training);\n\n  // just in case count is provided with null or undefined\n  if (!count || count <= 1) {\n    return tfc.keep(createMask().clone());\n  }\n\n  const masks = Array(count).fill(undefined).map(createMask);\n\n  return masks.map(m => tfc.keep(m.clone()));\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * TensorFlow.js Layers: Basic Layers.\n */\n\nimport {any, cast, mul, notEqual, reshape, serialization, Tensor, tidy, transpose, util} from '@tensorflow/tfjs-core';\n\nimport {Activation as ActivationFn, getActivation, serializeActivation} from '../activations';\nimport * as K from '../backend/tfjs_backend';\nimport {Constraint, ConstraintIdentifier, getConstraint, serializeConstraint} from '../constraints';\nimport {DisposeResult, InputSpec, Layer, LayerArgs} from '../engine/topology';\nimport {ValueError} from '../errors';\nimport {getInitializer, Initializer, InitializerIdentifier, serializeInitializer} from '../initializers';\nimport {ActivationIdentifier} from '../keras_format/activation_config';\nimport {DataFormat, Shape} from '../keras_format/common';\nimport {LayerConfig} from '../keras_format/topology_config';\nimport {getRegularizer, Regularizer, RegularizerIdentifier, serializeRegularizer} from '../regularizers';\nimport {Kwargs} from '../types';\nimport {assertPositiveInteger, mapActivationToFusedKernel} from '../utils/generic_utils';\nimport {arrayProd, range} from '../utils/math_utils';\nimport {getExactlyOneShape, getExactlyOneTensor} from '../utils/types_utils';\nimport {LayerVariable} from '../variables';\n\nexport declare interface DropoutLayerArgs extends LayerArgs {\n  /** Float between 0 and 1. Fraction of the input units to drop. */\n  rate: number;\n\n  /**\n   * Integer array representing the shape of the binary dropout mask that will\n   * be multiplied with the input.\n   *\n   * For instance, if your inputs have shape `(batchSize, timesteps, features)`\n   * and you want the dropout mask to be the same for all timesteps, you can use\n   * `noise_shape=(batch_size, 1, features)`.\n   */\n  noiseShape?: number[];\n\n  /** An integer to use as random seed. */\n  seed?: number;\n}\n\nexport class Dropout extends Layer {\n  /** @nocollapse */\n  static className = 'Dropout';\n  private readonly rate: number;\n  private readonly noiseShape: number[];\n  private readonly seed: number;\n\n  constructor(args: DropoutLayerArgs) {\n    super(args);\n    this.rate = Math.max(Math.min(args.rate, 1), 0);\n    // So that the scalar doesn't get tidied up between executions.\n    this.noiseShape = args.noiseShape;\n    this.seed = args.seed;\n    this.supportsMasking = true;\n  }\n\n  protected getNoiseShape(input: Tensor): Shape {\n    if (this.noiseShape == null) {\n      return this.noiseShape;\n    }\n    const inputShape = input.shape;\n    const noiseShape: Shape = [];\n    for (let i = 0; i < this.noiseShape.length; ++i) {\n      noiseShape.push(\n          this.noiseShape[i] == null ? inputShape[i] : this.noiseShape[i]);\n    }\n    return noiseShape;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      this.invokeCallHook(inputs, kwargs);\n      const input = getExactlyOneTensor(inputs);\n      if (0 < this.rate && this.rate < 1) {\n        const training =\n            kwargs['training'] == null ? false : kwargs['training'];\n        const noiseShape = this.getNoiseShape(input);\n        const output = K.inTrainPhase(\n            () => K.dropout(input, this.rate, noiseShape, this.seed),\n            () => input, training);\n        return output;\n      }\n      return inputs;\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = {\n      rate: this.rate,\n      noiseShape: this.noiseShape,\n      seed: this.seed,\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n\n  dispose(): DisposeResult {\n    return super.dispose();\n  }\n}\nserialization.registerClass(Dropout);\n\nexport declare interface DenseLayerArgs extends LayerArgs {\n  /** Positive integer, dimensionality of the output space. */\n  units: number;\n  /**\n   * Activation function to use.\n   *\n   * If unspecified, no activation is applied.\n   */\n  activation?: ActivationIdentifier;\n  /** Whether to apply a bias. */\n  useBias?: boolean;\n  /**\n   * Initializer for the dense kernel weights matrix.\n   */\n  kernelInitializer?: InitializerIdentifier|Initializer;\n  /**\n   * Initializer for the bias vector.\n   */\n  biasInitializer?: InitializerIdentifier|Initializer;\n  /**\n   * If specified, defines inputShape as `[inputDim]`.\n   */\n  inputDim?: number;\n\n  /**\n   * Constraint for the kernel weights.\n   */\n  kernelConstraint?: ConstraintIdentifier|Constraint;\n\n  /**\n   * Constraint for the bias vector.\n   */\n  biasConstraint?: ConstraintIdentifier|Constraint;\n\n  /**\n   * Regularizer function applied to the dense kernel weights matrix.\n   */\n  kernelRegularizer?: RegularizerIdentifier|Regularizer;\n\n  /**\n   * Regularizer function applied to the bias vector.\n   */\n  biasRegularizer?: RegularizerIdentifier|Regularizer;\n\n  /**\n   * Regularizer function applied to the activation.\n   */\n  activityRegularizer?: RegularizerIdentifier|Regularizer;\n}\n\nexport interface SpatialDropout1DLayerConfig extends LayerConfig {\n  /** Float between 0 and 1. Fraction of the input units to drop. */\n  rate: number;\n\n  /** An integer to use as random seed. */\n  seed?: number;\n}\n\nexport class SpatialDropout1D extends Dropout {\n  /** @nocollapse */\n  static className = 'SpatialDropout1D';\n\n  constructor(args: SpatialDropout1DLayerConfig) {\n    super(args);\n    this.inputSpec = [{ndim: 3}];\n  }\n\n  protected getNoiseShape(input: Tensor): Shape {\n    const inputShape = input.shape;\n    return [inputShape[0], 1, inputShape[2]];\n  }\n}\nserialization.registerClass(SpatialDropout1D);\n\nexport class Dense extends Layer {\n  /** @nocollapse */\n  static className = 'Dense';\n  private units: number;\n  // Default activation: Linear (none).\n  private activation: ActivationFn = null;\n  private useBias = true;\n  private kernelInitializer: Initializer;\n  private biasInitializer: Initializer;\n  private kernel: LayerVariable = null;\n  private bias: LayerVariable = null;\n\n  readonly DEFAULT_KERNEL_INITIALIZER: InitializerIdentifier = 'glorotNormal';\n  readonly DEFAULT_BIAS_INITIALIZER: InitializerIdentifier = 'zeros';\n  private readonly kernelConstraint?: Constraint;\n  private readonly biasConstraint?: Constraint;\n  private readonly kernelRegularizer?: Regularizer;\n  private readonly biasRegularizer?: Regularizer;\n\n  constructor(args: DenseLayerArgs) {\n    super(args);\n    if (args.batchInputShape == null && args.inputShape == null &&\n        args.inputDim != null) {\n      // This logic is copied from Layer's constructor, since we can't\n      // do exactly what the Python constructor does for Dense().\n      let batchSize: number = null;\n      if (args.batchSize != null) {\n        batchSize = args.batchSize;\n      }\n      this.batchInputShape = [batchSize, args.inputDim];\n    }\n\n    this.units = args.units;\n    assertPositiveInteger(this.units, 'units');\n    this.activation = getActivation(args.activation);\n    if (args.useBias != null) {\n      this.useBias = args.useBias;\n    }\n    this.kernelInitializer = getInitializer(\n        args.kernelInitializer || this.DEFAULT_KERNEL_INITIALIZER);\n    this.biasInitializer =\n        getInitializer(args.biasInitializer || this.DEFAULT_BIAS_INITIALIZER);\n    this.kernelConstraint = getConstraint(args.kernelConstraint);\n    this.biasConstraint = getConstraint(args.biasConstraint);\n    this.kernelRegularizer = getRegularizer(args.kernelRegularizer);\n    this.biasRegularizer = getRegularizer(args.biasRegularizer);\n    this.activityRegularizer = getRegularizer(args.activityRegularizer);\n    this.supportsMasking = true;\n\n    this.inputSpec = [{minNDim: 2}];\n  }\n\n  public build(inputShape: Shape|Shape[]): void {\n    inputShape = getExactlyOneShape(inputShape);\n    const inputLastDim = inputShape[inputShape.length - 1];\n    if (this.kernel == null) {\n      this.kernel = this.addWeight(\n          'kernel', [inputLastDim, this.units], null, this.kernelInitializer,\n          this.kernelRegularizer, true, this.kernelConstraint);\n      if (this.useBias) {\n        this.bias = this.addWeight(\n            'bias', [this.units], null, this.biasInitializer,\n            this.biasRegularizer, true, this.biasConstraint);\n      }\n    }\n\n    this.inputSpec = [{minNDim: 2, axes: {[-1]: inputLastDim}}];\n    this.built = true;\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    inputShape = getExactlyOneShape(inputShape);\n    const outputShape = inputShape.slice();\n    outputShape[outputShape.length - 1] = this.units;\n    return outputShape;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      this.invokeCallHook(inputs, kwargs);\n      // Dense layer accepts only a single input.\n      const input = getExactlyOneTensor(inputs);\n      const fusedActivationName =\n          mapActivationToFusedKernel(this.activation.getClassName());\n      let output: Tensor;\n\n      if (fusedActivationName != null) {\n        output = K.dot(\n            input, this.kernel.read(), fusedActivationName,\n            this.bias ? this.bias.read() : null);\n      } else {\n        output = K.dot(input, this.kernel.read());\n        if (this.bias != null) {\n          output = K.biasAdd(output, this.bias.read());\n        }\n        if (this.activation != null) {\n          output = this.activation.apply(output);\n        }\n      }\n\n      return output;\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {\n      units: this.units,\n      activation: serializeActivation(this.activation),\n      useBias: this.useBias,\n      kernelInitializer: serializeInitializer(this.kernelInitializer),\n      biasInitializer: serializeInitializer(this.biasInitializer),\n      kernelRegularizer: serializeRegularizer(this.kernelRegularizer),\n      biasRegularizer: serializeRegularizer(this.biasRegularizer),\n      activityRegularizer: serializeRegularizer(this.activityRegularizer),\n      kernelConstraint: serializeConstraint(this.kernelConstraint),\n      biasConstraint: serializeConstraint(this.biasConstraint)\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(Dense);\n\nexport declare interface FlattenLayerArgs extends LayerArgs {\n  /** Image data format: channeLast (default) or channelFirst. */\n  dataFormat?: DataFormat;\n}\n\nexport class Flatten extends Layer {\n  private dataFormat: DataFormat;\n\n  /** @nocollapse */\n  static className = 'Flatten';\n  constructor(args?: FlattenLayerArgs) {\n    args = args || {};\n    super(args);\n    this.inputSpec = [{minNDim: 3}];\n    this.dataFormat = args.dataFormat;\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    inputShape = getExactlyOneShape(inputShape);\n    for (const dim of inputShape.slice(1)) {\n      if (dim == null) {\n        throw new ValueError(\n            `The shape of the input to \"Flatten\" is not fully defined ` +\n            `(got ${inputShape.slice(1)}). Make sure to pass a complete ` +\n            `\"input_shape\" or \"batch_input_shape\" argument to the first ` +\n            `layer in your model.`);\n      }\n    }\n    return [inputShape[0], arrayProd(inputShape, 1)];\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      this.invokeCallHook(inputs, kwargs);\n\n      let input = getExactlyOneTensor(inputs);\n      if (this.dataFormat === 'channelsFirst' && input.rank > 1) {\n        const permutation: number[] = [0];\n        for (let i = 2; i < input.rank; ++i) {\n          permutation.push(i);\n        }\n        permutation.push(1);\n        input = transpose(input, permutation);\n      }\n\n      return K.batchFlatten(input);\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {};\n    if (this.dataFormat != null) {\n      config['dataFormat'] = this.dataFormat;\n    }\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(Flatten);\n\nexport declare interface ActivationLayerArgs extends LayerArgs {\n  /**\n   * Name of the activation function to use.\n   */\n  activation: ActivationIdentifier;\n}\n\nexport class Activation extends Layer {\n  /** @nocollapse */\n  static className = 'Activation';\n  activation: ActivationFn;\n\n  constructor(args: ActivationLayerArgs) {\n    super(args);\n    this.supportsMasking = true;\n    this.activation = getActivation(args.activation);\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      this.invokeCallHook(inputs, kwargs);\n      const input = getExactlyOneTensor(inputs);\n      return this.activation.apply(input);\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = {activation: serializeActivation(this.activation)};\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(Activation);\n\nexport declare interface ReshapeLayerArgs extends LayerArgs {\n  /** The target shape. Does not include the batch axis. */\n  targetShape: Shape;\n}\n\nexport declare interface RepeatVectorLayerArgs extends LayerArgs {\n  /**\n   * The integer number of times to repeat the input.\n   */\n  n: number;\n}\n\nexport class RepeatVector extends Layer {\n  /** @nocollapse */\n  static className = 'RepeatVector';\n  readonly n: number;\n\n  constructor(args: RepeatVectorLayerArgs) {\n    super(args);\n    this.n = args.n;\n    this.inputSpec = [{ndim: 2}];\n  }\n\n  computeOutputShape(inputShape: Shape): Shape {\n    return [inputShape[0], this.n, inputShape[1]];\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      inputs = getExactlyOneTensor(inputs);\n      return K.repeat(inputs, this.n);\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = {\n      n: this.n,\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(RepeatVector);\n\nexport class Reshape extends Layer {\n  /** @nocollapse */\n  static className = 'Reshape';\n  private targetShape: Shape;\n\n  constructor(args: ReshapeLayerArgs) {\n    super(args);\n    this.targetShape = args.targetShape;\n\n    // Make sure that all unknown dimensions are represented as `null`.\n    for (let i = 0; i < this.targetShape.length; ++i) {\n      if (this.isUnknown(this.targetShape[i])) {\n        this.targetShape[i] = null;\n      }\n    }\n  }\n\n  private isUnknown(dim: number): boolean {\n    return dim < 0 || dim == null;\n  }\n\n  /**\n   * Finds and replaces a missing dimension in output shape.\n   *\n   * This is a near direct port of the internal Numpy function\n   * `_fix_unknown_dimension` in `numpy/core/src/multiarray/shape.c`.\n   *\n   * @param inputShape: Original shape of array begin reshape.\n   * @param outputShape: Target shape of the array, with at most a single\n   * `null` or negative number, which indicates an underdetermined dimension\n   * that should be derived from `inputShape` and the known dimensions of\n   *   `outputShape`.\n   * @returns: The output shape with `null` replaced with its computed value.\n   * @throws: ValueError: If `inputShape` and `outputShape` do not match.\n   */\n  private fixUnknownDimension(inputShape: Shape, outputShape: Shape): Shape {\n    const errorMsg = 'Total size of new array must be unchanged.';\n    const finalShape = outputShape.slice();\n    let known = 1;\n    let unknown = null;\n    for (let i = 0; i < finalShape.length; ++i) {\n      const dim = finalShape[i];\n      if (this.isUnknown(dim)) {\n        if (unknown === null) {\n          unknown = i;\n        } else {\n          throw new ValueError('Can only specifiy one unknown dimension.');\n        }\n      } else {\n        known *= dim;\n      }\n    }\n\n    const originalSize = arrayProd(inputShape);\n    if (unknown !== null) {\n      if (known === 0 || originalSize % known !== 0) {\n        throw new ValueError(errorMsg);\n      }\n      finalShape[unknown] = originalSize / known;\n    } else if (originalSize !== known) {\n      throw new ValueError(errorMsg);\n    }\n\n    return finalShape;\n  }\n\n  computeOutputShape(inputShape: Shape): Shape {\n    let anyUnknownDims = false;\n    for (let i = 0; i < inputShape.length; ++i) {\n      if (this.isUnknown(inputShape[i])) {\n        anyUnknownDims = true;\n        break;\n      }\n    }\n\n    if (anyUnknownDims) {\n      return inputShape.slice(0, 1).concat(this.targetShape);\n    } else {\n      return inputShape.slice(0, 1).concat(\n          this.fixUnknownDimension(inputShape.slice(1), this.targetShape));\n    }\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      this.invokeCallHook(inputs, kwargs);\n      const input = getExactlyOneTensor(inputs);\n      const inputShape = input.shape;\n      const outputShape = inputShape.slice(0, 1).concat(\n          this.fixUnknownDimension(inputShape.slice(1), this.targetShape));\n      return reshape(input, outputShape);\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = {\n      targetShape: this.targetShape,\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(Reshape);\n\nexport declare interface PermuteLayerArgs extends LayerArgs {\n  /**\n   * Array of integers. Permutation pattern. Does not include the\n   * sample (batch) dimension. Index starts at 1.\n   * For instance, `[2, 1]` permutes the first and second dimensions\n   * of the input.\n   */\n  dims: number[];\n}\n\nexport class Permute extends Layer {\n  /** @nocollapse */\n  static className = 'Permute';\n  readonly dims: number[];\n  private readonly dimsIncludingBatch: number[];\n\n  constructor(args: PermuteLayerArgs) {\n    super(args);\n    if (args.dims == null) {\n      throw new Error(\n          'Required configuration field `dims` is missing during Permute ' +\n          'constructor call.');\n    }\n    if (!Array.isArray(args.dims)) {\n      throw new Error(\n          'Permute constructor requires `dims` to be an Array, but received ' +\n          `${args.dims} instead.`);\n    }\n\n    // Check the validity of the permutation indices.\n    const expectedSortedIndices = range(1, args.dims.length + 1);\n    if (!util.arraysEqual(args.dims.slice().sort(), expectedSortedIndices)) {\n      throw new Error(\n          'Invalid permutation `dims`: ' + JSON.stringify(args.dims) +\n          ' `dims` must contain consecutive integers starting from 1.');\n    }\n\n    this.dims = args.dims;\n    this.dimsIncludingBatch = [0].concat(this.dims);\n    this.inputSpec = [new InputSpec({ndim: this.dims.length + 1})];\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    inputShape = getExactlyOneShape(inputShape);\n    const outputShape = inputShape.slice();\n    this.dims.forEach((dim: number, i: number) => {\n      outputShape[i + 1] = (inputShape as Shape)[dim];\n    });\n    return outputShape;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return transpose(getExactlyOneTensor(inputs), this.dimsIncludingBatch);\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = {\n      dims: this.dims,\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(Permute);\n\nexport declare interface MaskingArgs extends LayerArgs {\n  /**\n   * Masking Value. Defaults to `0.0`.\n   */\n  maskValue?: number;\n}\n\nexport class Masking extends Layer {\n  /** @nocollapse */\n  static className = 'Masking';\n  maskValue: number;\n\n  constructor(args?: MaskingArgs) {\n    super(args == null ? {} : args);\n    this.supportsMasking = true;\n    if (args != null) {\n      this.maskValue = args.maskValue == null ? 0 : args.maskValue;\n    } else {\n      this.maskValue = 0;\n    }\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    return inputShape;\n  }\n\n  getConfig() {\n    const baseConfig = super.getConfig();\n    const config = {maskValue: this.maskValue};\n    Object.assign(config, baseConfig);\n    return config;\n  }\n\n  computeMask(inputs: Tensor|Tensor[], mask?: Tensor|Tensor[]): Tensor {\n    const input = getExactlyOneTensor(inputs);\n    const axis = -1;\n    return any(notEqual(input, this.maskValue), axis);\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      this.invokeCallHook(inputs, kwargs);\n      const input = getExactlyOneTensor(inputs);\n      const axis = -1;\n      const keepDims = true;\n      const booleanMask = any(notEqual(input, this.maskValue), axis, keepDims);\n      const output = mul(input, cast(booleanMask, input.dtype));\n      return output;\n    });\n  }\n}\nserialization.registerClass(Masking);\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * TensorFlow.js Layers: Embedding Layer.\n *\n * Original source: keras/constraints.py\n */\nimport {notEqual, reshape, serialization, Tensor, tidy, zerosLike} from '@tensorflow/tfjs-core';\n\nimport * as K from '../backend/tfjs_backend';\nimport {Constraint, ConstraintIdentifier, getConstraint, serializeConstraint} from '../constraints';\nimport {Layer, LayerArgs} from '../engine/topology';\nimport {ValueError} from '../errors';\nimport {getInitializer, Initializer, InitializerIdentifier, serializeInitializer} from '../initializers';\nimport {Shape} from '../keras_format/common';\nimport {getRegularizer, Regularizer, RegularizerIdentifier, serializeRegularizer} from '../regularizers';\nimport {Kwargs} from '../types';\nimport * as generic_utils from '../utils/generic_utils';\nimport {getExactlyOneShape, getExactlyOneTensor} from '../utils/types_utils';\nimport {LayerVariable} from '../variables';\n\nexport declare interface EmbeddingLayerArgs extends LayerArgs {\n  /**\n   * Integer > 0. Size of the vocabulary, i.e. maximum integer index + 1.\n   */\n  inputDim: number;\n  /**\n   * Integer >= 0. Dimension of the dense embedding.\n   */\n  outputDim: number;\n  /**\n   * Initializer for the `embeddings` matrix.\n   */\n  embeddingsInitializer?: InitializerIdentifier|Initializer;\n  /**\n   * Regularizer function applied to the `embeddings` matrix.\n   */\n  embeddingsRegularizer?: RegularizerIdentifier|Regularizer;\n  /**\n   * Regularizer function applied to the activation.\n   */\n  activityRegularizer?: RegularizerIdentifier|Regularizer;\n  /**\n   * Constraint function applied to the `embeddings` matrix.\n   */\n  embeddingsConstraint?: ConstraintIdentifier|Constraint;\n  /**\n   * Whether the input value 0 is a special \"padding\" value that should be\n   * masked out. This is useful when using recurrent layers which may take\n   * variable length input.\n   *\n   * If this is `True` then all subsequent layers in the model need to support\n   * masking or an exception will be raised. If maskZero is set to `True`, as a\n   * consequence, index 0 cannot be used in the vocabulary (inputDim should\n   * equal size of vocabulary + 1).\n   */\n  maskZero?: boolean;\n  /**\n   * Length of input sequences, when it is constant.\n   *\n   * This argument is required if you are going to connect `flatten` then\n   * `dense` layers upstream (without it, the shape of the dense outputs cannot\n   * be computed).\n   */\n  inputLength?: number|number[];\n}\n\nexport class Embedding extends Layer {\n  /** @nocollapse */\n  static className = 'Embedding';\n  private inputDim: number;\n  private outputDim: number;\n  private embeddingsInitializer: Initializer;\n  private maskZero: boolean;\n  private inputLength: number|number[];\n\n  private embeddings: LayerVariable = null;\n\n  readonly DEFAULT_EMBEDDINGS_INITIALIZER: InitializerIdentifier =\n      'randomUniform';\n  private readonly embeddingsRegularizer?: Regularizer;\n  private readonly embeddingsConstraint?: Constraint;\n\n  constructor(args: EmbeddingLayerArgs) {\n    super(args);\n    if (args.batchInputShape == null && args.inputShape == null) {\n      // Porting Note: This logic is copied from Layer's constructor, since we\n      // can't do exactly what the Python constructor does for Embedding().\n      // Specifically, the super constructor can not be called after the\n      // mutation of the `config` argument.\n      let batchSize: number = null;\n      if (args.batchSize != null) {\n        batchSize = args.batchSize;\n      }\n      if (args.inputLength == null) {\n        // Fix super-constructor to what it would have done if\n        // 'config.inputShape' were (None, )\n        this.batchInputShape = [batchSize, null];\n      } else {\n        // Fix super-constructor to what it would have done if\n        // 'config.inputShape' were (config.inputLength, )\n        this.batchInputShape =\n            [batchSize].concat(generic_utils.toList(args.inputLength));\n      }\n    }\n    this.inputDim = args.inputDim;\n    generic_utils.assertPositiveInteger(this.inputDim, 'inputDim');\n    this.outputDim = args.outputDim;\n    generic_utils.assertPositiveInteger(this.outputDim, 'outputDim');\n    this.embeddingsInitializer = getInitializer(\n        args.embeddingsInitializer || this.DEFAULT_EMBEDDINGS_INITIALIZER);\n    this.embeddingsRegularizer = getRegularizer(args.embeddingsRegularizer);\n    this.activityRegularizer = getRegularizer(args.activityRegularizer);\n    this.embeddingsConstraint = getConstraint(args.embeddingsConstraint);\n    this.maskZero = args.maskZero;\n    this.supportsMasking = args.maskZero;\n    this.inputLength = args.inputLength;\n  }\n\n  public build(inputShape: Shape|Shape[]): void {\n    this.embeddings = this.addWeight(\n        'embeddings', [this.inputDim, this.outputDim], this.dtype,\n        this.embeddingsInitializer, this.embeddingsRegularizer, true,\n        this.embeddingsConstraint);\n    this.built = true;\n  }\n\n  // Override warnOnIncompatibleInputShape because an embedding layer allows\n  // the input to have varying ranks.\n  protected warnOnIncompatibleInputShape(inputShape: Shape) {}\n\n  computeMask(inputs: Tensor|Tensor[], mask?: Tensor|Tensor[]): Tensor {\n    return tidy(() => {\n      if (!this.maskZero) {\n        return null;\n      } else {\n        inputs = getExactlyOneTensor(inputs);\n        return notEqual(inputs, zerosLike(inputs));\n      }\n    });\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    inputShape = getExactlyOneShape(inputShape);\n    if (this.inputLength == null) {\n      return [...inputShape, this.outputDim];\n    }\n    // inputLength can be an array if input is 3D or higher.\n    const inLens: number[] = generic_utils.toList(this.inputLength);\n    if (inLens.length !== inputShape.length - 1) {\n      throw new ValueError(\n          `\"inputLength\" is ${this.inputLength}, but received ` +\n          `input shape has shape ${inputShape}`);\n    } else {\n      let i = 0;\n      for (let k = 0; k < inLens.length; ++k) {\n        const s1 = inLens[k];\n        const s2 = inputShape[k + 1];\n        if ((s1 != null) && (s2 != null) && (s1 !== s2)) {\n          throw new ValueError(\n              `\"inputLength\" is ${this.inputLength}, but received ` +\n              `input shape has shape ${inputShape}`);\n        } else if (s1 == null) {\n          inLens[i] = s2;\n        }\n        i++;\n      }\n    }\n    return [inputShape[0], ...inLens, this.outputDim];\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      this.invokeCallHook(inputs, kwargs);\n      // Embedding layer accepts only a single input.\n      let input = getExactlyOneTensor(inputs);\n      if (input.dtype !== 'int32') {\n        input = K.cast(input, 'int32');\n      }\n      const output =\n          K.gather(this.embeddings.read(), reshape(input, [input.size]));\n      return reshape(\n          output, getExactlyOneShape(this.computeOutputShape(input.shape)));\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = {\n      inputDim: this.inputDim,\n      outputDim: this.outputDim,\n      embeddingsInitializer: serializeInitializer(this.embeddingsInitializer),\n      embeddingsRegularizer: serializeRegularizer(this.embeddingsRegularizer),\n      activityRegularizer: serializeRegularizer(this.activityRegularizer),\n      embeddingsConstraint: serializeConstraint(this.embeddingsConstraint),\n      maskZero: this.maskZero,\n      inputLength: this.inputLength\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(Embedding);\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * TensorFlow.js Layers: Merge Layers.\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {serialization, Tensor, tidy, util} from '@tensorflow/tfjs-core';\nimport * as K from '../backend/tfjs_backend';\nimport {Layer, LayerArgs, SymbolicTensor} from '../engine/topology';\nimport {NotImplementedError, ValueError} from '../errors';\nimport {Shape} from '../keras_format/common';\nimport {l2Normalize} from '../losses';\nimport {Kwargs} from '../types';\nimport * as generic_utils from '../utils/generic_utils';\nimport * as mathUtils from '../utils/math_utils';\nimport {getExactlyOneShape} from '../utils/types_utils';\n\n/**\n * Generic Merge layer for element-wise merge functions.\n *\n * Used to implement `Sum`, `Average`, `Concatenate`, etc.\n */\nexport abstract class Merge extends Layer {\n  protected reshapeRequired: boolean;\n\n  constructor(args?: LayerArgs) {\n    super(args || {});\n    this.supportsMasking = true;\n  }\n\n  /**\n   * Logic for merging multiple tensors, to be overridden by subclasses.\n   * @param inputs\n   */\n  protected mergeFunction(inputs: Tensor[]): Tensor {\n    throw new NotImplementedError();\n  }\n\n  /**\n   * Computes the shape of the result of an elementwise operation.\n   *\n   * @param shape1: Shape of the first tensor.\n   * @param shape2: Shape of the second tensor.\n   * @returns Expected output shape when an elementwise operation is carried\n   *   out on 2 tensors with shapes `shape1` and `shape2`.\n   * @throws ValueError: If `shape1` and `shape2` are not compatible for\n   *   element-wise operations.\n   */\n  private computeElementwiseOpOutputShape(shape1: Shape, shape2: Shape): Shape {\n    if (shape1 == null || shape2 == null) {\n      return null;\n    } else if (shape1.length < shape2.length) {\n      return this.computeElementwiseOpOutputShape(shape2, shape1);\n    } else if (shape2.length === 0) {\n      return shape1;\n    }\n    const outputShape: Shape = shape1.slice(0, shape1.length - shape2.length);\n    for (let k = 0; k < shape2.length; ++k) {\n      const i = shape1[shape1.length - shape2.length + k];\n      const j = shape2[k];\n      if (i == null || j == null || i < 0 || j < 0) {\n        outputShape.push(null);\n      } else if (i === 1) {\n        outputShape.push(j);\n      } else if (j === 1) {\n        outputShape.push(i);\n      } else {\n        if (i !== j) {\n          throw new ValueError(\n              'Operands could not be broadcast together with shapes ' +\n              JSON.stringify(shape1) + ' ' + JSON.stringify(shape2));\n        }\n        outputShape.push(i);\n      }\n    }\n    return outputShape;\n  }\n\n  build(inputShape: Shape|Shape[]): void {\n    // Used purely for shape validation.\n    if (Array.isArray(inputShape) && !Array.isArray(inputShape[0])) {\n      // Make sure that inputShape is an Array of shape.\n      inputShape = [getExactlyOneShape(inputShape)];\n    }\n    inputShape = inputShape as Shape[];\n    if (inputShape.length < 2) {\n      throw new ValueError(\n          'A merge layer should be called on an Array of at least 2 inputs.' +\n          ` Got ${inputShape.length} input(s).`);\n    }\n\n    // Make sure that there is at most one unique batch size among the input\n    // shapes.\n    let batchSizes: number[] = [];\n    for (const shape of inputShape) {\n      if (shape != null && shape[0] !== null) {\n        batchSizes.push(shape[0]);\n      }\n    }\n    batchSizes = generic_utils.unique(batchSizes);\n    if (batchSizes.length > 1) {\n      throw new ValueError(\n          `Can not merge tensors with different batch sizes. ` +\n          `Got tensors with shapes: ${JSON.stringify(inputShape)}.`);\n    }\n\n    let outputShape: Shape =\n        inputShape[0] == null ? null : inputShape[0].slice(1);\n    for (let i = 1; i < inputShape.length; ++i) {\n      const shape = inputShape[i] == null ? null : inputShape[i].slice(1);\n      outputShape = this.computeElementwiseOpOutputShape(outputShape, shape);\n    }\n    // If the inputs have different ranks, we have to reshape them to make them\n    // broadcastable.\n    const allRanks = inputShape.map(shape => shape.length);\n    if (inputShape.indexOf(null) === -1 &&\n        generic_utils.unique(allRanks).length === 1) {\n      this.reshapeRequired = false;\n    } else {\n      this.reshapeRequired = true;\n    }\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      inputs = inputs as Tensor[];\n      if (this.reshapeRequired) {\n        const reshapedInputs: Tensor[] = [];\n        const inputDims = inputs.map(input => input.rank);\n        if (inputDims.indexOf(null) === -1) {\n          // If ranks of all inputs are available, we simply expand each of them\n          // at axis=1 until all of them have the same rank.\n          const maxNDim = mathUtils.max(inputDims);\n          for (let x of inputs) {\n            const xNDim = x.rank;\n            for (let k = 0; k < maxNDim - xNDim; ++k) {\n              x = K.expandDims(x, 1);\n            }\n            reshapedInputs.push(x);\n          }\n          return this.mergeFunction(reshapedInputs);\n        } else {\n          // Transpose all inputs so that batch size is the last dimension.\n          // [batchSize, dim1, dim2, ...] -> [dim1, dim2, ..., batchSize]\n          let transposed = false;\n          for (const x of inputs) {\n            const xNDim = x.rank;\n            if (xNDim == null) {\n              const xShape = x.shape;\n              const batchSize = xShape[0];\n              const newShape = xShape.slice(1).concat([batchSize]);\n              let xTransposed = tfc.reshape(\n                  x, [batchSize].concat(mathUtils.arrayProd(xShape.slice(1))));\n              xTransposed = tfc.transpose(xTransposed, [1, 0]);\n              xTransposed = tfc.reshape(xTransposed, newShape);\n              reshapedInputs.push(xTransposed);\n              transposed = true;\n            } else if (xNDim > 1) {\n              const dims = mathUtils.range(1, xNDim).concat([0]);\n              reshapedInputs.push(tfc.transpose(x, dims));\n              transposed = true;\n            } else {\n              // We don't transpose inputs if they are 1D vectors or scalars.\n              reshapedInputs.push(x);\n            }\n          }\n          let y = this.mergeFunction(reshapedInputs);\n          const yNDim = y.rank;\n          if (transposed) {\n            // If inputs have been transposed, we have to transpose the output\n            // too.\n            if (yNDim == null) {\n              const yShape = y.shape;\n              const yNDim = yShape.length;\n              const batchSize = yShape[yNDim - 1];\n              const newShape =\n                  [batchSize].concat(yShape.slice(0, yShape.length - 1));\n              y = tfc.reshape(\n                  tfc.transpose(tfc.reshape(y, [-1, batchSize]), [1, 0]),\n                  newShape);\n            } else if (yNDim > 1) {\n              const dims = [yNDim - 1].concat(mathUtils.range(0, yNDim - 1));\n              y = tfc.transpose(y, dims);\n            }\n          }\n          return y;\n        }\n      } else {\n        return this.mergeFunction(inputs);\n      }\n    });\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    inputShape = inputShape as Shape[];\n    let outputShape: Shape;\n    if (inputShape[0] == null) {\n      outputShape = null;\n    } else {\n      outputShape = inputShape[0].slice(1);\n    }\n    for (let i = 1; i < inputShape.length; ++i) {\n      const shape = inputShape[i] == null ? null : inputShape[i].slice(1);\n      outputShape = this.computeElementwiseOpOutputShape(outputShape, shape);\n    }\n\n    let batchSizes: number[] = [];\n    for (const shape of inputShape) {\n      if (shape != null && shape[0] !== null) {\n        batchSizes.push(shape[0]);\n      }\n    }\n    batchSizes = generic_utils.unique(batchSizes);\n    if (batchSizes.length === 1) {\n      outputShape = batchSizes.concat(outputShape);\n    } else {\n      outputShape = [null].concat(outputShape);\n    }\n    return outputShape;\n  }\n\n  computeMask(inputs: Tensor|Tensor[], mask?: Tensor|Tensor[]): Tensor {\n    return tfc.tidy(() => {\n      if (mask == null) {\n        return null;\n      }\n      if (!Array.isArray(mask)) {\n        throw new ValueError('`mask` should be an Array');\n      }\n      if (!Array.isArray(inputs)) {\n        throw new ValueError('`inputs` should be an Array');\n      }\n      if (mask.length !== inputs.length) {\n        throw new ValueError(\n            `The Array 'inputs' and 'mask' are expected to have the same ` +\n            `length, but have different lengths ` +\n            `(${inputs.length} vs ${mask.length})`);\n      }\n      if (mask.every(m => m == null)) {\n        return null;\n      }\n      mask = mask.map(m => m == null ? m : tfc.expandDims(m, 0));\n      let output = mask[0];\n      for (let i = 1; i < mask.length - 1; ++i) {\n        output = tfc.logicalAnd(output, mask[i]);\n      }\n      return output;\n    });\n  }\n}\n\nexport class Add extends Merge {\n  /** @nocollapse */\n  static className = 'Add';\n  constructor(args?: LayerArgs) {\n    super(args);\n  }\n\n  protected mergeFunction(inputs: Tensor[]): Tensor {\n    return tidy(() => {\n      let output = inputs[0].clone();\n      for (let i = 1; i < inputs.length; ++i) {\n        output = tfc.add(output, inputs[i]);\n      }\n      return output;\n    });\n  }\n}\nserialization.registerClass(Add);\n\n/**\n * Calculate the element-wise sum of inputs, which all have the same shape.\n *\n * This function can be invoked in three ways.\n *\n * 1. Construct an instance of `Add` layer, by using no input argument\n *    or a single configuration argument. The resultant `Add` layer can then\n *    be used on `tf.SymbolicTensor`s or `tf.Tensor`s. For example:\n *\n * ```js\n * const addLayer = tf.layers.add();\n *\n * // The layer can be applied to inputs.\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = addLayer.apply([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 2. Invoke directly on an `Array` of `tf.SymbolicTensor`s. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.SymbolicTensor`. For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = tf.layers.add([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 3. Invoke directly on `tf.Tensor`s, i.e., concrete values. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.Tensor` as the result of the computation. For\n * example:\n *\n * ```js\n * const input1 = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const input2 = tf.tensor2d([10, 20, 30, 40], [2, 2]);\n * tf.layers.add([input1, input2]).print();\n * // Gives [[11, 22], [33, 44]].\n *\n */\nexport function add(config?: SymbolicTensor[]|Tensor[]|LayerArgs): Layer|\n    SymbolicTensor|Tensor {\n  if (Array.isArray(config)) {\n    const layer = new Add({});\n    return layer.apply(config) as SymbolicTensor | Tensor;\n  } else {\n    return new Add(config);\n  }\n}\n\nexport class Multiply extends Merge {\n  /** @nocollapse */\n  static className = 'Multiply';\n  constructor(args?: LayerArgs) {\n    super(args);\n  }\n\n  protected mergeFunction(inputs: Tensor[]): Tensor {\n    return tidy(() => {\n      let output = inputs[0].clone();\n      for (let i = 1; i < inputs.length; ++i) {\n        output = tfc.mul(output, inputs[i]);\n      }\n      return output;\n    });\n  }\n}\nserialization.registerClass(Multiply);\n\n/**\n * Calculate the element-wise product of inputs, which all have the same shape.\n *\n * This function can be invoked in three ways.\n *\n * 1. Construct an instance of `Multiply` layer, by using no input argument\n *    or a single configuration argument. The resultant `Multiply` layer can\n *    then be used on `tf.SymbolicTensor`s or `tf.Tensor`s. For example:\n *\n * ```js\n * const multiplyLayer = tf.layers.multiply();\n *\n * // The layer can be applied to inputs.\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = multiplyLayer.apply([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 2. Invoke directly on an `Array` of `tf.SymbolicTensor`s. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.SymbolicTensor`. For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = tf.layers.multiply([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 3. Invoke directly on `tf.Tensor`s, i.e., concrete values. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.Tensor` as the result of the computation. For\n * example:\n *\n * ```js\n * const input1 = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const input2 = tf.tensor2d([10, 20, 30, 40], [2, 2]);\n * tf.layers.multiply([input1, input2]).print();\n * // Gives [[10, 40], [90, 160]].\n *\n */\nexport function multiply(config?: SymbolicTensor[]|Tensor[]|LayerArgs): Layer|\n    SymbolicTensor|Tensor {\n  if (Array.isArray(config)) {\n    const layer = new Multiply({});\n    return layer.apply(config) as SymbolicTensor | Tensor;\n  } else {\n    return new Multiply(config);\n  }\n}\n\nexport class Average extends Merge {\n  /** @nocollapse */\n  static className = 'Average';\n  constructor(args?: LayerArgs) {\n    super(args);\n  }\n\n  protected mergeFunction(inputs: Tensor[]): Tensor {\n    return tidy(() => {\n      let output = inputs[0].clone();\n      for (let i = 1; i < inputs.length; ++i) {\n        output = tfc.add(output, inputs[i]);\n      }\n      return tfc.mul(1 / inputs.length, output);\n    });\n  }\n}\nserialization.registerClass(Average);\n\n/**\n * Calculate the element-wise arithmetic mean of inputs, which all have the same\n * shape.\n *\n * This function can be invoked in three ways.\n *\n * 1. Construct an instance of `Average` layer, by using no input argument\n *    or a single configuration argument. The resultant `Average` layer can then\n *    be used on `tf.SymbolicTensor`s or `tf.Tensor`s. For example:\n *\n * ```js\n * const averageLayer = tf.layers.average();\n *\n * // The layer can be applied to inputs.\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = averageLayer.apply([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 2. Invoke directly on an `Array` of `tf.SymbolicTensor`s. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.SymbolicTensor`. For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = tf.layers.average([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 3. Invoke directly on `tf.Tensor`s, i.e., concrete values. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.Tensor` as the result of the computation. For\n * example:\n *\n * ```js\n * const input1 = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const input2 = tf.tensor2d([10, 20, 30, 40], [2, 2]);\n * tf.layers.average([input1, input2]).print();\n * // Gives [[5.5, 11], [16.5, 22]].\n *\n */\nexport function average(config?: SymbolicTensor[]|Tensor[]|LayerArgs): Layer|\n    SymbolicTensor|Tensor {\n  if (Array.isArray(config)) {\n    const layer = new Average({});\n    return layer.apply(config) as SymbolicTensor | Tensor;\n  } else {\n    return new Average(config);\n  }\n}\n\nexport class Maximum extends Merge {\n  /** @nocollapse */\n  static className = 'Maximum';\n  constructor(args?: LayerArgs) {\n    super(args);\n  }\n\n  protected mergeFunction(inputs: Tensor[]): Tensor {\n    return tidy(() => {\n      let output = inputs[0];\n      for (let i = 1; i < inputs.length; ++i) {\n        output = tfc.maximum(output, inputs[i]);\n      }\n      return output;\n    });\n  }\n}\nserialization.registerClass(Maximum);\n\n/**\n * Calculate the element-wise maximum of inputs, which all have the same shape.\n *\n * This function can be invoked in three ways.\n *\n * 1. Construct an instance of `Maximum` layer, by using no input argument\n *    or a single configuration argument. The resultant `Maximum` layer can then\n *    be used on `tf.SymbolicTensor`s or `tf.Tensor`s. For example:\n *\n * ```js\n * const maximumLayer = tf.layers.maximum();\n *\n * // The layer can be applied to inputs.\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = maximumLayer.apply([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 2. Invoke directly on an `Array` of `tf.SymbolicTensor`s. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.SymbolicTensor`. For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = tf.layers.maximum([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 3. Invoke directly on `tf.Tensor`s, i.e., concrete values. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.Tensor` as the result of the computation. For\n * example:\n *\n * ```js\n * const input1 = tf.tensor2d([1, 20, 3, 40], [2, 2]);\n * const input2 = tf.tensor2d([10, 2, 30, 4], [2, 2]);\n * tf.layers.maximum([input1, input2]).print();\n * // Gives [[10, 20], [30, 40]].\n *\n */\nexport function maximum(config?: SymbolicTensor[]|Tensor[]|LayerArgs): Layer|\n    SymbolicTensor|Tensor {\n  if (Array.isArray(config)) {\n    const layer = new Maximum({});\n    return layer.apply(config) as SymbolicTensor | Tensor;\n  } else {\n    return new Maximum(config);\n  }\n}\n\nexport class Minimum extends Merge {\n  /** @nocollapse */\n  static className = 'Minimum';\n  constructor(args?: LayerArgs) {\n    super(args);\n  }\n\n  protected mergeFunction(inputs: Tensor[]): Tensor {\n    return tidy(() => {\n      let output = inputs[0];\n      for (let i = 1; i < inputs.length; ++i) {\n        output = tfc.minimum(output, inputs[i]);\n      }\n      return output;\n    });\n  }\n}\nserialization.registerClass(Minimum);\n\n/**\n * Calculate the element-wise minimum of inputs, which all have the same shape.\n *\n * This function can be invoked in three ways.\n *\n * 1. Construct an instance of `Minimum` layer, by using no input argument\n *    or a single configuration argument. The resultant `Minimum` layer can then\n *    be used on `tf.SymbolicTensor`s or `tf.Tensor`s. For example:\n *\n * ```js\n * const minimumLayer = tf.layers.minimum();\n *\n * // The layer can be applied to inputs.\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = minimumLayer.apply([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 2. Invoke directly on an `Array` of `tf.SymbolicTensor`s. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.SymbolicTensor`. For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = tf.layers.minimum([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 3. Invoke directly on `tf.Tensor`s, i.e., concrete values. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.Tensor` as the result of the computation. For\n * example:\n *\n * ```js\n * const input1 = tf.tensor2d([1, 20, 3, 40], [2, 2]);\n * const input2 = tf.tensor2d([10, 2, 30, 4], [2, 2]);\n * tf.layers.minimum([input1, input2]).print();\n * // Gives [[1, 2], [3, 4]].\n *\n */\nexport function minimum(config?: SymbolicTensor[]|Tensor[]|LayerArgs): Layer|\n    SymbolicTensor|Tensor {\n  if (Array.isArray(config)) {\n    const layer = new Minimum({});\n    return layer.apply(config) as SymbolicTensor | Tensor;\n  } else {\n    return new Minimum(config);\n  }\n}\n\nexport declare interface ConcatenateLayerArgs extends LayerArgs {\n  /**\n   * Axis along which to concatenate.\n   */\n  axis?: number;\n}\n\nexport class Concatenate extends Merge {\n  /** @nocollapse */\n  static className = 'Concatenate';\n  readonly DEFAULT_AXIS = -1;\n  private readonly axis: number;\n\n  constructor(args?: ConcatenateLayerArgs) {\n    super(args);\n    if (args == null) {\n      args = {};\n    }\n    this.axis = args.axis == null ? this.DEFAULT_AXIS : args.axis;\n    this.supportsMasking = true;\n    this.reshapeRequired = false;\n  }\n\n  build(inputShape: Shape|Shape[]): void {\n    // Used purely for shape validation.]\n    if (!(Array.isArray(inputShape) && Array.isArray(inputShape[0])) ||\n        inputShape.length === 1) {\n      throw new ValueError(\n          'A `Concatenate` layer should be called on a list of at least 2 ' +\n          'inputs');\n    }\n    inputShape = inputShape as Shape[];\n\n    let allNoneShape = true;\n    for (const shape of inputShape) {\n      if (shape != null) {\n        allNoneShape = false;\n        break;\n      }\n    }\n    if (allNoneShape) {\n      return;\n    }\n\n    const shapeSet: Shape[] = [];\n    for (let i = 0; i < inputShape.length; ++i) {\n      const shapeWithoutConcatAxis = inputShape[i].slice();\n      shapeWithoutConcatAxis.splice(this.axis, 1);\n      let exists = false;\n      for (const shape of shapeSet) {\n        if (util.arraysEqual(shape, shapeWithoutConcatAxis)) {\n          exists = true;\n          break;\n        }\n      }\n      if (!exists) {\n        shapeSet.push(shapeWithoutConcatAxis);\n      }\n    }\n    if (shapeSet.length > 1) {\n      throw new ValueError(\n          'A `Concatenate` layer requires inputs with matching shapes ' +\n          'except for the concat axis. Got input shapes: ' +\n          JSON.stringify(inputShape));\n    }\n  }\n\n  protected mergeFunction(inputs: Tensor[]): Tensor {\n    return tidy(() => {\n      return K.concatenate(inputs, this.axis);\n    });\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    if (!(Array.isArray(inputShape) && Array.isArray(inputShape[0]))) {\n      throw new ValueError(\n          'A `Concatenate` layer should be called on a list of inputs.');\n    }\n    const inputShapes = inputShape as Shape[];\n    const outputShape = inputShapes[0].slice();\n    const axis = this.axis < 0 ? outputShape.length + this.axis : this.axis;\n    // Porting Note: the line above is because TypeScript doesn't support\n    //   negative indices.\n    for (const shape of inputShapes.slice(1)) {\n      if (outputShape[axis] == null || shape[axis] == null) {\n        outputShape[axis] = null;\n        break;\n      }\n      outputShape[axis] += shape[axis];\n    }\n    return outputShape;\n  }\n\n  computeMask(inputs: Tensor|Tensor[], mask?: Tensor|Tensor[]): Tensor {\n    if (mask == null) {\n      return null;\n    }\n    if (!Array.isArray(mask)) {\n      throw new ValueError('`mask` should be an array for Concatenate');\n    }\n    if (!Array.isArray(inputs)) {\n      throw new ValueError('`inputs` should be an array for Concatenate');\n    }\n    if (mask.length !== inputs.length) {\n      throw new ValueError(\n          `Mismatch in the length of mask (${mask.length}) ` +\n          `and the legnth of inputs (${inputs.length})`);\n    }\n    return tfc.tidy(() => {\n      let allNullMasks = true;\n      mask.forEach(m => {\n        if (m != null) {\n          allNullMasks = false;\n          return;\n        }\n      });\n      if (allNullMasks) {\n        return null;\n      }\n      const outputMasks: Tensor[] = [];\n      for (let i = 0; i < inputs.length; ++i) {\n        if (mask[i] == null) {\n          // Input is unmasked. Append all 1's to masks.\n          outputMasks.push(tfc.cast(tfc.onesLike(inputs[i]), 'bool'));\n        } else if (mask[i].rank < inputs[i].rank) {\n          // Mask is smaller than the input, expand it.\n          outputMasks.push(tfc.expandDims(mask[i], -1));\n        } else {\n          outputMasks.push(mask[i]);\n        }\n      }\n      const concatenatedMasks = tfc.concat(outputMasks, this.axis);\n      return tfc.all(concatenatedMasks, -1, false);\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {\n      'axis': this.axis,\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(Concatenate);\n\n/**\n * Concatenate an `Array` of inputs.\n *\n * This function can be invoked in three ways.\n *\n * 1. Construct an instance of `Concatenate` layer, by using no input argument\n *    or a single configuration argument. The resultant `Concatenate` layer can\n *    then be used on `tf.SymbolicTensor`s or `tf.Tensor`s. For example:\n *\n * ```js\n * const concatLayer = tf.layers.concatenate();\n *\n * // The layer can be applied to inputs.\n * const input1 = tf.input({shape: [2, 3]});\n * const input2 = tf.input({shape: [2, 4]});\n * const output = concatLayer.apply([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 7], with the first dimension as the undetermined batch\n * // dimension and the last dimension as the result of concatenating the\n * // last dimensions of the two inputs.\n * ```\n *\n * 2. Invoke directly on an `Array` of `tf.SymbolicTensor`s. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.SymbolicTensor`. For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 3]});\n * const input2 = tf.input({shape: [2, 4]});\n * const output = tf.layers.concatenate([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension and the last dimension as the result of concatenating the\n * // last dimensions of the two inputs.\n * ```\n *\n * 3. Invoke directly on `tf.Tensor`s, i.e., concrete values. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.Tensor` as the result of the computation. For\n * example:\n *\n * ```js\n * const input1 = tf.tensor2d([[1, 2], [3, 4]], [2, 2]);\n * const input2 = tf.tensor2d([[10, 20], [30, 40]], [2, 2]);\n * tf.layers.concatenate([input1, input2]).print();\n * // Gives [[1, 2, 10, 20], [3, 4, 30, 40]].\n *\n */\nexport function concatenate(config?: SymbolicTensor[]|Tensor[]|\n                            ConcatenateLayerArgs): Layer|SymbolicTensor|Tensor {\n  if (Array.isArray(config)) {\n    const layer = new Concatenate({});\n    return layer.apply(config) as SymbolicTensor | Tensor;\n  } else {\n    return new Concatenate(config);\n  }\n}\n\nexport declare interface DotLayerArgs extends LayerArgs {\n  /**\n   * Axis or axes along which the dot product will be taken.\n   *\n   * Integer or an Array of integers.\n   */\n  axes: number|[number, number];\n\n  /**\n   * Whether to L2-normalize samples along the dot product axis\n   * before taking the dot product.\n   *\n   * If set to `true`, the output of the dot product isthe cosine\n   * proximity between the two samples.\n   */\n  normalize?: boolean;\n}\n\n/**\n * Interpretable potentially negative axis index.\n *\n * For example, given axis = -1, and dim = 3, this function will return 2.\n *\n * @param axis The axis index, may be a positive, zero or negative integer.\n * @param dim Total number of dimensions, a positive integer.\n * @returns A non-negative axis index equivalent to the input `axis`.\n */\nfunction interpretAxis(axis: number, dim: number): number {\n  while (axis < 0) {\n    axis += dim;\n  }\n  return axis;\n}\n\nfunction batchDot(x: Tensor, y: Tensor, axes: number|[number, number]): Tensor {\n  if (x.shape.length > 3 || y.shape.length > 3) {\n    throw new NotImplementedError(\n        'batchDot is not implemented for tensors of 4D or higher rank yet');\n  }\n  tfc.util.assert(\n      x.shape.length >= 2,\n      () => `batchDot requires the rank of x to be >= 2, ` +\n          `but got ${x.shape.length}`);\n  tfc.util.assert(\n      x.shape.length >= 2,\n      () => `batchDot requires the rank of y to be >= 2, ` +\n          `but got ${y.shape.length}`);\n\n  if (typeof axes === 'number') {\n    axes = [axes, axes];\n  }\n\n  if (x.dtype === 'complex64' || y.dtype === 'complex64') {\n    throw new NotImplementedError(\n        'batchDot is not implemented for complex64-type Tensors yet.');\n  }\n\n  const xNDim = x.shape.length;\n  const yNDim = y.shape.length;\n  if (axes == null) {\n    // Behave like batchMatmul by default.\n    axes = [xNDim - 1, yNDim - 2];\n  }\n  const axesArray = axes as [number, number];\n\n  return tfc.tidy(() => {\n    let diff: number;\n    if (xNDim > yNDim) {\n      diff = xNDim - yNDim;\n      const diffShape: Shape = [];\n      for (let i = 0; i < diff; ++i) {\n        diffShape.push(1);\n      }\n      y = tfc.reshape(y, y.shape.concat(diffShape));\n    } else if (yNDim > xNDim) {\n      diff = yNDim - xNDim;\n      const diffShape: Shape = [];\n      for (let i = 0; i < diff; ++i) {\n        diffShape.push(1);\n      }\n      x = tfc.reshape(x, x.shape.concat(diffShape));\n    } else {\n      diff = 0;\n    }\n\n    let out: Tensor;\n    if (x.shape.length === 2 && y.shape.length === 2) {\n      if (axesArray[0] === axesArray[1]) {\n        out = tfc.sum(tfc.mul(x, y), axesArray[0]);\n      } else {\n        out = tfc.sum(tfc.mul(tfc.transpose(x, [1, 0]), y), axesArray[1]);\n      }\n    } else {\n      const adjX = axesArray[0] !== x.shape.length - 1;\n      const adjY = axesArray[1] === y.shape.length - 1;\n      out = tfc.matMul(x, y, adjX, adjY);\n    }\n\n    if (diff > 0) {\n      let idx: number;\n      if (xNDim > yNDim) {\n        idx = xNDim + yNDim - 3;\n      } else {\n        idx = xNDim - 1;\n      }\n      const squeezeAxes: number[] = [];\n      for (let i = idx; i < idx + diff; ++i) {\n        squeezeAxes.push(i);\n      }\n      out = tfc.squeeze(out, squeezeAxes);\n    }\n    if (out.shape.length === 1) {\n      out = tfc.expandDims(out, 1);\n    }\n    return out;\n  });\n}\n\nexport class Dot extends Merge {\n  /** @nocollapse */\n  static className = 'Dot';\n\n  private axes: number|[number, number];\n  private normalize: boolean;\n\n  constructor(args: DotLayerArgs) {\n    super(args);\n    this.axes = args.axes;\n    this.normalize = args.normalize == null ? false : args.normalize;\n    this.supportsMasking = true;\n    this.reshapeRequired = false;\n  }\n\n  build(inputShape: Shape|Shape[]): void {\n    tfc.util.assert(\n        Array.isArray(inputShape) && inputShape.length === 2 &&\n            Array.isArray(inputShape[0]) && Array.isArray(inputShape[1]),\n        () => 'A `Dot` layer should be called on a list of exactly 2 inputs.');\n    const shape1 = inputShape[0] as Shape;\n    const shape2 = inputShape[1] as Shape;\n    if (shape1.length > 3 || shape2.length > 3) {\n      throw new NotImplementedError(\n          'Dot layer does not support tensors of 4D or higher rank yet.');\n    }\n\n    const axes = this.interpretAxes(shape1, shape2);\n    if (shape1[axes[0]] !== shape2[axes[1]]) {\n      throw new ValueError(\n          `Dimension incompatibility: ` +\n          `${shape1[axes[0]]} !== ${shape2[axes[1]]}`);\n    }\n  }\n\n  protected mergeFunction(inputs: Tensor[]): Tensor {\n    if (inputs.length !== 2) {\n      throw new ValueError(\n          'A `Dot` layer must be called on exactly 2 inputs, ' +\n          `but received ${inputs.length} input(s).`);\n    }\n\n    let x1 = inputs[0];\n    let x2 = inputs[1];\n    let axes: [number, number];\n    if (!Array.isArray(this.axes)) {\n      axes = [\n        interpretAxis(this.axes, x1.shape.length),\n        interpretAxis(this.axes, x2.shape.length)\n      ];\n    } else {\n      axes = this.axes.map(\n                 (axis, i) => interpretAxis(\n                     axis, inputs[i].shape.length)) as [number, number];\n    }\n    if (this.normalize) {\n      x1 = l2Normalize(x1, axes[0]);\n      x2 = l2Normalize(x2, axes[1]);\n    }\n    return batchDot(x1, x2, axes);\n  }\n\n  private interpretAxes(shape1: Shape, shape2: Shape): number[] {\n    let axes: number[];\n    if (!Array.isArray(this.axes)) {\n      // `this.axes` is a single integer.\n      axes = [\n        interpretAxis(this.axes, shape1.length),\n        interpretAxis(this.axes, shape2.length)\n      ];\n    } else {\n      // `this.axes` is an Array of integers.\n      axes = this.axes;\n    }\n    return axes;\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    tfc.util.assert(\n        Array.isArray(inputShape) && inputShape.length === 2 &&\n            Array.isArray(inputShape[0]) && Array.isArray(inputShape[1]),\n        () => 'A `Dot` layer should be called on a list of exactly 2 inputs.');\n    const shape1 = (inputShape[0] as Shape).slice();\n    const shape2 = (inputShape[1] as Shape).slice();\n    if (shape1.length > 3 || shape2.length > 3) {\n      throw new NotImplementedError(\n          'Dot layer does not support tensors of 4D or higher rank yet.');\n    }\n\n    const axes = this.interpretAxes(shape1, shape2);\n    shape1.splice(axes[0], 1);\n    shape2.splice(axes[1], 1);\n    shape2.splice(0, 1);\n    const outputShape = shape1.concat(shape2);\n    if (outputShape.length === 1) {\n      outputShape.push(1);\n    }\n    return outputShape;\n  }\n\n  computeMask(inputs: Tensor|Tensor[], mask?: Tensor|Tensor[]): Tensor {\n    return null;\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {\n      'axes': this.axes,\n      'normalize': this.normalize\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(Dot);\n\n// TODO(cais): Add functional interfaces for the merge layers.\n","/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Use of this source code is governed by an MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n * =============================================================================\r\n */\r\n\r\n/**\r\n * TensorFlow.js Layers: Noise Layers.\r\n */\r\n\r\nimport {add, greaterEqual, mul, randomUniform, serialization, Tensor, tidy} from '@tensorflow/tfjs-core';\r\n\r\nimport * as K from '../backend/tfjs_backend';\r\nimport {Layer, LayerArgs} from '../engine/topology';\r\nimport {Shape} from '../keras_format/common';\r\nimport {Kwargs} from '../types';\r\nimport {getExactlyOneTensor} from '../utils/types_utils';\r\n\r\nexport declare interface GaussianNoiseArgs extends LayerArgs {\r\n  /** Standard Deviation.  */\r\n  stddev: number;\r\n}\r\n\r\nexport class GaussianNoise extends Layer {\r\n  /** @nocollapse */\r\n  static className = 'GaussianNoise';\r\n  readonly stddev: number;\r\n\r\n  constructor(args: GaussianNoiseArgs) {\r\n    super(args);\r\n    this.supportsMasking = true;\r\n    this.stddev = args.stddev;\r\n  }\r\n\r\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\r\n    return inputShape;\r\n  }\r\n\r\n  getConfig() {\r\n    const baseConfig = super.getConfig();\r\n    const config = {stddev: this.stddev};\r\n    Object.assign(config, baseConfig);\r\n    return config;\r\n  }\r\n\r\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\r\n    return tidy(() => {\r\n      this.invokeCallHook(inputs, kwargs);\r\n      const input = getExactlyOneTensor(inputs);\r\n      const noised = () =>\r\n          add(K.randomNormal(input.shape, 0, this.stddev), input);\r\n      const output =\r\n          K.inTrainPhase(noised, () => input, kwargs['training'] || false);\r\n      return output;\r\n    });\r\n  }\r\n}\r\nserialization.registerClass(GaussianNoise);\r\n\r\nexport declare interface GaussianDropoutArgs extends LayerArgs {\r\n  /** drop probability.  */\r\n  rate: number;\r\n}\r\n\r\nexport class GaussianDropout extends Layer {\r\n  /** @nocollapse */\r\n  static className = 'GaussianDropout';\r\n  readonly rate: number;\r\n\r\n  constructor(args: GaussianDropoutArgs) {\r\n    super(args);\r\n    this.supportsMasking = true;\r\n    this.rate = args.rate;\r\n  }\r\n\r\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\r\n    return inputShape;\r\n  }\r\n\r\n  getConfig() {\r\n    const baseConfig = super.getConfig();\r\n    const config = {rate: this.rate};\r\n    Object.assign(config, baseConfig);\r\n    return config;\r\n  }\r\n\r\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\r\n    return tidy(() => {\r\n      this.invokeCallHook(inputs, kwargs);\r\n      const input = getExactlyOneTensor(inputs);\r\n      if (this.rate > 0 && this.rate < 1) {\r\n        const noised = () => {\r\n          const stddev = Math.sqrt(this.rate / (1 - this.rate));\r\n          return mul(input, K.randomNormal(input.shape, 1, stddev));\r\n        };\r\n        return K.inTrainPhase(noised, () => input, kwargs['training'] || false);\r\n      }\r\n      return input;\r\n    });\r\n  }\r\n}\r\nserialization.registerClass(GaussianDropout);\r\n\r\nexport declare interface AlphaDropoutArgs extends LayerArgs {\r\n  /** drop probability.  */\r\n  rate: number;\r\n  /**\r\n   * A 1-D `Tensor` of type `int32`, representing the\r\n   * shape for randomly generated keep/drop flags.\r\n   */\r\n  noiseShape?: Shape;\r\n}\r\n\r\n/**\r\n * Applies Alpha Dropout to the input.\r\n *\r\n * As it is a regularization layer, it is only active at training time.\r\n *\r\n * Alpha Dropout is a `Dropout` that keeps mean and variance of inputs\r\n * to their original values, in order to ensure the self-normalizing property\r\n * even after this dropout.\r\n * Alpha Dropout fits well to Scaled Exponential Linear Units\r\n * by randomly setting activations to the negative saturation value.\r\n *\r\n * Arguments:\r\n *   - `rate`: float, drop probability (as with `Dropout`).\r\n *     The multiplicative noise will have\r\n *     standard deviation `sqrt(rate / (1 - rate))`.\r\n *   - `noise_shape`: A 1-D `Tensor` of type `int32`, representing the\r\n *     shape for randomly generated keep/drop flags.\r\n *\r\n * Input shape:\r\n *   Arbitrary. Use the keyword argument `inputShape`\r\n *   (tuple of integers, does not include the samples axis)\r\n *   when using this layer as the first layer in a model.\r\n *\r\n * Output shape:\r\n *   Same shape as input.\r\n *\r\n * References:\r\n *   - [Self-Normalizing Neural Networks](https://arxiv.org/abs/1706.02515)\r\n */\r\nexport class AlphaDropout extends Layer {\r\n  /** @nocollapse */\r\n  static className = 'AlphaDropout';\r\n  readonly rate: number;\r\n  readonly noiseShape: Shape;\r\n\r\n  constructor(args: AlphaDropoutArgs) {\r\n    super(args);\r\n    this.supportsMasking = true;\r\n    this.rate = args.rate;\r\n    this.noiseShape = args.noiseShape;\r\n  }\r\n\r\n  _getNoiseShape(inputs: Tensor|Tensor[]) {\r\n    return this.noiseShape || getExactlyOneTensor(inputs).shape;\r\n  }\r\n\r\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\r\n    return inputShape;\r\n  }\r\n\r\n  getConfig() {\r\n    const baseConfig = super.getConfig();\r\n    const config = {rate: this.rate};\r\n    Object.assign(config, baseConfig);\r\n    return config;\r\n  }\r\n\r\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\r\n    return tidy(() => {\r\n      if (this.rate < 1 && this.rate > 0) {\r\n        const noiseShape = this._getNoiseShape(inputs);\r\n\r\n        const droppedInputs = () => {\r\n          const input = getExactlyOneTensor(inputs);\r\n\r\n          const alpha = 1.6732632423543772848170429916717;\r\n          const scale = 1.0507009873554804934193349852946;\r\n\r\n          const alphaP = -alpha * scale;\r\n\r\n          let keptIdx = greaterEqual(randomUniform(noiseShape), this.rate);\r\n\r\n          keptIdx = K.cast(keptIdx, 'float32');  // get default dtype.\r\n\r\n          // Get affine transformation params.\r\n          const a = ((1 - this.rate) * (1 + this.rate * alphaP ** 2)) ** -0.5;\r\n          const b = -a * alphaP * this.rate;\r\n\r\n          // Apply mask.\r\n          const x = add(mul(input, keptIdx), mul(add(keptIdx, -1), alphaP));\r\n\r\n          return add(mul(x, a), b);\r\n        };\r\n        return K.inTrainPhase(\r\n            droppedInputs, () => getExactlyOneTensor(inputs),\r\n            kwargs['training'] || false);\r\n      }\r\n      return inputs;\r\n    });\r\n  }\r\n}\r\nserialization.registerClass(AlphaDropout);\r\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Normalization layers.\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {moments, reshape, serialization, Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D, tidy, util} from '@tensorflow/tfjs-core';\n\nimport {Constraint, ConstraintIdentifier, getConstraint, serializeConstraint} from '../constraints';\nimport {InputSpec, Layer, LayerArgs} from '../engine/topology';\nimport {NotImplementedError, ValueError} from '../errors';\nimport {getInitializer, Initializer, InitializerIdentifier, serializeInitializer} from '../initializers';\nimport {Shape} from '../keras_format/common';\nimport {getRegularizer, Regularizer, RegularizerIdentifier, serializeRegularizer} from '../regularizers';\nimport {Kwargs} from '../types';\nimport * as generic_utils from '../utils/generic_utils';\nimport * as math_utils from '../utils/math_utils';\nimport {getExactlyOneShape, getExactlyOneTensor} from '../utils/types_utils';\nimport {LayerVariable} from '../variables';\n\n/**\n * Applies batch normalization on x given mean, var, beta and gamma.\n *\n * I.e. returns:\n *   `output = (x - mean) / (sqrt(var) + epsilon) * gamma + beta`\n *\n * @param x Input tensor.\n * @param mean Mean of batch.\n * @param variance Variance of batch.\n * @param beta Tensor with which to center the input.\n * @param gamma Tensor by which to scale the input.\n * @param epsilon Fuzz factor.\n * @returns The result of the batch normalization.\n */\nexport function batchNormalization(\n    x: Tensor, mean: Tensor, variance: Tensor, beta?: Tensor, gamma?: Tensor,\n    epsilon = 1e-3): Tensor {\n  let out: Tensor;\n  if (x.rank === 2) {\n    out = tfc.batchNorm2d(\n        x as Tensor2D, mean as Tensor2D | Tensor1D,\n        variance as Tensor2D | Tensor1D, beta as Tensor2D | Tensor1D,\n        gamma as Tensor2D | Tensor1D, epsilon);\n  } else if (x.rank === 3) {\n    // TODO(cais): Check rank; give proper error message.\n    out = tfc.batchNorm3d(\n        x as Tensor3D, mean as Tensor3D | Tensor1D,\n        variance as Tensor3D | Tensor1D, beta as Tensor3D | Tensor1D,\n        gamma as Tensor3D | Tensor1D, epsilon);\n  } else if (x.rank === 4) {\n    out = tfc.batchNorm4d(\n        x as Tensor4D, mean as Tensor4D | Tensor1D,\n        variance as Tensor4D | Tensor1D, beta as Tensor4D | Tensor1D,\n        gamma as Tensor4D | Tensor1D, epsilon);\n  } else {\n    throw new NotImplementedError(\n        `batchNormalization is not implemented for array of rank ${x.rank} ` +\n        `yet`);\n  }\n  return out;\n}\n\n/**\n * Non-broadcasting batch normalization for use in training (not inference).\n *\n * The input is normalized to zero mean and unit variance along the\n * `reductionAxes`, followed by scaling with `gamma` and shifted by `beta`.\n * The result of that is returned as the first element\n * of the returned `Array`. The other two elements are the mean and variance,\n * respectively.\n *\n * @param x Input tensor to be normalized.\n * @param gamma Tensor by which to scale the input.\n * @param beta Tensor by which to center the input.\n * @param reductionAxes Axes over which to normalize.\n * @param epsilon Fuzz factor.\n * @returns An `Array` of three `Tensors`:\n *   [normalized tensor, mean of input, variance of input].\n */\nfunction regularNormalizeBatchInTraining(\n    x: Tensor, gamma: Tensor, beta: Tensor, reductionAxes: number[],\n    epsilon = 1e-3): [Tensor, Tensor, Tensor] {\n  return tidy(() => {\n           const meanAndVariance = tfc.moments(x, reductionAxes);\n           const mean = meanAndVariance.mean;\n           const variance = meanAndVariance.variance;\n           const normed =\n               batchNormalization(x, mean, variance, beta, gamma, epsilon);\n           return [normed, mean, variance];\n         }) as [Tensor, Tensor, Tensor];\n}\n\n/**\n * Broadcasting batch normalization for use in training (not inference).\n *\n * The input is normalized to zero mean and unit variance along the\n * `reductionAxes`, followed by scaling with `gamma` and shifted by `beta`.\n * The result of that is returned as the first element\n * of the returned `Array`. The other two elements are the mean and variance,\n * respectively.\n *\n * @param x Input tensor to be normalized.\n * @param gamma Tensor by which to scale the input.\n * @param beta Tensor by which to center the input.\n * @param reductionAxes Axes over which to normalize.\n * @param epsilon Fuzz factor.\n * @returns An `Array` of three `Tensors`:\n *   [normalized tensor, mean of input, variance of input].\n */\nfunction broadcastNormalizeBatchInTraining(\n    x: Tensor, gamma: Tensor, beta: Tensor, reductionAxes: number[],\n    epsilon = 1e-3): [Tensor, Tensor, Tensor] {\n  return tidy(() => {\n           const meanAndVariance = tfc.moments(x, reductionAxes);\n           const mean = meanAndVariance.mean;\n           const variance = meanAndVariance.variance;\n           const targetShape: number[] = [];\n           for (const axis of math_utils.range(0, x.rank)) {\n             if (reductionAxes.indexOf(axis) !== -1) {\n               targetShape.push(1);\n             } else {\n               targetShape.push(x.shape[axis]);\n             }\n           }\n           const broadcastMean = reshape(mean, targetShape);\n           const broadcastVariance = reshape(variance, targetShape);\n           const broadcastGamma =\n               gamma == null ? null : reshape(gamma, targetShape);\n           const broadcastBeta =\n               beta == null ? null : reshape(beta, targetShape);\n           const normed = batchNormalization(\n               x, broadcastMean, broadcastVariance, broadcastBeta,\n               broadcastGamma, epsilon);\n           return [normed, mean, variance];\n         }) as [Tensor, Tensor, Tensor];\n}\n\n/**\n * Batch normalization for use in training (not inference).\n *\n * @param x Input tensor to be normalized.\n * @param gamma Tensor by which to scale the input.\n * @param beta Tensor by which to center the input.\n * @param reductionAxes Axes over which to normalize.\n * @param epsilon Fuzz factor.\n * @returns An `Array` of three `Tensors`:\n *   [normalized tensor, mean of input, variance of input].\n */\nexport function normalizeBatchInTraining(\n    x: Tensor, gamma: Tensor, beta: Tensor, reductionAxes: number[],\n    epsilon = 1e-3): [Tensor, Tensor, Tensor] {\n  if (util.arraysEqual(\n          reductionAxes.slice().sort(), math_utils.range(0, x.rank - 1))) {\n    return regularNormalizeBatchInTraining(\n        x, gamma, beta, reductionAxes, epsilon);\n  } else {\n    return broadcastNormalizeBatchInTraining(\n        x, gamma, beta, reductionAxes, epsilon);\n  }\n}\n\nexport declare interface BatchNormalizationLayerArgs extends LayerArgs {\n  /**\n   * The integer axis that should be normalized (typically the features axis).\n   * Defaults to -1.\n   *\n   * For instance, after a `Conv2D` layer with `data_format=\"channels_first\"`,\n   * set `axis=1` in `batchNormalization`.\n   */\n  axis?: number;\n\n  /**\n   * Momentum of the moving average. Defaults to 0.99.\n   */\n  momentum?: number;\n\n  /**\n   * Small float added to the variance to avoid dividing by zero. Defaults to\n   * 1e-3.\n   */\n  epsilon?: number;\n\n  /**\n   * If `true`, add offset of `beta` to normalized tensor.\n   * If `false`, `beta` is ignored.\n   * Defaults to `true`.\n   */\n  center?: boolean;\n\n  /**\n   * If `true`, multiply by `gamma`.\n   * If `false`, `gamma` is not used.\n   * When the next layer is linear (also e.g. `nn.relu`),\n   * this can be disabled since the scaling will be done by the next layer.\n   * Defaults to `true`.\n   */\n  scale?: boolean;\n\n  /**\n   * Initializer for the beta weight.\n   *  Defaults to 'zeros'.\n   */\n  betaInitializer?: InitializerIdentifier|Initializer;\n\n  /**\n   * Initializer for the gamma weight.\n   *  Defaults to `ones`.\n   */\n  gammaInitializer?: InitializerIdentifier|Initializer;\n\n  /**\n   * Initializer for the moving mean.\n   * Defaults to `zeros`\n   */\n  movingMeanInitializer?: InitializerIdentifier|Initializer;\n\n  /**\n   * Initializer for the moving variance.\n   *  Defaults to 'Ones'.\n   */\n  movingVarianceInitializer?: InitializerIdentifier|Initializer;\n\n  /**\n   * Constraint for the beta weight.\n   */\n  betaConstraint?: ConstraintIdentifier|Constraint;\n\n  /**\n   * Constraint for gamma weight.\n   */\n  gammaConstraint?: ConstraintIdentifier|Constraint;\n\n  /**\n   * Regularizer for the beta weight.\n   */\n  betaRegularizer?: RegularizerIdentifier|Regularizer;\n\n  /**\n   * Regularizer for the gamma weight.\n   */\n  gammaRegularizer?: RegularizerIdentifier|Regularizer;\n}\n\nexport class BatchNormalization extends Layer {\n  /** @nocollapse */\n  static className = 'BatchNormalization';\n  private readonly axis: number;\n  private readonly momentum: number;\n  private readonly epsilon: number;\n  private readonly center: boolean;\n  private readonly scale: boolean;\n  private readonly betaInitializer: Initializer;\n  private readonly gammaInitializer: Initializer;\n  private readonly movingMeanInitializer: Initializer;\n  private readonly movingVarianceInitializer: Initializer;\n  private readonly betaConstraint: Constraint;\n  private readonly gammaConstraint: Constraint;\n  private readonly betaRegularizer: Regularizer;\n  private readonly gammaRegularizer: Regularizer;\n  private gamma: LayerVariable;\n  private beta: LayerVariable;\n  private movingMean: LayerVariable;\n  private movingVariance: LayerVariable;\n\n  constructor(args?: BatchNormalizationLayerArgs) {\n    if (args == null) {\n      args = {};\n    }\n    super(args);\n\n    this.supportsMasking = true;\n    this.axis = args.axis == null ? -1 : args.axis;\n    this.momentum = args.momentum == null ? 0.99 : args.momentum;\n    this.epsilon = args.epsilon == null ? 1e-3 : args.epsilon;\n    this.center = args.center == null ? true : args.center;\n    this.scale = args.scale == null ? true : args.scale;\n    this.betaInitializer = getInitializer(args.betaInitializer || 'zeros');\n    this.gammaInitializer = getInitializer(args.gammaInitializer || 'ones');\n    this.movingMeanInitializer =\n        getInitializer(args.movingMeanInitializer || 'zeros');\n    this.movingVarianceInitializer =\n        getInitializer(args.movingVarianceInitializer || 'ones');\n    this.betaConstraint = getConstraint(args.betaConstraint);\n    this.gammaConstraint = getConstraint(args.gammaConstraint);\n    this.betaRegularizer = getRegularizer(args.betaRegularizer);\n    this.gammaRegularizer = getRegularizer(args.gammaRegularizer);\n  }\n\n  public build(inputShape: Shape|Shape[]): void {\n    inputShape = getExactlyOneShape(inputShape);\n    const axis = this.axis >= 0 ? this.axis : (this.axis + inputShape.length);\n    const dim = inputShape[axis];\n    if (dim == null) {\n      throw new ValueError(\n          `Axis ${axis} of input tensor should have a defined dimension but ` +\n          `the layer received an input with shape ` +\n          `${JSON.stringify(inputShape)}.`);\n    }\n    this.inputSpec =\n        [new InputSpec({ndim: inputShape.length, axes: {[axis]: dim}})];\n    const shape = [dim];\n    if (this.scale) {\n      this.gamma = this.addWeight(\n          'gamma', shape, null, this.gammaInitializer, this.gammaRegularizer,\n          true, this.gammaConstraint);\n    }\n    if (this.center) {\n      this.beta = this.addWeight(\n          'beta', shape, null, this.betaInitializer, this.betaRegularizer, true,\n          this.betaConstraint);\n    }\n    this.movingMean = this.addWeight(\n        'moving_mean', shape, null, this.movingMeanInitializer, null, false);\n    this.movingVariance = this.addWeight(\n        'moving_variance', shape, null, this.movingVarianceInitializer, null,\n        false);\n    this.built = true;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      const training = kwargs['training'] == null ? false : kwargs['training'];\n      const input = getExactlyOneTensor(inputs);\n      const inputShape = input.shape;\n      const ndim = inputShape.length;\n      const reductionAxes = math_utils.range(0, ndim);\n      const axis = this.axis >= 0 ? this.axis : (this.axis + ndim);\n      reductionAxes.splice(axis, 1);\n      const broadcastShape = generic_utils.pyListRepeat(1, ndim);\n      broadcastShape[axis] = inputShape[axis];\n\n      const sortedReductionAxes = reductionAxes.slice();\n      sortedReductionAxes.sort();\n      const needsBroadcasting = !util.arraysEqual(\n          sortedReductionAxes, math_utils.range(0, ndim).slice(0, ndim - 1));\n\n      const normalizeInference: () => Tensor = () => {\n        if (needsBroadcasting) {\n          const broadcastMovingMean =\n              reshape(this.movingMean.read(), broadcastShape);\n          const broadcastMovingVariance =\n              reshape(this.movingVariance.read(), broadcastShape);\n          const broadcastBeta =\n              this.center ? reshape(this.beta.read(), broadcastShape) : null;\n          const broadcastGamma =\n              this.scale ? reshape(this.gamma.read(), broadcastShape) : null;\n          return batchNormalization(\n              input, broadcastMovingMean, broadcastMovingVariance,\n              broadcastBeta, broadcastGamma, this.epsilon);\n        } else {\n          return batchNormalization(\n              input, this.movingMean.read(), this.movingVariance.read(),\n              this.beta == null ? null : this.beta.read(),\n              this.gamma == null ? null : this.gamma.read(), this.epsilon);\n        }\n      };\n\n      if (!training) {\n        return normalizeInference();\n      }\n\n      const [normedTraining, mean, variance] = normalizeBatchInTraining(\n          input, this.gamma.read(), this.beta.read(), reductionAxes,\n          this.epsilon);\n\n      const doMovingAverage =\n          (variable: LayerVariable, value: Tensor, momentum: number): void => {\n            tfc.tidy(() => {\n              const decay = 1 - momentum;\n              const origValue = variable.read();\n              const updateDelta = tfc.mul(tfc.sub(origValue, value), decay);\n              variable.write(tfc.sub(origValue, updateDelta));\n            });\n          };\n\n      // Perform updates to moving mean and moving variance for training.\n      // Porting Note: In PyKeras, these updates to `movingMean` and\n      //   `movingAverage` are done as a deferred Graph, added to the `Layer`'s\n      //   `update`s using the `add_update()` method. Here we do it imperatively\n      //   and encapsulate the updates in a function that is invoked\n      //   immediately.\n      const updateMovingMeanAndVariance = () => {\n        doMovingAverage(this.movingMean, mean, this.momentum);\n        doMovingAverage(this.movingVariance, variance, this.momentum);\n      };\n      updateMovingMeanAndVariance();\n\n      return normedTraining;\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {\n      axis: this.axis,\n      momentum: this.momentum,\n      epsilon: this.epsilon,\n      center: this.center,\n      scale: this.scale,\n      betaInitializer: serializeInitializer(this.betaInitializer),\n      gammaInitializer: serializeInitializer(this.gammaInitializer),\n      movingMeanInitializer: serializeInitializer(this.movingMeanInitializer),\n      movingVarianceInitializer:\n          serializeInitializer(this.movingVarianceInitializer),\n      betaRegularizer: serializeRegularizer(this.betaRegularizer),\n      gammaRegularizer: serializeRegularizer(this.gammaRegularizer),\n      betaConstraint: serializeConstraint(this.betaConstraint),\n      gammaConstraint: serializeConstraint(this.gammaConstraint)\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(BatchNormalization);\n\nexport interface LayerNormalizationLayerArgs extends LayerArgs {\n  /**\n   * The axis or axes that should be normalized (typically, the feature axis.)\n   * Defaults to -1 (the last axis.)\n   */\n  axis?: number|number[];\n\n  /**\n   * A small positive float added to variance to avoid divison by zero.\n   * Defaults to 1e-3.\n   */\n  epsilon?: number;\n\n  /**\n   * If `true`, add offset of `beta` to normalized tensor.\n   * If `false`, `beta` is ignored.\n   * Default: `true`.\n   */\n  center?: boolean;\n\n  /**\n   * If `true`, multiply output by `gamma`.\n   * If `false`, `gamma` is not used.\n   * When the next layer is linear, this can be disabled since scaling will\n   * be done by the next layer.\n   * Default: `true`.\n   */\n  scale?: boolean;\n\n  /**\n   * Initializer for the beta weight.\n   * Default: `'zeros'`.\n   */\n  betaInitializer?: InitializerIdentifier|Initializer;\n\n  /**\n   * Initializer for the gamma weight.\n   * Default: `'ones'`.\n   */\n  gammaInitializer?: InitializerIdentifier|Initializer;\n\n  /** Regularizer for the beta weight. */\n  betaRegularizer?: RegularizerIdentifier|Regularizer;\n\n  /** Regularizer for the gamma weight. */\n  gammaRegularizer?: RegularizerIdentifier|Regularizer;\n}\n\nexport class LayerNormalization extends Layer {\n  /** @nocollapse */\n  static className = 'LayerNormalization';\n\n  private axis: number|number[];\n  readonly epsilon: number;\n  readonly center: boolean;\n  readonly scale: boolean;\n  readonly betaInitializer: Initializer;\n  readonly gammaInitializer: Initializer;\n  readonly betaRegularizer: Regularizer;\n  readonly gammaRegularizer: Regularizer;\n\n  private gamma: LayerVariable;\n  private beta: LayerVariable;\n\n  constructor(args?: LayerNormalizationLayerArgs) {\n    if (args == null) {\n      args = {};\n    }\n    super(args);\n\n    this.axis = args.axis == null ? -1 : args.axis;\n    if (typeof this.axis === 'number') {\n      if (!Number.isInteger(this.axis)) {\n        throw new Error(\n            `Expected axis to be an integer, but received ${this.axis}`);\n      }\n    } else if (Array.isArray(this.axis)) {\n      for (const axis of this.axis) {\n        if (!Number.isInteger(axis)) {\n          throw new Error(\n              `Expected axis to be an array of integers, ` +\n              `but received ${JSON.stringify(this.axis)}`);\n        }\n      }\n    } else {\n      throw new Error(\n          `Expected axis to be an integer or an array of integers, ` +\n          `but received ${JSON.stringify(this.axis)}`);\n    }\n\n    this.epsilon = args.epsilon == null ? 1e-3 : args.epsilon;\n    this.center = args.center == null ? true : args.center;\n    this.scale = args.scale == null ? true : args.scale;\n    this.betaInitializer = getInitializer(args.betaInitializer || 'zeros');\n    this.gammaInitializer = getInitializer(args.gammaInitializer || 'ones');\n    this.betaRegularizer = getRegularizer(args.betaRegularizer);\n    this.gammaRegularizer = getRegularizer(args.gammaRegularizer);\n\n    this.supportsMasking = true;\n  }\n\n  public build(inputShape: Shape|Shape[]): void {\n    inputShape = getExactlyOneShape(inputShape);\n    const nDims = inputShape.length;\n\n    // Convert axis to array and resolve negatives.\n    if (typeof this.axis === 'number') {\n      this.axis = [this.axis];\n    }\n    for (let i = 0; i < this.axis.length; ++i) {\n      if (this.axis[i] < 0) {\n        this.axis[i] += nDims;\n      }\n    }\n\n    // Further validate axes.\n    for (const axis of this.axis) {\n      if (axis < 0 || axis >= nDims) {\n        throw new Error(`Invalid axis: ${axis}`);\n      }\n    }\n    if (this.axis.length !== generic_utils.unique(this.axis).length) {\n      throw new Error(`Found duplicate axes in: ${this.axis}`);\n    }\n\n    const paramShape = this.axis.map(axis => inputShape[axis]) as number[];\n\n    const trainable = true;\n    if (this.scale) {\n      this.gamma = this.addWeight(\n          'gamma', paramShape, 'float32', this.gammaInitializer,\n          this.gammaRegularizer, trainable);\n    } else {\n      this.gamma = null;\n    }\n    if (this.center) {\n      this.beta = this.addWeight(\n          'beta', paramShape, 'float32', this.betaInitializer,\n          this.betaRegularizer, trainable);\n    } else {\n      this.beta = null;\n    }\n\n    this.built = true;\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    const input = getExactlyOneTensor(inputs);\n    const inputShape = input.shape;\n    const nDims = inputShape.length;\n\n    return tidy(() => {\n      const keepDims = true;\n      let {mean, variance} = moments(input, this.axis, keepDims);\n      const broadcastShape = generic_utils.pyListRepeat(1, nDims);\n      for (const dim of this.axis as number[]) {\n        broadcastShape[dim] = inputShape[dim];\n      }\n\n      const broadcast = (v: Tensor) => {\n        if (v != null && v.shape.length !== nDims) {\n          return tfc.reshape(v, broadcastShape);\n        } else {\n          return v;\n        }\n      };\n\n      let scale = broadcast(this.gamma.read());\n      let offset = broadcast(this.beta.read());\n\n      // TODO(https://github.com/tensorflow/tfjs/issues/2120): The tiling below\n      // is a workaround for the limitation of core's batchNormalization?d don't\n      // support broadcasting in their gradients. In addition, the tiling is\n      // necessary to ensure correctness on the browser CPU backend regardless\n      // of forward or backward computation. Remove this workaround once the\n      // limitation is addressed. See .\n      const momentsTiling: number[] = [];\n      const scaleOffsetTiling: number[] = [];\n      for (let i = 0; i < nDims; ++i) {\n        if ((this.axis as number[]).indexOf(i) !== -1) {\n          momentsTiling.push(inputShape[i]);\n          scaleOffsetTiling.push(1);\n        } else {\n          momentsTiling.push(1);\n          scaleOffsetTiling.push(inputShape[i]);\n        }\n      }\n      mean = tfc.tile(mean, momentsTiling);\n      variance = tfc.tile(variance, momentsTiling);\n      scale = tfc.tile(scale, scaleOffsetTiling);\n      offset = tfc.tile(offset, scaleOffsetTiling);\n\n      return batchNormalization(\n          input, mean, variance, offset, scale, this.epsilon);\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {\n      axis: this.axis,\n      epsilon: this.epsilon,\n      center: this.center,\n      scale: this.scale,\n      betaInitializer: serializeInitializer(this.betaInitializer),\n      gammaInitializer: serializeInitializer(this.gammaInitializer),\n      betaRegularizer: serializeRegularizer(this.betaRegularizer),\n      gammaRegularizer: serializeRegularizer(this.gammaRegularizer)\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(LayerNormalization);\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Padding Layers.\n */\n\n// Porting Note: In Python Keras, the padding layers are in convolutional.py,\n//   but we decided to put them in a separate file (padding.ts) for clarity.\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {serialization, Tensor, tidy} from '@tensorflow/tfjs-core';\n\nimport {imageDataFormat} from '../backend/common';\nimport {InputSpec, Layer, LayerArgs} from '../engine/topology';\nimport {ValueError} from '../errors';\nimport {DataFormat, Shape} from '../keras_format/common';\nimport {Kwargs} from '../types';\nimport {getExactlyOneShape, getExactlyOneTensor} from '../utils/types_utils';\n\n/**\n * Pads the middle dimension of a 3D tensor.\n *\n * @param x Input `tf.Tensor` to be padded.\n * @param padding `Array` of 2 integers, how many zeros to add at the start and\n *   end of the middle dimension (i.e., dimension 1).\n * @return A padded 3D `tf.Tensor`.\n */\nexport function temporalPadding(x: Tensor, padding?: [number, number]): Tensor {\n  return tidy(() => {\n    if (x.rank !== 3) {\n      throw new ValueError(\n          `temporalPadding expects input tensor to be 3-D, but received a ` +\n          `${x.rank}-D tensor.`);\n    }\n\n    if (padding == null) {\n      padding = [1, 1];\n    }\n    if (padding.length !== 2) {\n      throw new ValueError(\n          `temporalPadding expects input padding pattern to be a length-2 ` +\n          `array, but received a length-${padding.length} array.`);\n    }\n\n    const pattern: Array<[number, number]> = [[0, 0], padding, [0, 0]];\n    return tfc.pad(x, pattern);\n  });\n}\n\n/**\n * Pads the 2nd and 3rd dimensions of a 4D tensor.\n *\n * @param x Input `tf.Tensor` to be padded.\n * @param padding `Array` of two `Array`s, each of which is an `Array` of two\n *   integers. The amount of padding at the beginning and end of the 2nd and 3rd\n *   dimensions, respectively.\n * @param dataFormat 'channelsLast' (default) or 'channelsFirst'.\n * @return Padded 4D `tf.Tensor`.\n */\nexport function spatial2dPadding(\n    x: Tensor, padding?: [[number, number], [number, number]],\n    dataFormat?: DataFormat): Tensor {\n  return tidy(() => {\n    if (x.rank !== 4) {\n      throw new ValueError(\n          `temporalPadding expects input tensor to be 4-D, but received a ` +\n          `${x.rank}-D tensor.`);\n    }\n\n    if (padding == null) {\n      padding = [[1, 1], [1, 1]];\n    }\n    if (padding.length !== 2 || padding[0].length !== 2 ||\n        padding[1].length !== 2) {\n      throw new ValueError(\n          'spatial2dPadding expects `padding` to be an Array of two Arrays, ' +\n          'each of which is an Array of two integers.');\n    }\n\n    if (dataFormat == null) {\n      dataFormat = imageDataFormat();\n    }\n    if (dataFormat !== 'channelsLast' && dataFormat !== 'channelsFirst') {\n      throw new ValueError(\n          `Unknown data format: ${dataFormat}. ` +\n          `Supported data formats are 'channelsLast' and 'channelsFirst.`);\n    }\n\n    let pattern: Array<[number, number]>;\n    if (dataFormat === 'channelsFirst') {\n      pattern = [[0, 0], [0, 0], padding[0], padding[1]];\n    } else {\n      pattern = [[0, 0], padding[0], padding[1], [0, 0]];\n    }\n\n    return tfc.pad(x, pattern);\n  });\n}\n\nexport declare interface ZeroPadding2DLayerArgs extends LayerArgs {\n  /**\n   * Integer, or `Array` of 2 integers, or `Array` of 2 `Array`s, each of\n   * which is an `Array` of 2 integers.\n   * - If integer, the same symmetric padding is applied to width and height.\n   * - If Array` of 2 integers, interpreted as two different symmetric values\n   *   for height and width:\n   *   `[symmetricHeightPad, symmetricWidthPad]`.\n   * - If `Array` of 2 `Array`s, interpreted as:\n   *   `[[topPad, bottomPad], [leftPad, rightPad]]`.\n   */\n  padding?: number|[number, number]|[[number, number], [number, number]];\n\n  /**\n   * One of `'channelsLast'` (default) and `'channelsFirst'`.\n   *\n   * The ordering of the dimensions in the inputs.\n   * `channelsLast` corresponds to inputs with shape\n   * `[batch, height, width, channels]` while `channelsFirst`\n   * corresponds to inputs with shape\n   * `[batch, channels, height, width]`.\n   */\n  dataFormat?: DataFormat;\n}\n\nexport class ZeroPadding2D extends Layer {\n  /** @nocollapse */\n  static className = 'ZeroPadding2D';\n  readonly dataFormat: DataFormat;\n  readonly padding: [[number, number], [number, number]];\n\n  constructor(args?: ZeroPadding2DLayerArgs) {\n    if (args == null) {\n      args = {};\n    }\n    super(args);\n\n    this.dataFormat =\n        args.dataFormat == null ? imageDataFormat() : args.dataFormat;\n    // TODO(cais): Maybe refactor the following logic surrounding `padding`\n    //   into a helper method.\n    if (args.padding == null) {\n      this.padding = [[1, 1], [1, 1]];\n    } else if (typeof args.padding === 'number') {\n      this.padding =\n          [[args.padding, args.padding], [args.padding, args.padding]];\n    } else {\n      args.padding = args.padding;\n      if (args.padding.length !== 2) {\n        throw new ValueError(\n            `ZeroPadding2D expects padding to be a length-2 array, but ` +\n            `received a length-${args.padding.length} array.`);\n      }\n\n      let heightPadding: [number, number];\n      let widthPadding: [number, number];\n      if (typeof args.padding[0] === 'number') {\n        heightPadding = [args.padding[0], args.padding[0]];\n        widthPadding = [args.padding[1] as number, args.padding[1] as number];\n      } else {\n        args.padding = args.padding as [[number, number], [number, number]];\n\n        if (args.padding[0].length !== 2) {\n          throw new ValueError(\n              `ZeroPadding2D expects height padding to be a length-2 array, ` +\n              `but received a length-${args.padding[0].length} array.`);\n        }\n        heightPadding = args.padding[0] as [number, number];\n\n        if (args.padding[1].length !== 2) {\n          throw new ValueError(\n              `ZeroPadding2D expects width padding to be a length-2 array, ` +\n              `but received a length-${args.padding[1].length} array.`);\n        }\n        widthPadding = args.padding[1] as [number, number];\n      }\n      this.padding = [heightPadding, widthPadding];\n    }\n    this.inputSpec = [new InputSpec({ndim: 4})];\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    inputShape = getExactlyOneShape(inputShape);\n\n    let rows: number;\n    let cols: number;\n    if (this.dataFormat === 'channelsFirst') {\n      if (inputShape[2] != null && inputShape[2] >= 0) {\n        rows = inputShape[2] + this.padding[0][0] + this.padding[0][1];\n      } else {\n        rows = null;\n      }\n      if (inputShape[3] != null && inputShape[3] >= 0) {\n        cols = inputShape[3] + this.padding[1][0] + this.padding[1][1];\n      } else {\n        cols = null;\n      }\n      return [inputShape[0], inputShape[1], rows, cols];\n    } else {\n      if (inputShape[1] != null && inputShape[1] >= 0) {\n        rows = inputShape[1] + this.padding[0][0] + this.padding[0][1];\n      } else {\n        rows = null;\n      }\n      if (inputShape[2] != null && inputShape[2] >= 0) {\n        cols = inputShape[2] + this.padding[1][0] + this.padding[1][1];\n      } else {\n        cols = null;\n      }\n      return [inputShape[0], rows, cols, inputShape[3]];\n    }\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(\n        () => spatial2dPadding(\n            getExactlyOneTensor(inputs), this.padding, this.dataFormat));\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {\n      padding: this.padding,\n      dataFormat: this.dataFormat,\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\nserialization.registerClass(ZeroPadding2D);\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * TensorFlow.js Layers: Pooling Layers.\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {serialization, Tensor, Tensor3D, Tensor4D, Tensor5D, tidy} from '@tensorflow/tfjs-core';\n\nimport {imageDataFormat} from '../backend/common';\nimport * as K from '../backend/tfjs_backend';\nimport {checkDataFormat, checkPaddingMode, checkPoolMode} from '../common';\nimport {InputSpec} from '../engine/topology';\nimport {Layer, LayerArgs} from '../engine/topology';\nimport {NotImplementedError, ValueError} from '../errors';\nimport {DataFormat, PaddingMode, PoolMode, Shape} from '../keras_format/common';\nimport {Kwargs} from '../types';\nimport {convOutputLength} from '../utils/conv_utils';\nimport {assertPositiveInteger} from '../utils/generic_utils';\nimport {getExactlyOneShape, getExactlyOneTensor} from '../utils/types_utils';\n\nimport {preprocessConv2DInput, preprocessConv3DInput} from './convolutional';\n\n/**\n * 2D pooling.\n * @param x\n * @param poolSize\n * @param stridesdes strides. Defaults to [1, 1].\n * @param padding padding. Defaults to 'valid'.\n * @param dataFormat data format. Defaults to 'channelsLast'.\n * @param poolMode Mode of pooling. Defaults to 'max'.\n * @returns Result of the 2D pooling.\n */\nexport function pool2d(\n    x: Tensor, poolSize: [number, number], strides?: [number, number],\n    padding?: PaddingMode, dataFormat?: DataFormat,\n    poolMode?: PoolMode): Tensor {\n  return tidy(() => {\n    checkDataFormat(dataFormat);\n    checkPoolMode(poolMode);\n    checkPaddingMode(padding);\n    if (strides == null) {\n      strides = [1, 1];\n    }\n    if (padding == null) {\n      padding = 'valid';\n    }\n    if (dataFormat == null) {\n      dataFormat = imageDataFormat();\n    }\n    if (poolMode == null) {\n      poolMode = 'max';\n    }\n\n    // TODO(cais): Remove the preprocessing step once deeplearn.js supports\n    // dataFormat as an input argument.\n    x = preprocessConv2DInput(x, dataFormat);  // x is NHWC after preprocessing.\n    let y: Tensor;\n    const paddingString = (padding === 'same') ? 'same' : 'valid';\n    if (poolMode === 'max') {\n      // TODO(cais): Rank check?\n      y = tfc.maxPool(x as Tensor4D, poolSize, strides, paddingString);\n    } else {  // 'avg'\n      // TODO(cais): Check the dtype and rank of x and give clear error message\n      //   if those are incorrect.\n      y = tfc.avgPool(\n          // TODO(cais): Rank check?\n          x as Tensor3D | Tensor4D, poolSize, strides, paddingString);\n    }\n    if (dataFormat === 'channelsFirst') {\n      y = tfc.transpose(y, [0, 3, 1, 2]);  // NHWC -> NCHW.\n    }\n    return y;\n  });\n}\n\n/**\n * 3D pooling.\n * @param x\n * @param poolSize. Default to [1, 1, 1].\n * @param strides strides. Defaults to [1, 1, 1].\n * @param padding padding. Defaults to 'valid'.\n * @param dataFormat data format. Defaults to 'channelsLast'.\n * @param poolMode Mode of pooling. Defaults to 'max'.\n * @returns Result of the 3D pooling.\n */\nexport function pool3d(\n    x: Tensor5D, poolSize: [number, number, number],\n    strides?: [number, number, number], padding?: PaddingMode,\n    dataFormat?: DataFormat, poolMode?: PoolMode): Tensor {\n  return tidy(() => {\n    checkDataFormat(dataFormat);\n    checkPoolMode(poolMode);\n    checkPaddingMode(padding);\n    if (strides == null) {\n      strides = [1, 1, 1];\n    }\n    if (padding == null) {\n      padding = 'valid';\n    }\n    if (dataFormat == null) {\n      dataFormat = imageDataFormat();\n    }\n    if (poolMode == null) {\n      poolMode = 'max';\n    }\n\n    // x is NDHWC after preprocessing.\n    x = preprocessConv3DInput(x as Tensor, dataFormat) as Tensor5D;\n    let y: Tensor;\n    const paddingString = (padding === 'same') ? 'same' : 'valid';\n    if (poolMode === 'max') {\n      y = tfc.maxPool3d(x, poolSize, strides, paddingString);\n    } else {  // 'avg'\n      y = tfc.avgPool3d(x, poolSize, strides, paddingString);\n    }\n    if (dataFormat === 'channelsFirst') {\n      y = tfc.transpose(y, [0, 4, 1, 2, 3]);  // NDHWC -> NCDHW.\n    }\n    return y;\n  });\n}\n\nexport declare interface Pooling1DLayerArgs extends LayerArgs {\n  /**\n   * Size of the window to pool over, should be an integer.\n   */\n  poolSize?: number|[number];\n  /**\n   * Period at which to sample the pooled values.\n   *\n   * If `null`, defaults to `poolSize`.\n   */\n  strides?: number|[number];\n  /** How to fill in data that's not an integer multiple of poolSize. */\n  padding?: PaddingMode;\n}\n\n/**\n * Abstract class for different pooling 1D layers.\n */\nexport abstract class Pooling1D extends Layer {\n  protected readonly poolSize: [number];\n  protected readonly strides: [number];\n  protected readonly padding: PaddingMode;\n\n  /**\n   *\n   * @param args Parameters for the Pooling layer.\n   *\n   * config.poolSize defaults to 2.\n   */\n  constructor(args: Pooling1DLayerArgs) {\n    if (args.poolSize == null) {\n      args.poolSize = 2;\n    }\n    super(args);\n    if (typeof args.poolSize === 'number') {\n      this.poolSize = [args.poolSize];\n    } else if (\n        Array.isArray(args.poolSize) &&\n        (args.poolSize as number[]).length === 1 &&\n        typeof (args.poolSize as number[])[0] === 'number') {\n      this.poolSize = args.poolSize;\n    } else {\n      throw new ValueError(\n          `poolSize for 1D convolutional layer must be a number or an ` +\n          `Array of a single number, but received ` +\n          `${JSON.stringify(args.poolSize)}`);\n    }\n    assertPositiveInteger(this.poolSize, 'poolSize');\n    if (args.strides == null) {\n      this.strides = this.poolSize;\n    } else {\n      if (typeof args.strides === 'number') {\n        this.strides = [args.strides];\n      } else if (\n          Array.isArray(args.strides) &&\n          (args.strides as number[]).length === 1 &&\n          typeof (args.strides as number[])[0] === 'number') {\n        this.strides = args.strides;\n      } else {\n        throw new ValueError(\n            `strides for 1D convolutional layer must be a number or an ` +\n            `Array of a single number, but received ` +\n            `${JSON.stringify(args.strides)}`);\n      }\n    }\n    assertPositiveInteger(this.strides, 'strides');\n\n    this.padding = args.padding == null ? 'valid' : args.padding;\n    checkPaddingMode(this.padding);\n    this.inputSpec = [new InputSpec({ndim: 3})];\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    inputShape = getExactlyOneShape(inputShape);\n    const length = convOutputLength(\n        inputShape[1], this.poolSize[0], this.padding, this.strides[0]);\n    return [inputShape[0], length, inputShape[2]];\n  }\n\n  protected abstract poolingFunction(\n      inputs: Tensor, poolSize: [number, number], strides: [number, number],\n      padding: PaddingMode, dataFormat: DataFormat): Tensor;\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      this.invokeCallHook(inputs, kwargs);\n      // Add dummy last dimension.\n      inputs = K.expandDims(getExactlyOneTensor(inputs), 2);\n      const output = this.poolingFunction(\n          getExactlyOneTensor(inputs), [this.poolSize[0], 1],\n          [this.strides[0], 1], this.padding, 'channelsLast');\n      // Remove dummy last dimension.\n      return tfc.squeeze(output, [2]);\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = {\n      poolSize: this.poolSize,\n      padding: this.padding,\n      strides: this.strides,\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\n\nexport class MaxPooling1D extends Pooling1D {\n  /** @nocollapse */\n  static className = 'MaxPooling1D';\n  constructor(args: Pooling1DLayerArgs) {\n    super(args);\n  }\n\n  protected poolingFunction(\n      inputs: Tensor, poolSize: [number, number], strides: [number, number],\n      padding: PaddingMode, dataFormat: DataFormat): Tensor {\n    checkDataFormat(dataFormat);\n    checkPaddingMode(padding);\n    return pool2d(inputs, poolSize, strides, padding, dataFormat, 'max');\n  }\n}\nserialization.registerClass(MaxPooling1D);\n\nexport class AveragePooling1D extends Pooling1D {\n  /** @nocollapse */\n  static className = 'AveragePooling1D';\n  constructor(args: Pooling1DLayerArgs) {\n    super(args);\n  }\n\n  protected poolingFunction(\n      inputs: Tensor, poolSize: [number, number], strides: [number, number],\n      padding: PaddingMode, dataFormat: DataFormat): Tensor {\n    checkDataFormat(dataFormat);\n    checkPaddingMode(padding);\n    return pool2d(inputs, poolSize, strides, padding, dataFormat, 'avg');\n  }\n}\nserialization.registerClass(AveragePooling1D);\n\nexport declare interface Pooling2DLayerArgs extends LayerArgs {\n  /**\n   * Factors by which to downscale in each dimension [vertical, horizontal].\n   * Expects an integer or an array of 2 integers.\n   *\n   * For example, `[2, 2]` will halve the input in both spatial dimension.\n   * If only one integer is specified, the same window length\n   * will be used for both dimensions.\n   */\n  poolSize?: number|[number, number];\n\n  /**\n   * The size of the stride in each dimension of the pooling window. Expects\n   * an integer or an array of 2 integers. Integer, tuple of 2 integers, or\n   * None.\n   *\n   * If `null`, defaults to `poolSize`.\n   */\n  strides?: number|[number, number];\n\n  /** The padding type to use for the pooling layer. */\n  padding?: PaddingMode;\n  /** The data format to use for the pooling layer. */\n  dataFormat?: DataFormat;\n}\n\n/**\n * Abstract class for different pooling 2D layers.\n */\nexport abstract class Pooling2D extends Layer {\n  protected readonly poolSize: [number, number];\n  protected readonly strides: [number, number];\n  protected readonly padding: PaddingMode;\n  protected readonly dataFormat: DataFormat;\n\n  constructor(args: Pooling2DLayerArgs) {\n    if (args.poolSize == null) {\n      args.poolSize = [2, 2];\n    }\n    super(args);\n    this.poolSize = Array.isArray(args.poolSize) ?\n        args.poolSize :\n        [args.poolSize, args.poolSize];\n    if (args.strides == null) {\n      this.strides = this.poolSize;\n    } else if (Array.isArray(args.strides)) {\n      if (args.strides.length !== 2) {\n        throw new ValueError(\n            `If the strides property of a 2D pooling layer is an Array, ` +\n            `it is expected to have a length of 2, but received length ` +\n            `${args.strides.length}.`);\n      }\n      this.strides = args.strides;\n    } else {\n      // `config.strides` is a number.\n      this.strides = [args.strides, args.strides];\n    }\n    assertPositiveInteger(this.poolSize, 'poolSize');\n    assertPositiveInteger(this.strides, 'strides');\n    this.padding = args.padding == null ? 'valid' : args.padding;\n    this.dataFormat =\n        args.dataFormat == null ? 'channelsLast' : args.dataFormat;\n    checkDataFormat(this.dataFormat);\n    checkPaddingMode(this.padding);\n\n    this.inputSpec = [new InputSpec({ndim: 4})];\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    inputShape = getExactlyOneShape(inputShape);\n    let rows =\n        this.dataFormat === 'channelsFirst' ? inputShape[2] : inputShape[1];\n    let cols =\n        this.dataFormat === 'channelsFirst' ? inputShape[3] : inputShape[2];\n    rows =\n        convOutputLength(rows, this.poolSize[0], this.padding, this.strides[0]);\n    cols =\n        convOutputLength(cols, this.poolSize[1], this.padding, this.strides[1]);\n    if (this.dataFormat === 'channelsFirst') {\n      return [inputShape[0], inputShape[1], rows, cols];\n    } else {\n      return [inputShape[0], rows, cols, inputShape[3]];\n    }\n  }\n\n  protected abstract poolingFunction(\n      inputs: Tensor, poolSize: [number, number], strides: [number, number],\n      padding: PaddingMode, dataFormat: DataFormat): Tensor;\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      this.invokeCallHook(inputs, kwargs);\n      return this.poolingFunction(\n          getExactlyOneTensor(inputs), this.poolSize, this.strides,\n          this.padding, this.dataFormat);\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = {\n      poolSize: this.poolSize,\n      padding: this.padding,\n      strides: this.strides,\n      dataFormat: this.dataFormat\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\n\nexport class MaxPooling2D extends Pooling2D {\n  /** @nocollapse */\n  static className = 'MaxPooling2D';\n  constructor(args: Pooling2DLayerArgs) {\n    super(args);\n  }\n\n  protected poolingFunction(\n      inputs: Tensor, poolSize: [number, number], strides: [number, number],\n      padding: PaddingMode, dataFormat: DataFormat): Tensor {\n    checkDataFormat(dataFormat);\n    checkPaddingMode(padding);\n    return pool2d(inputs, poolSize, strides, padding, dataFormat, 'max');\n  }\n}\nserialization.registerClass(MaxPooling2D);\n\nexport class AveragePooling2D extends Pooling2D {\n  /** @nocollapse */\n  static className = 'AveragePooling2D';\n  constructor(args: Pooling2DLayerArgs) {\n    super(args);\n  }\n\n  protected poolingFunction(\n      inputs: Tensor, poolSize: [number, number], strides: [number, number],\n      padding: PaddingMode, dataFormat: DataFormat): Tensor {\n    checkDataFormat(dataFormat);\n    checkPaddingMode(padding);\n    return pool2d(inputs, poolSize, strides, padding, dataFormat, 'avg');\n  }\n}\nserialization.registerClass(AveragePooling2D);\n\nexport declare interface Pooling3DLayerArgs extends LayerArgs {\n  /**\n   * Factors by which to downscale in each dimension [depth, height, width].\n   * Expects an integer or an array of 3 integers.\n   *\n   * For example, `[2, 2, 2]` will halve the input in three dimensions.\n   * If only one integer is specified, the same window length\n   * will be used for all dimensions.\n   */\n  poolSize?: number|[number, number, number];\n\n  /**\n   * The size of the stride in each dimension of the pooling window. Expects\n   * an integer or an array of 3 integers. Integer, tuple of 3 integers, or\n   * None.\n   *\n   * If `null`, defaults to `poolSize`.\n   */\n  strides?: number|[number, number, number];\n\n  /** The padding type to use for the pooling layer. */\n  padding?: PaddingMode;\n  /** The data format to use for the pooling layer. */\n  dataFormat?: DataFormat;\n}\n\n/**\n * Abstract class for different pooling 3D layers.\n */\nexport abstract class Pooling3D extends Layer {\n  protected readonly poolSize: [number, number, number];\n  protected readonly strides: [number, number, number];\n  protected readonly padding: PaddingMode;\n  protected readonly dataFormat: DataFormat;\n\n  constructor(args: Pooling3DLayerArgs) {\n    if (args.poolSize == null) {\n      args.poolSize = [2, 2, 2];\n    }\n    super(args);\n    this.poolSize = Array.isArray(args.poolSize) ?\n        args.poolSize :\n        [args.poolSize, args.poolSize, args.poolSize];\n    if (args.strides == null) {\n      this.strides = this.poolSize;\n    } else if (Array.isArray(args.strides)) {\n      if (args.strides.length !== 3) {\n        throw new ValueError(\n            `If the strides property of a 3D pooling layer is an Array, ` +\n            `it is expected to have a length of 3, but received length ` +\n            `${args.strides.length}.`);\n      }\n      this.strides = args.strides;\n    } else {\n      // `config.strides` is a number.\n      this.strides = [args.strides, args.strides, args.strides];\n    }\n    assertPositiveInteger(this.poolSize, 'poolSize');\n    assertPositiveInteger(this.strides, 'strides');\n    this.padding = args.padding == null ? 'valid' : args.padding;\n    this.dataFormat =\n        args.dataFormat == null ? 'channelsLast' : args.dataFormat;\n    checkDataFormat(this.dataFormat);\n    checkPaddingMode(this.padding);\n\n    this.inputSpec = [new InputSpec({ndim: 5})];\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    inputShape = getExactlyOneShape(inputShape);\n    let depths =\n        this.dataFormat === 'channelsFirst' ? inputShape[2] : inputShape[1];\n    let rows =\n        this.dataFormat === 'channelsFirst' ? inputShape[3] : inputShape[2];\n    let cols =\n        this.dataFormat === 'channelsFirst' ? inputShape[4] : inputShape[3];\n    depths = convOutputLength(\n        depths, this.poolSize[0], this.padding, this.strides[0]);\n    rows =\n        convOutputLength(rows, this.poolSize[1], this.padding, this.strides[1]);\n    cols =\n        convOutputLength(cols, this.poolSize[2], this.padding, this.strides[2]);\n    if (this.dataFormat === 'channelsFirst') {\n      return [inputShape[0], inputShape[1], depths, rows, cols];\n    } else {\n      return [inputShape[0], depths, rows, cols, inputShape[4]];\n    }\n  }\n\n  protected abstract poolingFunction(\n      inputs: Tensor, poolSize: [number, number, number],\n      strides: [number, number, number], padding: PaddingMode,\n      dataFormat: DataFormat): Tensor;\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      this.invokeCallHook(inputs, kwargs);\n      return this.poolingFunction(\n          getExactlyOneTensor(inputs), this.poolSize, this.strides,\n          this.padding, this.dataFormat);\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = {\n      poolSize: this.poolSize,\n      padding: this.padding,\n      strides: this.strides,\n      dataFormat: this.dataFormat\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\n\nexport class MaxPooling3D extends Pooling3D {\n  /** @nocollapse */\n  static className = 'MaxPooling3D';\n  constructor(args: Pooling3DLayerArgs) {\n    super(args);\n  }\n\n  protected poolingFunction(\n      inputs: Tensor, poolSize: [number, number, number],\n      strides: [number, number, number], padding: PaddingMode,\n      dataFormat: DataFormat): Tensor {\n    checkDataFormat(dataFormat);\n    checkPaddingMode(padding);\n    return pool3d(\n        inputs as Tensor5D, poolSize, strides, padding, dataFormat, 'max');\n  }\n}\nserialization.registerClass(MaxPooling3D);\n\nexport class AveragePooling3D extends Pooling3D {\n  /** @nocollapse */\n  static className = 'AveragePooling3D';\n  constructor(args: Pooling3DLayerArgs) {\n    super(args);\n  }\n\n  protected poolingFunction(\n      inputs: Tensor, poolSize: [number, number, number],\n      strides: [number, number, number], padding: PaddingMode,\n      dataFormat: DataFormat): Tensor {\n    checkDataFormat(dataFormat);\n    checkPaddingMode(padding);\n    return pool3d(\n        inputs as Tensor5D, poolSize, strides, padding, dataFormat, 'avg');\n  }\n}\nserialization.registerClass(AveragePooling3D);\n\n/**\n * Abstract class for different global pooling 1D layers.\n */\nexport abstract class GlobalPooling1D extends Layer {\n  constructor(args: LayerArgs) {\n    super(args);\n    this.inputSpec = [new InputSpec({ndim: 3})];\n  }\n\n  computeOutputShape(inputShape: Shape): Shape {\n    return [inputShape[0], inputShape[2]];\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    throw new NotImplementedError();\n  }\n}\n\nexport class GlobalAveragePooling1D extends GlobalPooling1D {\n  /** @nocollapse */\n  static className = 'GlobalAveragePooling1D';\n  constructor(args?: LayerArgs) {\n    super(args || {});\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      const input = getExactlyOneTensor(inputs);\n      return tfc.mean(input, 1);\n    });\n  }\n}\nserialization.registerClass(GlobalAveragePooling1D);\n\nexport class GlobalMaxPooling1D extends GlobalPooling1D {\n  /** @nocollapse */\n  static className = 'GlobalMaxPooling1D';\n  constructor(args: LayerArgs) {\n    super(args || {});\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      const input = getExactlyOneTensor(inputs);\n      return tfc.max(input, 1);\n    });\n  }\n}\nserialization.registerClass(GlobalMaxPooling1D);\n\nexport declare interface GlobalPooling2DLayerArgs extends LayerArgs {\n  /**\n   * One of `CHANNEL_LAST` (default) or `CHANNEL_FIRST`.\n   *\n   * The ordering of the dimensions in the inputs. `CHANNEL_LAST` corresponds\n   * to inputs with shape `[batch, height, width, channels[` while\n   * `CHANNEL_FIRST` corresponds to inputs with shape\n   * `[batch, channels, height, width]`.\n   */\n  dataFormat?: DataFormat;\n}\n\n/**\n * Abstract class for different global pooling 2D layers.\n */\nexport abstract class GlobalPooling2D extends Layer {\n  protected dataFormat: DataFormat;\n  constructor(args: GlobalPooling2DLayerArgs) {\n    super(args);\n    this.dataFormat =\n        args.dataFormat == null ? 'channelsLast' : args.dataFormat;\n    checkDataFormat(this.dataFormat);\n    this.inputSpec = [new InputSpec({ndim: 4})];\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    inputShape = inputShape as Shape;\n    if (this.dataFormat === 'channelsLast') {\n      return [inputShape[0], inputShape[3]];\n    } else {\n      return [inputShape[0], inputShape[1]];\n    }\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    throw new NotImplementedError();\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config = {dataFormat: this.dataFormat};\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\n\nexport class GlobalAveragePooling2D extends GlobalPooling2D {\n  /** @nocollapse */\n  static className = 'GlobalAveragePooling2D';\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      const input = getExactlyOneTensor(inputs);\n      if (this.dataFormat === 'channelsLast') {\n        return tfc.mean(input, [1, 2]);\n      } else {\n        return tfc.mean(input, [2, 3]);\n      }\n    });\n  }\n}\nserialization.registerClass(GlobalAveragePooling2D);\n\nexport class GlobalMaxPooling2D extends GlobalPooling2D {\n  /** @nocollapse */\n  static className = 'GlobalMaxPooling2D';\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      const input = getExactlyOneTensor(inputs);\n      if (this.dataFormat === 'channelsLast') {\n        return tfc.max(input, [1, 2]);\n      } else {\n        return tfc.max(input, [2, 3]);\n      }\n    });\n  }\n}\nserialization.registerClass(GlobalMaxPooling2D);\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Layers that augment the functionality of a base layer.\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {serialization, Tensor, tidy} from '@tensorflow/tfjs-core';\nimport * as K from '../backend/tfjs_backend';\nimport {nameScope} from '../common';\nimport {InputSpec, Layer, LayerArgs, SymbolicTensor} from '../engine/topology';\nimport {NotImplementedError, ValueError} from '../errors';\nimport {BidirectionalMergeMode, Shape, VALID_BIDIRECTIONAL_MERGE_MODES} from '../keras_format/common';\nimport {Kwargs} from '../types';\nimport {RegularizerFn, RnnStepFunction} from '../types';\nimport * as generic_utils from '../utils/generic_utils';\nimport {getExactlyOneShape, getExactlyOneTensor} from '../utils/types_utils';\nimport {LayerVariable} from '../variables';\n\nimport {rnn, RNN, standardizeArgs} from './recurrent';\nimport {deserialize} from './serialization';\n\nexport declare interface WrapperLayerArgs extends LayerArgs {\n  /**\n   * The layer to be wrapped.\n   */\n  layer: Layer;\n}\n\n/**\n * Abstract wrapper base class.\n *\n * Wrappers take another layer and augment it in various ways.\n * Do not use this class as a layer, it is only an abstract base class.\n * Two usable wrappers are the `TimeDistributed` and `Bidirectional` wrappers.\n */\nexport abstract class Wrapper extends Layer {\n  readonly layer: Layer;\n\n  constructor(args: WrapperLayerArgs) {\n    // Porting Note: In PyKeras, `self.layer` is set prior to the calling\n    //   `super()`. But we can't do that here due to TypeScript's restriction.\n    //   See: https://github.com/Microsoft/TypeScript/issues/8277\n    //   As a result, we have to add checks in `get trainable()` and\n    //   `set trainable()` below in order to prevent using `this.layer` when\n    //   its value is `undefined`. The super constructor does use the getter\n    //   and the setter of `this.layer`.\n    super(args);\n    this.layer = args.layer;\n  }\n\n  build(inputShape: Shape|Shape[]): void {\n    this.built = true;\n  }\n\n  // TODO(cais): Implement activityRegularizer getter.\n\n  get trainable(): boolean {\n    // Porting Note: the check of `this.layer` here is necessary due to the\n    //   way the `constructor` of this class is written (see Porting Note\n    //   above).\n    if (this.layer != null) {\n      return this.layer.trainable;\n    } else {\n      return false;\n    }\n  }\n\n  set trainable(value: boolean) {\n    // Porting Note: the check of `this.layer` here is necessary due to the\n    //   way the `constructor` of this class is written (see Porting Note\n    //   above).\n    if (this.layer != null) {\n      this.layer.trainable = value;\n    }\n  }\n\n  get trainableWeights(): LayerVariable[] {\n    return this.layer.trainableWeights;\n  }\n  // TODO(cais): Implement setter for trainableWeights.\n\n  get nonTrainableWeights(): LayerVariable[] {\n    return this.layer.nonTrainableWeights;\n  }\n  // TODO(cais): Implement setter for nonTrainableWeights.\n\n  get updates(): Tensor[] {\n    // tslint:disable-next-line:no-any\n    return (this.layer as any)._updates;\n  }\n\n  // TODO(cais): Implement getUpdatesFor().\n\n  get losses(): RegularizerFn[] {\n    return this.layer.losses;\n  }\n\n  // TODO(cais): Implement getLossesFor().\n\n  getWeights(): Tensor[] {\n    return this.layer.getWeights();\n  }\n\n  setWeights(weights: Tensor[]): void {\n    this.layer.setWeights(weights);\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {\n      'layer': {\n        'className': this.layer.getClassName(),\n        'config': this.layer.getConfig(),\n      }\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n\n  setFastWeightInitDuringBuild(value: boolean) {\n    super.setFastWeightInitDuringBuild(value);\n    if (this.layer != null) {\n      this.layer.setFastWeightInitDuringBuild(value);\n    }\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends serialization.Serializable>(\n      cls: serialization.SerializableConstructor<T>,\n      config: serialization.ConfigDict,\n      customObjects = {} as serialization.ConfigDict): T {\n    const layerConfig = config['layer'] as serialization.ConfigDict;\n    const layer = deserialize(layerConfig, customObjects) as Layer;\n    delete config['layer'];\n    const newConfig = {layer};\n    Object.assign(newConfig, config);\n    return new cls(newConfig);\n  }\n}\n\nexport class TimeDistributed extends Wrapper {\n  /** @nocollapse */\n  static className = 'TimeDistributed';\n  constructor(args: WrapperLayerArgs) {\n    super(args);\n    this.supportsMasking = true;\n  }\n\n  build(inputShape: Shape|Shape[]): void {\n    inputShape = getExactlyOneShape(inputShape);\n    if (inputShape.length < 3) {\n      throw new ValueError(\n          `TimeDistributed layer expects an input shape >= 3D, but received ` +\n          `input shape ${JSON.stringify(inputShape)}`);\n    }\n    this.inputSpec = [{shape: inputShape}];\n    const childInputShape = [inputShape[0]].concat(inputShape.slice(2));\n    if (!this.layer.built) {\n      this.layer.build(childInputShape);\n      this.layer.built = true;\n    }\n    super.build(inputShape);\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    inputShape = getExactlyOneShape(inputShape);\n    const childInputShape = [inputShape[0]].concat(inputShape.slice(2));\n    const childOutputShape =\n        this.layer.computeOutputShape(childInputShape) as Shape;\n    const timesteps = inputShape[1];\n    return [childOutputShape[0], timesteps].concat(childOutputShape.slice(1));\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      // TODO(cais): Add 'training' and 'useLearningPhase' to kwargs.\n      inputs = getExactlyOneTensor(inputs);\n      // Porting Note: In tfjs-layers, `inputs` are always concrete tensor\n      // values. Hence the inputs can't have an undetermined first (batch)\n      // dimension, which is why we always use the K.rnn approach here.\n      const step: RnnStepFunction = (inputs: Tensor, states: Tensor[]) => {\n        // TODO(cais): Add useLearningPhase.\n        // NOTE(cais): `layer.call` may return a length-1 array of Tensor in\n        //   some cases (e.g., `layer` is a `Sequential` instance), which is\n        //   why `getExactlyOneTensor` is used below.\n        const output = getExactlyOneTensor(this.layer.call(inputs, kwargs));\n        return [output, []];\n      };\n      const rnnOutputs =\n          rnn(step, inputs, [], false /* goBackwards */, null /* mask */,\n              null /* constants */, false /* unroll */,\n              true /* needPerStepOutputs */);\n      const y = rnnOutputs[1];\n      // TODO(cais): Add activity regularization.\n      // TODO(cais): Add useLearningPhase.\n      return y;\n    });\n  }\n\n  // TODO(cais): Implement detailed computeMask() logic.\n}\nserialization.registerClass(TimeDistributed);\n\nexport function checkBidirectionalMergeMode(value?: string): void {\n  generic_utils.checkStringTypeUnionValue(\n      VALID_BIDIRECTIONAL_MERGE_MODES, 'BidirectionalMergeMode', value);\n}\n\nexport declare interface BidirectionalLayerArgs extends WrapperLayerArgs {\n  /**\n   * The instance of an `RNN` layer to be wrapped.\n   */\n  layer: RNN;\n\n  /**\n   * Mode by which outputs of the forward and backward RNNs are\n   * combined. If `null` or `undefined`, the output will not be\n   * combined, they will be returned as an `Array`.\n   *\n   * If `undefined` (i.e., not provided), defaults to `'concat'`.\n   */\n  mergeMode?: BidirectionalMergeMode;\n}\n\nconst DEFAULT_BIDIRECTIONAL_MERGE_MODE: BidirectionalMergeMode = 'concat';\n\nexport class Bidirectional extends Wrapper {\n  /** @nocollapse */\n  static className = 'Bidirectional';\n  mergeMode: BidirectionalMergeMode;\n  private forwardLayer: RNN;\n  private backwardLayer: RNN;\n  private returnSequences: boolean;\n  private returnState: boolean;\n  private numConstants?: number;\n  private _trainable: boolean;\n\n  constructor(args: BidirectionalLayerArgs) {\n    super(args);\n\n    // Note: When creating `this.forwardLayer`, the original Layer object\n    //   (`config.layer`) ought to be cloned. This is why we call\n    //   `getConfig()` followed by `deserialize()`. Without this cloning,\n    //   the layer names saved during serialization will incorrectly contain\n    //   the 'forward_' prefix. In Python Keras, this is done using\n    //   `copy.copy` (shallow copy), which does not have a simple equivalent\n    //   in JavaScript. JavaScript's `Object.assign()` does not copy\n    //   methods.\n    const layerConfig = args.layer.getConfig();\n    const forwDict: serialization.ConfigDict = {};\n    forwDict['className'] = args.layer.getClassName();\n    forwDict['config'] = layerConfig;\n    this.forwardLayer = deserialize(forwDict) as RNN;\n    layerConfig['goBackwards'] =\n        layerConfig['goBackwards'] === true ? false : true;\n    const backDict: serialization.ConfigDict = {};\n    backDict['className'] = args.layer.getClassName();\n    backDict['config'] = layerConfig;\n    this.backwardLayer = deserialize(backDict) as RNN;\n    this.forwardLayer.name = 'forward_' + this.forwardLayer.name;\n    this.backwardLayer.name = 'backward_' + this.backwardLayer.name;\n\n    this.mergeMode = args.mergeMode === undefined ?\n        DEFAULT_BIDIRECTIONAL_MERGE_MODE :\n        args.mergeMode;\n    checkBidirectionalMergeMode(this.mergeMode);\n    if (args.weights) {\n      throw new NotImplementedError(\n          'weights support is not implemented for Bidirectional layer yet.');\n    }\n    this._stateful = args.layer.stateful;\n    this.returnSequences = args.layer.returnSequences;\n    this.returnState = args.layer.returnState;\n    this.supportsMasking = true;\n    this._trainable = true;\n    this.inputSpec = args.layer.inputSpec;\n    this.numConstants = null;\n  }\n\n  get trainable(): boolean {\n    return this._trainable;\n  }\n\n  set trainable(value: boolean) {\n    // Porting Note: the check of `this.layer` here is necessary due to the\n    //   way the `constructor` of this class is written (see Porting Note\n    //   above).\n    this._trainable = value;\n    if (this.forwardLayer != null) {\n      this.forwardLayer.trainable = value;\n    }\n    if (this.backwardLayer != null) {\n      this.backwardLayer.trainable = value;\n    }\n  }\n\n  getWeights(): Tensor[] {\n    return this.forwardLayer.getWeights().concat(\n        this.backwardLayer.getWeights());\n  }\n\n  setWeights(weights: Tensor[]): void {\n    const numWeights = weights.length;\n    const numeightsOver2 = Math.floor(numWeights / 2);\n    this.forwardLayer.setWeights(weights.slice(0, numeightsOver2));\n    this.backwardLayer.setWeights(weights.slice(numeightsOver2));\n  }\n\n  computeOutputShape(inputShape: Shape|Shape[]): Shape|Shape[] {\n    let layerShapes: Shape|Shape[] =\n        this.forwardLayer.computeOutputShape(inputShape);\n    if (!(Array.isArray(layerShapes) && Array.isArray(layerShapes[0]))) {\n      layerShapes = [layerShapes as Shape];\n    }\n    layerShapes = layerShapes as Shape[];\n\n    let outputShape: Shape;\n    let outputShapes: Shape[];\n    let stateShape: Shape[];\n    if (this.returnState) {\n      stateShape = layerShapes.slice(1);\n      outputShape = layerShapes[0];\n    } else {\n      outputShape = layerShapes[0];\n    }\n    outputShape = outputShape;\n    if (this.mergeMode === 'concat') {\n      outputShape[outputShape.length - 1] *= 2;\n      outputShapes = [outputShape];\n    } else if (this.mergeMode == null) {\n      outputShapes = [outputShape, outputShape.slice()];\n    } else {\n      outputShapes = [outputShape];\n    }\n\n    if (this.returnState) {\n      if (this.mergeMode == null) {\n        return outputShapes.concat(stateShape).concat(stateShape.slice());\n      }\n      return [outputShape].concat(stateShape).concat(stateShape.slice());\n    }\n    return generic_utils.singletonOrArray(outputShapes);\n  }\n\n  apply(\n      inputs: Tensor|Tensor[]|SymbolicTensor|SymbolicTensor[],\n      kwargs?: Kwargs): Tensor|Tensor[]|SymbolicTensor|SymbolicTensor[] {\n    let initialState: Tensor[]|SymbolicTensor[] =\n        kwargs == null ? null : kwargs['initialState'];\n    let constants: Tensor[]|SymbolicTensor[] =\n        kwargs == null ? null : kwargs['constants'];\n    if (kwargs == null) {\n      kwargs = {};\n    }\n    const standardized =\n        standardizeArgs(inputs, initialState, constants, this.numConstants);\n    inputs = standardized.inputs;\n    initialState = standardized.initialState;\n    constants = standardized.constants;\n\n    if (Array.isArray(inputs)) {\n      initialState = (inputs as Tensor[] | SymbolicTensor[]).slice(1);\n      inputs = (inputs as Tensor[] | SymbolicTensor[])[0];\n    }\n\n    if ((initialState == null || initialState.length === 0) &&\n        constants == null) {\n      return super.apply(inputs, kwargs);\n    }\n    const additionalInputs: Array<Tensor|SymbolicTensor> = [];\n    const additionalSpecs: InputSpec[] = [];\n    if (initialState != null) {\n      const numStates = initialState.length;\n      if (numStates % 2 > 0) {\n        throw new ValueError(\n            'When passing `initialState` to a Bidrectional RNN, ' +\n            'the state should be an Array containing the states of ' +\n            'the underlying RNNs.');\n      }\n      kwargs['initialState'] = initialState;\n      additionalInputs.push(...initialState);\n      const stateSpecs = (initialState as Array<Tensor|SymbolicTensor>)\n                             .map(state => new InputSpec({shape: state.shape}));\n      this.forwardLayer.stateSpec = stateSpecs.slice(0, numStates / 2);\n      this.backwardLayer.stateSpec = stateSpecs.slice(numStates / 2);\n      additionalSpecs.push(...stateSpecs);\n    }\n    if (constants != null) {\n      throw new NotImplementedError(\n          'Support for constants in Bidirectional layers is not ' +\n          'implemented yet.');\n    }\n\n    const isSymbolicTensor = additionalInputs[0] instanceof SymbolicTensor;\n    for (const tensor of additionalInputs) {\n      if (tensor instanceof SymbolicTensor !== isSymbolicTensor) {\n        throw new ValueError(\n            'The initial state of a Bidirectional layer cannot be ' +\n            'specified as a mix of symbolic and non-symbolic tensors');\n      }\n    }\n\n    if (isSymbolicTensor) {\n      // Compute the full input and specs, including the states.\n      const fullInput = [inputs].concat(additionalInputs);\n      const fullInputSpec = this.inputSpec.concat(additionalSpecs);\n      // Perform the call temporarily and replace inputSpec.\n      // Note: with initial states symbolic calls and non-symbolic calls to\n      // this method differ in how the initial states are passed. For\n      // symbolic calls, the initial states are passed in the first arg, as\n      // an Array of SymbolicTensors; for non-symbolic calls, they are\n      // passed in the second arg as a part of the kwargs. Hence the need to\n      // temporarily modify inputSpec here.\n      // TODO(cais): Make refactoring so that this hacky code below is no\n      // longer needed.\n      const originalInputSpec = this.inputSpec;\n      this.inputSpec = fullInputSpec;\n      const output =\n          super.apply(fullInput as Tensor[] | SymbolicTensor[], kwargs);\n      this.inputSpec = originalInputSpec;\n      return output;\n    } else {\n      return super.apply(inputs, kwargs);\n    }\n  }\n\n  call(inputs: Tensor|Tensor[], kwargs: Kwargs): Tensor|Tensor[] {\n    return tidy(() => {\n      const initialState = kwargs['initialState'];\n\n      let y: Tensor|Tensor[];\n      let yRev: Tensor|Tensor[];\n      if (initialState == null) {\n        y = this.forwardLayer.call(inputs, kwargs);\n        yRev = this.backwardLayer.call(inputs, kwargs);\n      } else {\n        const forwardState = initialState.slice(0, initialState.length / 2);\n        const backwardState = initialState.slice(initialState.length / 2);\n        y = this.forwardLayer.call(\n            inputs, Object.assign(kwargs, {initialState: forwardState}));\n        yRev = this.backwardLayer.call(\n            inputs, Object.assign(kwargs, {initialState: backwardState}));\n      }\n\n      let states: Tensor[];\n      if (this.returnState) {\n        if (Array.isArray(y)) {\n          states = y.slice(1).concat((yRev as Tensor[]).slice(1));\n        } else {\n        }\n        y = (y as Tensor[])[0];\n        yRev = (yRev as Tensor[])[0];\n      }\n\n      if (this.returnSequences) {\n        yRev = tfc.reverse(yRev as Tensor, 1);\n      }\n\n      let output: Tensor|Tensor[];\n      if (this.mergeMode === 'concat') {\n        output = K.concatenate([y as Tensor, yRev as Tensor]);\n      } else if (this.mergeMode === 'sum') {\n        output = tfc.add(y as Tensor, yRev as Tensor);\n      } else if (this.mergeMode === 'ave') {\n        output = tfc.mul(.5, tfc.add(y as Tensor, yRev as Tensor));\n      } else if (this.mergeMode === 'mul') {\n        output = tfc.mul(y as Tensor, yRev as Tensor);\n      } else if (this.mergeMode == null) {\n        output = [y as Tensor, yRev as Tensor];\n      }\n\n      // TODO(cais): Properly set learning phase.\n      if (this.returnState) {\n        if (this.mergeMode == null) {\n          return (output as Tensor[]).concat(states);\n        }\n        return [output as Tensor].concat(states);\n      }\n      return output;\n    });\n  }\n\n  resetStates(states?: Tensor|Tensor[]): void {\n    this.forwardLayer.resetStates();\n    this.backwardLayer.resetStates();\n  }\n\n  build(inputShape: Shape|Shape[]): void {\n    nameScope(this.forwardLayer.name, () => {\n      this.forwardLayer.build(inputShape);\n    });\n    nameScope(this.backwardLayer.name, () => {\n      this.backwardLayer.build(inputShape);\n    });\n    this.built = true;\n  }\n\n  computeMask(inputs: Tensor|Tensor[], mask?: Tensor|Tensor[]): Tensor\n      |Tensor[] {\n    if (Array.isArray(mask)) {\n      mask = mask[0];\n    }\n    let outputMask: Tensor|Tensor[];\n    if (this.returnSequences) {\n      if (this.mergeMode == null) {\n        outputMask = [mask, mask];\n      } else {\n        outputMask = mask;\n      }\n    } else {\n      if (this.mergeMode == null) {\n        outputMask = [null, null];\n      } else {\n        outputMask = null;\n      }\n    }\n    if (this.returnState) {\n      const states = this.forwardLayer.states;\n      const stateMask: Tensor[] = states.map(state => null);\n      if (Array.isArray(outputMask)) {\n        return outputMask.concat(stateMask).concat(stateMask);\n      } else {\n        return [outputMask].concat(stateMask).concat(stateMask);\n      }\n    } else {\n      return outputMask;\n    }\n  }\n\n  get trainableWeights(): LayerVariable[] {\n    return this.forwardLayer.trainableWeights.concat(\n        this.backwardLayer.trainableWeights);\n  }\n\n  get nonTrainableWeights(): LayerVariable[] {\n    return this.forwardLayer.nonTrainableWeights.concat(\n        this.backwardLayer.nonTrainableWeights);\n  }\n\n  // TODO(cais): Implement constraints().\n\n  setFastWeightInitDuringBuild(value: boolean) {\n    super.setFastWeightInitDuringBuild(value);\n    if (this.forwardLayer != null) {\n      this.forwardLayer.setFastWeightInitDuringBuild(value);\n    }\n    if (this.backwardLayer != null) {\n      this.backwardLayer.setFastWeightInitDuringBuild(value);\n    }\n  }\n\n  getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {\n      'mergeMode': this.mergeMode,\n    };\n    // TODO(cais): Add logic for `numConstants` once the property is added.\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends serialization.Serializable>(\n      cls: serialization.SerializableConstructor<T>,\n      config: serialization.ConfigDict): T {\n    const rnnLayer =\n        deserialize(config['layer'] as serialization.ConfigDict) as RNN;\n    delete config['layer'];\n    // TODO(cais): Add logic for `numConstants` once the property is added.\n    if (config['numConstants'] != null) {\n      throw new NotImplementedError(\n          `Deserialization of a Bidirectional layer with numConstants ` +\n          `present is not supported yet.`);\n    }\n    // tslint:disable-next-line:no-any\n    const newConfig: {[key: string]: any} = config;\n    newConfig['layer'] = rnnLayer;\n    return new cls(newConfig);\n  }\n}\nserialization.registerClass(Bidirectional);\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original source: keras/callbacks.py */\n\nimport {BaseCallback} from './base_callbacks';\nimport {Container} from './engine/container';\nimport {LayersModel} from './engine/training';\nimport {NotImplementedError} from './errors';\nimport {Logs, resolveScalarsInLogs} from './logs';\n\nexport abstract class Callback extends BaseCallback {\n  /** Instance of `keras.models.Model`. Reference of the model being trained. */\n  model: LayersModel = null;\n\n  setModel(model: Container): void {\n    if (!(model instanceof LayersModel)) {\n      throw new Error('model must be a LayersModel, not some other Container');\n    }\n    this.model = model;\n  }\n}\n\nexport interface EarlyStoppingCallbackArgs {\n  /**\n   * Quantity to be monitored.\n   *\n   * Defaults to 'val_loss'.\n   */\n  monitor?: string;\n\n  /**\n   * Minimum change in the monitored quantity to qualify as improvement,\n   * i.e., an absolute change of less than `minDelta` will count as no\n   * improvement.\n   *\n   * Defaults to 0.\n   */\n  minDelta?: number;\n\n  /**\n   * Number of epochs with no improvement after which training will be stopped.\n   *\n   * Defaults to 0.\n   */\n  patience?: number;\n\n  /** Verbosity mode. */\n  verbose?: number;\n\n  /**\n   * Mode: one of 'min', 'max', and 'auto'.\n   * - In 'min' mode, training will be stopped when the quantity monitored has\n   *   stopped decreasing.\n   * - In 'max' mode, training will be stopped when the quantity monitored has\n   *   stopped increasing.\n   * - In 'auto' mode, the direction is inferred automatically from the name of\n   *   the monitored quantity.\n   *\n   * Defaults to 'auto'.\n   */\n  mode?: 'auto'|'min'|'max';\n\n  /**\n   * Baseline value of the monitored quantity.\n   *\n   * If specified, training will be stopped if the model doesn't show\n   * improvement over the baseline.\n   */\n  baseline?: number;\n\n  /**\n   * Whether to restore model weights from the epoch with the best value\n   * of the monitored quantity. If `False`, the model weights obtained at the\n   * at the last step of training are used.\n   *\n   * **`True` is not supported yet.**\n   */\n  restoreBestWeights?: boolean;\n}\n\nfunction less(currVal: number, prevVal: number) {\n  return currVal < prevVal;\n}\n\nfunction greater(currVal: number, prevVal: number) {\n  return currVal > prevVal;\n}\n\n/**\n * A Callback that stops training when a monitored quantity has stopped\n * improving.\n */\nexport class EarlyStopping extends Callback {\n  protected readonly monitor: string;\n  protected readonly minDelta: number;\n  protected readonly patience: number;\n  protected readonly baseline: number;\n  protected readonly verbose: number;\n  protected readonly mode: 'auto'|'min'|'max';\n\n  protected monitorFunc: (currVal: number, prevVal: number) => boolean;\n\n  private wait: number;\n  private stoppedEpoch: number;\n  private best: number;\n\n  constructor(args?: EarlyStoppingCallbackArgs) {\n    super();\n    if (args == null) {\n      args = {};\n    }\n    if (args.restoreBestWeights) {\n      throw new NotImplementedError(\n          'restoreBestWeights = True is not implemented in EarlyStopping yet.');\n    }\n\n    this.monitor = args.monitor || 'val_loss';\n    this.minDelta = Math.abs(args.minDelta || 0);\n    this.patience = args.patience || 0;\n    this.verbose = args.verbose || 0;\n    this.mode = args.mode || 'auto';\n    this.baseline = args.baseline;\n\n    if (['auto', 'min', 'max'].indexOf(this.mode) === -1) {\n      console.warn(\n          `EarlyStopping mode '${this.mode}' is invalid. ` +\n          `Falling back to mode 'auto'.`);\n      this.mode = 'auto';\n    }\n\n    if (this.mode === 'min') {\n      this.monitorFunc = less;\n    } else if (this.mode === 'max') {\n      this.monitorFunc = greater;\n    } else {\n      // For mode === 'auto'.\n      if (this.monitor.indexOf('acc') !== -1) {\n        this.monitorFunc = greater;\n      } else {\n        this.monitorFunc = less;\n      }\n    }\n\n    if (this.monitorFunc === less) {\n      this.minDelta *= -1;\n    }\n  }\n\n  async onTrainBegin(logs?: Logs) {\n    this.wait = 0;\n    this.stoppedEpoch = 0;\n    if (this.baseline != null) {\n      this.best = this.baseline;\n    } else {\n      this.best = this.monitorFunc === less ? Infinity : -Infinity;\n    }\n  }\n\n  async onEpochEnd(epoch: number, logs?: Logs) {\n    await resolveScalarsInLogs(logs);\n    const current = this.getMonitorValue(logs);\n    if (current == null) {\n      return;\n    }\n\n    if (this.monitorFunc(current - this.minDelta, this.best)) {\n      this.best = current;\n      this.wait = 0;\n      // TODO(cais): Logic for restoreBestWeights.\n    } else {\n      this.wait++;\n      if (this.wait >= this.patience) {\n        this.stoppedEpoch = epoch;\n        this.model.stopTraining = true;\n      }\n      // TODO(cais): Logic for restoreBestWeights.\n    }\n  }\n\n  async onTrainEnd(logs?: Logs) {\n    if (this.stoppedEpoch > 0 && this.verbose) {\n      console.log(`Epoch ${this.stoppedEpoch}: early stopping.`);\n    }\n  }\n\n  private getMonitorValue(logs: Logs) {\n    if (logs == null) {\n      logs = {};\n    }\n    const monitorValue = logs[this.monitor];\n    if (monitorValue == null) {\n      console.warn(\n          `Metric for EarlyStopping ${this.monitor} is not available. ` +\n          `Available metrics are: ${Object.keys(logs)}`);\n    }\n    return monitorValue;\n  }\n}\n\n/**\n * Factory function for a Callback that stops training when a monitored\n * quantity has stopped improving.\n *\n * Early stopping is a type of regularization, and protects model against\n * overfitting.\n *\n * The following example based on fake data illustrates how this callback\n * can be used during `tf.LayersModel.fit()`:\n *\n * ```js\n * const model = tf.sequential();\n * model.add(tf.layers.dense({\n *   units: 3,\n *   activation: 'softmax',\n *   kernelInitializer: 'ones',\n *   inputShape: [2]\n * }));\n * const xs = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const ys = tf.tensor2d([[1, 0, 0], [0, 1, 0]], [2, 3]);\n * const xsVal = tf.tensor2d([4, 3, 2, 1], [2, 2]);\n * const ysVal = tf.tensor2d([[0, 0, 1], [0, 1, 0]], [2, 3]);\n * model.compile(\n *     {loss: 'categoricalCrossentropy', optimizer: 'sgd', metrics: ['acc']});\n *\n * // Without the EarlyStopping callback, the val_acc value would be:\n * //   0.5, 0.5, 0.5, 0.5, ...\n * // With val_acc being monitored, training should stop after the 2nd epoch.\n * const history = await model.fit(xs, ys, {\n *   epochs: 10,\n *   validationData: [xsVal, ysVal],\n *   callbacks: tf.callbacks.earlyStopping({monitor: 'val_acc'})\n * });\n *\n * // Expect to see a length-2 array.\n * console.log(history.history.val_acc);\n * ```\n *\n * @doc {\n *   heading: 'Callbacks',\n *   namespace: 'callbacks'\n * }\n */\nexport function earlyStopping(args?: EarlyStoppingCallbackArgs) {\n  return new EarlyStopping(args);\n}\n\nexport const callbacks = {earlyStopping};\n","<template>\n  <div>\n    <h4 class=\"is-size-4\">Model Card</h4>\n    <div class=\"tabs is-boxed\">\n      <ul>\n        <template v-for=\"item in details\" :key=\"item.id\">\n          <li :class=\"item.class\">\n            <a :id=\"'a-' + item.id\" @click=\"tabUpdate\">{{ item.name }}</a>\n          </li>\n        </template>\n      </ul>\n    </div>\n    <p>\n      {{ content }}\n    </p>\n  </div>\n</template>\n<style scoped>\n.tabs ul {\n  width: 100%;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n.tabs li {\n  width: 50%;\n}\n</style>\n\n<script>\nexport default {\n  name: \"ModelCard\",\n  props: {\n    url: String,\n  },\n  data() {\n    return {\n      index: \"title\",\n      card: null,\n      title: \"\",\n      details: [\n        { id: \"details\", name: \"Model Details\", class: \"is-active\" },\n        { id: \"use\", name: \"Intended Use\", class: \"\" },\n        { id: \"factors\", name: \"Factors\", class: \"\" },\n        { id: \"metrics\", name: \"Metrics\", class: \"\" },\n        { id: \"evaluation\", name: \"Evaluation Data\", class: \"\" },\n        { id: \"training\", name: \"Training Data\", class: \"\" },\n        { id: \"caveats\", name: \"Ethical Considerations\", class: \"\" },\n        { id: \"ethics\", name: \"Caveats\", class: \"\" },\n      ],\n      content: null,\n    };\n  },\n  mounted: function () {\n    fetch(this.url)\n      .then((res) => res.json())\n      .then((out) => {\n        this.card = out;\n        this.title = this.card[\"title\"];\n        this.content = this.card[this.details[0].id];\n      });\n  },\n  methods: {\n    tabUpdate(event) {\n      const id = event.target.id.split(\"a-\")[1];\n      const new_details = this.details.map((v) => {\n        v.class = \"\";\n        if (v.id == id) v.class = \"is-active\";\n        return { ...v };\n      });\n      this.details = new_details;\n      this.content = this.card[id];\n    },\n  },\n};\n</script>\n","<template>\n  <div>\n    <p><small>Reference: <a :href=\"reflink\">{{reftitle}}</a>. <em>{{journal ? journal : ''}}</em><span v-if=\"year\">, <b>{{year ? year : ''}}</b></span><em>{{volume ? ', ' + volume : ''}}</em>{{issue ? ' (' + issue + ')' : ''}}{{pages ? ' ' + pages +'.' : '.' }} {{doi ? 'DOI: ' + doi + '.' : ''}}</small></p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Reference',\n  props: {\n    reflink: {type: String, default: ''},\n    reftitle: {type: String, default: ''},\n    journal: {type: String, default: ''},\n    year: {type: String, default: ''},\n    issue: {type: String, default: ''},\n    volume: {type: String, default: ''},\n    pages: {type: String, default: ''},\n    doi: {type: String, default: ''}\n  }\n}\n</script>\n","{\n  \"name\": \"peptide-dashboard\",\n  \"version\": \"0.2.1\",\n  \"description\": \"Peptide Dashboard client package\",\n  \"browserslist\": \"> 0.5%, last 2 versions, not dead\",\n  \"scripts\": {\n    \"start\": \"parcel src/index.html\",\n    \"build\": \"parcel build src/index.html --public-url ./\"\n  },\n  \"author\": \"Andrew White\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"@parcel/transformer-vue\": \"^2.0.1\",\n    \"@tensorflow/tfjs\": \"3.13.0\",\n    \"axios\": \"^0.24.0\",\n    \"bulma\": \"^0.9.3\",\n    \"d3\": \"^5.0.0\",\n    \"lodash\": \"^4.17.21\",\n    \"parcel\": \"^2.0.1\",\n    \"vue\": \"^3.2.20\"\n  },\n  \"devDependencies\": {\n    \"@parcel/transformer-sass\": \"^2.0.1\",\n    \"eslint\": \"^8.2.0\",\n    \"eslint-plugin-vue\": \"^8.0.3\"\n  }\n}\n","import { createApp } from \"vue\";\nimport App from './components/App.vue'\nconst app = createApp(App);\napp.mount(\"#app\");\n"],"names":["map","Object","create","list","str","split","i","length","expectsLowerCase","val","toLowerCase","$81eb706044253909$export$d186f5eb2e810715","$81eb706044253909$export$b41394a5437791c8","$81eb706044253909$export$e3f3cdb1390d56ce","value","$81eb706044253909$export$8756898546458274","$81eb706044253909$export$43bee75e5e14138e","res","item","normalized","$81eb706044253909$export$844ec244b1367d54","$81eb706044253909$export$76a205ce979d066a","key","$81eb706044253909$export$a6cdc56e425d0d0a","$81eb706044253909$var$listDelimiterRE","$81eb706044253909$var$propertyDelimiterRE","cssText","ret","forEach","tmp","trim","$81eb706044253909$export$4f7022d2d68e2c5a","name","$81eb706044253909$export$b5b1545233b45293","toString","$81eb706044253909$export$830c053460e5ddf6","$81eb706044253909$export$f6e2535fb5126e54","JSON","stringify","$81eb706044253909$var$replacer","String","_key","val1","$81eb706044253909$export$5c90113a285f2241","size","reduce","entries","$81eb706044253909$export$6750766a7c7ec627","values","$81eb706044253909$export$cf583d23ab39677c","$81eb706044253909$export$6bd8558f433f1cc1","$81eb706044253909$export$c01351c0af048e39","$81eb706044253909$export$1a2d97de39ecbb75","$81eb706044253909$var$onRE","test","$81eb706044253909$export$793aa5469768d691","startsWith","$81eb706044253909$export$8b58be045bf06082","assign","$81eb706044253909$export$cd7f480d6b8286c3","arr","el","indexOf","splice","$81eb706044253909$var$hasOwnProperty","prototype","hasOwnProperty","$81eb706044253909$export$b5a638e9b3fff9f3","call","Array","isArray","$81eb706044253909$export$1dccc787cc36538b","$81eb706044253909$export$a244864fd9645c7f","$81eb706044253909$export$4369c812aac99591","then","catch","slice","$81eb706044253909$export$53b83ca8eaab0383","$81eb706044253909$export$e2a2b93446ec9fe","parseInt","$81eb706044253909$export$bf7d3c0236f0aa85","$81eb706044253909$var$cacheStringFunction","fn","cache","$0f46f9f1141845fc$var$activeEffectScope","$0f46f9f1141845fc$var$effectScopeStack","$0f46f9f1141845fc$export$1168ed9dbc71ddbd","detached1","this","active","effects","cleanups","parent","index","scopes","push","run","fn1","on","off","pop","stop","fromParent","e","cleanup","last","$0f46f9f1141845fc$var$recordEffectScope","effect","scope","$0f46f9f1141845fc$var$createDep","dep","Set","w","n","$0f46f9f1141845fc$var$wasTracked","$0f46f9f1141845fc$var$trackOpBit","$0f46f9f1141845fc$var$newTracked","$0f46f9f1141845fc$var$targetMap","WeakMap","$0f46f9f1141845fc$var$effectTrackDepth","$0f46f9f1141845fc$var$effectStack","Symbol","fn2","scheduler","deps","includes","$0f46f9f1141845fc$var$activeEffect","$0f46f9f1141845fc$var$trackStack","$0f46f9f1141845fc$var$shouldTrack","$0f46f9f1141845fc$var$initDepMarkers","$0f46f9f1141845fc$var$cleanupEffect","ptr","delete","$0f46f9f1141845fc$var$finalizeDepMarkers","$0f46f9f1141845fc$export$c39176b1babaa8b8","undefined","$0f46f9f1141845fc$export$938a971395fef855","$0f46f9f1141845fc$export$6b2a7d5132615086","target","type","$0f46f9f1141845fc$var$isTracking","depsMap","get","set","Map","$0f46f9f1141845fc$var$trackEffects","debuggerEventExtraInfo","shouldTrack","has","add","$0f46f9f1141845fc$export$e614dc9140f7ae71","key1","newValue","oldValue","oldTarget","$0f46f9f1141845fc$export$3c41b1a4e06acc14","$0f46f9f1141845fc$var$MAP_KEY_ITERATE_KEY","$0f46f9f1141845fc$var$triggerEffects","allowRecurse","$0f46f9f1141845fc$var$isNonTrackableKeys","$0f46f9f1141845fc$var$builtInSymbols","getOwnPropertyNames","filter","$0f46f9f1141845fc$var$get","$0f46f9f1141845fc$var$createGetter","$0f46f9f1141845fc$var$readonlyGet","$0f46f9f1141845fc$var$arrayInstrumentations","$0f46f9f1141845fc$var$createArrayInstrumentations","instrumentations","args","$0f46f9f1141845fc$export$ab18938b9fc5f28e","l","apply","isReadonly","shallow","receiver","$0f46f9f1141845fc$var$shallowReadonlyMap","$0f46f9f1141845fc$var$readonlyMap","$0f46f9f1141845fc$var$shallowReactiveMap","$0f46f9f1141845fc$var$reactiveMap","targetIsArray","Reflect","$0f46f9f1141845fc$export$4f9f5282de18fc69","$0f46f9f1141845fc$export$6ec456bd5b7b3c51","$0f46f9f1141845fc$export$90a44edba14e47be","$0f46f9f1141845fc$export$92d09b48637741e7","hadKey","Number","$81eb706044253909$export$f619eb8b89076d23","result","$0f46f9f1141845fc$var$createSetter","deleteProperty","ownKeys","$0f46f9f1141845fc$var$readonlyHandlers","$0f46f9f1141845fc$var$shallowReactiveHandlers","$0f46f9f1141845fc$var$mutableHandlers","$0f46f9f1141845fc$var$shallowGet","$0f46f9f1141845fc$var$getProto","v","getPrototypeOf","$0f46f9f1141845fc$var$get$1","isShallow","rawTarget","rawKey","wrap","$0f46f9f1141845fc$var$toShallow","$0f46f9f1141845fc$var$toReadonly","$0f46f9f1141845fc$var$toReactive","$0f46f9f1141845fc$var$has$1","$0f46f9f1141845fc$var$size","$0f46f9f1141845fc$var$add","$0f46f9f1141845fc$var$set$1","$0f46f9f1141845fc$var$deleteEntry","$0f46f9f1141845fc$var$clear","hadItems","clear","$0f46f9f1141845fc$var$createForEach","callback","thisArg","observed","$0f46f9f1141845fc$var$createIterableMethod","method","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","next","$0f46f9f1141845fc$var$createReadonlyMethod","$0f46f9f1141845fc$var$createInstrumentations","mutableInstrumentations","readonlyInstrumentations","shallowInstrumentations","shallowReadonlyInstrumentations","$0f46f9f1141845fc$var$readonlyInstrumentations","$0f46f9f1141845fc$var$shallowInstrumentations","$0f46f9f1141845fc$var$shallowReadonlyInstrumentations","$0f46f9f1141845fc$var$mutableInstrumentations","$0f46f9f1141845fc$var$mutableCollectionHandlers","$0f46f9f1141845fc$var$createInstrumentationGetter","$0f46f9f1141845fc$var$shallowCollectionHandlers","$0f46f9f1141845fc$var$readonlyCollectionHandlers","$0f46f9f1141845fc$var$createReactiveObject","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","isExtensible","rawType","$0f46f9f1141845fc$var$targetTypeMap","$81eb706044253909$export$5ad0a3c360b8fbb5","proxy","Proxy","$0f46f9f1141845fc$export$352205f445242f02","$0f46f9f1141845fc$export$5f3ca29d057519b3","raw","$0f46f9f1141845fc$export$995ab8b13ad7a9d0","$81eb706044253909$export$8afb76124cf08683","$0f46f9f1141845fc$var$trackRefValue","ref","$0f46f9f1141845fc$var$triggerRefValue","newVal","r","Boolean","__v_isRef","$0f46f9f1141845fc$export$a239a76781616204","$0f46f9f1141845fc$export$f353fd1b97db3fa0","objectWithRefs","$0f46f9f1141845fc$var$shallowUnwrapHandlers","getter1","_setter","_dirty","$0f46f9f1141845fc$export$28352bb4dd362521","self","_value","$0f46f9f1141845fc$export$2983e091f1a1e8e2","getterOrOptions","debugOptions","getter","setter","onlyGetter","$81eb706044253909$export$5702a91a6f42969f","$0f46f9f1141845fc$var$ComputedRefImpl","Promise","resolve","$617b30e79f7aaa25$export$6922d3b3a607469e","$617b30e79f7aaa25$var$buffer","$617b30e79f7aaa25$var$devtoolsNotInstalled","$617b30e79f7aaa25$var$emit","event","emit","$617b30e79f7aaa25$export$b0c258b32c26c785","hook","_a","_b","enabled","window","HTMLElement","navigator","userAgent","__VUE_DEVTOOLS_HOOK_REPLAY__","newHook","setTimeout","$617b30e79f7aaa25$var$devtoolsComponentAdded","$617b30e79f7aaa25$var$createDevtoolsComponentHook","$617b30e79f7aaa25$var$devtoolsComponentUpdated","$617b30e79f7aaa25$var$devtoolsComponentRemoved","component","appContext","app","uid","$617b30e79f7aaa25$var$emit$1","instance","rawArgs","props","vnode","isModelListener","modelArg","modifiersKey","number","a","$81eb706044253909$export$a0a81dc3380ce7d3","handlerName","__VUE_PROD_DEVTOOLS__","params","$617b30e79f7aaa25$var$devtoolsComponentEmit","handler","$81eb706044253909$export$8c022799eeaaefcd","$81eb706044253909$export$161d051f5dd25de7","$81eb706044253909$export$6e6a0a3676c4b8bb","$617b30e79f7aaa25$export$dae85862a8d94378","onceHandler","emitted","$617b30e79f7aaa25$var$normalizeEmitsOptions","comp","asMixin","emitsCache","cached","raw1","emits","hasExtends","__VUE_OPTIONS_API__","extendEmits","normalizedFromExtend","mixins","extends","$617b30e79f7aaa25$var$isEmitListener","options","replace","$617b30e79f7aaa25$var$currentRenderingInstance","$617b30e79f7aaa25$var$currentScopeId","$617b30e79f7aaa25$var$setCurrentRenderingInstance","__scopeId","prev","$617b30e79f7aaa25$export$694b237e827a3d23","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","$617b30e79f7aaa25$export$c20bee82f26f1e27","prevInstance","_c","$617b30e79f7aaa25$var$renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","data","setupState","inheritAttrs","fallthroughAttrs","shapeFlag","proxyToUse","$617b30e79f7aaa25$var$normalizeVNode","$617b30e79f7aaa25$var$getFunctionalFallthrough","err","$617b30e79f7aaa25$var$blockStack","$617b30e79f7aaa25$export$d3da1ecaf1206c58","$617b30e79f7aaa25$export$bf5c4cf060303d58","$617b30e79f7aaa25$export$4d299b491347818a","root","keys","some","$617b30e79f7aaa25$var$filterModelListeners","$617b30e79f7aaa25$export$ee4f9e12c0a92a1a","dirs","concat","transition","$617b30e79f7aaa25$var$hasPropsChanged","prevProps","nextProps","emitsOptions","nextKeys","$617b30e79f7aaa25$var$updateHOCHostEl","subTree","$617b30e79f7aaa25$var$queueEffectWithSuspense","suspense","pendingBranch","$617b30e79f7aaa25$export$59536a0199721cab","$617b30e79f7aaa25$export$a976684a0efeb93f","defaultValue","treatDefaultAsFactory","$617b30e79f7aaa25$var$currentInstance","provides","arguments","$617b30e79f7aaa25$export$d2a0a1bc267c90f6","state","isMounted","isLeaving","isUnmounting","leavingVNodes","$617b30e79f7aaa25$export$6d1641039221b5cb","$617b30e79f7aaa25$var$TransitionHookValidator","$617b30e79f7aaa25$export$f13e630aa3915748","default","$617b30e79f7aaa25$export$a67f9b1229c7c97a","children","mode","rawProps","child","$617b30e79f7aaa25$var$emptyPlaceholder","$617b30e79f7aaa25$var$getKeepAliveChild","$617b30e79f7aaa25$export$76ac1779589cd824","innerChild","enterHooks","oldChild","transitionKeyChanged","getTransitionKey","prevTransitionKey","oldInnerChild","$617b30e79f7aaa25$var$isSameVNodeType","leavingHooks","$617b30e79f7aaa25$export$7770a22486565649","afterLeave","update","delayLeave","earlyRemove","delayedLeave","$617b30e79f7aaa25$var$getLeavingNodesForType","_leaveCb","leavingVNodesCache","vnode2","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","leavingVNode","callHook","afterHook","cancelHook","_enterCb","cancelled","called","hooks","leave","remove","$617b30e79f7aaa25$var$isKeepAlive","ssContent","clone","ssFallback","keepComment","keyedFragmentCount","$617b30e79f7aaa25$export$ffb0004e005737fa","patchFlag","i1","$617b30e79f7aaa25$var$isAsyncWrapper","__asyncLoader","__isKeepAlive","RegExp","pattern","p","$617b30e79f7aaa25$var$matches","$617b30e79f7aaa25$export$ba52d824b95a2154","$617b30e79f7aaa25$var$registerKeepAliveHook","$617b30e79f7aaa25$export$bf1440eeaf5fa709","wrappedHook","__wdc","current","isDeactivated","$617b30e79f7aaa25$var$injectToKeepAliveRoot","keepAliveRoot","injected","$617b30e79f7aaa25$var$injectHook","$617b30e79f7aaa25$var$resetShapeFlag","$617b30e79f7aaa25$var$getInnerChild","prepend","__weh","isUnmounted","$617b30e79f7aaa25$var$setCurrentInstance","$617b30e79f7aaa25$var$unsetCurrentInstance","unshift","$617b30e79f7aaa25$var$createHook","lifecycle","$617b30e79f7aaa25$var$isInSSRComponentSetup","$617b30e79f7aaa25$export$23b7aeb0d671f804","$617b30e79f7aaa25$export$ab91988a13872e4c","$617b30e79f7aaa25$export$5876c47052fb88b1","$617b30e79f7aaa25$export$40c420df62d2614","$617b30e79f7aaa25$export$13348a43ccacfe58","$617b30e79f7aaa25$export$ebf0c601f267bceb","$617b30e79f7aaa25$export$898295a813d662eb","$617b30e79f7aaa25$export$2b41f4235363e921","$617b30e79f7aaa25$export$6a3a15856e50ad19","$617b30e79f7aaa25$var$shouldCacheAccess","$617b30e79f7aaa25$var$applyOptions","$617b30e79f7aaa25$var$resolveMergedOptions","publicThis","beforeCreate","$617b30e79f7aaa25$var$callHook","computed","computedOptions","methods","watch","watchOptions","provide","provideOptions","inject","injectOptions","created","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","directives","filters","checkDuplicateProperties","unwrapRef","opt","from","defineProperty","enumerable","configurable","$617b30e79f7aaa25$var$resolveInjections","config","unwrapInjectedRef","key3","methodHandler","bind","dataOptions","c","key2","$617b30e79f7aaa25$var$createWatcher","parentProvides","$617b30e79f7aaa25$export$abe1e183e22e10ad","registerLifecycleHook","register","_hook","exposed","components","h","$617b30e79f7aaa25$var$createPathGetter","$617b30e79f7aaa25$export$3db5d71bdb2d5499","base","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","m","$617b30e79f7aaa25$var$mergeOptions","to","strats","strat","$617b30e79f7aaa25$var$internalOptionMergeStrats","$617b30e79f7aaa25$var$mergeDataFn","$617b30e79f7aaa25$var$mergeObjectOptions","$617b30e79f7aaa25$var$mergeAsArray","merged","$617b30e79f7aaa25$var$normalizeInject","isStateful","isSSR","$617b30e79f7aaa25$var$InternalObjectKey","needCastKeys","camelKey","rawCastValues","hasAttrsChanged","rawCurrentProps","castValues","$617b30e79f7aaa25$var$resolvePropValue","isAbsent","hasDefault","Function","propsDefaults","propsCache","extendProps","$617b30e79f7aaa25$var$normalizePropsOptions","raw2","normalizedKey","$617b30e79f7aaa25$var$validatePropName","prop","booleanIndex","$617b30e79f7aaa25$var$getTypeIndex","stringIndex","$617b30e79f7aaa25$var$getType","ctor","match","b","expectedTypes","findIndex","t","$617b30e79f7aaa25$var$isSameType","$617b30e79f7aaa25$var$isInternalKey","rawSlot","rawSlots","_ctx","$617b30e79f7aaa25$var$normalizeSlot","$617b30e79f7aaa25$var$normalizeSlotValue","prevVNode","bindings","binding","oldBindings","dir","isNativeTag","performance","errorHandler","hydrate","rootComponent","rootProps","$617b30e79f7aaa25$var$createAppContext","_container","_context","context","$617b30e79f7aaa25$export$83d89fbfd8236492","use","plugin","installedPlugins","install","mixin","directive","mount","rootContainer","isHydrate","isSVG","__vue_app__","_instance","version","$617b30e79f7aaa25$export$5f1af8db9871e1d6","$617b30e79f7aaa25$export$c1b9a1d3af45b7b6","$617b30e79f7aaa25$var$devtoolsInitApp","$617b30e79f7aaa25$var$getExposeProxy","unmount","$617b30e79f7aaa25$var$devtoolsUnmountApp","$617b30e79f7aaa25$var$queuePostRenderEffect","createHydrationFns","$81eb706044253909$export$ff5f2eeb11fc7e14","__VUE__","__VUE_DEVTOOLS_GLOBAL_HOOK__","insert","hostInsert","hostRemove","patchProp","hostPatchProp","createElement","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","n1","n2","container","anchor","parentComponent","parentSuspense","slotScopeIds","optimized","dynamicChildren","getNextHostNode","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","process","internals","$617b30e79f7aaa25$var$setRef","removeStaticNode","mountElement","patchElement","is","mountChildren","$617b30e79f7aaa25$var$invokeDirectiveHook","unmountChildren","vnodeHook","onVnodeBeforeMount","$617b30e79f7aaa25$var$invokeVNodeHook","scopeId","needCallTransitionHooks","beforeEnter","onVnodeMounted","enter","parentVNode","start","$617b30e79f7aaa25$var$cloneIfMounted","patch","oldProps","newProps","onVnodeBeforeUpdate","areChildrenSVG","patchBlockChildren","patchChildren","patchProps","class","style","propsToUpdate","dynamicProps","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentSlotScopeIds","fragmentStartAnchor","fragmentEndAnchor","$617b30e79f7aaa25$var$traverseStaticChildren","activate","mountComponent","initialVNode","$617b30e79f7aaa25$var$createComponentInstance","renderer","asyncDep","registerDep","setupRenderEffect","placeholder","nextVNode","prevChildren","nextChildren","$stable","asyncResolved","updateComponentPreRender","job","$617b30e79f7aaa25$var$queue","$617b30e79f7aaa25$var$flushIndex","$617b30e79f7aaa25$var$invalidateJob","bu","u","originNext","$81eb706044253909$export$39951422d618a9d3","nextTree","prevTree","bm","isAsyncWrapperVNode","hydrateNode","hydrateSubTree","scopedInitialVNode","$617b30e79f7aaa25$var$queueJob","id","rawPrevProps","kebabKey","$617b30e79f7aaa25$var$setFullProps","camelizedKey","$617b30e79f7aaa25$var$updateProps","needDeletionCheck","deletionComparisonTarget","_","$617b30e79f7aaa25$var$normalizeObjectSlots","$617b30e79f7aaa25$var$updateSlots","prevShapeFlag","c2","patchKeyedChildren","c1","patchUnkeyedChildren","Math","min","oldLength","newLength","nextChild","commonLength","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","toBePatched","newIndexToOldIndexMap","prevChild","patched","newIndex","maxNewIndexSoFar","moved","increasingNewIndexSequence","len","arrI","$617b30e79f7aaa25$var$getSequence","nextIndex","move","moveType","moveStaticNode","performLeave","doRemove","deactivate","shouldInvokeDirs","shouldInvokeVnodeHook","onVnodeBeforeUnmount","unmountComponent","remove1","onVnodeUnmounted","removeFragment","performRemove","cur","end","bum","um","suspenseId","pendingId","_vnode","$617b30e79f7aaa25$var$flushPostFlushCbs","mt","mc","pc","pbc","$617b30e79f7aaa25$var$createAppAPI","rawRef","oldRawRef","isUnmount","refValue","owner","oldRef","refs","doSet","$617b30e79f7aaa25$export$b22fcaf88446e9bf","ch1","ch2","$617b30e79f7aaa25$export$681d65eec9d1d1e8","maybeSelfReference","$617b30e79f7aaa25$var$resolveAsset","warnMissing","selfName","$617b30e79f7aaa25$var$getComponentName","$81eb706044253909$export$9a00dee1beb8f576","$617b30e79f7aaa25$var$resolve","registry","$617b30e79f7aaa25$var$currentBlock","$617b30e79f7aaa25$export$e7eaa45e502fe5cc","disableTracking","$617b30e79f7aaa25$var$closeBlock","$617b30e79f7aaa25$var$isBlockTreeEnabled","$617b30e79f7aaa25$var$setupBlock","$617b30e79f7aaa25$export$167055419fc69ec1","$617b30e79f7aaa25$export$42098e0eaa15c48e","$617b30e79f7aaa25$export$9f2dfe8048dfb22b","$617b30e79f7aaa25$export$3868d13f8734ae81","__v_isVNode","$617b30e79f7aaa25$var$normalizeKey","$617b30e79f7aaa25$var$normalizeRef","isBlockNode","needFullChildrenNormalization","__v_skip","normalize","$617b30e79f7aaa25$var$_createVNode","$617b30e79f7aaa25$var$NULL_DYNAMIC_COMPONENT","cloned","$617b30e79f7aaa25$var$normalizeChildren","__vccOpts","$617b30e79f7aaa25$export$1f1be0e0e384d7d2","klass","__isSuspense","$617b30e79f7aaa25$var$isSuspense","__isTeleport","$617b30e79f7aaa25$var$isTeleport","extraProps","mergeRef","mergedProps","toMerge","existing","incoming","$617b30e79f7aaa25$export$9d1611c77c2fe928","targetAnchor","staticCount","$617b30e79f7aaa25$export$22f9b5ffd89dac9","text","flag","$617b30e79f7aaa25$export$33a9f6dd2840e6bb","content","numberOfNodes","$617b30e79f7aaa25$export$49553837c7236d3c","asBlock","memo","slot","slotFlag","$617b30e79f7aaa25$export$4bf387f59bfc6d67","source","renderItem","$617b30e79f7aaa25$var$getPublicInstance","$617b30e79f7aaa25$var$isStatefulComponent","$617b30e79f7aaa25$export$bdd553fddd433dcb","$617b30e79f7aaa25$var$instanceWatch","accessCache","normalizedProps","publicGetter","$617b30e79f7aaa25$var$publicPropertiesMap","cssModule","globalProperties","$617b30e79f7aaa25$var$emptyAppContext","exposeProxy","setupContext","bc","da","rtg","rtc","ec","sp","ce","$617b30e79f7aaa25$var$compile","$617b30e79f7aaa25$var$installWithProxy","$617b30e79f7aaa25$var$setupComponent","$617b30e79f7aaa25$var$normalizeVNodeSlots","setupResult","$617b30e79f7aaa25$var$PublicInstanceProxyHandlers","setup","$617b30e79f7aaa25$var$createSetupContext","resolvedResult","$617b30e79f7aaa25$var$handleSetupResult","$617b30e79f7aaa25$var$setupStatefulComponent","__ssrInlineRender","ssrRender","devtoolsRawSetupState","skipOptions","template","isCustomElement","compilerOptions","delimiters","componentCompilerOptions","finalCompilerOptions","$617b30e79f7aaa25$var$createAttrsProxy","displayName","$617b30e79f7aaa25$var$isClassComponent","throwInDev","exposedInstance","errorInfo","errorCapturedHooks","appErrorHandler","contextVNode","console","error","$617b30e79f7aaa25$var$isFlushing","$617b30e79f7aaa25$var$isFlushPending","$617b30e79f7aaa25$var$pendingPreFlushCbs","$617b30e79f7aaa25$var$activePreFlushCbs","$617b30e79f7aaa25$var$postFlushIndex","$617b30e79f7aaa25$var$currentFlushPromise","$617b30e79f7aaa25$var$resolvedPromise","$617b30e79f7aaa25$var$currentPreFlushParentJob","middle","$617b30e79f7aaa25$var$getId","$617b30e79f7aaa25$var$findInsertionIndex","$617b30e79f7aaa25$var$queueFlush","$617b30e79f7aaa25$var$flushJobs","$617b30e79f7aaa25$var$queueCb","cb","activeQueue","pendingQueue","$617b30e79f7aaa25$var$activePostFlushCbs","$617b30e79f7aaa25$var$pendingPostFlushCbs","seen","parentJob","$617b30e79f7aaa25$var$preFlushIndex","$617b30e79f7aaa25$var$flushPreFlushCbs","deduped","sort","Infinity","$617b30e79f7aaa25$var$INITIAL_WATCHER_VALUE","$617b30e79f7aaa25$var$doWatch","immediate","deep","flush","onTrack","onTrigger","forceTrigger","_shallow","isMultiSource","s","$617b30e79f7aaa25$var$traverse","onInvalidate","baseGetter","onStop","$617b30e79f7aaa25$var$queuePreFlushCb","path","segments","$3abe0d2b8a518b54$var$doc","document","$3abe0d2b8a518b54$var$staticTemplateCache","$3abe0d2b8a518b54$var$nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","setAttribute","createTextNode","node","nodeValue","textContent","querySelector","selector","before","previousSibling","lastChild","innerHTML","wrapper","firstChild","appendChild","$3abe0d2b8a518b54$var$importantRE","$3abe0d2b8a518b54$var$setStyle","setProperty","prefixed","rawName","$3abe0d2b8a518b54$var$prefixCache","$3abe0d2b8a518b54$var$prefixes","$3abe0d2b8a518b54$var$autoPrefix","$3abe0d2b8a518b54$var$_getNow","Date","now","$3abe0d2b8a518b54$var$skipTimestampCheck","createEvent","timeStamp","ffMatch","$3abe0d2b8a518b54$var$cachedNow","$3abe0d2b8a518b54$var$p","$3abe0d2b8a518b54$var$reset","$3abe0d2b8a518b54$var$addEventListener","addEventListener","$3abe0d2b8a518b54$var$patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","$3abe0d2b8a518b54$var$optionsModifierRE","$3abe0d2b8a518b54$var$parseName","invoker","initialValue","attached","originalStop","stopImmediatePropagation","_stopped","$3abe0d2b8a518b54$var$patchStopImmediatePropagation","$3abe0d2b8a518b54$var$getNow","$3abe0d2b8a518b54$var$createInvoker","removeEventListener","$3abe0d2b8a518b54$var$removeEventListener","$3abe0d2b8a518b54$var$nativeOnRE","$617b30e79f7aaa25$export$dda1d9f60106f0e9","$617b30e79f7aaa25$export$abd95b5f5e8a8837","$3abe0d2b8a518b54$var$resolveTransitionProps","$3abe0d2b8a518b54$var$DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearToClass","leaveFromClass","leaveActiveClass","$3abe0d2b8a518b54$var$callHook","$3abe0d2b8a518b54$export$be58926105124dd4","$3abe0d2b8a518b54$var$hasExplicitCallback","baseProps","appearFromClass","appearActiveClass","leaveToClass","$3abe0d2b8a518b54$var$NumberOf","$3abe0d2b8a518b54$var$normalizeDuration","durations","isAppear","$3abe0d2b8a518b54$var$removeTransitionClass","makeEnterHook","finishEnter","$3abe0d2b8a518b54$var$addTransitionClass","$3abe0d2b8a518b54$var$whenTransitionEnds","enterDuration","finishLeave","$3abe0d2b8a518b54$var$forceReflow","$3abe0d2b8a518b54$var$nextFrame","leaveDuration","cls","classList","_vtc","requestAnimationFrame","$3abe0d2b8a518b54$var$endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","timeout","propCount","$3abe0d2b8a518b54$var$getTransitionInfo","endEvent","onEnd","ended","getComputedStyle","getStyleProperties","styles","$3abe0d2b8a518b54$var$TRANSITION","$3abe0d2b8a518b54$var$getTimeout","transitionDelays","transitionDurations","animationDelays","$3abe0d2b8a518b54$var$ANIMATION","animationDurations","animationTimeout","transitionTimeout","max","hasTransform","delays","d","$3abe0d2b8a518b54$var$toMs","body","offsetHeight","$3abe0d2b8a518b54$var$getModelAssigner","$3abe0d2b8a518b54$var$onCompositionStart","composing","$3abe0d2b8a518b54$var$onCompositionEnd","modifiers","lazy","castToNumber","domValue","_assign","activeElement","$3abe0d2b8a518b54$var$rendererOptions","transitionClasses","join","removeAttribute","className","$3abe0d2b8a518b54$var$patchClass","isCssString","currentDisplay","display","$3abe0d2b8a518b54$var$patchStyle","tagName","$3abe0d2b8a518b54$var$shouldSetAsProp","$3abe0d2b8a518b54$var$patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","$3abe0d2b8a518b54$var$patchAttr","$3abe0d2b8a518b54$var$ensureRenderer","$3abe0d2b8a518b54$var$renderer","$1c1acbf2ceebdf9b$var$script","$87b829d42b0f799b$export$2e2bcd8739ae039","$ctTUI","$2BnhC","$klsQl","$1cGoj","$lIy4d","$eUlFA","sequence","viewWidth","selectedIndex","$parcel$interopDefault","$6alBJ","$refs","sequencecontainer","offsetWidth","$ada71acdca1a8d31$var$script","parcelRequire","__esModule","__file","$ada71acdca1a8d31$export$2e2bcd8739ae039","$167d7472f0dd4335$export$2e2bcd8739ae039","show","$216dd6870bbf7f11$var$_hoisted_2","$216dd6870bbf7f11$var$_hoisted_3","$216dd6870bbf7f11$var$_hoisted_4","$216dd6870bbf7f11$var$_hoisted_5","$216dd6870bbf7f11$var$_hoisted_6","$216dd6870bbf7f11$var$_hoisted_1","onClick","_cache","$event","$4879b2e6c390c715$export$2e2bcd8739ae039","script","$916390cca893d16c$var$script","$916390cca893d16c$export$2e2bcd8739ae039","$3f2cf3263ef50d05$export$2e2bcd8739ae039","sd3","updateCanvasSize","$kEUo3","debounce","sequenceGraph","width","getContext","clearRect","canvas","height","$gkUby","$emit","$0311b613e5e0220a$export$2e2bcd8739ae039","nodes","x","y","vx","simulation","force","strength","radius","distanceMax","font","round","sqrt","links","distance","alphaTarget","restart","ticked","beginPath","moveTo","lineTo","strokeStyle","stroke","arc","PI","fillStyle","fill","selected","textAlign","textBaseline","fillText","toUpperCase","selectionListener","$3yU2B","$l8qMf","$kA2kk","$4rq2l","$3Jlah","$cqdrD","$8eRk0","$9cnbD","subject","find","$8JJ2L","fx","fy","matches","$llWQA","changedTouches","$hiDs1","sourceEvent","$65c5776a69c7f720$var$filterEvents","$65c5776a69c7f720$export$6cd530ed55e06764","documentElement","mouseenter","mouseleave","$65c5776a69c7f720$var$filterContextListener","listener","group","$65c5776a69c7f720$var$contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","$65c5776a69c7f720$var$parseTypenames","typenames","$65c5776a69c7f720$var$onRemove","typename","__on","o","capture","$65c5776a69c7f720$var$onAdd","each","$65c5776a69c7f720$export$4c724631b4750aef","that","svg","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","left","clientLeft","top","clientTop","prefix","$jtOpj","space","local","$e2e7d3985d720e66$export$201a3f7520ccc326","$e2e7d3985d720e66$export$2e2bcd8739ae039","xhtml","xlink","xml","xmlns","$56IL3","Selection","$3b803b4beec31c0e$export$e8e78c978b129247","$3b803b4beec31c0e$export$52baac22726c72bf","groups","parents","_groups","_parents","$3b803b4beec31c0e$var$selection","constructor","select","$4X6R6","selectAll","$ei4qH","$3mXIl","$kGiOd","$i5avI","exit","$9unDg","$i8Waw","merge","$2iiEW","order","$9ozAe","$eAvIr","$7YFX7","$2tIQ2","$ClXgB","$g4Adf","empty","$eQhmO","$1FrUA","attr","$2D5AD","$8OYp4","property","$7vKyp","classed","$409MC","$5Pa3U","html","$8kEQq","raise","$cB2mi","lower","$7wWZl","append","$b3vSz","$53SFj","$hcmjr","$ctzm7","datum","$hNAYA","dispatch","$cv6jH","$3b803b4beec31c0e$export$2e2bcd8739ae039","$8hWTF","subgroups","subnode","subgroup","$608d98f7ec05ac4b$var$none","$bWuil","$8b1c9c6bf5977103$var$empty","querySelectorAll","$isDvK","$f0e651f996aa5bb7$var$bindIndex","groupLength","dataLength","EnterNode","$f0e651f996aa5bb7$var$bindKey","keyValue","nodeByKeyValue","keyValues","$gqBfp","enterGroup","updateGroup","previous","i0","_next","_enter","_exit","$UbXkt","$d2a0d8ca0539e45b$export$67b01759a14cf6a4","ownerDocument","namespaceURI","_parent","onenter","onupdate","onexit","selection","groups0","groups1","m0","m1","merges","group0","group1","compare","compareNode","$a9ed0797e8fafc77$var$ascending","sortgroups","sortgroup","NaN","$1ea38f551b1f950e$var$attrRemove","$1ea38f551b1f950e$var$attrRemoveNS","fullname","$1ea38f551b1f950e$var$attrConstant","$1ea38f551b1f950e$var$attrConstantNS","$1ea38f551b1f950e$var$attrFunction","$1ea38f551b1f950e$var$attrFunctionNS","$jiV71","getAttributeNS","getAttribute","$66c1d9161772feec$var$styleRemove","removeProperty","$66c1d9161772feec$var$styleConstant","priority","$66c1d9161772feec$var$styleFunction","$66c1d9161772feec$export$5e3cec964f0b5efd","getPropertyValue","$dQhYg","defaultView","$577f8a4f5f87ebf2$var$propertyRemove","$577f8a4f5f87ebf2$var$propertyConstant","$577f8a4f5f87ebf2$var$propertyFunction","$2e9ec041f89cc9ff$var$classArray","string","$2e9ec041f89cc9ff$var$classList","$2e9ec041f89cc9ff$var$ClassList","_node","_names","$2e9ec041f89cc9ff$var$classedAdd","names","$2e9ec041f89cc9ff$var$classedRemove","$2e9ec041f89cc9ff$var$classedTrue","$2e9ec041f89cc9ff$var$classedFalse","$2e9ec041f89cc9ff$var$classedFunction","contains","$43d9854c3e4432ee$var$textRemove","$43d9854c3e4432ee$var$textConstant","$43d9854c3e4432ee$var$textFunction","$610fdfdf9780560a$var$htmlRemove","$610fdfdf9780560a$var$htmlConstant","$610fdfdf9780560a$var$htmlFunction","$92bac5210eadd303$var$raise","$57b947748beeb9cb$var$lower","$dQdmO","$a13a8014ee3ec5c4$var$creatorInherit","uri","$a13a8014ee3ec5c4$var$creatorFixed","$3af7a2f5ea943374$var$constantNull","$c854dd7a6c994d70$var$remove","$91539e66dba7af4f$var$selection_cloneShallow","$91539e66dba7af4f$var$selection_cloneDeep","$919d47aa7ab63882$var$dispatchEvent","CustomEvent","initEvent","bubbles","cancelable","detail","dispatchEvent","$919d47aa7ab63882$var$dispatchConstant","$919d47aa7ab63882$var$dispatchFunction","touches","identifier","touch","sx","sy","initialize","random","tree","$874173455a6657fe$var$Quadtree","$9Dj0e","defaultX","$2t53l","defaultY","addAll","x0","y0","x1","y1","_x","_y","_x0","_y0","_x1","_y1","_root","$874173455a6657fe$var$leaf_copy","leaf","copy","$874173455a6657fe$var$treeProto","$874173455a6657fe$export$2e2bcd8739ae039","$hhWx5","cover","$2buw7","$j0HV8","extent","$3tf8Y","$cFaxp","$73C4k","removeAll","$54Vwn","$lSQMq","visit","$kvUEX","visitAfter","$kqKE4","$c9616d8fba11c554$var$add","isNaN","xm","ym","xp","yp","right","bottom","$c9616d8fba11c554$export$32ed0561867ec8a1","xz","yz","floor","z","x2","y2","q","x3","y3","quads","$lNEW8","dx","dy","d2","retainer","$523657e20d7313db$export$1cfc7aad5cb1833b","$70367f19cd5f5111$export$e6fafc98131d2a44","$1cc2359749fb4b88$export$6f0a21aeb844a64c","$f62f1dbad1b60bad$var$index","$f62f1dbad1b60bad$var$find","nodeById","nodeId","Error","strengths","distances","count","bias","link","$CD2oh","iterations","alpha","k","$5X2Jb","vy","$23dkg","initializeStrength","initializeDistance","$17e632d19429754b$export$82e9f45cca5ba907","$17e632d19429754b$var$Map","$17e632d19429754b$var$map","object","f","$17e632d19429754b$export$2e2bcd8739ae039","$a737097c2004f177$var$Set","$a737097c2004f177$var$proto","$a737097c2004f177$var$set","node1","strength1","distanceMin2","distanceMax2","theta2","$bBXGJ","accumulate","quad","weight","abs","distanceMin","theta","$298004a4c385f141$export$d141bba7fdc215a3","$298004a4c385f141$export$4a5767248b18ef41","$298004a4c385f141$var$initialAngle","alphaMin","alphaDecay","pow","velocityDecay","forces","stepper","$bLp8s","timer","step","$bn8qr","tick","initializeNodes","angle","cos","sin","initializeForce","closest","$847860d1f1297bc0$var$noop","$847860d1f1297bc0$var$dispatch","$847860d1f1297bc0$var$Dispatch","$847860d1f1297bc0$var$parseTypenames","types","$847860d1f1297bc0$var$get","$847860d1f1297bc0$var$set","T","$847860d1f1297bc0$export$2e2bcd8739ae039","$890794dc445c9dfb$var$taskHead","$890794dc445c9dfb$var$taskTail","$890794dc445c9dfb$var$frame","$890794dc445c9dfb$var$timeout","$890794dc445c9dfb$var$interval","$890794dc445c9dfb$var$clockLast","$890794dc445c9dfb$var$clockNow","$890794dc445c9dfb$var$clockSkew","$890794dc445c9dfb$var$clock","$890794dc445c9dfb$var$setFrame","$890794dc445c9dfb$export$461939dd4422153","$890794dc445c9dfb$var$clearNow","$890794dc445c9dfb$export$c57e9b2d8b9e4de","_call","_time","$890794dc445c9dfb$export$9dc4ecf953986f04","delay","time","$890794dc445c9dfb$var$wake","$890794dc445c9dfb$export$d60154c1d7f3990e","t0","t2","t1","$890794dc445c9dfb$var$sleep","$890794dc445c9dfb$var$nap","$890794dc445c9dfb$var$poke","clearTimeout","clearInterval","setInterval","TypeError","Timer","elapsed","$6b27386be9589057$var$defaultFilter","ctrlKey","button","$6b27386be9589057$var$defaultContainer","$6b27386be9589057$var$defaultSubject","$6b27386be9589057$var$defaultTouchable","maxTouchPoints","mousedownx","mousedowny","mousemoving","touchending","container1","touchable","gestures","listeners","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","$21Pld","view","mousemoved","mouseupped","$emmOR","$cwxYj","nopropagation","mouse","yesdrag","$fdfWg","sublisteners","customEvent","$4Zb5S","p0","$5y2b2","clickDistance","__noselect","MozUserSelect","$a744d231e1042b98$export$833237748009e1e1","noclick","$91e2d34bdd05c4f7$export$2e2561858db9bf47","preventDefault","$3a1576eae845f0cb$export$2e2bcd8739ae039","FUNC_ERROR_TEXT","HASH_UNDEFINED","PLACEHOLDER","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","INFINITY","MAX_SAFE_INTEGER","NAN","MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrimStart","reWhitespace","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reForbiddenIdentifierChars","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsDingbatRange","rsLowerRange","rsUpperRange","rsVarRange","rsBreakRange","rsMathOpRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","parseFloat","freeParseInt","freeGlobal","$parcel$global","freeSelf","freeExports","exports","nodeType","freeModule","module","moduleExports","freeProcess","nodeUtil","require","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","func","arrayAggregator","array","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection1","eachFunc","collection","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","basePropertyOf","baseReduce","collection2","baseTimes","baseTrim","trimmedEndIndex","baseUnary","baseValues","cacheHas","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","mapToArray","overArg","transform","arg","replaceHolders","setToArray","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","unicodeToArray","asciiToArray","charAt","unescapeHtmlChar","runInContext","defaults","pick","arrayProto","funcProto","objectProto","coreJsData","funcToString","idCounter","maskSrcKey","exec","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","Buffer","Uint8Array","allocUnsafe","getPrototype","objectCreate","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","symIterator","symToStringTag","toStringTag","getNative","ctxClearTimeout","ctxNow","ctxSetTimeout","nativeCeil","ceil","nativeFloor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","nativeMin","nativeNow","nativeParseInt","nativeRandom","nativeReverse","reverse","DataView","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","isObject","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entry","ListCache","MapCache","SetCache","Stack","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","collection3","baseEach","baseAssign","copyObject","writable","baseAt","paths","skip","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","input","initCloneArray","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","symbol","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","isCommon","valuesLength","outer","valuesIndex","templateSettings","escape","evaluate","interpolate","variable","imports","hash","getMapData","pairs","LARGE_ARRAY_SIZE","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","collection4","baseExtremum","isSymbol","baseFilter","collection5","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","baseInvoke","parent1","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","message","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","objStacked","othStacked","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","baseIsNative","baseIteratee","identity","baseMatchesProperty","baseMatches","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","collection6","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","comparer","baseSortBy","criteria","objCriteria","othCriteria","ordersLength","compareAscending","compareMultiple","basePickBy","baseSet","basePullAll","basePullAt","indexes","baseUnset","baseRepeat","baseRest","setToString","overRest","baseSample","values1","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","baseSome","collection7","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","result2","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","methodName","trailing","createCompounder","words","deburr","createCtor","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","index1","prereq","thru","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","newHolders","createRecurry","reorder","createInverter","toIteratee","object1","baseInverter","createMathOperation","operator","createOver","arrayFunc","createPadding","chars","charsLength","createRange","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","precision","toInteger","pair","noop","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrLength","arrStacked","arrValue","othValue1","flatten","otherFunc","iteratee1","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","ctorString","isMaskable","stubFalse","otherArgs","oldArray","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","lastCalled","stamp","remaining","rand","charCodeAt","quote","subString","memoize","difference","differenceBy","differenceWith","findLastIndex","head","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain1","interceptor","wrapperAt","countBy","findLast","forEachRight","groupBy","invokeMap","keyBy","map1","partition","sortBy","ary1","bindKey","WRAP_BIND_FLAG","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","cancel","defer","resolver","memoized","Cache","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isNumber","isString","lt","lte","toArray","iteratorToArray","remainder","toLength","isBinary","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","omit","CLONE_DEEP_FLAG","basePick","pickBy","toPairs","toPairsIn","camelCase","word","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","methodOf","chain","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","subtract","minuend","subtrahend","after","castArray","chunk","compact","cond","conforms","baseConforms","properties","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","baseFill","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","object2","mapValues","object3","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","object4","isArrLike","unary","uniq","uniqBy","uniqWith","unset","updateWith","valuesIn","zipObject","zipObjectDeep","entriesIn","extend","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","position","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isElement","isEmpty","isEqual","isEqualWith","isMatch","isMatchWith","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduceRight","repeat","sample","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sum","sumBy","settings","isEscaping","isEvaluating","importsKeys","importsValues","reDelimiters","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","times","toLower","toSafeInteger","toUpper","trimEnd","trimStart","truncate","omission","search","substring","global","newEnd","unescape","uniqueId","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","value1","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","result3","chainName","isRight","getView","iterLength","takeCount","iterIndex","commit","wrapped","toJSON","runInContext1","define","amd","$c5f29dd1409ae477$var$_hoisted_1","$9c765e5a20d5d123$export$2e2bcd8739ae039","$1e511909dfd06f73$var$script","__cssModules","$1e511909dfd06f73$export$2e2bcd8739ae039","$f00bfc3810da52fe$export$2e2bcd8739ae039","scatter","$4B3Qn","draw","plot","processSequence","$eO7WU","$358d99704cc7c900$export$2e2bcd8739ae039","xlabel","ylabel","margin","labelMargin","plot_group","xScale","$e8sOB","domain","yScale","xAxis","$k6oF3","axisBottom","scale","yAxis","axisLeft","ticks","lineFxn","$2t8sB","areaFxn","$dwYRZ","$7gD8f","$goDDc","updateSel","$15a89ab591c1e799$var$ascendingBisect","$fpIaF","$15a89ab591c1e799$export$4d945ad3ad5751b0","$15a89ab591c1e799$export$2e2bcd8739ae039","lo","hi","$8e7c5102c0947994$export$a04cb3fe8b81dd","$JCUu6","valueof","delta","$cKFAr","$8477c805e8765877$var$array","$8477c805e8765877$export$58adb3bec8346d0f","$8477c805e8765877$export$871de8747c9eaa88","$874f88429c57212a$var$e10","$874f88429c57212a$var$e5","$874f88429c57212a$var$e2","$874f88429c57212a$export$bc64d00cc98e7e95","power","log","LN10","$874f88429c57212a$export$81087d9b915d4ede","step0","step1","LN2","value0","matrix","$067c839afc33dac1$var$length","transpose","row","$39d3a631b9be81c2$export$23c7bb9e6558da2a","$39d3a631b9be81c2$export$7d6b419e59e83f3d","interpolator","$34b6e07ab4d2d7dd$export$e4f898ab14d9d460","unknown","$8imiK","$34b6e07ab4d2d7dd$export$2e2bcd8739ae039","$4XOfo","initRange","$60a14dbd86af386e$var$array","$60a14dbd86af386e$export$871de8747c9eaa88","$60a14dbd86af386e$export$58adb3bec8346d0f","$a4a82a1eba95033d$export$16a5d4b4a61a274d","$bCfQh","tickFormat","specifier","$gcMgy","nice","tickIncrement","$c2dck","$a4a82a1eba95033d$export$2e2bcd8739ae039","$8c2fe8c60ae53faf$var$unit","$8c2fe8c60ae53faf$export$f0954fd7d5368655","$8c2fe8c60ae53faf$var$normalize","$14sxY","$8c2fe8c60ae53faf$var$clamper","$8c2fe8c60ae53faf$var$bimap","d0","d1","r0","r1","$8c2fe8c60ae53faf$var$polymap","$1RhS8","$8c2fe8c60ae53faf$export$784d13d8ee351f07","$8c2fe8c60ae53faf$export$6b468dcfb64c653c","untransform","piecewise","output","$e32J0","rescale","$eMMll","$gOIVg","rangeRound","$ef9Zj","$8FXc1","$2J5hC","$ep8Ne","$fUSxf","$4W5rt","$fW1em","isNumberArray","$eV6iC","genericArray","$4ZTTZ","$1fc3e1e206db3b60$export$892596cec99bc70e","$1fc3e1e206db3b60$export$4adafc6ed0600c10","$1fc3e1e206db3b60$export$9eace2cc0d12c98d","$1fc3e1e206db3b60$var$reI","$1fc3e1e206db3b60$var$reN","$1fc3e1e206db3b60$var$reP","$1fc3e1e206db3b60$var$reHex","$1fc3e1e206db3b60$var$reRgbInteger","$1fc3e1e206db3b60$var$reRgbPercent","$1fc3e1e206db3b60$var$reRgbaInteger","$1fc3e1e206db3b60$var$reRgbaPercent","$1fc3e1e206db3b60$var$reHslPercent","$1fc3e1e206db3b60$var$reHslaPercent","$1fc3e1e206db3b60$var$named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","$1fc3e1e206db3b60$var$color_formatHex","rgb","formatHex","$1fc3e1e206db3b60$var$color_formatRgb","formatRgb","format","$1fc3e1e206db3b60$var$rgbn","$1fc3e1e206db3b60$export$5e05a94393ac29e3","$1fc3e1e206db3b60$var$rgba","$1fc3e1e206db3b60$var$hsla","g","$1fc3e1e206db3b60$export$42da0a331c2802f5","$1fc3e1e206db3b60$export$2e2bcd8739ae039","opacity","$1fc3e1e206db3b60$export$8972dc0e6ad9238f","$1fc3e1e206db3b60$var$rgb_formatHex","$1fc3e1e206db3b60$var$hex","$1fc3e1e206db3b60$var$rgb_formatRgb","$1fc3e1e206db3b60$var$Hsl","$1fc3e1e206db3b60$export$8133dc3fa904d6d1","$1fc3e1e206db3b60$var$hsl2rgb","m2","$jdtFf","channels","displayable","hex","formatHsl","brighter","darker","factory","$dfd63df02087f6a9$export$8b58be045bf06082","definition","$a7ca389ced30e8e1$export$2e2bcd8739ae039","rgbGamma","color","$5uJ1V","gamma","$a7ca389ced30e8e1$var$rgbSpline","spline","colors","$fAMBW","$4WMot","$b59fecf407bebb69$export$4e41033bfeec1a4c","v0","v1","v2","v3","t3","basis","$4002af22563096c3$var$linear","$4002af22563096c3$export$a7ebe8cc6aaf8d37","$4002af22563096c3$export$2e2bcd8739ae039","$4002af22563096c3$var$exponential","$adcb4678e98748a1$export$15d09067c6a5ee49","nb","na","$b99d3a2dd754596b$export$5cd576d1827d40c8","isView","setTime","$b966638859308bfb$var$reA","$b966638859308bfb$var$reB","am","bs","bi","$b966638859308bfb$var$one","$b966638859308bfb$var$zero","$51d08f871b2ff717$var$interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","translateX","translateY","rotate","skewX","scaleX","scaleY","$51d08f871b2ff717$export$56bec7123bb3589a","$9xxUy","parseCss","$51d08f871b2ff717$export$da8cba906d64c082","parseSvg","$6f2180282247c900$var$cssNode","$6f2180282247c900$var$cssRoot","$6f2180282247c900$var$cssView","$6f2180282247c900$var$svgNode","$6f2180282247c900$export$59ad369bf4938177","$a6Q20","$6f2180282247c900$export$f9ef43f9a1d89a18","baseVal","consolidate","$75c2d344f650d897$var$degrees","$75c2d344f650d897$export$f0954fd7d5368655","atan2","atan","tickStep","$9Yb6o","$fbsG5","$2tzrC","formatPrefix","$l1Mzg","$70qUX","$1cd9c8b617ad5f53$var$locale","$1cd9c8b617ad5f53$export$d9468344d3651243","$1cd9c8b617ad5f53$export$8d85692a469dde6f","decimal","thousands","grouping","currency","minus","$7zDJb","$583a9e67f4489f79$var$map","$583a9e67f4489f79$var$prefixes","locale","$3wQCI","$2ZsGE","currencyPrefix","currencySuffix","numerals","$fVUt5","percent","nan","newFormat","align","sign","zero","comma","$4oaRa","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","$2Lj2i","$9jgr7","prefixExponent","padding","$lowLC","$7bHrH","formatDecimalParts","toLocaleString","$53bb42e3be7521f2$export$8f8e23dd27dc19f5","toExponential","coefficient","$74225452b0b41127$var$re","$74225452b0b41127$export$963aac351db36ed4","$74225452b0b41127$export$2e2bcd8739ae039","out","$3321d33542bec18e$export$2e2bcd8739ae039","toFixed","toPrecision","$fLPbP","X","$6c72a35092571aea$export$6863724d9a42263","exponent","$43db0099b0651394$var$transformLog","$43db0099b0651394$var$transformExp","exp","$43db0099b0651394$var$transformLogn","$43db0099b0651394$var$transformExpn","$43db0099b0651394$var$pow10","$43db0099b0651394$var$reflect","$43db0099b0651394$export$860836db074028f0","logs","pows","E","log10","log2","$43db0099b0651394$var$logp","$43db0099b0651394$var$powp","$86Ayn","interval","$1bfc335c701d0d50$var$transformSymlog","log1p","$1bfc335c701d0d50$var$transformSymexp","expm1","$1bfc335c701d0d50$export$4602684e614eba38","linearish","$e8c3170f53c6521b$var$transformPow","$e8c3170f53c6521b$var$transformSqrt","$e8c3170f53c6521b$var$transformSquare","$e8c3170f53c6521b$export$34695211ec403a46","$c9ab0127f064c2d0$var$durationSecond","$c9ab0127f064c2d0$var$durationMinute","$c9ab0127f064c2d0$var$durationHour","$c9ab0127f064c2d0$var$durationDay","$c9ab0127f064c2d0$var$durationMonth","$c9ab0127f064c2d0$var$durationYear","$c9ab0127f064c2d0$var$date","$c9ab0127f064c2d0$var$number","$c9ab0127f064c2d0$export$56bbcdb8aca31149","year","month","week","day","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","date","tickInterval","$kfCI2","$13f6c37fc38d88be$var$millisecond","$fhvzs","$13f6c37fc38d88be$export$2e2bcd8739ae039","$b200eee116978ac9$var$t0","$b200eee116978ac9$var$t1","floori","offseti","field","$b200eee116978ac9$export$2e2bcd8739ae039","$d09b85246095b353$var$second","getMilliseconds","$eq4cX","durationSecond","getUTCSeconds","$d09b85246095b353$export$2e2bcd8739ae039","$a7f6c202a08aa68b$export$79ef0e34099623dc","$a7f6c202a08aa68b$export$683905d551c33fa9","$a7f6c202a08aa68b$export$4157bf0c8e241659","$a7f6c202a08aa68b$export$353686095f4fbf45","$a7f6c202a08aa68b$export$c241eb88520d5016","$4df033ee65e75891$var$minute","getSeconds","durationMinute","getMinutes","$4df033ee65e75891$export$2e2bcd8739ae039","$f478cf4844333f8d$var$hour","durationHour","getHours","$f478cf4844333f8d$export$2e2bcd8739ae039","$30f69f3d8f468de8$var$day","setHours","setDate","getDate","getTimezoneOffset","durationDay","$30f69f3d8f468de8$export$2e2bcd8739ae039","$026c6be565bb5b1b$var$weekday","getDay","durationWeek","$026c6be565bb5b1b$export$fb3ee18ed410cc21","$026c6be565bb5b1b$export$6416afaab03bc9b8","$026c6be565bb5b1b$export$cb8f040f5d17ac7b","$026c6be565bb5b1b$export$347581849975dfc8","$026c6be565bb5b1b$export$2f2b56683a3e5629","$026c6be565bb5b1b$export$59b8c2ccd931d806","$026c6be565bb5b1b$export$478ceadebff4d377","$ea4eb79b4f369f02$var$month","setMonth","getMonth","getFullYear","$ea4eb79b4f369f02$export$2e2bcd8739ae039","$174912d06d93c200$var$year","setFullYear","$174912d06d93c200$export$2e2bcd8739ae039","$8a8e1f4ab0375d56$var$utcMinute","setUTCSeconds","getUTCMinutes","$8a8e1f4ab0375d56$export$2e2bcd8739ae039","$cf76714fcbc3a5f5$var$utcHour","setUTCMinutes","getUTCHours","$cf76714fcbc3a5f5$export$2e2bcd8739ae039","$d412fc5a38dd13aa$var$utcDay","setUTCHours","setUTCDate","getUTCDate","$d412fc5a38dd13aa$export$2e2bcd8739ae039","$11b429e42c5957a8$var$utcWeekday","getUTCDay","$11b429e42c5957a8$export$4898b06303a92011","$11b429e42c5957a8$export$9cfc53b9cfafd080","$11b429e42c5957a8$export$2a6d545f77eceb15","$11b429e42c5957a8$export$a5c25d8ed64433c4","$11b429e42c5957a8$export$1db08111baec2f53","$11b429e42c5957a8$export$29265e34dd5921f7","$11b429e42c5957a8$export$85b74dad05049604","$d7c9575022061637$var$utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","$d7c9575022061637$export$2e2bcd8739ae039","$b8ad8ace20bf3a24$var$utcYear","setUTCFullYear","$b8ad8ace20bf3a24$export$2e2bcd8739ae039","$5d2ad105b70a1a22$var$locale","$5d2ad105b70a1a22$export$94f4d87fad5dcf9a","$5d2ad105b70a1a22$export$1a08fe38f63ebbbb","dateTime","periods","days","shortDays","months","shortMonths","$1f4Io","utcFormat","utcParse","$0e7ad9747e24790b$var$localDate","H","M","S","L","$0e7ad9747e24790b$var$utcDate","UTC","$0e7ad9747e24790b$var$newDate","locale_dateTime","locale_date","locale_time","locale_periods","locale_weekdays","locale_shortWeekdays","locale_months","locale_shortMonths","periodRe","$0e7ad9747e24790b$var$formatRe","periodLookup","$0e7ad9747e24790b$var$formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats1","A","B","$0e7ad9747e24790b$var$formatDayOfMonth","$0e7ad9747e24790b$var$formatMicroseconds","$0e7ad9747e24790b$var$formatYearISO","G","$0e7ad9747e24790b$var$formatFullYearISO","$0e7ad9747e24790b$var$formatHour24","I","$0e7ad9747e24790b$var$formatHour12","$0e7ad9747e24790b$var$formatDayOfYear","$0e7ad9747e24790b$var$formatMilliseconds","$0e7ad9747e24790b$var$formatMonthNumber","$0e7ad9747e24790b$var$formatMinutes","Q","$0e7ad9747e24790b$var$formatUnixTimestamp","$0e7ad9747e24790b$var$formatUnixTimestampSeconds","$0e7ad9747e24790b$var$formatSeconds","$0e7ad9747e24790b$var$formatWeekdayNumberMonday","U","$0e7ad9747e24790b$var$formatWeekNumberSunday","V","$0e7ad9747e24790b$var$formatWeekNumberISO","$0e7ad9747e24790b$var$formatWeekdayNumberSunday","W","$0e7ad9747e24790b$var$formatWeekNumberMonday","$0e7ad9747e24790b$var$formatYear","Y","$0e7ad9747e24790b$var$formatFullYear","Z","$0e7ad9747e24790b$var$formatZone","$0e7ad9747e24790b$var$formatLiteralPercent","utcFormats","$0e7ad9747e24790b$var$formatUTCDayOfMonth","$0e7ad9747e24790b$var$formatUTCMicroseconds","$0e7ad9747e24790b$var$formatUTCYearISO","$0e7ad9747e24790b$var$formatUTCFullYearISO","$0e7ad9747e24790b$var$formatUTCHour24","$0e7ad9747e24790b$var$formatUTCHour12","$0e7ad9747e24790b$var$formatUTCDayOfYear","$0e7ad9747e24790b$var$formatUTCMilliseconds","$0e7ad9747e24790b$var$formatUTCMonthNumber","$0e7ad9747e24790b$var$formatUTCMinutes","$0e7ad9747e24790b$var$formatUTCSeconds","$0e7ad9747e24790b$var$formatUTCWeekdayNumberMonday","$0e7ad9747e24790b$var$formatUTCWeekNumberSunday","$0e7ad9747e24790b$var$formatUTCWeekNumberISO","$0e7ad9747e24790b$var$formatUTCWeekdayNumberSunday","$0e7ad9747e24790b$var$formatUTCWeekNumberMonday","$0e7ad9747e24790b$var$formatUTCYear","$0e7ad9747e24790b$var$formatUTCFullYear","$0e7ad9747e24790b$var$formatUTCZone","parses","parseSpecifier","$0e7ad9747e24790b$var$parseDayOfMonth","$0e7ad9747e24790b$var$parseMicroseconds","$0e7ad9747e24790b$var$parseYear","$0e7ad9747e24790b$var$parseFullYear","$0e7ad9747e24790b$var$parseHour24","$0e7ad9747e24790b$var$parseDayOfYear","$0e7ad9747e24790b$var$parseMilliseconds","$0e7ad9747e24790b$var$parseMonthNumber","$0e7ad9747e24790b$var$parseMinutes","$0e7ad9747e24790b$var$parseQuarter","$0e7ad9747e24790b$var$parseUnixTimestamp","$0e7ad9747e24790b$var$parseUnixTimestampSeconds","$0e7ad9747e24790b$var$parseSeconds","$0e7ad9747e24790b$var$parseWeekdayNumberMonday","$0e7ad9747e24790b$var$parseWeekNumberSunday","$0e7ad9747e24790b$var$parseWeekNumberISO","$0e7ad9747e24790b$var$parseWeekdayNumberSunday","$0e7ad9747e24790b$var$parseWeekNumberMonday","$0e7ad9747e24790b$var$parseZone","$0e7ad9747e24790b$var$parseLiteralPercent","formats","$0e7ad9747e24790b$var$pads","newParse","$1weFX","utcMonday","$icRG6","$cTOVY","monday","$4cD70","$0e7ad9747e24790b$var$numberRe","$0e7ad9747e24790b$var$percentRe","$0e7ad9747e24790b$var$requoteRe","$0e7ad9747e24790b$var$pad","$0e7ad9747e24790b$var$requote","$1ZWLB","sunday","$0e7ad9747e24790b$var$dISO","thursday","$fR2eR","getUTCMilliseconds","dow","utcSunday","$0e7ad9747e24790b$var$UTCdISO","utcThursday","$126377653e2a5758$export$784d13d8ee351f07","$ea277f63e468042b$var$epsilon","$ea277f63e468042b$var$translateX","$ea277f63e468042b$var$translateY","$ea277f63e468042b$var$number","$ea277f63e468042b$var$center","bandwidth","$ea277f63e468042b$var$entering","__axis","$ea277f63e468042b$var$axis","orient","tickArguments","tickValues","tickSizeInner","tickSizeOuter","tickPadding","axis","$1ALLo","spacing","range0","range1","tickExit","tickEnter","line","$lhjR8","tickSize","$ea277f63e468042b$export$e5cb22533a15e72e","$ea277f63e468042b$export$2749afb169a520d2","$f7da967ed03e0e4b$export$58adb3bec8346d0f","$6NUxu","$ft4iO","defined","curve","$bD76U","area","defined0","x0z","y0z","$imqjh","areaStart","lineStart","lineEnd","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","$d5deb0b1adf24188$var$pi","$d5deb0b1adf24188$var$tau","$d5deb0b1adf24188$var$epsilon","$d5deb0b1adf24188$var$tauEpsilon","$d5deb0b1adf24188$var$Path","$d5deb0b1adf24188$var$path","closePath","quadraticCurveTo","bezierCurveTo","arcTo","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","a0","a1","ccw","cw","$d5deb0b1adf24188$export$2e2bcd8739ae039","$8778da3ba497463c$var$Linear","_line","_point","$4f432d2f429ee1e0$export$d141bba7fdc215a3","$4f432d2f429ee1e0$export$4a5767248b18ef41","interrupt","$7w2QI","$1NXGU","$9YQdE","schedule","schedules","__transition","$8nviU","STARTING","ENDING","ENDED","$6198c10bb9a6f211$var$emptyOn","$6198c10bb9a6f211$var$emptyTween","$6198c10bb9a6f211$export$584530fe98d14a84","$6198c10bb9a6f211$export$a5d151aee16efd42","$6198c10bb9a6f211$export$a2e792214ded83b2","$6198c10bb9a6f211$export$9d38167254403955","timing","tween","$fg0re","ease","$6198c10bb9a6f211$var$create","$6198c10bb9a6f211$export$2cd8252107eb640b","$6198c10bb9a6f211$export$3988ae62b71be9a3","$6198c10bb9a6f211$export$adaa4cf7ef1b65be","$1508ab7120938eca$var$defaultTiming","$04yhb","cubicInOut","$1508ab7120938eca$var$inherit","$drVjP","Transition","_id","_name","newId","$9caa4253ba1c6b05$var$id","$9caa4253ba1c6b05$export$be58926105124dd4","$9caa4253ba1c6b05$export$9ffd10a3fbdc175b","$9caa4253ba1c6b05$var$selection_prototype","$i5SXn","$5VbtQ","$i2P03","$6F3Lq","$7r9kV","$7KNki","$6RxRe","$6oivJ","attrTween","$1i61e","$jeURQ","styleTween","$kPXQ2","$2qcfE","textTween","$1Pi2C","$7lPlT","$kjORy","$8O8s2","$d1BzF","$hM0bV","$dE5Nk","$4a7357d1f902810c$var$attrRemove","$4a7357d1f902810c$var$attrRemoveNS","$4a7357d1f902810c$var$attrConstant","string00","interpolate0","string1","string0","$4a7357d1f902810c$var$attrConstantNS","$4a7357d1f902810c$var$attrFunction","string10","$4a7357d1f902810c$var$attrFunctionNS","$71uR3","interpolateTransformSvg","$4HzEC","tweenValue","$ecad09425c4a3980$var$tweenRemove","tween0","tween1","$ecad09425c4a3980$var$tweenFunction","$ecad09425c4a3980$export$f78ce6ab10405d82","$0f0c242077ed259a$var$attrInterpolate","$0f0c242077ed259a$var$attrInterpolateNS","$0f0c242077ed259a$var$attrTweenNS","$0f0c242077ed259a$var$attrTween","$66998c7ea8725a4b$var$delayFunction","init","$66998c7ea8725a4b$var$delayConstant","$97b883cdc3d569f2$var$durationFunction","$97b883cdc3d569f2$var$durationConstant","$cf071155d082d28d$var$easeConstant","$4ff1f4ba7610fa0c$var$onFunction","on0","on1","sit","$4ff1f4ba7610fa0c$var$start","inherit","$56a24c0cbee33b6b$var$Selection","$e01b6fceb677ab9e$var$styleRemove","interpolateTransformCss","styleValue","$e01b6fceb677ab9e$var$styleNull","$e01b6fceb677ab9e$var$styleFunction","listener0","$e01b6fceb677ab9e$var$styleMaybeRemove","$e01b6fceb677ab9e$var$styleConstant","$f2b6fcb2f56917e9$var$styleInterpolate","$f2b6fcb2f56917e9$var$styleTween","$1c3783601ea9d0a4$var$textFunction","$1c3783601ea9d0a4$var$textConstant","$15488c77ad72cb24$var$textInterpolate","$15488c77ad72cb24$var$textTween","id0","id1","$00daf663a05550a8$export$89238d3bc79d3ada","$19a9b3d62aa079b5$var$_hoisted_1","$19a9b3d62aa079b5$var$_hoisted_2","$30b67532293f1f3b$export$2e2bcd8739ae039","$0e07cb6ff350b310$var$script","$0e07cb6ff350b310$export$2e2bcd8739ae039","$629a0d61893b4d02$export$2e2bcd8739ae039","lastKeyCode","internalSequence","onKeyDown","evt","keyCode","$617b30e79f7aaa25$export$49729353e7c1e6c5","spellcheck","autocorrect","onKeydown","onKeyup","$3abe0d2b8a518b54$export$f1f88689f5728478","$a748576ecfb8602e$export$2e2bcd8739ae039","$ecfc2477f56ba078$var$script","$ecfc2477f56ba078$export$2e2bcd8739ae039","$c5869e92d7f5fea1$export$2e2bcd8739ae039","$flIAv","$6apfZ","url","status","rnn","$3HVKy","startLoad","prediction","sol","predict","finished","makePrediction","async","model_loaded","seq2vec","yhat","model","score","$b2cb6760946709e1$var$script","$b2cb6760946709e1$export$2e2bcd8739ae039","$68dc9c3c3ad32492$export$2e2bcd8739ae039","accuracy","title","$6634cabd59a16967$var$_hoisted_1","$6634cabd59a16967$var$_hoisted_4","$6634cabd59a16967$var$_hoisted_5","$6634cabd59a16967$var$_hoisted_6","$6634cabd59a16967$var$_hoisted_7","$6634cabd59a16967$var$_hoisted_8","$6634cabd59a16967$var$_hoisted_2","$7c429851a19f99f5$export$2e2bcd8739ae039","$2b322f26e5c05727$var$stoi","R","N","D","C","K","F","P","$2b322f26e5c05727$var$vocab","rnn_mod","$iUTMB","loadLayersModel","fetchFunc","rinit","RequestInit","fetch","reason","seed","$cytBa","multinomial","$9Z6fn","mul","$fM8a4","scalar","vec","$c9sDa","tensor","$krwns","reshape","$adf943f33fdd00f8$var$defer","$adf943f33fdd00f8$export$cc3c076530f2848f","fileNamePrefix1","$gndhS","env","getBool","URL_SCHEME","modelJsonFileName","weightDataFileName","modelArtifacts","weightsURL","URL","createObjectURL","Blob","weightData","modelTopology","weightsManifest","weights","weightSpecs","modelJSON","$3RhWg","getModelJSONForModelArtifacts","modelJsonURL","jsonAnchor","modelJsonAnchor","download","href","MouseEvent","weightDataAnchor","modelArtifactsInfo","getModelArtifactsInfoForJSON","$adf943f33fdd00f8$var$BrowserFiles","files1","jsonFile","weightsFiles","jsonReader","FileReader","onload","modelArtifactsPromise","getModelArtifactsForJSON","loadWeights","onerror","readAsText","pathToFile","checkManifestAndWeightFiles","promises","loadWeightsFile","all","buffers","concatenateArrayBuffers","path1","file1","weightFileReader","readAsArrayBuffer","manifest","basenames","fileNames","file","basename","pathBasename","$adf943f33fdd00f8$export$6729643cf069471c","files","$gPlyF","IORouterRegistry","registerSaveRouter","fileNamePrefix","$adf943f33fdd00f8$export$8fbc9551c735f788","$beb919e92a51881b$var$TENSORFLOWJS_FLAGS_PREFIX","$beb919e92a51881b$export$7dc6752a22ab011a","flags","flagRegistry","urlFlags","getQueryParams","$beb919e92a51881b$export$e2de15bbd9edf9c6","populateURLFlags","setPlatform","platformName","platform","$beb919e92a51881b$export$a7b6bc01c63cdfc3","warn","registerFlag","flagName7","evaluationFn","setHook","flagValue","flagName1","evaluateFlag","flagName2","$1gQFm","isPromise","getNumber","flagName3","flagName4","getFlags","features","flagName5","flagName6","setFlags","reset","location","urlParams","flagName","$beb919e92a51881b$var$parseValue","queryString","decodeURIComponent","$beb919e92a51881b$var$decodeParam","$beb919e92a51881b$export$83401e34d5e11bf4","$beb919e92a51881b$export$3ef32a49eeda04cc","environment","$0ed02371e1dfe3bb$export$448332262467e042","counter","$0ed02371e1dfe3bb$export$b0e76d9850c64156","$0ed02371e1dfe3bb$export$ae1498b5fd31a179","array2","$0ed02371e1dfe3bb$export$7d15b64cf5a3a4c4","$0ed02371e1dfe3bb$export$ece2fd7300c99d1f","$0ed02371e1dfe3bb$export$8a63f25cc62965f1","$0ed02371e1dfe3bb$export$1c2519d52242937","$0ed02371e1dfe3bb$export$499eb56409f6cbc2","diff","$0ed02371e1dfe3bb$export$a7a9523472993e97","expr","msg","$0ed02371e1dfe3bb$export$e08b27e7f37e2782","shapeA","shapeB","errorMessagePrefix","$0ed02371e1dfe3bb$export$234180f8206db11b","$0ed02371e1dfe3bb$export$44a06cc2759dd036","$0ed02371e1dfe3bb$export$bffa455ba8c619a6","skipTypedArray","$0ed02371e1dfe3bb$export$b119cc7e1840e59c","$0ed02371e1dfe3bb$export$b4c3214a70a0e73f","shape","$0ed02371e1dfe3bb$export$d58b8d1ec2129064","$0ed02371e1dfe3bb$export$357fc28f6427af8b","$0ed02371e1dfe3bb$export$7128670e45beef9a","tanh","e2x","$0ed02371e1dfe3bb$export$55bdc5631791c247","$0ed02371e1dfe3bb$export$49070d702e17365","shuffledIndices","Uint32Array","$0ed02371e1dfe3bb$export$390245bab32fb60f","$0ed02371e1dfe3bb$export$aa345f93372ddb7b","checkFn","delayFn","maxCounter","tryCount","tryFn","nextBackoff","$0ed02371e1dfe3bb$export$e9459a51c182ffc2","shapeProd","implicitIdx","newShape","$0ed02371e1dfe3bb$export$72b84eb9fe1f482","rank","ax","$0ed02371e1dfe3bb$export$3106ace2a3b5396d","keptDims","isEmptyArray","axes","$0ed02371e1dfe3bb$export$3b783bdb77632623","dtype","Float32Array","Int32Array","$0ed02371e1dfe3bb$export$24f13f6206df8f7c","$0ed02371e1dfe3bb$export$579cf7b8ff0a87a3","vals","num","$0ed02371e1dfe3bb$export$a6a3df2178ac9529","$0ed02371e1dfe3bb$export$9130d84b35fa7b98","oldType","newType","Uint8ClampedArray","$0ed02371e1dfe3bb$export$3f355ce86503b89f","$0ed02371e1dfe3bb$export$c474902e1102282d","bytes","$0ed02371e1dfe3bb$export$844ec244b1367d54","$0ed02371e1dfe3bb$export$f9ce7b637dfbe238","$0ed02371e1dfe3bb$export$7e4aa119212bc614","$0ed02371e1dfe3bb$export$2005775d905d2dc2","$0ed02371e1dfe3bb$export$f6e2535fb5126e54","$0ed02371e1dfe3bb$export$c0ff3276320ddb5e","$0ed02371e1dfe3bb$export$6ad0292cf4d50f79","strides","$0ed02371e1dfe3bb$var$createNestedArray","isComplex","acc","$0ed02371e1dfe3bb$export$3983c25181aa68cc","$0ed02371e1dfe3bb$export$b915f681a907ae99","$0ed02371e1dfe3bb$export$edbc8aedac4e036f","$0ed02371e1dfe3bb$export$eef638260c005c74","curr","$0ed02371e1dfe3bb$export$3d8b7619bac22cf5","dimSize","$0ed02371e1dfe3bb$export$a14b009c502dc3b4","locs","$0ed02371e1dfe3bb$export$2d1ada4c755a8699","$0ed02371e1dfe3bb$export$4369c812aac99591","$2cf43c927fe06914$export$6c50c12dbd6168b","tensors","specs","dataPromises","spec","utf8bytes","totalNumBytes","bytesOfLength","$2cf43c927fe06914$export$b9f790e5e2031778","$2cf43c927fe06914$export$7a14c2428d4f4a2e","float16Decode","sizeFromShape","quantization","quantizationSizeFactor","$gNq8K","DTYPE_VALUE_SIZE_MAP","byteBuffer","quantizedArray","Uint16Array","$2cf43c927fe06914$export$6f94974d2b5810f7","dtypeFactor","real","image","realTensor","imageTensor","$g8SEp","complex","dispose","xs","totalByteLength","normalizedXs","$2cf43c927fe06914$var$useNodeBuffer","$2cf43c927fe06914$require$Buffer","atob","btoa","$2cf43c927fe06914$export$42600be9c932993b","$2cf43c927fe06914$export$9a3e9c78eb778da8","$2cf43c927fe06914$export$9bf319d8f74f51d1","items","$2cf43c927fe06914$export$a725daa2cfaa7bd5","artifacts","generatedBy","convertedBy","signature","userDefinedMetadata","modelInitializer","trainingConfig","$2cf43c927fe06914$export$b867c14eedd5b8a2","$2cf43c927fe06914$export$ece8b449d7d29272","dateSaved","modelTopologyType","modelTopologyBytes","weightSpecsBytes","weightDataBytes","mantisaTable","convertMantissa","i3","i2","$2cf43c927fe06914$var$computeFloat16MantisaTable","exponentTable","i4","$2cf43c927fe06914$var$computeFloat16ExponentTable","offsetTable","$2cf43c927fe06914$var$computeFloat16OffsetTable","bufferUint32View","float16Bits","float32Bits","$bc07c935057059d9$export$83a0e34f1302825b","op","imag","$real","$9uGdI","convertToTensor","$imag","assertShapesMatch","inputs","$fywPN","ENGINE","runKernel","$g9PE0","Complex","$b5338034fd6d5075$var$isRegisteredKernelInvocation","kernelInvocation","kernelName","$b5338034fd6d5075$var$EngineState","registeredVariables","nextTapeNodeId","numBytes","numTensors","numStringTensors","numDataBuffers","gradientDepth","kernelDepth","scopeStack","numDataMovesStack","nextScopeId","tensorInfo","profiling","activeProfile","newBytes","newTensors","peakBytes","kernels","kernelNames","variableName","$b5338034fd6d5075$export$2c3b404bf3a77a1f","ENV","registryFactory","pendingBackendInitId","pendingBackendInit","backendInstance","sortedBackends","getSortedBackends","backendName","initializeBackend","success","setBackend","backend","asyncInit","initializeBackendsAndReturnBest","backendNames","findBackend","findBackendFactory","backendName1","registerBackend","backendName2","$3GlsG","backendName3","setupRegisteredKernels","profiler","$7Kk1y","Profiler","$jcYbz","getKernelsForBackend","kernel","setupFunc","disposeRegisteredKernels","backendName4","disposeFunc","backendName5","registryFactoryEntry","$kKOyT","KernelBackend","promiseId","removeBackend","backendName6","moveData","dataId1","info","srcBackend","readSync","refCount","disposeData","shouldCheckForMemLeaks","tidy","nameOrFn","scopedRun","startScope","endScope","f2","ex","nextTensorId","nextVariableId","$b5338034fd6d5075$export$33b63313cc511a3b","Identity","addTapeNode","activeScope","gradInputs","Cast","inputs3","getKernel","runKernelFunc","checkKernelForMemLeak","kernelName1","numDataIdsBefore1","outInfos1","numDataIdsAfter","numDataIds","numOutputDataIds","numMoves","dataIdsLeaked","kernelParams","outputs","saved","isTapeOn","startingBytecount","startingNumTensors","kernelFunc","kernelOrScopeName","assert","numDataIdsBefore","outInfos","outTensors","outInfo","dataId","makeTensorFromDataId","tensorsToSave","getTensorsForGradient","saveTensorsForBackwardMode","forwardFunc","saveFunc","keep","outs","backwardsFunc","kernelProfile","profileKernel","logKernelProfile","bytesAdded","totalBytesSnapshot","tensorsAdded","totalTensorsSnapshot","inputShapes","outputShapes","kernelTimeMs","timeMs","extraInfo","kernelName2","inputs1","gradConfig","getGradient","inputsToSave","outputsToSave","inputTensorsToSave","saveAllInputs","inputName","outputTensorsToSave","makeTensor","shape2","backend1","backendVals","$iYI6q","encodeString","write","$1NtvG","Tensor","trackTensor","bytesFromStringArray","shape1","dtype1","backend2","makeVariable","trainable","dtype2","cast","Variable","incRef","a3","backend3","bytesPerElement","track","backend4","removeDataId","dataId2","backend5","disposeTensor","a2","disposeVariables","varName","disposeVariable","memory","unreliable","reasons","query","startBytes","startNumTensors","kernelName3","inputs2","outputs1","gradientsFunc","saved1","attrs1","tapeNode","gradFunc","gradient","dys","makeZerosTypedArray","activeTape","kept","startTape","endTape","name1","scopeInfo","result1","tensorsToTrackInParent","$4mMas","getTensorsInContainer","tensorsToTrackInParentSet","oldScope","gradients","f1","dy1","allowNoGradients","filteredTape","$dVOe2","getFilteredNodesXToY","accumulatedGradientMap","makeOnesTypedArray","$b5338034fd6d5075$var$ones","backpropagateGradients","$b5338034fd6d5075$export$e16d8520af44a096","grads","customGrad","inputMap","save","gradRes","gradMap","grad","dataId3","read","dataId4","readToGPU","dataId5","query1","timingInfo","wallMs","ns","$cKg8c","getGlobalNamespace","_tfengine","Environment","setEnvironmentGlobal","setTensorTracker","$b5338034fd6d5075$export$ca8737f6c8c212b8","Add","$f1bf5306418ec0b4$export$543916c62202b50a","$f1bf5306418ec0b4$var$notYetImplemented","timerAvailable","dataId6","dataId7","dataId8","dataId9","dataId10","floatPrecision","epsilon","$94764b44baa9b8f0$var$globalNameSpace","$94764b44baa9b8f0$export$5054b240ae6849b7","$4TNnu","$94764b44baa9b8f0$export$a4e55266d2135a7f","globalMap","_tfGlobals","$94764b44baa9b8f0$var$getGlobalMap","singleton","$391299e0893a3dfa$var$cachedSetTimeout","$391299e0893a3dfa$var$cachedClearTimeout","$391299e0893a3dfa$var$process","$391299e0893a3dfa$var$defaultSetTimout","$391299e0893a3dfa$var$defaultClearTimeout","$391299e0893a3dfa$var$runTimeout","fun","$391299e0893a3dfa$var$currentQueue","$391299e0893a3dfa$var$queue","$391299e0893a3dfa$var$draining","$391299e0893a3dfa$var$queueIndex","$391299e0893a3dfa$var$cleanUpNextTick","$391299e0893a3dfa$var$drainQueue","marker","$391299e0893a3dfa$var$runClearTimeout","$391299e0893a3dfa$var$Item","$391299e0893a3dfa$var$noop","nextTick","browser","argv","versions","addListener","removeListener","removeAllListeners","prependListener","prependOnceListener","cwd","chdir","umask","$bc358c1458ce879a$export$b73c596ee8758a66","$bc358c1458ce879a$export$d0265b2c425512d6","$bc358c1458ce879a$export$5dceb1ab650a1776","$bc358c1458ce879a$export$b24b633b1364b94b","$bc358c1458ce879a$export$17612294a1503e1c","$bc358c1458ce879a$export$37f2cc7be1add88c","$bc358c1458ce879a$export$390ecb697af103f6","$bc358c1458ce879a$export$9a3bf60b23f63c8","$bc358c1458ce879a$export$45dfbbff595c32aa","$bc358c1458ce879a$export$107ecfb3d1ccbd77","$bc358c1458ce879a$export$611c0e357ac37f7d","$bc358c1458ce879a$export$50ceb3fb9926e63e","$bc358c1458ce879a$export$32902e58f1b48f4b","$bc358c1458ce879a$export$936bbfc007425eea","$bc358c1458ce879a$export$57742e605d475795","$bc358c1458ce879a$export$32a8943c0f1ca5a7","$bc358c1458ce879a$export$e26961e8ed0eb404","$bc358c1458ce879a$export$9d3874201dd21933","$bc358c1458ce879a$export$a54f552d6d7d521f","$bc358c1458ce879a$export$50bc9557793c2e04","$bc358c1458ce879a$export$7c0fc590ff9e156f","$bc358c1458ce879a$export$c99f139e0d4d1833","$bc358c1458ce879a$export$8649ca3b17033a24","$bc358c1458ce879a$export$b9880b86e1014bb8","$bc358c1458ce879a$export$64636e173424d83d","$bc358c1458ce879a$export$8dcf9f58ce5cdfc","$bc358c1458ce879a$export$f908be7a96fb3363","$bc358c1458ce879a$export$2391750b1d901146","$bc358c1458ce879a$export$677347237c014ba","$bc358c1458ce879a$export$ffffe40bfa0649a3","$bc358c1458ce879a$export$34e7296fc8558df5","$bc358c1458ce879a$export$4880b0ae5643c62b","$bc358c1458ce879a$export$d79b5692ede26c2f","$bc358c1458ce879a$export$3821a0416660aaa2","$bc358c1458ce879a$export$ccd988942e5c0181","$bc358c1458ce879a$export$d0a25eac5ee3f515","$bc358c1458ce879a$export$3b7d21bc9aee0851","$bc358c1458ce879a$export$544bf02140fa9a77","$bc358c1458ce879a$export$21c6f576ae8100e8","$bc358c1458ce879a$export$303b4473993a24f","$bc358c1458ce879a$export$f0c7162bb7af1a2d","$bc358c1458ce879a$export$84afd0d8f7fb8c5d","$bc358c1458ce879a$export$ce30dbb46644d06c","$bc358c1458ce879a$export$70f05bf9ddcfca68","$bc358c1458ce879a$export$8a27ff10dff4d6e5","$bc358c1458ce879a$export$d36c09e5d02927e7","$bc358c1458ce879a$export$d8d02ac92d161004","$bc358c1458ce879a$export$39ea33024ddd5cf","$bc358c1458ce879a$export$88fdc64af890fc53","$bc358c1458ce879a$export$1c2d59c4b681fbd8","$bc358c1458ce879a$export$dfed19fabc75a31d","$bc358c1458ce879a$export$23cb308301e89d6b","$bc358c1458ce879a$export$ee0a8cfb693e0e3f","$bc358c1458ce879a$export$f14f83b3b531d498","$bc358c1458ce879a$export$c07c549000872073","$bc358c1458ce879a$export$385ebe9945cae0c5","$bc358c1458ce879a$export$5e11788439c2f04","$bc358c1458ce879a$export$7df908154366fe7f","$bc358c1458ce879a$export$cb45d3fcefce2ef0","$bc358c1458ce879a$export$a2962e735c809d91","$bc358c1458ce879a$export$18982b43ba8c02e9","$bc358c1458ce879a$export$c26f40b29201e5b7","$bc358c1458ce879a$export$5d47ba206577f0f2","$bc358c1458ce879a$export$ce28d653ec559ee","$bc358c1458ce879a$export$a42f35f308fc2fa3","$bc358c1458ce879a$export$9a58ef0d7ad3278c","$bc358c1458ce879a$export$f41305719b94e675","$bc358c1458ce879a$export$9a6ff968bf961432","$bc358c1458ce879a$export$755ddd847e5abe03","$bc358c1458ce879a$export$6c8d8ec26192bb18","$bc358c1458ce879a$export$24f2f15d869e0fd","$bc358c1458ce879a$export$3be9e924f629054e","$bc358c1458ce879a$export$53c81f36b32e1bba","$bc358c1458ce879a$export$c5ed3eef16c0612f","$bc358c1458ce879a$export$ef9b1a59e592288f","$bc358c1458ce879a$export$6760d858e6f2594a","$bc358c1458ce879a$export$b3f2e2de3a8baa1e","$bc358c1458ce879a$export$fde18c826dda6b1b","$bc358c1458ce879a$export$c5af433747f1fd0a","$bc358c1458ce879a$export$21ab404ab9d512a6","$bc358c1458ce879a$export$534760f50726d5","$bc358c1458ce879a$export$8dffabb4071f05aa","$bc358c1458ce879a$export$350a526055d3ca6e","$bc358c1458ce879a$export$8f1933853a5c8cca","$bc358c1458ce879a$export$f08f0dca44fa542","$bc358c1458ce879a$export$610b077aecc2447b","$bc358c1458ce879a$export$68351c28d7116b56","$bc358c1458ce879a$export$2f922d20d66089c6","$bc358c1458ce879a$export$11a7f4af7d96ad41","$bc358c1458ce879a$export$7e266f7223b9d396","$bc358c1458ce879a$export$a5639899909bc8ae","$bc358c1458ce879a$export$d7a01e11500dfb6f","$bc358c1458ce879a$export$893b6e865e352c83","$bc358c1458ce879a$export$235cb65c20ad2b7","$bc358c1458ce879a$export$563a914cafbdc389","$bc358c1458ce879a$export$7e714455f9a1f8f7","$bc358c1458ce879a$export$441ad6bfc5db8ab4","$bc358c1458ce879a$export$430969a37eda1e88","$bc358c1458ce879a$export$fd55ce593607084a","$bc358c1458ce879a$export$c5a44649815d1c3","$bc358c1458ce879a$export$8d1af0f7c2a4da9e","$bc358c1458ce879a$export$86f8a8e3a8f2a8f2","$bc358c1458ce879a$export$5a249e8f498c02c1","$039bd5fb8764fbfe$var$kernelRegistry","getGlobal","$039bd5fb8764fbfe$var$gradRegistry","$039bd5fb8764fbfe$export$1b85808c967cc434","$039bd5fb8764fbfe$var$makeKey","$039bd5fb8764fbfe$export$e14995d3ec1747ee","$039bd5fb8764fbfe$export$e4b8d76e176eaecc","it","$2ae5f127bb98b025$export$c106dd0671a0fc2d","$5a3c5c9f68ed8713$export$e2c29f18771995cb","backendTimer","logger","$5a3c5c9f68ed8713$export$efa9a398d6368992","holdResultWrapperFn","dataSync","kernelMs","tensorVals","$5a3c5c9f68ed8713$export$7f6e9a47e989eedc","getExtraProfileInfo","valueContainer","rightPad","paddedName","inputShapesDescription","inputShape","inputRank","$dd100a72926b8548$export$cd3f28d8002ec2a2","$dd100a72926b8548$export$8146d2e653b87d6a","$dd100a72926b8548$export$965adc581230795c","checkConversionForErrors","$dd100a72926b8548$var$noConversionNeeded","bool","$dd100a72926b8548$export$461939dd4422153","$dd100a72926b8548$export$e7aa7bc5c1b3cfb3","requestInits","encoding","encode","$dd100a72926b8548$export$a0fb664af7d0cc44","decode","$5c52588c81de1b96$var$Long","$jRkuS","$5c52588c81de1b96$export$20e49d17901a85a5","fromString","$5c52588c81de1b96$var$k0","$5c52588c81de1b96$var$k1","$5c52588c81de1b96$var$k2","$5c52588c81de1b96$var$shiftMix","shru","$5c52588c81de1b96$var$fetch","fromBytes","$5c52588c81de1b96$var$fetch64","$5c52588c81de1b96$var$fetch32","$5c52588c81de1b96$var$rotate64","shift","or","shl","$5c52588c81de1b96$var$hashLen16","$5c52588c81de1b96$var$weakHashLen32WithSeedsStr","$5c52588c81de1b96$var$weakHashLen32WithSeeds","$5c52588c81de1b96$export$919ee948dc019032","fromNumber","$5c52588c81de1b96$var$hashLen0to16","$5c52588c81de1b96$var$hashLen17to32","$5c52588c81de1b96$var$hashLen33to64","UZERO","last64","and","$e752ddd240bc56a4$var$Long","$e752ddd240bc56a4$var$wasm","WebAssembly","Instance","Module","unsigned","$e752ddd240bc56a4$var$isLong","obj","__isLong__","isLong","$e752ddd240bc56a4$var$INT_CACHE","$e752ddd240bc56a4$var$UINT_CACHE","$e752ddd240bc56a4$var$fromInt","cachedObj","$e752ddd240bc56a4$var$fromBits","$e752ddd240bc56a4$var$fromNumber","$e752ddd240bc56a4$var$UZERO","$e752ddd240bc56a4$var$ZERO","$e752ddd240bc56a4$var$TWO_PWR_64_DBL","$e752ddd240bc56a4$var$MAX_UNSIGNED_VALUE","$e752ddd240bc56a4$var$TWO_PWR_63_DBL","$e752ddd240bc56a4$var$MIN_VALUE","$e752ddd240bc56a4$var$MAX_VALUE","neg","$e752ddd240bc56a4$var$TWO_PWR_32_DBL","lowBits","highBits","fromInt","fromBits","$e752ddd240bc56a4$var$fromString","RangeError","radixToPower","$e752ddd240bc56a4$var$pow_dbl","$e752ddd240bc56a4$var$fromValue","fromValue","$e752ddd240bc56a4$var$TWO_PWR_16_DBL","$e752ddd240bc56a4$var$TWO_PWR_24","ZERO","$e752ddd240bc56a4$var$ONE","ONE","$e752ddd240bc56a4$var$UONE","UONE","$e752ddd240bc56a4$var$NEG_ONE","NEG_ONE","MAX_VALUE","MAX_UNSIGNED_VALUE","MIN_VALUE","$e752ddd240bc56a4$var$LongPrototype","toInt","isZero","isNegative","radixLong","div","rem1","sub","rem","digits","remDiv","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","equals","notEquals","neq","ne","lessThan","lessThanOrEqual","le","greaterThan","$a2478ef20f0a0d93$export$13eebbb952f0db02","tape","tensorsFromX","nodesFromX","nodeInputs","anyInputFromX","tensorsLeadToY","nodesToY","prunedInputs","nodeInput","prunedNode","$a2478ef20f0a0d93$export$2992958ba0a8790d","tensorAccumulatedGradientMap","gradTensor","inputGradients","arraysEqual","curGradient","$14f1421dee031dc6$export$350df26cd52e08e1","getArrayFromDType","computeStrides","locToIndex","locs1","loc","locs2","indexToLoc","toTensor","$14f1421dee031dc6$var$trackerFn","$14f1421dee031dc6$var$opHandler","$14f1421dee031dc6$var$deprecationWarningFn","$14f1421dee031dc6$export$b1e34d2f0ffbbd85","$14f1421dee031dc6$export$ca605c1d8919649f","$14f1421dee031dc6$export$7b6b8d90402f8814","isDisposedInternal","rankType","bufferSync","toNestedArray","arraySync","throwIfDisposed","decodeString","dataToGPU","isDisposed","print","verbose","verbose1","$74bg9","tensorToString","dtype3","hasInstance","$14f1421dee031dc6$export$c867a5c9595a1350","trainable1","tensorId","super","$5251a401ebaa5e52$export$7febe2c78b16daa7","padPerCol","numCols","valuesOrTuples","$5251a401ebaa5e52$var$createComplexTuples","$5251a401ebaa5e52$var$valToString","$5251a401ebaa5e52$var$computeMaxSizePerColumn","valsLines","$5251a401ebaa5e52$var$subTensorToString","lines","valStr","$5251a401ebaa5e52$var$boolNumToString","isLast","storagePerElement","firstValsSize","firstVals","lastVals","subshape","substrides","stride","sep","newLineSep","complexTuples","$32de949336bfd3d9$export$8b0e24c749a224d7","$96sJf","upcastType","$32de949336bfd3d9$export$888c106d343989f5","$32de949336bfd3d9$var$walkTensorContainer","$6a0af58c4d6ff469$export$c36edca8f8f0427a","Rank","$6a0af58c4d6ff469$var$UpcastInt32AndMap","UpcastInt32AndMap","$6a0af58c4d6ff469$var$UpcastBoolAndMap","UpcastBoolAndMap","$6a0af58c4d6ff469$var$UpcastFloat32AndMap","UpcastFloat32AndMap","$6a0af58c4d6ff469$var$UpcastComplex64AndMap","UpcastComplex64AndMap","$6a0af58c4d6ff469$var$upcastTypeMap","float32","int32","complex64","$6a0af58c4d6ff469$export$7bcca02d1a156bdf","typeA","typeB","$6e97aa789913d9aa$export$467a8ad638b9ad20","firstElem","$6e97aa789913d9aa$var$deepAssertShapeConsistency","indices","subShape","$6e97aa789913d9aa$var$assertDtype","expectedDtype","actualDType","argName","functionName","$6e97aa789913d9aa$export$ede379c4c939d71a","parseAsDtype","inferredDtype","inferDtype","inferredShape","toTypedArray","$6e97aa789913d9aa$export$758e66616b4d410b","$92eb3e57a186c3d6$export$f59964a629598e2","opName","$8d8c88c89d24d4f2$export$65df3ad1ad888abb","inferShape","$lRU1B","$feba018e50cd8192$export$f41686c891d7ebce","assertNonNegativeIntegerDimensions","providedSize","inferredSize","inferred","flatDimsDontMatch","$c3a57fd4be123e76$export$8103dee73e5eaa46","float16","uint16","uint8","$d4ecdbf520e63dca$export$a143d493d941bafc","$d4ecdbf520e63dca$export$f99ded8fe4b79145","$d4ecdbf520e63dca$var$customInspectSymbol","$d4ecdbf520e63dca$var$Buffer","$d4ecdbf520e63dca$var$K_MAX_LENGTH","$d4ecdbf520e63dca$var$createBuffer","buf","setPrototypeOf","encodingOrOffset","$d4ecdbf520e63dca$var$allocUnsafe","$d4ecdbf520e63dca$var$from","isEncoding","$d4ecdbf520e63dca$var$byteLength","actual","$d4ecdbf520e63dca$var$fromString","arrayView","$d4ecdbf520e63dca$var$isInstance","$d4ecdbf520e63dca$var$fromArrayBuffer","$d4ecdbf520e63dca$var$fromArrayLike","$d4ecdbf520e63dca$var$fromArrayView","SharedArrayBuffer","$d4ecdbf520e63dca$var$checked","$d4ecdbf520e63dca$var$numberIsNaN","$d4ecdbf520e63dca$var$fromObject","toPrimitive","$d4ecdbf520e63dca$var$assertSize","mustMatch","loweredCase","$d4ecdbf520e63dca$var$utf8ToBytes","$d4ecdbf520e63dca$var$base64ToBytes","$d4ecdbf520e63dca$var$slowToString","$d4ecdbf520e63dca$var$hexSlice","$d4ecdbf520e63dca$var$utf8Slice","$d4ecdbf520e63dca$var$asciiSlice","$d4ecdbf520e63dca$var$latin1Slice","$d4ecdbf520e63dca$var$base64Slice","$d4ecdbf520e63dca$var$utf16leSlice","$d4ecdbf520e63dca$var$swap","$d4ecdbf520e63dca$var$bidirectionalIndexOf","$d4ecdbf520e63dca$var$arrayIndexOf","indexSize","valLength","readUInt16BE","foundIndex","found","$d4ecdbf520e63dca$var$hexWrite","strLen","parsed","substr","$d4ecdbf520e63dca$var$utf8Write","$d4ecdbf520e63dca$var$blitBuffer","$d4ecdbf520e63dca$var$asciiWrite","byteArray","$d4ecdbf520e63dca$var$asciiToBytes","$d4ecdbf520e63dca$var$base64Write","$d4ecdbf520e63dca$var$ucs2Write","units","$d4ecdbf520e63dca$var$utf16leToBytes","$hqZtu","fromByteArray","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","$d4ecdbf520e63dca$var$MAX_ARGUMENTS_LENGTH","fromCharCode","$d4ecdbf520e63dca$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","foo","$d4ecdbf520e63dca$var$typedArraySupport","poolSize","alloc","$d4ecdbf520e63dca$var$alloc","allocUnsafeSlow","_isBuffer","pos","swap16","swap32","swap64","inspect","thisStart","thisEnd","thisCopy","targetCopy","_arr","$d4ecdbf520e63dca$var$hexSliceLookupTable","$d4ecdbf520e63dca$var$checkOffset","ext","$d4ecdbf520e63dca$var$checkInt","$d4ecdbf520e63dca$var$checkIEEE754","$d4ecdbf520e63dca$var$writeFloat","littleEndian","noAssert","$5WQj6","$d4ecdbf520e63dca$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","$d4ecdbf520e63dca$var$INVALID_BASE64_RE","leadSurrogate","toByteArray","$d4ecdbf520e63dca$var$base64clean","src","dst","alphabet","table","i16","$034686670a8a195b$export$d622b2ad8d90c771","$034686670a8a195b$export$6100ba28696e12de","b64","lens","$034686670a8a195b$var$getLens","validLen","placeHoldersLen","$034686670a8a195b$var$Arr","$034686670a8a195b$var$_byteLength","curByte","$034686670a8a195b$var$revLookup","extraBytes","parts","maxChunkLength","len2","$034686670a8a195b$var$encodeChunk","$034686670a8a195b$var$lookup","$034686670a8a195b$var$code","$034686670a8a195b$var$i","$034686670a8a195b$var$len","$454af19f7384844b$export$aafa59e2e03f2942","$454af19f7384844b$export$68d8715fc104d294","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","$c40221bfd295f17f$export$512275d398c0bdcd","saveRouters","loadRouters","static","saveRouter","getInstance","loadRouter","url3","getHandlers","url1","loadOptions2","url2","handlerType","loadOptions1","validHandlers","router","$c40221bfd295f17f$export$94da4683f36f634e","loudRouter","$c40221bfd295f17f$export$8bf64df3d1fb9866","registerLoadRouter","$c40221bfd295f17f$export$88af18fd9ddb62ff","getSaveHandlers","$c40221bfd295f17f$export$90c6c4d24103fa9a","loadOptions","getLoadHandlers","$c1e549811a85b410$export$3df08bb5d0f8b499","DEFAULT_METHOD","weightPathPrefix","onProgress","weightUrlConverter","requestInit","FormData","modelTopologyAndWeightManifest","response","ok","responses","modelConfigRequest","json","weightsManifest1","weightPath","lastSlash","lastSearchParam","$c1e549811a85b410$export$7a5253c0f62e0150","pathPrefix","fetchURLs","urlPromises","weightsGroup","$5uyN5","loadWeightsAsArrayBuffer","$c1e549811a85b410$export$18a721ae4733601b","URL_SCHEME_REGEX","$c1e549811a85b410$export$696b487c8ad531d2","isHTTP","urlItem","$c1e549811a85b410$export$7d6f1c8842f9f527","$c1e549811a85b410$export$624ff5bc4e3a9d72","$3ffabdc8762f6d2a$export$6873c1a1d3325bf7","requests","fetchURL","bufferPromises","$fS2Hs","monitorPromisesProgress","$3ffabdc8762f6d2a$export$55f7d42d35356096","filePathPrefix","weightNames","$3ffabdc8762f6d2a$export$635f986c4ab6ebe2","fetchUrls","fetchWeightsFunction","groupIndicesToFetchMap","groupWeightsToFetch","weightsFound","allManifestWeightNames","manifestGroupConfig","groupIndex","groupOffset","weightsEntry","rawDtype","weightsBytes","enqueueWeightsForFetchingFn","manifestEntry","sizeBytes","weightName","weightIndex","weightsNotFound","groupIndicesToFetch","shouldFetch","filepath","fetchUrl","weightsTensorMap","bufferIndexOffset","numBuffers","groupBytes","groupBuffer","groupByteBuffer","groupBufferOffset","nameToTensorMap","decodeWeights","$b8ddfe52b3b0a85f$export$b88cae388b9e062e","promises1","startFraction1","endFraction1","startFraction","endFraction","resolvedPromise","promise","fraction","$07ad52f22ae875d9$var$PassthroughLoader","modelArtifacts2","$07ad52f22ae875d9$var$PassthroughSaver","saveHandler1","saveHandler","modelArtifacts1","$07ad52f22ae875d9$export$89ba941c7951a2e8","$07ad52f22ae875d9$export$fa4a26428614aae7","$87b701098ee58332$var$URL_SCHEME_SUFFIX","$87b701098ee58332$export$ccf7f72dec8f0028","managers","scheme2","manager1","scheme1","manager","$87b701098ee58332$var$parseURL","getSchemes","scheme","$87b701098ee58332$var$cloneModelInternal","destURL","deleteSource","loadHandlers","loadHandler","saveHandlers","sourceScheme","sourcePath","sameMedium","load","getManager","removeModel","saveResult","$87b701098ee58332$export$8d63af86d795ece4","schemes","schemeOut","listModels","$87b701098ee58332$export$e71037184d1ad0fd","schemeAndPath","$87b701098ee58332$export$b5971478866000ed","$87b701098ee58332$export$598f168272f4fec2","$10a2c248dedb19fa$export$64782a6a7800f48c","getClassName","cls2","$10a2c248dedb19fa$export$3a868b20f0f2f6c0","classNameMap","cls1","getMap","fromConfig","$10a2c248dedb19fa$export$a3f7d716dc76cb2e","$ad28ab947fe7d5ba$export$69ae9293516e70f0","$1qydj","Serializable","minimize","returnCost","varList","computeGradients","gradArray","applyGradients","$eNKAP","iterations_","incrementIterations","varList1","$aW1MU","variableGrads","weightValues","weightValues1","$ac69c8b28b3f0dd9$export$827b61424e8f52d2","$ac69c8b28b3f0dd9$export$b841c6a213a653eb","$ac69c8b28b3f0dd9$export$fcfbbcec2cb820d5","$ac69c8b28b3f0dd9$export$fae3166c418e0471","$ac69c8b28b3f0dd9$export$7953970fabc9c2","$ac69c8b28b3f0dd9$export$32a253b6f8b50fb4","setDeprecationWarningFn","$7f60b533a9929bfe$export$c756d9ed08b9677f","specifiedVarList","specifiedNonTrainable","originalVarCount","namedGrads","$7f60b533a9929bfe$export$5519f0eeb00c44e5","$lKoEM","fft","$B3Po6","ifft","$6gAXf","rfft","$8DkyR","irfft","$4Gm5T","hammingWindow","$lQL3h","hannWindow","$j9KDv","frame","$3nxoO","stft","$70bc1cb115d5f550$export$5c452ff88e35e47d","$kJZDx","flipLeftRight","$ca0bY","grayscaleToRGB","$l4ZLV","resizeNearestNeighbor","$aZzPP","resizeBilinear","$1gbX1","rotateWithOffset","$7RQSb","cropAndResize","$2AI13","nonMaxSuppression","$dM5sR","nonMaxSuppressionAsync","$8q0Fe","nonMaxSuppressionWithScore","$4sNAK","nonMaxSuppressionWithScoreAsync","$cgYLS","nonMaxSuppressionPadded","$1i4dR","nonMaxSuppressionPaddedAsync","$iwpkj","threshold","$alKqq","$70bc1cb115d5f550$export$dbc5be37a4415193","$i67iq","bandPart","$bIcJ1","gramSchmidt","$7AI8H","qr","$31sJR","absoluteDifference","$02FaP","computeWeightedLoss","$l5GYH","cosineDistance","$5KI6U","hingeLoss","$dlR1C","huberLoss","$81S36","logLoss","$cbpdP","meanSquaredError","$52gUl","sigmoidCrossEntropy","$cTc5S","softmaxCrossEntropy","$3mSoN","sparseFillEmptyRows","$ftMdj","sparseReshape","$fEHgt","sparseSegmentMean","$jwBPM","sparseSegmentSum","$3YCQH","stringNGrams","$kAvvU","stringSplit","$cYWOi","stringToHashBucketFast","$c20d81c3fe6b1a12$export$2335f513bbd82c6d","$x","ComplexAbs","Abs","$566c2bbb6a0c54be$export$e16d8520af44a096","$a","$b","makeTypesMatch","$44e8335241e2042c$export$84bf76cd7afc7469","keepDims","All","$177414dbf0ea1431$export$4154a199d7d90455","Any","$ad9e3f88d3176a49$export$7980a683c1b852b4","ArgMax","$b7fbef88129eb845$export$d5c65a2abd3d97dc","$cC2QG","filterSize","dimRoundingMode","$6GR0f","eitherStridesOrDilationsAreOne","x4D","reshapedTo4D","checkPadOnDimRoundingMode","AvgPool","$6FL6O","$4dbb1d42b1b9301b$export$f2db7d5238e1d23f","isValidDtype","$4defc79f04dacec5$export$fdd37387e0a3c672","inShape","filterShape","dilations","roundingMode","depthwise","dataFormat","batchSize","inHeight","inWidth","inChannels","filterHeight","filterWidth","filterChannels","strideHeight","strideWidth","$4defc79f04dacec5$var$parseTupleParam","dilationHeight","dilationWidth","effectiveFilterHeight","$4defc79f04dacec5$var$getEffectiveFilterSize","effectiveFilterWidth","padInfo","outHeight","outWidth","outShape","fieldSize","zeroPad","$4defc79f04dacec5$export$670354fdcb16da70","inputRows","inputCols","outputRows","$4defc79f04dacec5$var$round","outputCols","$4defc79f04dacec5$var$computeOutputShape2D","padAlongHeight","padAlongWidth","$4defc79f04dacec5$var$getPadAndOutInfo","outChannels","dilation","effectiveFieldSize","param","trunc","$4defc79f04dacec5$export$f16174446c2d5b2a","dimA","dimB","dimC","$4defc79f04dacec5$export$1e13dbff91e2f5ca","$4defc79f04dacec5$export$1b3400c26a44af8","opDesc","isInt","$ee1f71b898c4d7a8$export$9eaad88cf88cee2b","Reshape","$d8dd6f6214fa4f98$export$ee1b0efb53eb29c3","x5D","reshapedTo5D","AvgPool3D","$e41eaef7e13b86a9$export$4104d1fc5afa918a","variance","varianceEpsilon","$mean","$variance","$scale","$offset","$hGfK2","batchNorm","$cdf291d5185066a2$export$8ea8088e6d0cdd02","$6NVyz","xAs4D","FusedBatchNorm","$4f43f73505879e6c$export$b76c765a8a7b5836","$abbd4ffed7d308bd$export$76211212fb57f1fa","$c88c6b8fde2fcccb$export$4573a348ef14e569","$5119b15fa6399891$export$fa97baf70ad024c0","clipValueMin","clipValueMax","ClipByValue","$50ee28147c24dc42$export$9cd59f9826255e47","concat_","$tensors","convertToTensorArray","$6WMZ4","Concat","$6867add5c0ca29f8$export$1e0bfb2ad280a475","$78SL8","$def6b757b671c6cd$export$ba044983349051fd","$95349b64d25a7359$export$23e0f187dd67babf","$1745c4e79f8e7213$export$731e01cced6c0a23","$2788b51bd6d9a282$export$d8aa844fa36b350e","$filter","x3D","reshapedTo3D","filter4D","input4D","$8bCtl","conv2d","$5f5d319f9a26ace8$export$188f9215482e3db8","inDepth","Conv2D","$0eb1deb0fdeb18b1$export$d5e924cbc07fb966","outputShape","$1nLFp","conv2DBackpropInput","$101cea1564fe89d3$export$633310eed0c26e72","xShape","xShape4D","dy4D","outDepth","Conv2DBackpropInput","$6aaa811ecd694e5b$export$c476b02bcf7b2def","Conv3D","$801aff7d61af1f0f$export$5eac62031b3f449f","$bU96c","conv3DBackpropInput","$8aabfb843a78436e$export$deb6d1ca1fa2977b","xShape5D","dy5D","Conv3DBackpropInputV2","$f03ff0c9e8c5192d$export$48a8ad9494a8fad8","DepthwiseConv2dNative","$ca7584063b9f7fa7$export$159d9494db57879b","$7KuEq","floorDiv","RealDiv","$5a449aedcd0e24db$export$112397bc52715a8","FloorDiv","$b95df165db5d0584$export$796b583dd79d8524","Elu","$b354ce66b6a0ce58$export$411ce8e5a71e3069","$itgfA","assertAndGetBroadcastShape","Equal","$d7278a67a19ea63b$export$9f11ec258a9b2804","inDim","outAxis","outDim","$d7278a67a19ea63b$export$a3e2a38a57ec8318","$203af151e5136258$export$b310ec824aaee37f","Exp","$d7fe352021a158b8$export$d660d8ed21f46635","dim","ExpandDims","$286075b523037724$export$4e18cf730a59887e","numRows","numColumns","batchShape","buff","$RhBHK","$8ByGX","tile","$ixIZr","expandDims","$0a029bc360c35513$export$ab1029bcae9ddb4a","TensorBuffer","$643cb0889d717811$export$3c17558da18e4d75","reps","Tile","$7fd0bc3a9a94e79c$export$9563e054e6f787fb","Fill","$4856c13e26f1afea$export$a3fe094919f356fd","Floor","$2a3e83c53c51f875$export$9e05546f00427e8","batchDims","GatherV2","$61da596a93b5d334$export$9dca161faaf6308b","Greater","$e2bffbb779f6e552$export$c2fd4164cadc1fa2","GreaterEqual","$aab5c175ff78fc13$export$23a860e40a2c6b61","LeakyRelu","$52cc61c1c291a5fa$export$bef1f36f5486a6a3","Log","$24e349e7ac89dc6f$export$144dcf16adfb9698","Log1p","$5d9823a290c1cee1$export$676379a046a2e437","logits1","$logits","logits","xMax","$AkNLg","shifted","$9lJkO","$76JuA","$7axYW","$2LyLR","softmax","customOp","$06d37fac17ff00b4$export$8960430cfd85939f","reductionIndices","Max","$744ea81b02ef8d15$export$6e3a27864ab166fe","Multiply","$6ce93dbb9104ca41$export$f93b5905241a7cca","Sub","$5383d3b15ebadd9b$export$8a63f25cc62965f1","Sum","$33fb96fd546d51ca$export$db5dd0ef9d505f","LogicalAnd","$6c8c0776826efe55$export$6706882a873e9a8f","transposeA","transposeB","BatchMatMul","$9cd3cf700d8a408d$export$e4aadcf115842782","MaxPool","$0b8425a0cc12a53e$export$822a6e53be1125f9","MaxPool3D","$39404549feee4b28$export$b25e0be55f42c9a","Maximum","$d83868d3ddafe529$export$1ce691f85baaa52","Mean","$221857b9b6b57ae2$export$916782c1f0ddb132","Minimum","$134f336e9bba0417$export$19ef085469537740","parseAxisParam","xMean","$iyW1o","keepDimsShape","$6dI0m","expandShapeToKeepDim","devSquared","$1yEOi","square","$487617675110004f$export$e35db9afe008d7e3","outputLoc","reduceLoc","outIdx","reduceIdx","$487617675110004f$export$6cfee5a53150f612","$12289f779761aaa4$export$dd4f28cef696bc7d","$923f9eacb5318372$export$f4d580f3101a1c7e","numSamples","numOutcomes","origRank","Multinomial","$0b4aa7f3e28509b9$export$d9493ff0dfa0fdd5","Neg","$7fd0c4a74886dfae$export$53a6892c50694894","NotEqual","$e396b8643b7ee85c$export$341b5490a776d041","onValue","offValue","OneHot","$74f83ada324d841a$export$21041dee6b8001b0","$19MpH","zeros","$0d7c2f994bf47ffc$export$4445a00dafa2633b","$7b31402891e3b3f6$export$fb6afd6214fee9e9","OnesLike","$56a84ee8f6353159$export$5d04458e2a6c373e","paddings","constantValue","PadV2","$fe889391fc950c69$export$9c297f60e22e3389","$base","$exp","Pow","$6e0d3f57bd0cebf8$export$5882f235222e6729","Prelu","$0f9364703758afc3$export$a0ac5549a8bec918","stdDev","randGauss","$f3bYI","MPRandGauss","$af506d77ea55b4f6$export$d23b64058df0188a","mean1","stdDeviation","truncated","nextVal","seedValue","$64Sm5","alea","resultX","resultY","isValid","isValidTruncated","convertValue","$af506d77ea55b4f6$export$1e4a6d1367ace404","seed2","canReturnFloat","value3","$6sHKc","$2ZTWb","xor128","$xnasA","xorwow","$huIqu","xorshift7","$jSeQD","xor4096","$cEbON","tychei","$iBJuF","Alea","me","mash","s0","impl","opts","xg","prng","double","quick","XorGen","strseed","seed1","me1","pool","math","nodecrypto","startdenom","significance","overflow","mask","seedrandom","shortseed","mixkey","entropy","tostring","randomBytes","crypto","msCrypto","getRandomValues","plugins","screen","autoseed","arc4","ARC4","prng1","pass","is_math_call","keylen","j1","typ","smear","stringseed","$617a468cd877ba9f$export$e73bb4a504595b05","$617a468cd877ba9f$export$a09d1668dd6f88b6","$617a468cd877ba9f$var$areClose","$50e1981677a50a6f$export$bd6fd37822e292fa","minval","maxval","UniformRandom","$edc43f374158dd02$export$16d1e4612cc0139f","Relu","$6e87387564de3155$export$66c1ae025e96b4bc","dims","Reverse","$b7c1ab67e9e91b8d$export$7de3fcd3cdba2a46","$d97901119e9dd2a7$export$a5f8240d9e99b438","Selu","$0bbef5501129d143$export$2586c92899c2d0fb","depthwiseFilter","pointwiseFilter","$depthwiseFilter","$pointwiseFilter","channelMultiplier","$kCQjR","depthwiseConv2d","$3ed119cda29cf8f3$export$3b295495ca3cad7c","Sigmoid","$92b6d53ed665860e$export$58adb3bec8346d0f","begin","Slice","$f3364c6ead8f718b$export$95433662b275eb82","$cAXhC","$bb7c4711b11b3b85$export$e5c6a6611cb43a9d","$5c5fcd255d27f5fe$export$dec56af20749d733","$7ee820123bd41a25$export$9833e35e879da26c","$60c40ee726d51f71$export$e008137e76238601","Softmax","$cc931ebea6cbb217$export$76aa560a8c2b0055","Softplus","$0415f3b25361a619$export$a535ef183b6128fa","FFT","$06f66cf1a4abe7e6$export$776649b0bf8ce1fd","IFFT","$019f41b6f522679d$export$f47f4e5bcd3d6a66","innerDimensionSize","batch","complexInput","realInput","$feRUg","imagInput","$cfL0l","realConjugate","$9ul1h","imagConjugate","$024d582493d9cd81$export$d78fab5778ab392b","Imag","$b181fa82425e0ac1$export$9fc57fb453bdbd67","Real","$4900e719d3c4173e$export$72aff1768917e9e5","fftLength","adjustedInput","zerosShape","zerosInput","$87nCE","zerosLike","half","realValues","imagValues","realComplexConjugate","$9M5hb","imagComplexConjugate","$71dcb082abfc02f4$export$65980d18b75784e2","numOrSizeSplits","SplitV","$5e914d12b0a3673d$export$cb1f824e7733584d","ZerosLike","$0233c512170ca15f$export$eba8049fb5020b81","Sqrt","$f4aaa25f9f1cc81d$export$889c931173b77c2f","squeezeShape","$02fa25ec0c8b4bd2$export$a57ab32f40f83ea9","Pack","$4e124a5557daa2c9$export$7128670e45beef9a","Tanh","$05b8008bbfec6b25$export$8133e3bf3cd8f464","assertNonNull","$3f0f101519a7de71$export$8ad5625727f3fa1d","$83cc90925e153710$export$3c05285afa115eec","Unpack","$b6141a35c9f0aa9e$export$3a9d57cefcd2c285","$cb85a6ccaeb1d1eb$export$9c59b80dda569a6e","condition","$condition","broadcastShape","$llKou","broadcastTo","Select","$f8af8c02b01737d9$export$ec9086aff2624eab","$572ce710ebe447e5$export$9cb09a71b7d66923","perm","Transpose","$f9953c9eac582191$export$fe05aa12367b4e47","rate","noiseShape","$noiseShape","$imA09","getNoiseShape","keepProb","$hnGsb","$6d3BH","$7q1yJ","$6WwMZ","randomUniform","$d5e6353995dbda1a$export$5cc59b1f6d856c8e","newDimension","$5dabd484d75d5fef$export$188f9215482e3db8","filter1","bias1","activation","preluActivationWeights","leakyreluAlpha","$aw5qx","shouldFuse","applyActivation","$filter1","x4D1","convInfo","computeConv2DInfo","$bias1","$preluActivationWeights","$bias","dyActivation","getFusedDyActivation","tupleValuesAreOne","der","$fRL20","conv2DBackpropFilter","biasDer","getFusedBiasGradient","FusedConv2D","customOpWithBias","$02fb19f68181f5f6$export$652a30c9379f3de7","Conv2DBackpropFilter","$7a811a40f84c08bd$export$a1905aed55f51aef","$k8DKe","$7a811a40f84c08bd$export$1a797e236ae09d1f","reduceAxes","getReductionAxes","$7a811a40f84c08bd$export$a0f250a2ba84196","$kpCOf","relu","$fUHEb","elu","$caRWm","relu6","$9rNMe","prelu","$eEGu2","leakyRelu","$5on5j","sigmoid","$7a811a40f84c08bd$export$4904add493b957ab","$8dd042a1217871f0$export$4a62bcb95e9c44c4","Relu6","$ea936278a9478d9d$export$35d34bc0ed591a92","Step","$5e8b97a3f768568c$export$48a8ad9494a8fad8","xDer","$8xwZN","depthwiseConv2dNativeBackpropInput","filterDer","$iPlSi","depthwiseConv2dNativeBackpropFilter","FusedDepthwiseConv2D","$db4df5443fd0d92c$export$cc0ae65e9edc7e1a","DepthwiseConv2dNativeBackpropFilter","$637b000de45925f3$export$37e2ab95a4a4c24b","DepthwiseConv2dNativeBackpropInput","$c34e32c55ca82932$export$6706882a873e9a8f","$9jNaz","matMul","innerShapeA","innerShapeB","outerShapeA","outerShapeB","outerDimsA","outerDimsB","batchDimA","batchDimB","a3D1","b3D1","a3D","b3D","aDer","bDer","_FusedMatMul","$368c3911524050a1$export$941eafcc99b559fa","windowLength","$42DA1","cosineWindow","$2f160d163efd513d$export$6fc2fe3b19043bf3","$2f160d163efd513d$export$e875398ce092ee45","even","newValues","cosArg","$urkuT","tensor1d","$fe82f3d857cc0e78$export$f498cfeee84e5e59","$df230894cf291cbd$export$2cef06c20297c17d","signal","frameLength","frameStep","padValue","padLen","$aYmd1","$7xcpg","tensor2d","$57c53d25da67b104$export$b5469a65e8732256","$275d6d7b409cadce$export$eb1cf9b274257b4a","windowFn","enclosingPowerOfTwo","framedSignal","windowedSignal","$5ba67f1dcf2e40fc$export$6f0f0090e1f6cd3c","boxes","boxInd","cropSize","extrapolationValue","$image","$boxes","$boxInd","numBoxes","CropAndResize","$f197d25c3d1b4b3f$export$8358b9c43b687b22","FlipLeftRight","$8da6915e05cba13c$export$f68e334bfd7e4be6","lastDimsIdx","lastDims","$0eb08e4a1c198cb2$export$66462c489f5f29d2","radians","fillValue","center","RotateWithOffset","$1e311637a1b9bbbd$export$b7d265b19ca1d628","scores","maxOutputSize","iouThreshold","scoreThreshold","NEGATIVE_INFINITY","$scores","$8MUE6","nonMaxSuppSanityCheck","NonMaxSuppressionV3","$665ebf1bdfa8033d$export$ccf61bcb3b4e6ac6","softNmsSigma","$a073ff302f32e10f$export$cc6d94dffac2ee1a","boxesAndScores","boxesVals","scoresVals","selectedIndices","$lfmuZ","nonMaxSuppressionV3Impl","$f77c73808a4a1a36$export$89e22275998c2878","$f77c73808a4a1a36$var$nonMaxSuppressionImpl_","$f77c73808a4a1a36$export$697e7a8cdfefe3a","padToMaxOutputSize","$f77c73808a4a1a36$export$4ff849794bce73c5","returnScoresTensor","returnValidOutputs","candidates","boxIndex","suppressBeginIndex","$f77c73808a4a1a36$var$ascendingComparator","selectedScores","candidate","originalScore","ignoreCandidate","iou","$f77c73808a4a1a36$var$intersectionOverUnion","$f77c73808a4a1a36$var$suppressWeight","$4nTcF","binaryInsert","validOutputs","elemsToPad","iCoord","jCoord","yminI","xminI","ymaxI","xmaxI","yminJ","xminJ","ymaxJ","xmaxJ","areaI","areaJ","intersectionYmin","intersectionXmin","intersectionYmax","intersectionXmax","intersectionArea","$331421a2e304550b$export$a64fad5e27f22af5","element","compareResult","$331421a2e304550b$var$binarySearch_","$331421a2e304550b$var$defaultComparator","$331421a2e304550b$export$2e0ae67339d5f1ac","insertionPoint","$621144464b2cc120$export$d65fe1460f8c5b4e","NonMaxSuppressionV5","$34003ed62e716da7$export$d1826570c883f7cf","nonMaxSuppressionV5Impl","$8ef61e93780b58ee$export$d8d10e31c41c95dc","NonMaxSuppressionV4","$0f0abf69717b0c53$export$4c5691f9710b88a8","$maxOutputSize","$iouThreshold","$scoreThreshold","nonMaxSuppressionV4Impl","$800b65fa4efd0dea$export$1f1cbc7da93d06a0","images","alignCorners","halfPixelCenters","$images","batchImages","ResizeBilinear","$f589e34d9ca38e79$export$74a902ae74ac2560","ResizeNearestNeighbor","$d7bedc8131e87cb5$export$454d09aca5f3ea63","inverted","threshValue","totalPixelsInImage","grayscale","$threshold","$r","$g","histogram","total","classFirst","classSecond","meanFirst","meanSec","weightForeground","weightBack","bestThresh","bestInBetVar","cInBetVar","meanFirstDivA","$hZVaA","meanSecFill","meanSecAdd","meanSecMul","cInBetVarSubA","cInBetVarSubB","cInBetVarMul","$8oRRN","greater","$htlhp","where","$d7bedc8131e87cb5$var$otsu","$eEn0Q","bincount","$9UwpP","invCondition","$lEbp8","lessEqual","$aaa6a6f33002b7af$export$7e474bab088ed182","$weights","Bincount","$fc262e12ae7f50c7$export$c24ad19a692bb92","LessEqual","$73727d161f644ca8$export$2077e0241d6afd3c","Round","$d1a47adf16bee3d2$export$d02631cccf789723","Range","$788fe0a678638ac5$export$51186ad6e864892a","interpolation","fillMode","$transforms","Transform","$d2ce72661465cfdc$export$8a3da9cb9e5610a0","numLower","numUpper","ij","inBand","$4sHAD","logicalAnd","$jsZ2J","greaterEqual","$fQwPY","$bjyVL","unstack","mat","$886dacbb68f654af$export$d505610386a600de","inputIsTensor2D","$l0lXK","squeeze","ys","xs1d","proj","$6AYSu","norm","$4cd553f5e41ccf2a$var$normImpl","$gEWaN","$hoFPz","$bIMTg","$lQSiN","$4cd553f5e41ccf2a$export$1991ecd29cc92c6b","ord","$caa5204e7a8a90e4$export$96ec731ed4dcb222","Min","$586e225c4435727c$var$qr2d","fullMatrices","$3sVkG","eye","one2D","iters","rTemp","wTemp","qTemp","rjEnd1","normX","rjj","u1","wPre","tau","$Y6vPQ","rjEndAll","tauTimesW","wT","$7u21m","rTimesTau","tawTimesWT","qAllJEnd","qTimesTau","$586e225c4435727c$export$7c27fb47516129d9","outerDimsProd","x2ds","q2ds","r2ds","x2d","q2d","r2d","$2337c1fe543af996$export$d81f35aebafd8971","labels","predictions","reduction","$j37hX","Reduction","SUM_BY_NONZERO_WEIGHTS","$labels","$predictions","losses","$dde3f37af96ff7d8$export$cc9fa7113d70efba","$0080204409bbad82$export$23bdc4cea2e28782","$losses","weightedLoss","NONE","SUM","MEAN","broadcastFactor","broadcastedWeights","$a2CR0","ones","numNonZeros","$aYmfE","notEqual","$f5ab671f96f29738$export$6168ae03858f836b","one","$4303770af59d74f9$export$fc7754731492f43f","$9b865e3351840997$export$ad2dd557b367bf2b","deltaScalar","quadratic","$2Vudo","minimum","linear","$5d8857b74ab49ac4$export$5ca6937b99935214","epsilonScalar","l1","$8dea13b5d953b4bc$export$33de16355e97f7fb","$jmrau","squaredDifference","$e185256c6a314546$export$b178697fb6d0b37f","SquaredDifference","$3aaa41332a33b0c7$export$d099e04c73e0aede","multiClassLabels","labelSmoothing","$multiClassLabels","labelSmoothingScalar","maxOutput","outputXTarget","sigmoidOutput","$3alTt","$3aaa41332a33b0c7$var$sigmoidCrossEntropyWithLogits_","$962400ab2945076c$export$38869aa02829577","onehotLabels","$onehotLabels","numClasses","labels1","labels2","lse","$5rxJY","logSumExp","logResult1","costVector","logResult","dyShape","$962400ab2945076c$var$softmaxCrossEntropyWithLogits_","$3f69a58c961cf95c$export$e20aca1e89397787","sparseFillEmptyRows_","denseShape","$indices","$values","$denseShape","$defaultValue","SparseFillEmptyRows","outputIndices","outputValues","emptyRowIndicator","reverseIndexMap","sparseReshape_","inputIndices","$inputIndices","$inputShape","$newShape","SparseReshape","$b65c26e838a5874b$export$dbc0c9096869d04e","segmentIds","$data","$segmentIds","SparseSegmentMean","$e36e5a9327320167$export$2255ce53fc777865","SparseSegmentSum","$2e551c4d067993b2$export$3490514dcc63b044","dataSplits","nGramWidths","leftPad","padWidth","preserveShortSequences","$dataSplits","StringNGrams","nGrams","nGramsSplits","$efcf9d65b1675e85$export$aa7f8babb17e7672","delimiter","skipEmpty","$input","$delimiter","StringSplit","$9738b5201701214e$export$6195616d6fd0c848","numBuckets","StringToHashBucketFast","$a377799fa5819f58$export$9af937cf8bcbf96","sgd","$lLq81","OptimizerConstructors","momentum","adadelta","adagrad","rmsprop","adamax","adam","$fd824153797d80c8$export$1babc3d7b10c0cf6","learningRate","$3DCht","SGDOptimizer","learningRate1","useNesterov","$gAnrT","MomentumOptimizer","learningRate2","decay","momentum1","centered","$bPyqF","RMSPropOptimizer","learningRate3","beta1","beta2","epsilon1","$bmXOB","AdamOptimizer","learningRate4","rho","epsilon2","$bniB7","AdadeltaOptimizer","learningRate5","beta11","beta21","epsilon3","decay1","$lIZNx","AdamaxOptimizer","learningRate6","initialAccumulatorValue","$aV1B9","AdagradOptimizer","$848044c943015b2c$export$d80a766c536c9aaf","$eRIFX","Optimizer","accumulatedGrads","accumulatedUpdates","variableGradients","originalName","accumulatedGrad","accumulatedUpdate","newAccumulatedGrad","updates","newAccumulatedUpdate","variables","saveIterations","variableCount","extractIterations","getConfig","registerClass","$7f30779e0df70cd3$export$fa35e48f6f1caa57","$847025cf10eb0bc4$export$de1938eb5fee8ee2","accumulatedFirstMoment","accumulatedSecondMoment","accBeta1","accBeta2","varNames","oneMinusAccBeta1","oneMinusAccBeta2","firstMoment","secondMoment","newFirstMoment","newSecondMoment","biasCorrectedFirstMoment","biasCorrectedSecondMoment","$fd0da4d93d3c3de1$export$69957d0bff775eb6","accumulatedWeightedInfNorm","iteration","variableNames","lr","weightedInfNorm","ut0","ut1","newWeightedInfNorm","$4UKfK","maximum","$c132329d28d90058$export$1db7ecf1f8312c6","accumulations","accumulation","newAccumulation","setMomentum","$2a62b56a7d7ba35f$export$97318dd520e1bd4f","setLearningRate","$89cf2a0aa2c3dc56$export$6e668138ce08e3bf","accumulatedMeanSquares","accumulatedMoments","accumulatedMeanGrads","accumulatedMeanSquare","newAccumulatedMeanSquare","accumulatedMeanGrad","newAccumulatedMeanGrad","gradContribution","newAccumulatedMoments","$e099c73bf21e2a68$var$delayCallback","setImmediate","$e099c73bf21e2a68$export$68d2d147c928d1dd","$a4c25d1f9548a957$var$calcL2Norms","$a4c25d1f9548a957$export$aec1359a0a40a615","$a4c25d1f9548a957$export$9bae576b4abeeb5b","defaultMaxValue","defaultAxis","maxValue","norms","desired","$6XH6Q","clipByValue","$ec1Y9","$a4c25d1f9548a957$export$d308398b296446e8","args1","w1","$a4c25d1f9548a957$export$e401f85674f409b","w2","$a4c25d1f9548a957$export$b6619aa7a63dac34","args2","defaultMinValue","defaultRate","minValue","w3","$a4c25d1f9548a957$export$78360a76bbd2e9aa","maxNorm","minMaxNorm","nonNeg","unitNorm","$a4c25d1f9548a957$export$e449710617725987","constraint","$aqUQ9","serializeKerasObject","$a4c25d1f9548a957$export$20c8aa8a8b337f29","customObjects","deserializeKerasObject","SerializationMap","$a4c25d1f9548a957$export$492f40394cb58978","$a553b6bd28af5a99$var$_epsilon","$a553b6bd28af5a99$export$6c421550c66a327d","$a553b6bd28af5a99$export$9cb785636e5e0d8","$79886c5635642052$export$f24d1f1e6cb42785","numValues","newArray","$79886c5635642052$export$a7a9523472993e97","$g3gMx","AssertionError","$79886c5635642052$export$85b9a36db797e02b","refernce","$79886c5635642052$export$8366660815493a21","$79886c5635642052$export$effcdbd76139450","$79886c5635642052$export$cc8b315fc368b20a","insecure","$79886c5635642052$export$86f54f62aa7a7514","p1","$79886c5635642052$var$_GLOBAL_CUSTOM_OBJECTS","$79886c5635642052$export$78f846918d17a884","dict","$79886c5635642052$var$convertNDArrayScalarsInConfig","configItem","fields","$79886c5635642052$export$c33061eb381c60f9","moduleObjects","printableModuleName","fastWeightInit","ValueError","customObjectsCombined","backupCustomObjects","returnObj","$79886c5635642052$export$964007bb9b7e1f75","$79886c5635642052$export$d40c4ae552b5068b","$79886c5635642052$export$7a5d5c156e7dc406","$79886c5635642052$export$23cfe696632d10f4","$79886c5635642052$export$f49e87e6cde0274b","label","$79886c5635642052$export$9c1c2eaf0ddbb1d3","minLength","$79886c5635642052$export$7ac3b6580cbed983","$79886c5635642052$export$7a0c59ae8d81831f","$79886c5635642052$export$61fc7d43ac8f84b0","waitMs","nowFunc","lastResult","lastTime","$79886c5635642052$export$aa3e0e68e0c6329f","activationName","$baf9f1b39cdbca4d$export$3869bf0637a5d0ff","$baf9f1b39cdbca4d$export$4a24a86bdbcf02bb","message1","$baf9f1b39cdbca4d$export$54d4c18dc78a26d4","message2","$baf9f1b39cdbca4d$export$e162153238934121","message3","$baf9f1b39cdbca4d$export$7750cdfb4db2c3d","message4","$5bdd8f5aebf3e957$export$9e14a7677ef1423c","fromConfigUsesCustomObjects","$5bdd8f5aebf3e957$export$7a572cb9dc6aa81b","shape7","$5bdd8f5aebf3e957$export$30750dcb47d2f6b","$5bdd8f5aebf3e957$export$3c508fb3f8ac1ad4","$5bdd8f5aebf3e957$export$29e2b6f5e4b82e2f","DEFAULT_MINVAL","DEFAULT_MAXVAL","shape3","$5bdd8f5aebf3e957$export$66e863738cfcc40","DEFAULT_MEAN","DEFAULT_STDDEV","stddev","shape4","dtype4","NotImplementedError","$45V5h","randomNormal","$5bdd8f5aebf3e957$export$5f0e8a39027050d5","args3","shape5","dtype5","$5pEXO","truncatedNormal","$5bdd8f5aebf3e957$export$544bf02140fa9a77","args4","gain","shape6","dtype6","$5bdd8f5aebf3e957$export$c2ba607ca0c6b5b3","args5","checkStringTypeUnionValue","$9Tn8z","VALID_FAN_MODE_VALUES","distribution","VALID_DISTRIBUTION_VALUES","$5bdd8f5aebf3e957$export$46d720aa775f5a50","dtype7","fans","fanIn","fanOut","$6sP0B","checkDataFormat","receptiveFieldSize","$bipcY","arrayProd","$5bdd8f5aebf3e957$var$computeFans","$5bdd8f5aebf3e957$export$c820ee55503e6df3","args6","$5bdd8f5aebf3e957$export$dcc636dfa962cdc9","args7","$5bdd8f5aebf3e957$export$399f315e5cbd5eed","args8","$5bdd8f5aebf3e957$export$4799f50fbef71375","args9","$5bdd8f5aebf3e957$export$f0843b4cb97b93f5","args10","$5bdd8f5aebf3e957$export$41b487c9c7cedfae","args11","$5bdd8f5aebf3e957$export$7d101801017ddeaf","args12","DEFAULT_GAIN","shape8","dtype8","normalizedShape","$9G5fP","linalg","$5bdd8f5aebf3e957$export$10005499b3b3c1de","glorotNormal","glorotUniform","heNormal","heUniform","leCunNormal","leCunUniform","orthogonal","varianceScaling","$5bdd8f5aebf3e957$var$deserializeInitializer","$5bdd8f5aebf3e957$export$68de06a18c23bdbc","$5bdd8f5aebf3e957$export$558b7d1a338df84b","$2fb3e8ce0b79a35c$export$f2db7d5238e1d23f","$2fb3e8ce0b79a35c$export$d660d8ed21f46635","$2fb3e8ce0b79a35c$export$76d90c956114f2c2","$2fb3e8ce0b79a35c$export$3c17558da18e4d75","$2fb3e8ce0b79a35c$export$bffa455ba8c619a6","$2fb3e8ce0b79a35c$export$6d182438241cb7ab","$2fb3e8ce0b79a35c$export$4f266636a9634575","$kSBXL","slice1d","$g5YNO","slice2d","$7VHLc","slice3d","$aTwl0","slice4d","$2fb3e8ce0b79a35c$export$7eb01d0ca77de013","$2fb3e8ce0b79a35c$export$4f25f657b7083746","$2fb3e8ce0b79a35c$export$375c71d43969527d","$2fb3e8ce0b79a35c$export$2c8a4d3eab2092a2","$8XKd6","concat1d","$j8Pvk","concat2d","$cOdtv","concat3d","$1ZSvu","concat4d","$2fb3e8ce0b79a35c$export$a0ac5549a8bec918","$1kUnz","$2fb3e8ce0b79a35c$export$94132a0e348806d4","$lEi3E","$2fb3e8ce0b79a35c$var$reshapeBias","imageDataFormat","aFirstDims","aLastDim","bShape","bLastDim","ySecondLastDim","yOtherDims","$2fb3e8ce0b79a35c$export$9e05546f00427e8","$3CRCA","gather","$2fb3e8ce0b79a35c$export$dd4f28cef696bc7d","xRank","biasShape","$2fb3e8ce0b79a35c$export$917ce53bce63bd4b","$2fb3e8ce0b79a35c$export$796b583dd79d8524","$2fb3e8ce0b79a35c$export$6def925d7f33a45c","$2fb3e8ce0b79a35c$export$fe05aa12367b4e47","level","$lqwv6","dropout","$2fb3e8ce0b79a35c$export$150f2d52960480ef","$2fb3e8ce0b79a35c$export$5a6eea8e1dcefeb7","alt","training","$4b4cece17e82dba5$var$nameMap","$4b4cece17e82dba5$export$f5f6472a2b993816","$4yeki","VALID_DATA_FORMAT_VALUES","$4b4cece17e82dba5$export$2c8c51ca0cb16cd2","VALID_INTERPOLATION_FORMAT_VALUES","$4b4cece17e82dba5$export$a6c1e84f1d33d64d","VALID_PADDING_MODE_VALUES","$4b4cece17e82dba5$export$4ac7885ddd005702","VALID_POOL_MODE_VALUES","$4b4cece17e82dba5$var$_nameScopeStack","$4b4cece17e82dba5$export$e820b4f57a8e33d1","$4b4cece17e82dba5$export$ff30fd7baa750729","tensorName","$4b4cece17e82dba5$export$f372abc09dacf0d5","$4b4cece17e82dba5$export$9227bff0c10d827e","scopedName","$4b4cece17e82dba5$var$tensorNameRegex","$35057352314fff90$export$57a9e614626b5380","$35057352314fff90$export$b8823bf7d44e4d59","$35057352314fff90$export$48aea51acf1bce87","$35057352314fff90$export$f450a7a6767a84d4","$35057352314fff90$export$954d8bae11304008","$8394edfd68b9f1b0$export$a287f47fed4544b8","$8394edfd68b9f1b0$export$3b5d61e59fec5e86","prod","$8394edfd68b9f1b0$export$96ec731ed4dcb222","POSITIVE_INFINITY","$8394edfd68b9f1b0$export$8960430cfd85939f","$8394edfd68b9f1b0$export$d02631cccf789723","$733b32afc233d0d7$export$6f4ea9ac290c463f","$733b32afc233d0d7$export$a0651197744e50ce","$bc6cdd9daec98d1c$export$191123fdb608c9b4","$llsdp","Layer","$4fji5","getUid","sparse","built","batchInputShape","inputSpec","inputTensor","SymbolicTensor","nodeIndex","tensorIndex","Node","outboundLayer","inboundLayers","nodeIndices","tensorIndices","inputTensors","outputTensors","inputMasks","outputMasks","kwargs","refCountAfterDispose","_refCount","numDisposedVariables","$bc6cdd9daec98d1c$export$f5b8910cec6cf069","inboundNodes","$317786dadfc614c3$var$_nextUniqueTensorId","$317786dadfc614c3$export$b7ad53ecc0eccaf","$317786dadfc614c3$var$_uidPrefixes","$317786dadfc614c3$export$5e82334337e0f204","$f8a1721c32954a41$export$7705ee67def9d40a","ndim","maxNDim","minNDim","$f8a1721c32954a41$export$c6d6977640680568","sourceLayer","callArgs","outputTensorIndex","getNextUniqueTensorId","getScopedTensorName","getUniqueTensorName","$f8a1721c32954a41$var$_nextNodeID","$f8a1721c32954a41$export$85c928794f8d04d4","callArgs1","layer","outboundNodes","inboundNames","$f8a1721c32954a41$var$_nextLayerID","$f8a1721c32954a41$export$936d0764594b6eb3","_callHook","_addedWeightNames","_stateful","activityRegularizer","supportsMasking","_trainableWeights","_nonTrainableWeights","_losses","_updates","_built","toSnakeCase","trainable_","inputDType","initialWeights","fastWeightInitDuringBuild","layer1","nodeIndex4","getNodeAtIndex","nodeIndex1","attrName","RuntimeError","getInputAt","nodeIndex2","singletonOrArray","getOutputAt","nodeIndex3","AttributeError","calculateLosses","lossFn","trainableWeights","nonTrainableWeights","weights1","stateful","resetStates","assertInputCompatibility","toList","inputIndex","xShapeAtAxis","specDim","invokeCallHook","kwargs1","setCallHook","clearCallHook","inputs4","kwargs2","assertNotDisposed","inputsList","allAreSymbolic","noneAreSymbolic","input1","nameScope","xElem","build","setWeights","outputList","outputListCopy","shapes","$f8a1721c32954a41$var$collectInputShape","computeOutputShape","outputDType","warnOnIncompatibleInputShape","addInboundNode","dimMismatch","dimension","allOutputShapes","shapeString","countParams","$aOkdG","countParamsInWeights","inputShape1","getWeights","trainableOnly","$7prb5","batchGetValue","weights2","weightValueTuples","paramValues","pv","batchSetValue","addWeight","regularizer","getInitializerFunc","$7SZRh","getInitializer","initValue","LayerVariable","addLoss","setFastWeightInitDuringBuild","inputShape2","computeMask","inputs5","maskElement","inputTensors1","kwargs3","inputTensorList","$kePH7","normalizeShapeList","disposeWeights","$f8a1721c32954a41$export$6d61b4ed0b6fb596","sourceTensors","previousSources","$ebbd36eab6f85273$export$3297ca286d903db0","$ebbd36eab6f85273$export$4cdd3da5579ac4c4","$ebbd36eab6f85273$export$5327fe015af69a7b","$ebbd36eab6f85273$export$25c35af872e8abca","$0207f8ced9c10704$export$2a41d41251f01d03","$564ff3290bb3d449$var$DEFAULT_VARIABLE_NAME_PREFIX","$564ff3290bb3d449$export$25de78a5a5bf7257","constraint1","$fDcnH","$564ff3290bb3d449$var$checkShapesMatch","$564ff3290bb3d449$export$3702262f615cc9f0","$564ff3290bb3d449$export$6b1a34257a4982e4","variablesAndValues","variableAndValue","$dc58ba46e9291bef$export$f379ad49c680b84a","pathOrIOHandler","$j6fX5","loadLayersModelInternal","$f23be1808d482ed6$export$7770e64db700cbdd","ModelLoggingVerbosity","$f23be1808d482ed6$export$ac023a7995700a90","validationData","setParams","epoch","epoch1","logs1","logs2","batch1","logs3","logs4","logs5","setModel","$f23be1808d482ed6$export$435cb83c816395fd","callbacks1","queueLength","callbacks","params1","model1","epoch2","logs6","onEpochBegin","epoch3","logs7","onEpochEnd","batch2","logs8","onBatchBegin","batch3","logs9","onBatchEnd","logs10","onTrainBegin","logs11","onTrainEnd","$f23be1808d482ed6$export$bf796c2da54a4a40","epoch4","totals","batch4","logs12","oldTotalsToDispose","epoch5","logs13","$f23be1808d482ed6$export$84202caead5689ba","logs14","history","epoch6","logs15","valueArray","valueScalar","$f23be1808d482ed6$export$5682c09493042ec8","yieldEvery1","currentEpoch","nextFrameFunc","$jhxK2","nextFrame","yieldEvery","onYield","maybeWait","trainBegin","trainEnd","epochBegin","epochEnd","batchBegin","batchEnd","yield","epoch7","batch5","logs16","ps","$9Cxlq","resolveScalarsInLogs","epoch8","logs17","epoch9","logs18","batch6","logs19","batch7","logs20","logs21","logs22","$f23be1808d482ed6$export$8ea03bd28ba7b2ff","callbackConfig","$f23be1808d482ed6$export$3b4f51c3fa9f338c","verbosityLevel","callbackConstructor","checkForDuplicate","constructors","callbackConstructor1","levelName","verbosityLevel1","$f23be1808d482ed6$export$18b2cd3db6266dd9","epochs","initialEpoch","numTrainSamples","stepsPerEpoch","doValidation","callbackMetrics","actualCallbacks","createCallbacks","callbackList","samples","steps","metrics","$7011872f615c09d1$export$edec74c62c989297","scalarsToDispose","$7011872f615c09d1$export$f4920d82017cd044","$fa7f781fae5675b5$export$d011a650f00557e2","$fa7f781fae5675b5$export$6af9d9020dbc362d","$fa7f781fae5675b5$export$73ccac4188109750","$fa7f781fae5675b5$export$69dd7486f5c87261","checkBatchAxis","exceptionPrefix","gotUnexpectedData","$7Ewy4","ensureTensorsRank2OrHigher","refDim","$fa7f781fae5675b5$var$checkInputData","$fa7f781fae5675b5$export$f8e130845653852b","$eNzvc","Container","isTraining","summary","lineLength","positions","printFn","$1lAFK","printSummary","compile","loss","optimizer","optimizer_","$bG6n9","getOptimizer","isOptimizerOwned","lossFunctions","theLosses","$5AEP9","lossFunction","outputNames","feedOutputNames","feedOutputShapes","feedLossFns","internalOutputShapes","skipTargetIndices","metricsNames","metricsTensors","nestedMetrics","wrappedMetrics","outputMetrics","$fa7f781fae5675b5$export$f17c6a7c45a213ae","appendMetric","outputIndex","metricName","metricTensor","accFn","weightedMetricFn","metric","binaryCrossentropy","$fdhF1","binaryAccuracy","sparseCategoricalCrossentropy","sparseCategoricalAccuracy","categoricalAccuracy","categoricalCrossentropy","metricFn","getLossOrMetricName","metricResult","handleMetrics","collectedTrainableWeights","checkTrainableWeightsConsistency","checkBatchSize","standardizedOuts","standardizeUserDataXY","ins","makeTestFunction","testFunction","testOuts","testLoop","disposeNewTensors","dataset","$5SQMw","evaluateDataset","checkNumSamples","stepsName","execute","outputsIsArray","outputSymbolicTensors","retrieveSymbolicTensors","feedDict","$3gTWy","FeedDict","tensorValue","executeOutputs","symbolicTensorNames","pyListRepeat","outputsRemaining","layers","layerOutputs","layerOutputNames","remainingNames","predictLoop","ins1","batchSize1","batches1","makeBatches","outsBatches","batchIndex","batchStart","insBatch","sliceArrays","feeds","batchOut","batches","xsRank2OrHigher","inputNames","feedInputShapes","predictOnBatch","batchSize2","targets","setX","unique","setY","$fa7f781fae5675b5$export$4b125fd48a812392","feedInputNames","lossFns","keyLosses","slicedYShape","slicedShape","targetDim","$fa7f781fae5675b5$var$checkLossAndTargetCompatibility","x4","sampleWeight","classWeight","checkBatchAxis1","batchSize3","standardXs","standardYs","standardSampleWeights","classWeights","$70jPE","standardizeClassWeights","standardizeWeights","ins2","batchSize4","steps1","indexArray","batchIds","sliceAlongFirstAxis","sliceArraysByIndices","batchOuts","getDedupedMetricsNames","outLabels","dedupedOutLabels","newLabel","makeTrainFunction","lossValues","sampleWeights","metricsValues","totalLoss","meanLoss","weightedMetric","regularizerLoss","valOutputs","i5","i6","meanMetric","x5","fitTensors","dataset1","fitDataset","x6","y4","standardizeOut","standardizeUserData","trainFunction","getNamedWeights","namedWeights","stopTraining","stopTraining_","numTensorsBeforeOptmizerDisposal","getLossIdentifiers","lossNames","outputName","getMetricIdentifiers","metricsIdentifiers","getTrainingConfig","optimizer_config","class_name","loadTrainingConfig","weighted_metrics","loss_weights","sample_weight_mode","tsConfig","$6taVq","convertPythonicToTs","$03VyO","deserialize","toCamelCase","lossEntry","handlerOrURL","config1","handlers","$aQ6G8","weightDataAndSpecs","encodeWeights","$5N7bR","includeOptimizer","weightType","optimizerWeightData","optimizerWeightSpecs","checkSize","$lqqXR","checkUserDefinedMetadata","setUserDefinedMetadata","getUserDefinedMetadata","$fa7f781fae5675b5$export$ab287cb77f6ba7e","$00bcee3e5b96325a$export$efcd34ab6248d3cd","$411ffb5959126ffe$export$56804db0f45bf789","squareSum","epsilonTensor","$411ffb5959126ffe$export$33de16355e97f7fb","yTrue","yPred","$411ffb5959126ffe$export$607988531ba584e6","$411ffb5959126ffe$export$29f745e8786a84d","clippedTrue","absResult","$411ffb5959126ffe$export$6f3c2909d4934f8e","clippedPred","firstLog","secondLog","$411ffb5959126ffe$export$3d5544849562b631","fromLogits","$8j56B","outputSum","$411ffb5959126ffe$export$d02551222e9364f0","flatTarget","$jxrSb","oneHot","$411ffb5959126ffe$export$f9fa66c6bf49fbe1","reluLogits","negAbsLogits","$411ffb5959126ffe$export$ba12332959c7f31a","$411ffb5959126ffe$export$ca6ae4762880179a","$411ffb5959126ffe$export$a39f0fc1fa1caacd","trueNormalized","predNormalized","trueXPred","$411ffb5959126ffe$export$80c8fb006fb174f5","maxResult","predictionDiff","logcoshResult","$hyWFr","softplus","logPred","$411ffb5959126ffe$export$3988ae62b71be9a3","identifierOrFn","errMsg","$b135c4ecab45828a$export$7b3d02e9a01c1ca","$azKvF","onesLike","yPredThresholded","$fozIM","equal","$b135c4ecab45828a$export$1365401eb6b7aeeb","$eUafH","argMax","$b135c4ecab45828a$var$truePositives","$b135c4ecab45828a$export$b70eeb0e623ceb0d","tp","fp","$b135c4ecab45828a$var$falsePositives","denominator","$b135c4ecab45828a$export$479490328e25f530","$b135c4ecab45828a$var$falseNegatives","$b135c4ecab45828a$export$f9fa66c6bf49fbe1","$b135c4ecab45828a$export$b35c43b77daa3523","$b135c4ecab45828a$export$5af2a467647891e2","$b135c4ecab45828a$export$19fa95397f41c30f","$b135c4ecab45828a$export$1d5f948d69c1bb9e","meanAbsoluteError","$b135c4ecab45828a$export$5763e506e192f1c3","$b135c4ecab45828a$export$1d9e5626781fbee","meanAbsolutePercentageError","$b135c4ecab45828a$export$520a6d354b1a7026","$b135c4ecab45828a$export$3d5544849562b631","$b135c4ecab45828a$export$c2a6cd60d490c7cc","cosineProximity","$b135c4ecab45828a$export$d02551222e9364f0","$b135c4ecab45828a$export$17c75e85c6265c88","$b135c4ecab45828a$export$3988ae62b71be9a3","$b135c4ecab45828a$export$9fb8307a5eeccc76","fnName","lossesMap","$88088f5bd4cf26fb$export$93a6cd925bf0fb14","optimizerMap","Adagrad","$e281r","train","Adadelta","Adam","Adamax","RMSProp","SGD","$f990f146da5bf20a$export$60e49adbc1213273","$f990f146da5bf20a$export$5c1c8db6517969f5","modelName","$f990f146da5bf20a$export$62cb934243969363","xType","$0fb432f365f54a09$export$9b5fcd5d170a598e","sequentialLike","nodesByDepth","depthNodes","$0fb432f365f54a09$var$isModelSequentialLike","toDisplay","relevantNodes","$0fb432f365f54a09$var$printRow","$0fb432f365f54a09$var$printLayerSummary","$0fb432f365f54a09$var$printLayerSummaryWithConnections","trainableCount","$0fb432f365f54a09$var$countTrainableParams","nonTrainableCount","connections","inboundLayer","inboundLayerIndex","inboundTensorIndex","firstConnection","$4b5ded05a4cc7105$var$isArrayItemInputOrOutputName","$4b5ded05a4cc7105$export$c0fd0796420499e6","pythonicConfig","tsArray","arrayLength","tsDict","pythonicKey","pythonicValue","tsKey","$4b5ded05a4cc7105$export$b63a5d81d6846026","pyArray","pyDict","tsValue","pyKey","$43771b3289fa008e$export$83d89fbfd8236492","$ac612e4aa86cddd9$export$42a852a2b6b56249","containerNodes","inputLayers","inputLayersNodeIndices","inputLayersTensorIndices","outputLayers","outputLayersNodeIndices","outputLayersTensorIndices","internalContainerRefs","$gaYXu","InputLayer","internalInputShapes","nodesDepths","nodeIDToNode","layersDepths","layerIDToLayer","layerIndices","nodesInDecreasingDepth","buildMapOfGraph","finishedNodes","nodesInProgress","nodeKey","numInboundLayers","finishedNodes1","nodesInProgress1","reversedNodesInDecreasingDepth","node2","previousDepth","inboundNode","nodeID","layersByDepth","layerID","depthKeys","reverseNumberCompare","layersForDepth","aIndex","bIndex","computableTensors","layersWithCompleteInput","depth1","allNames","numOccurrences","strict","nameToWeight","totalWeightsCount","validatedName","tokens","unsetNames","updatedConfig","theConfig","modelConfig","unused","returnString","convertTsToPythonic","masks","runInternalGraph","layersToOutputShapes","outputShapeKeys","shapeKey","tensorMap","referenceInputTensors","referenceOutputTensors","computedData","computedTensors","computedMasks","computedTensor","computedMask","buildNodeConversionMap","nodeConversionMap","keptNodes","originalNodeIndex","getLayer","layerConfigs","layerClassName","layerConfig","filteredInboundNodes","nodeData","newNodeIndex","modelInputs","modelOutputs","createdLayers","unprocessedNodes","addUnprocessedNode","processNode","inputData","inboundLayerName","inboundNodeIndex","processLayer","layerData","layerName","layersFromConfig","layerData4","isObjectEmpty","layerData1","currentUnprocessedNodesForLayer","inputLayersFromConfig","layerData2","layerOutputTensors","outputLayersFromConfig","layerData3","$261e42e793afd554$export$1f554ac52b4b6917","id2Value","id2Mask","name2Id","feed","key4","mask1","$261e42e793afd554$var$assertFeedCompatibility","addFeed","hasKey","getMask","disposeMasks","$261e42e793afd554$var$cachedSorted","$261e42e793afd554$var$cachedRecipientCounts","$261e42e793afd554$export$51396ec711da548b","fetches","probe","arrayFetches","fetchArray","finalOutputs","feedNames","maxNumTensors","minNumTensors","fetchAndFeedKey","sorted","recipientCounts","finalSorted","finalRecipientMap","$261e42e793afd554$export$a8bd8d591d4e6bd9","recipientMap","visited","symbolicTensor","recipient","$261e42e793afd554$var$recipientMap2Counts","$261e42e793afd554$var$getTopologicalSortAndRecipientCounts","internalFeedDict","symbolic","srcLayer","inputValues","tensorsToDispose","maskExists","outputMask","$261e42e793afd554$var$getNodeOutputs","marks","topIsMarked","outputTensor","$448af0391b22b918$var$standardizeDataIteratorOutput","iteratorOut","iteratorOutObj","flattenedXs","$448af0391b22b918$var$flattenTensorOrArrayOrMap","flattenedYs","xIndex","yIndex","inputOrOutput","$448af0391b22b918$export$4e883c052383550c","hasBatchesPerEpoch","batchesPerEpoch","valXs","valYs","$448af0391b22b918$var$isDatasetObject","validationBatches","$448af0391b22b918$var$standardizeTensorValidationData","$kNp8q","standardizeCallbacks","configureCallbacks","$448af0391b22b918$var$getStepsPerEpoch","dataIterator","epochLogs","stepsDone","batchLogs","standardClassWeights","disposeTensorsInLogs","valOuts","validationBatchSize","syncData","$448af0391b22b918$export$56e284faddc3ba42","hasBatches","numExamples","xsAndYs","oldScalar","$5197eabffca2e6c0$var$standardizeSampleOrClassWeights","xWeight","numOutputs","$5197eabffca2e6c0$export$9122f8f77cba9cbe","$5197eabffca2e6c0$export$cecca6094cb0d869","sampleWeightMode","yClasses","yClassIndices","classSampleWeight","classIndex","$5197eabffca2e6c0$export$23bdc4cea2e28782","$5925844fcb3932e3$export$2f80f09f3b9f932e","$5925844fcb3932e3$export$45b6cbb437b1b016","$5925844fcb3932e3$export$4a7d2c6b9b0d590","$5925844fcb3932e3$export$7ce16f2471062005","$5925844fcb3932e3$export$a697f89ce8ba5315","originalInputs","originalTargets","inputValX","inputValY","valX","valY","valIns","valStandardized","validationSplit","splitAt","originalBatchSize","validationSteps","valFunction","valF","epochIndexArray1D","$5925844fcb3932e3$var$fitLoop","$5925844fcb3932e3$export$55dac70a20481db3","$5925844fcb3932e3$export$b2d45309fc343ee1","refTensors","oldTensorIds","oldTensor","$de7af39ebc43f810$export$a1dbbbf102c21534","browserHTTPRequest","modelWeights","optimizerWeights","name2Tensor","$de7af39ebc43f810$var$decodeModelAndOptimizerWeights","$de7af39ebc43f810$export$fe68a3692f105118","$de7af39ebc43f810$export$a77f6a295a72306","$lvosM","LayersModel","checkShape","isLayerModelInstance","modelLayer","Input","getSourceInputs","lastLayerIndex","getExactlyOneShape","fit","trainOnBatch","configArray","extraModelConfig","conf","$b3bb18524aa559b9$export$b6bead732c285ccc","getExactlyOneTensor","baseConfig","$b3bb18524aa559b9$export$aef2e2f253bc592f","DEFAULT_ALPHA","$b3bb18524aa559b9$export$e8f536be4d0c9e9f","DEFAULT_ALPHA_INITIALIZER","alphaInitializer","alphaRegularizer","$3KPr0","getRegularizer","alphaConstraint","$e90AE","getConstraint","sharedAxes","paramShape","InputSpec","serializeInitializer","serializeRegularizer","serializeConstraint","$b3bb18524aa559b9$export$945a5ccf96adb3b2","inputShape3","$b3bb18524aa559b9$export$e0ad929c946d21d1","DEFAULT_THETA","kwargs4","inputShape4","$b3bb18524aa559b9$export$350a526055d3ca6e","DEFAULT_AXIS","$kkYYs","kwargs5","inputShape5","$ece4f913c21ffc7d$export$d4842319833f6f14","$ece4f913c21ffc7d$export$64636e173424d83d","$ece4f913c21ffc7d$export$6760d858e6f2594a","$iFBjP","selu","$ece4f913c21ffc7d$export$9a6ff968bf961432","$ece4f913c21ffc7d$export$3be9e924f629054e","$ece4f913c21ffc7d$export$cff00ccf6e2392de","$ece4f913c21ffc7d$export$fde18c826dda6b1b","$ece4f913c21ffc7d$export$6098198c337d3dd8","hardSigmoid","$ece4f913c21ffc7d$export$c5af433747f1fd0a","x7","$ece4f913c21ffc7d$export$abea6258cd16deb6","x8","softsign","$ece4f913c21ffc7d$export$893b6e865e352c83","x9","$6HzuB","$ece4f913c21ffc7d$export$350a526055d3ca6e","x10","$ece4f913c21ffc7d$export$85b5bcbd60848a10","x11","axis1","$82cpG","logSoftmax","$ece4f913c21ffc7d$export$ca163985819ed934","x12","alpha1","$ece4f913c21ffc7d$export$61e2977e0c740f20","x13","$ece4f913c21ffc7d$export$8a2c1643c67d0487","$ece4f913c21ffc7d$export$3feed769d94b8fdf","$ece4f913c21ffc7d$export$ed84f867ffcf9364","$2bbd90d472a5d561$var$assertObjectArgs","$2bbd90d472a5d561$export$49735e7db1366677","$2bbd90d472a5d561$export$fb258565fa710653","hasL1","hasL2","regularization","$2bbd90d472a5d561$export$b35c4719d0ff29eb","$2bbd90d472a5d561$export$683828dad49492ec","$2bbd90d472a5d561$export$c242128098ecbfe1","l1l2","$2bbd90d472a5d561$export$7e8cf5899b350405","$2bbd90d472a5d561$export$e53995a1d2fa3dd6","$2bbd90d472a5d561$export$b3404716bfee324c","$52687b02a631fa9d$export$8434bfc73196ab6c","$52687b02a631fa9d$export$4ce11465fb76c4e6","$52687b02a631fa9d$export$5e4c51f717878325","dilationRate","$3orc4","conv1d","biasAdd","$52687b02a631fa9d$export$8fcf8ce8bb1af9d","$52687b02a631fa9d$export$cffde359467c6702","$99Mpl","conv3d","$52687b02a631fa9d$export$ed9aa941a71a9fd2","DEFAULT_KERNEL_INITIALIZER","DEFAULT_BIAS_INITIALIZER","verifyArgs","assertPositiveInteger","kernelSize","$ZPnir","normalizeArray","checkPaddingMode","getActivation","useBias","biasInitializer","biasConstraint","biasRegularizer","checkArrayTypeAndLength","serializeActivation","$52687b02a631fa9d$export$d9f5537266743215","rank1","kernelInitializer","kernelConstraint","kernelRegularizer","channelAxis","inputDim","kernelShape","biasValue","fusedActivationName","mapActivationToFusedKernel","newSpace","newDim","convOutputLength","$52687b02a631fa9d$export$57742e605d475795","$52687b02a631fa9d$export$9d3874201dd21933","$52687b02a631fa9d$export$7dbaf9916b0932fc","hAxis","wAxis","kernelH","kernelW","strideH","strideW","deconvLength","$1gdE3","conv2dTranspose","heightAxis","widthAxis","$52687b02a631fa9d$export$56aa8cf0209e38c1","dAxis","kernelD","strideD","$aZTWG","conv3dTranspose","inputShape9","depthAxis","$52687b02a631fa9d$export$1b7b94ed9bbc01d1","rank2","DEFAULT_DEPTHWISE_INITIALIZER","DEFAULT_POINTWISE_INITIALIZER","depthwiseKernel","pointwiseKernel","depthMultiplier","depthwiseInitializer","depthwiseRegularizer","depthwiseConstraint","pointwiseInitializer","pointwiseRegularizer","pointwiseConstraint","inputShape6","depthwiseKernelShape","pointwiseKernelShape","$10wrC","separableConv2d","$52687b02a631fa9d$export$711e1c2609c1fbb3","$52687b02a631fa9d$export$34a445ae5c2580eb","$52687b02a631fa9d$export$8c24c9344a3b8089","args13","cropping","inputShape7","hSliced","sliceAlongAxis","$52687b02a631fa9d$export$4b8be6e684923935","args14","DEFAULT_SIZE","checkInterpolationFormat","inputShape8","resized","$0b9d8c931b8aa174$export$8f561980df117376","singleValue","$0b9d8c931b8aa174$export$50b0adaed374172","inputLength","outputLength","$0b9d8c931b8aa174$export$5a2f093e914c7860","strideSize","$9f56ca794b28b388$export$292dab92c4661cc4","$74EHG","BaseConv","preprocessConv2DInput","$9f56ca794b28b388$export$48a8ad9494a8fad8","rows","cols","outFilters","outRows","outCols","$gs6bD","RNNCell","$1c47a7c6b2ac26bf$var$ConvRNN2D","RNN","unroll","cell","dropoutMask","recurrentDropoutMask","initialState","computeSingleOutputShape","returnSequences","returnState","getInitialState","stateSize","stateShape","states","training1","getStates","states_","keptStates","expectedShape","isChannelsFirst","hOut","wOut","$1c47a7c6b2ac26bf$export$6fd0801294342e82","LSTMCell","recurrentKernelShape","recurrentKernel","recurrentInitializer","recurrentRegularizer","recurrentConstraint","unitForgetBias","Initializer","biasI","biasF","biasCAndO","concatenate","hTMinus1","cTMinus1","generateDropoutMask","dropoutFunc","applyDropout","xI","xF","xC","xO","recurrentDropout","recDropoutMask","hI","hF","hC","hO","kernelI","kernelF","kernelC","kernelO","biasC","biasO","inputConv","recKernelI","recKernelF","recKernelC","recKernelO","recurrentConv","recurrentActivation","$1c47a7c6b2ac26bf$var$__rest","$1c47a7c6b2ac26bf$export$d5828f4b24c3231","$bfa40f698a70b28f$export$b9ab3f5c89688c2","constants","numConstants","toListOrNull","$bfa40f698a70b28f$export$3e66d5ce8f778ebc","stepFunction","initialStates","goBackwards","needPerStepOutputs","perStepOutputs","lastOutput","timeSteps","perStepInputs","perStepMasks","currentInput","stepOutputs","maskedOutputs","stepMask","negStepMask","newStates","$bfa40f698a70b28f$export$2b97bcdf1d6f1b16","$bfa40f698a70b28f$export$966a21a552328009","cells","stateSpec","numStates","setStates","states2","isArrayOfShapes","outputDim","stateMask","stepInputShape","states1","standardized","additionalInputs","additionalSpecs","fullInput","fullInputSpec","originalInputSpec","cellCallKwargs","rnnOutputs","states3","cellConfig","$bfa40f698a70b28f$export$405d8fca8f98aafd","$bfa40f698a70b28f$export$c8a45b8cd42f689","DEFAULT_ACTIVATION","DEFAULT_RECURRENT_INITIALIZER","prevOutput","$bfa40f698a70b28f$export$9eb0cce22b72569f","dpMask","recDpMask","dot","$bfa40f698a70b28f$export$9f3b0efd8738b035","$bfa40f698a70b28f$export$dad94e00e5c3737","DEFAULT_RECURRENT_ACTIVATION","resetAfter","implementation","inputs6","hh","matrixX","recurrentKernelValue","rk1","rk2","matrixInner","xZ","xR","xH","recurrentZ","recurrentR","recurrentH","$bfa40f698a70b28f$export$effa27cfcc4408f4","inputs7","config2","$bfa40f698a70b28f$export$17aacc547a045ab0","capturedBiasInit","capturedUnits","bI","bF","Ones","bCAndH","concatAlongFirstAxis","inputs8","kwargs6","z0","z1","z2","z3","$bfa40f698a70b28f$export$c8c9213153497ce0","inputs9","kwargs7","cls3","config3","inputs10","kwargs8","nestedStates","newNestedStates","callInputs","cellStates","cls4","config4","customObjects1","tuples","numParams","inputWeights","droppedInputs","createMask","inTrainPhase","$a1c17670b7ff90a7$export$bb75bf17e9ebd794","$a1c17670b7ff90a7$export$f86f27a3d1240824","input2","$a1c17670b7ff90a7$export$7db6feeaf0335f8","inputLastDim","$a1c17670b7ff90a7$export$929ed232258ef592","permutation","batchFlatten","$a1c17670b7ff90a7$export$d4842319833f6f14","$a1c17670b7ff90a7$export$6cf81e630ba27dd9","$a1c17670b7ff90a7$export$755ddd847e5abe03","targetShape","isUnknown","fixUnknownDimension","outputShape1","errorMsg","finalShape","known","originalSize","anyUnknownDims","$a1c17670b7ff90a7$export$f107458f792fb62e","expectedSortedIndices","dimsIncludingBatch","$a1c17670b7ff90a7$export$b713323c862a70bd","maskValue","$20Qd8","any","booleanMask","$d9a2fff8b841e3b9$export$d4aa6cf23314fd52","embeddings","DEFAULT_EMBEDDINGS_INITIALIZER","embeddingsInitializer","embeddingsRegularizer","embeddingsConstraint","maskZero","inLens","$cf5b339c4d6efe41$export$70ce1d34efd3b886","mergeFunction","computeElementwiseOpOutputShape","batchSizes","allRanks","reshapeRequired","reshapedInputs","inputDims","xNDim","transposed","xTransposed","yNDim","yShape","$cf5b339c4d6efe41$export$d0265b2c425512d6","$cf5b339c4d6efe41$export$f14f83b3b531d498","$cf5b339c4d6efe41$export$7725e1a7540355cb","$cf5b339c4d6efe41$export$d8d02ac92d161004","$cf5b339c4d6efe41$export$23cb308301e89d6b","$cf5b339c4d6efe41$export$e55b597c359d82cd","allNoneShape","shapeSet","shapeWithoutConcatAxis","exists","allNullMasks","concatenatedMasks","$5UN0L","$cf5b339c4d6efe41$var$interpretAxis","$cf5b339c4d6efe41$export$d046b3c4a416f60d","interpretAxes","l2Normalize","axesArray","diffShape","adjX","adjY","idx","squeezeAxes","$cf5b339c4d6efe41$var$batchDot","shape11","shape21","inputs11","mask2","$7d1e6d98ed4798b2$export$d18d3f770cea837e","$7d1e6d98ed4798b2$export$c07c4bcc10d07979","noised","$7d1e6d98ed4798b2$export$8a44d71014be114","_getNoiseShape","alphaP","keptIdx","$88c56a56f3cb37a7$export$598a795b5a50c0b5","beta","$jAh9q","batchNorm2d","$eKafy","batchNorm3d","$hdvVP","batchNorm4d","$88c56a56f3cb37a7$export$edbf80b9b58fbf69","reductionAxes","meanAndVariance","$1EMzg","moments","$88c56a56f3cb37a7$var$regularNormalizeBatchInTraining","broadcastMean","broadcastVariance","broadcastGamma","broadcastBeta","$88c56a56f3cb37a7$var$broadcastNormalizeBatchInTraining","$88c56a56f3cb37a7$export$21e75adabb5b0994","betaInitializer","gammaInitializer","movingMeanInitializer","movingVarianceInitializer","betaConstraint","gammaConstraint","betaRegularizer","gammaRegularizer","movingMean","movingVariance","sortedReductionAxes","needsBroadcasting","broadcastMovingMean","broadcastMovingVariance","normalizeInference","normedTraining","doMovingAverage","origValue","updateDelta","updateMovingMeanAndVariance","$88c56a56f3cb37a7$export$12bc76b160b1bdc","nDims","broadcast","momentsTiling","scaleOffsetTiling","$da5637ac9633ebdb$export$3ae403604f7452b3","heightPadding","widthPadding","$da5637ac9633ebdb$export$c1e7b1f1a92c089a","$7rh5n","$a427acaff18208b5$export$d27fa8d08ae02aab","poolMode","checkPoolMode","paddingString","$dsMSW","maxPool","$fNlh9","avgPool","$a427acaff18208b5$export$3712ebf21d29ff82","preprocessConv3DInput","$ZiCXw","maxPool3d","$iCmLx","avgPool3d","$a427acaff18208b5$export$56e907da703e3750","poolingFunction","$a427acaff18208b5$export$ee33f1d34d09a0fd","$a427acaff18208b5$export$abb9a5c13378a7fc","poolSize1","strides1","padding1","dataFormat1","$a427acaff18208b5$export$3f5b37e58ac9bb8f","$a427acaff18208b5$export$fae6981b13a5bc64","poolSize2","strides2","padding2","dataFormat2","$a427acaff18208b5$export$ba5e0a247bd733ca","poolSize3","strides3","padding3","dataFormat3","$a427acaff18208b5$export$d922ad75eee6c49f","depths","$a427acaff18208b5$export$5a12007b35aee0a","poolSize4","strides4","padding4","dataFormat4","$a427acaff18208b5$export$ee30b46b17aabb8f","poolSize5","strides5","padding5","dataFormat5","$a427acaff18208b5$export$ac2acb21ca818c40","$a427acaff18208b5$export$2c6cc528d2786e91","$a427acaff18208b5$export$ab40543f12b91a51","$a427acaff18208b5$export$5eafa45e8fcdd59f","inputs12","$a427acaff18208b5$export$2bd55677c48d3dfa","inputs13","$a427acaff18208b5$export$46257bff79157c32","inputs14","$315e3474fc6eade9$export$e6dfd72ab29f8598","value2","newConfig","$315e3474fc6eade9$export$72d58104314bdbf3","childInputShape","childOutputShape","timesteps","$315e3474fc6eade9$export$edf712313f3d75dd","forwDict","forwardLayer","backDict","backwardLayer","mergeMode","VALID_BIDIRECTIONAL_MERGE_MODES","_trainable","numWeights","numeightsOver2","layerShapes","standardizeArgs","stateSpecs","isSymbolicTensor","yRev","forwardState","backwardState","rnnLayer","BaseCallback","$47d744bc48892c94$var$script","$47d744bc48892c94$export$2e2bcd8739ae039","$c9abdf37c861194e$export$2e2bcd8739ae039","card","tabUpdate","new_details","$d8ddd6ce3c2a08ee$var$_hoisted_1","$d8ddd6ce3c2a08ee$var$_withScopeId","$d8ddd6ce3c2a08ee$var$_hoisted_2","$d8ddd6ce3c2a08ee$var$_hoisted_3","$13d61b9f3890b733$export$2e2bcd8739ae039","$867df2f84897c35d$var$_hoisted_1","_component_tf_result","description","_component_model_card","$a8e6b982f19fc665$export$2e2bcd8739ae039","$fcf8220282cbbb6a$var$script","$fcf8220282cbbb6a$export$2e2bcd8739ae039","$e36a2b85a3e1236b$export$2e2bcd8739ae039","reflink","reftitle","journal","issue","volume","pages","doi","$2deb7c4c002f71fb$var$_hoisted_1","$2deb7c4c002f71fb$var$_hoisted_3","$2deb7c4c002f71fb$var$_hoisted_5","$2deb7c4c002f71fb$var$_hoisted_2","$2deb7c4c002f71fb$var$_hoisted_4","$69be29123849f27f$export$2e2bcd8739ae039","$7d3d5e0d5f3804ff$var$_hoisted_1","$7d3d5e0d5f3804ff$var$_hoisted_3","$7d3d5e0d5f3804ff$var$_hoisted_4","$7d3d5e0d5f3804ff$var$_hoisted_5","$7d3d5e0d5f3804ff$var$_hoisted_6","$7d3d5e0d5f3804ff$var$_hoisted_7","$7d3d5e0d5f3804ff$var$_hoisted_8","$7d3d5e0d5f3804ff$var$_hoisted_9","$7d3d5e0d5f3804ff$var$_hoisted_10","$7d3d5e0d5f3804ff$var$_hoisted_12","$7d3d5e0d5f3804ff$var$_hoisted_13","$7d3d5e0d5f3804ff$var$_hoisted_14","$7d3d5e0d5f3804ff$var$_hoisted_15","$7d3d5e0d5f3804ff$var$_hoisted_16","$7d3d5e0d5f3804ff$var$_hoisted_18","$7d3d5e0d5f3804ff$var$_hoisted_19","$7d3d5e0d5f3804ff$var$_hoisted_20","$7d3d5e0d5f3804ff$var$_hoisted_21","$7d3d5e0d5f3804ff$var$_hoisted_22","$7d3d5e0d5f3804ff$var$_hoisted_23","$7d3d5e0d5f3804ff$var$_hoisted_24","$7d3d5e0d5f3804ff$var$_hoisted_25","$7d3d5e0d5f3804ff$var$_hoisted_26","$7d3d5e0d5f3804ff$var$_hoisted_2","_component_sequence_viewer","onSelectionUpdate","_component_version","$7d3d5e0d5f3804ff$var$_hoisted_11","_component_sequence_input","onSequenceUpdate","$7d3d5e0d5f3804ff$var$_hoisted_17","_component_milton","_component_reference","_component_tf_prediction","$ceaee55502b6f7e3$export$2e2bcd8739ae039","createApp","containerOrSelector","$3abe0d2b8a518b54$var$normalizeContainer","_component","SVGElement","Element","$3abe0d2b8a518b54$export$4e373c34abfa8c68"],"version":3,"file":"index.518e7a9d.js.map"}